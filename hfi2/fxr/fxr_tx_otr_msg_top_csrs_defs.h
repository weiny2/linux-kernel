/*
*------------------------------------------------------------------------------
*                                                                              
*  INTEL CONFIDENTIAL                                                          
*                                                                              
*  Copyright 2016 Intel Corporation All Rights Reserved.                 
*                                                                              
*  The source code contained or described herein and all documents related     
*  to the source code ("Material") are owned by Intel Corporation or its    
*  suppliers or licensors. Title to the Material remains with Intel            
*  Corporation or its suppliers and licensors. The Material contains trade     
*  secrets and proprietary and confidential information of Intel or its        
*  suppliers and licensors. The Material is protected by worldwide copyright   
*  and trade secret laws and treaty provisions. No part of the Material may    
*  be used, copied, reproduced, modified, published, uploaded, posted,         
*  transmitted, distributed, or disclosed in any way without Intel's prior     
*  express written permission.                                                 
*                                                                              
*  No license under any patent, copyright, trade secret or other intellectual  
*  property right is granted to or conferred upon you by disclosure or         
*  delivery of the Materials, either expressly, by implication, inducement,    
*  estoppel or otherwise. Any license under such intellectual property rights  
*  must be express and approved by Intel in writing.                           
*                                                                              
*------------------------------------------------------------------------------
*  Auto-generated by /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/i_csrs.pl
*  i_csrs.pl Version 1.5 last modified on Thursday 1/7/16 17:24:50
*  /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/i_csrs.pl -C -R -ST fxr_tx_otr -unit=fxr_tx_otr_msg_top_csrs -o /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/fxr /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/Fox_River/xml/300_Memory_Map.xml /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/Fox_River/xml/323_Memory_Map_TX_OTR.xml
*------------------------------------------------------------------------------
*/

#ifndef DEF_FXR_TX_OTR_MSG_TOP_CSRS_SW_DEF
#define DEF_FXR_TX_OTR_MSG_TOP_CSRS_SW_DEF

#ifndef FXR_TX_OTR_PKT_TOP_CSRS
#define FXR_TX_OTR_PKT_TOP_CSRS						0x000000000000
#endif
#ifndef FXR_TX_OTR_MSG_TOP_CSRS
#define FXR_TX_OTR_MSG_TOP_CSRS						0x000000000000
#endif
#define FXR_NUM_CONTEXTS						192
#define FXR_NUM_PIDS							4096
#define FXR_MAX_CONTEXT							191
#define FXR_TX_CONTEXT_ENTRIES						128
#define FXR_TX_CONTEXT_MAX						127
#define FXR_RX_CONTEXT_ENTRIES						16
#define FXR_RX_CONTEXT_MAX						15
#define FXR_NUM_SL							32
#define FXR_MAX_SL							31
#define TXOTR_PKT_CFG_BASE						0
#define TXOTR_PKT_ERR_BASE						8192
#define TXOTR_PKT_STS_BASE						16384
#define TXOTR_PKT_DBG_BASE						24576
#define TXOTR_PKT_PRF_BASE						32768
#define TXOTR_PKT_OFFSET						8
#define TXOTR_MSG_CFG_BASE						0
#define TXOTR_MSG_ERR_BASE						8192
#define TXOTR_MSG_STS_BASE						16384
#define TXOTR_MSG_DBG_BASE						24576
#define TXOTR_MSG_PRF_BASE						32768
#define TXOTR_MSG_OFFSET						8
/*
* Table #155 of fxr_tx_otr_msg_top_csrs - txotr_pkt_prf_stall_opb_entries_x
* This CSR configures the performance registers used to track stalling due to a 
* lack of OPB entries. See more details in Performance Counters Specification, 
* page #%%#419#%%#.
*/
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_X				(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000008000)
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_X_RESETCSR			0x0000000000000000ull
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_X_UNUSED_63_3_SHIFT		3
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_X_UNUSED_63_3_MASK		0x1FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_X_UNUSED_63_3_SMASK		0xFFFFFFFFFFFFFFF8ull
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_X_MCTC_SHIFT		0
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_X_MCTC_MASK			0x7ull
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_X_MCTC_SMASK		0x7ull
/*
* Table #156 of fxr_tx_otr_msg_top_csrs - txotr_pkt_prf_stall_opb_entries_y
* This CSR configures the performance registers used to track stalling due to a 
* lack of OPB entries. See more details in Performance Counters Specification, 
* page #%%#419#%%#.
*/
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_Y				(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000008008)
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_Y_RESETCSR			0x0000000000000004ull
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_Y_UNUSED_63_3_SHIFT		3
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_Y_UNUSED_63_3_MASK		0x1FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_Y_UNUSED_63_3_SMASK		0xFFFFFFFFFFFFFFF8ull
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_Y_MCTC_SHIFT		0
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_Y_MCTC_MASK			0x7ull
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_Y_MCTC_SMASK		0x7ull
/*
* Table #157 of fxr_tx_otr_msg_top_csrs - txotr_pkt_prf_stall_txdma_credits_x
* This CSR configures the performance registers used to track stalling due to a 
* lack of TXDMA credits. See more details in Performance Counters Specification, 
* page #%%#419#%%#.
*/
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_X				(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000008010)
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_X_RESETCSR		0x0000000000000000ull
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_X_UNUSED_63_3_SHIFT	3
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_X_UNUSED_63_3_MASK	0x1FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_X_UNUSED_63_3_SMASK	0xFFFFFFFFFFFFFFF8ull
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_X_MCTC_SHIFT		0
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_X_MCTC_MASK		0x7ull
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_X_MCTC_SMASK		0x7ull
/*
* Table #158 of fxr_tx_otr_msg_top_csrs - txotr_pkt_prf_stall_txdma_credits_y
* This CSR configures the performance registers used to track stalling due to a 
* lack of TXDMA credits. See more details in Performance Counters Specification, 
* page #%%#419#%%#.
*/
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_Y				(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000008018)
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_Y_RESETCSR		0x0000000000000004ull
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_Y_UNUSED_63_3_SHIFT	3
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_Y_UNUSED_63_3_MASK	0x1FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_Y_UNUSED_63_3_SMASK	0xFFFFFFFFFFFFFFF8ull
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_Y_MCTC_SHIFT		0
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_Y_MCTC_MASK		0x7ull
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_Y_MCTC_SMASK		0x7ull
/*
* Table #159 of fxr_tx_otr_msg_top_csrs - txotr_pkt_prf_stall_p_to_m_credits_x
* This CSR configures the performance registers used to track stalling due to a 
* lack of Packet Partition to Message Partition credits. See more details in 
* Performance Counters Specification, page #%%#420#%%#.
*/
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_X			(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000008020)
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_X_RESETCSR		0x0000000000000000ull
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_X_UNUSED_63_2_SHIFT	2
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_X_UNUSED_63_2_MASK	0x3FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_X_UNUSED_63_2_SMASK	0xFFFFFFFFFFFFFFFCull
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_X_MCTC_SHIFT		0
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_X_MCTC_MASK		0x3ull
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_X_MCTC_SMASK		0x3ull
/*
* Table #160 of fxr_tx_otr_msg_top_csrs - txotr_pkt_prf_stall_p_to_m_credits_y
* This CSR configures the performance registers used to track stalling due to a 
* lack of Packet Partition to Message Partition credits. See more details in 
* Performance Counters Specification, page #%%#420#%%#.
*/
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_Y			(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000008028)
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_Y_RESETCSR		0x0000000000000000ull
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_Y_UNUSED_63_2_SHIFT	2
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_Y_UNUSED_63_2_MASK	0x3FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_Y_UNUSED_63_2_SMASK	0xFFFFFFFFFFFFFFFCull
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_Y_MCTC_SHIFT		0
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_Y_MCTC_MASK		0x3ull
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_Y_MCTC_SMASK		0x3ull
/*
* Table #161 of fxr_tx_otr_msg_top_csrs - txotr_pkt_prf_latency
* This CSR configures the latency buckets for responses from the network. There 
* are five buckets into which response latencies can be binned: A, B, C, D, and 
* E. See more details in Performance Counters Specification, page 
* #%%#421#%%#.
*/
#define FXR_TXOTR_PKT_PRF_LATENCY					(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000008030)
#define FXR_TXOTR_PKT_PRF_LATENCY_RESETCSR				0x0000CCC999666333ull
#define FXR_TXOTR_PKT_PRF_LATENCY_UNUSED_63_48_SHIFT			48
#define FXR_TXOTR_PKT_PRF_LATENCY_UNUSED_63_48_MASK			0xFFFFull
#define FXR_TXOTR_PKT_PRF_LATENCY_UNUSED_63_48_SMASK			0xFFFF000000000000ull
#define FXR_TXOTR_PKT_PRF_LATENCY_D_MAX_SHIFT				36
#define FXR_TXOTR_PKT_PRF_LATENCY_D_MAX_MASK				0xFFFull
#define FXR_TXOTR_PKT_PRF_LATENCY_D_MAX_SMASK				0xFFF000000000ull
#define FXR_TXOTR_PKT_PRF_LATENCY_C_MAX_SHIFT				24
#define FXR_TXOTR_PKT_PRF_LATENCY_C_MAX_MASK				0xFFFull
#define FXR_TXOTR_PKT_PRF_LATENCY_C_MAX_SMASK				0xFFF000000ull
#define FXR_TXOTR_PKT_PRF_LATENCY_B_MAX_SHIFT				12
#define FXR_TXOTR_PKT_PRF_LATENCY_B_MAX_MASK				0xFFFull
#define FXR_TXOTR_PKT_PRF_LATENCY_B_MAX_SMASK				0xFFF000ull
#define FXR_TXOTR_PKT_PRF_LATENCY_A_MAX_SHIFT				0
#define FXR_TXOTR_PKT_PRF_LATENCY_A_MAX_MASK				0xFFFull
#define FXR_TXOTR_PKT_PRF_LATENCY_A_MAX_SMASK				0xFFFull
/*
* Table #4 of fxr_tx_otr_msg_top_csrs - txotr_msg_cfg_rendezvous_fifo_crdts
* This CSR contains the configuration parameters necessary to configure the 
* number of credits in the Retransmission OMB Queues.
*/
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_FIFO_CRDTS				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000000000)
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_FIFO_CRDTS_RESETCSR		0x0000000000004444ull
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_FIFO_CRDTS_UNUSED_63_15_SHIFT	15
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_FIFO_CRDTS_UNUSED_63_15_MASK	0x1FFFFFFFFFFFFull
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_FIFO_CRDTS_UNUSED_63_15_SMASK	0xFFFFFFFFFFFF8000ull
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_FIFO_CRDTS_TC3_SHIFT		12
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_FIFO_CRDTS_TC3_MASK		0x7ull
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_FIFO_CRDTS_TC3_SMASK		0x7000ull
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_FIFO_CRDTS_UNUSED_11_SHIFT		11
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_FIFO_CRDTS_UNUSED_11_MASK		0x1ull
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_FIFO_CRDTS_UNUSED_11_SMASK		0x800ull
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_FIFO_CRDTS_TC2_SHIFT		8
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_FIFO_CRDTS_TC2_MASK		0x7ull
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_FIFO_CRDTS_TC2_SMASK		0x700ull
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_FIFO_CRDTS_UNUSED_7_SHIFT		7
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_FIFO_CRDTS_UNUSED_7_MASK		0x1ull
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_FIFO_CRDTS_UNUSED_7_SMASK		0x80ull
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_FIFO_CRDTS_TC1_SHIFT		4
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_FIFO_CRDTS_TC1_MASK		0x7ull
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_FIFO_CRDTS_TC1_SMASK		0x70ull
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_FIFO_CRDTS_UNUSED_3_SHIFT		3
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_FIFO_CRDTS_UNUSED_3_MASK		0x1ull
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_FIFO_CRDTS_UNUSED_3_SMASK		0x8ull
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_FIFO_CRDTS_TC0_SHIFT		0
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_FIFO_CRDTS_TC0_MASK		0x7ull
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_FIFO_CRDTS_TC0_SMASK		0x7ull
/*
* Table #5 of fxr_tx_otr_msg_top_csrs - txotr_msg_cfg_txci_mc0_crdts
* This CSR contains the configuration parameters necessary to configure the 
* number of credits refunded to TXCI for MC0 after reset.
*/
#define FXR_TXOTR_MSG_CFG_TXCI_MC0_CRDTS				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000000008)
#define FXR_TXOTR_MSG_CFG_TXCI_MC0_CRDTS_RESETCSR			0x0000000014141414ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC0_CRDTS_UNUSED_63_29_SHIFT		29
#define FXR_TXOTR_MSG_CFG_TXCI_MC0_CRDTS_UNUSED_63_29_MASK		0x7FFFFFFFFull
#define FXR_TXOTR_MSG_CFG_TXCI_MC0_CRDTS_UNUSED_63_29_SMASK		0xFFFFFFFFE0000000ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC0_CRDTS_TC3_SHIFT			24
#define FXR_TXOTR_MSG_CFG_TXCI_MC0_CRDTS_TC3_MASK			0x1Full
#define FXR_TXOTR_MSG_CFG_TXCI_MC0_CRDTS_TC3_SMASK			0x1F000000ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC0_CRDTS_UNUSED_23_21_SHIFT		21
#define FXR_TXOTR_MSG_CFG_TXCI_MC0_CRDTS_UNUSED_23_21_MASK		0x7ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC0_CRDTS_UNUSED_23_21_SMASK		0xE00000ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC0_CRDTS_TC2_SHIFT			16
#define FXR_TXOTR_MSG_CFG_TXCI_MC0_CRDTS_TC2_MASK			0x1Full
#define FXR_TXOTR_MSG_CFG_TXCI_MC0_CRDTS_TC2_SMASK			0x1F0000ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC0_CRDTS_UNUSED_15_13_SHIFT		13
#define FXR_TXOTR_MSG_CFG_TXCI_MC0_CRDTS_UNUSED_15_13_MASK		0x7ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC0_CRDTS_UNUSED_15_13_SMASK		0xE000ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC0_CRDTS_TC1_SHIFT			8
#define FXR_TXOTR_MSG_CFG_TXCI_MC0_CRDTS_TC1_MASK			0x1Full
#define FXR_TXOTR_MSG_CFG_TXCI_MC0_CRDTS_TC1_SMASK			0x1F00ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC0_CRDTS_UNUSED_7_5_SHIFT		5
#define FXR_TXOTR_MSG_CFG_TXCI_MC0_CRDTS_UNUSED_7_5_MASK		0x7ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC0_CRDTS_UNUSED_7_5_SMASK		0xE0ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC0_CRDTS_TC0_SHIFT			0
#define FXR_TXOTR_MSG_CFG_TXCI_MC0_CRDTS_TC0_MASK			0x1Full
#define FXR_TXOTR_MSG_CFG_TXCI_MC0_CRDTS_TC0_SMASK			0x1Full
/*
* Table #6 of fxr_tx_otr_msg_top_csrs - txotr_msg_cfg_txci_mc1_crdts
* This CSR contains the configuration parameters necessary to configure the 
* number of credits refunded to TXCI for MC1 after reset.
*/
#define FXR_TXOTR_MSG_CFG_TXCI_MC1_CRDTS				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000000010)
#define FXR_TXOTR_MSG_CFG_TXCI_MC1_CRDTS_RESETCSR			0x0000000014141414ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC1_CRDTS_UNUSED_63_29_SHIFT		29
#define FXR_TXOTR_MSG_CFG_TXCI_MC1_CRDTS_UNUSED_63_29_MASK		0x7FFFFFFFFull
#define FXR_TXOTR_MSG_CFG_TXCI_MC1_CRDTS_UNUSED_63_29_SMASK		0xFFFFFFFFE0000000ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC1_CRDTS_TC3_SHIFT			24
#define FXR_TXOTR_MSG_CFG_TXCI_MC1_CRDTS_TC3_MASK			0x1Full
#define FXR_TXOTR_MSG_CFG_TXCI_MC1_CRDTS_TC3_SMASK			0x1F000000ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC1_CRDTS_UNUSED_23_21_SHIFT		21
#define FXR_TXOTR_MSG_CFG_TXCI_MC1_CRDTS_UNUSED_23_21_MASK		0x7ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC1_CRDTS_UNUSED_23_21_SMASK		0xE00000ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC1_CRDTS_TC2_SHIFT			16
#define FXR_TXOTR_MSG_CFG_TXCI_MC1_CRDTS_TC2_MASK			0x1Full
#define FXR_TXOTR_MSG_CFG_TXCI_MC1_CRDTS_TC2_SMASK			0x1F0000ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC1_CRDTS_UNUSED_15_13_SHIFT		13
#define FXR_TXOTR_MSG_CFG_TXCI_MC1_CRDTS_UNUSED_15_13_MASK		0x7ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC1_CRDTS_UNUSED_15_13_SMASK		0xE000ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC1_CRDTS_TC1_SHIFT			8
#define FXR_TXOTR_MSG_CFG_TXCI_MC1_CRDTS_TC1_MASK			0x1Full
#define FXR_TXOTR_MSG_CFG_TXCI_MC1_CRDTS_TC1_SMASK			0x1F00ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC1_CRDTS_UNUSED_7_5_SHIFT		5
#define FXR_TXOTR_MSG_CFG_TXCI_MC1_CRDTS_UNUSED_7_5_MASK		0x7ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC1_CRDTS_UNUSED_7_5_SMASK		0xE0ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC1_CRDTS_TC0_SHIFT			0
#define FXR_TXOTR_MSG_CFG_TXCI_MC1_CRDTS_TC0_MASK			0x1Full
#define FXR_TXOTR_MSG_CFG_TXCI_MC1_CRDTS_TC0_SMASK			0x1Full
/*
* Table #7 of fxr_tx_otr_msg_top_csrs - txotr_msg_cfg_txci_mc1p_crdts
* This CSR contains the configuration parameters necessary to configure the 
* number of credits refunded to TXCI for MC1' after reset.
*/
#define FXR_TXOTR_MSG_CFG_TXCI_MC1P_CRDTS				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000000018)
#define FXR_TXOTR_MSG_CFG_TXCI_MC1P_CRDTS_RESETCSR			0x0000000014141414ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC1P_CRDTS_UNUSED_63_29_SHIFT		29
#define FXR_TXOTR_MSG_CFG_TXCI_MC1P_CRDTS_UNUSED_63_29_MASK		0x7FFFFFFFFull
#define FXR_TXOTR_MSG_CFG_TXCI_MC1P_CRDTS_UNUSED_63_29_SMASK		0xFFFFFFFFE0000000ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC1P_CRDTS_TC3_SHIFT			24
#define FXR_TXOTR_MSG_CFG_TXCI_MC1P_CRDTS_TC3_MASK			0x1Full
#define FXR_TXOTR_MSG_CFG_TXCI_MC1P_CRDTS_TC3_SMASK			0x1F000000ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC1P_CRDTS_UNUSED_23_21_SHIFT		21
#define FXR_TXOTR_MSG_CFG_TXCI_MC1P_CRDTS_UNUSED_23_21_MASK		0x7ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC1P_CRDTS_UNUSED_23_21_SMASK		0xE00000ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC1P_CRDTS_TC2_SHIFT			16
#define FXR_TXOTR_MSG_CFG_TXCI_MC1P_CRDTS_TC2_MASK			0x1Full
#define FXR_TXOTR_MSG_CFG_TXCI_MC1P_CRDTS_TC2_SMASK			0x1F0000ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC1P_CRDTS_UNUSED_15_13_SHIFT		13
#define FXR_TXOTR_MSG_CFG_TXCI_MC1P_CRDTS_UNUSED_15_13_MASK		0x7ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC1P_CRDTS_UNUSED_15_13_SMASK		0xE000ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC1P_CRDTS_TC1_SHIFT			8
#define FXR_TXOTR_MSG_CFG_TXCI_MC1P_CRDTS_TC1_MASK			0x1Full
#define FXR_TXOTR_MSG_CFG_TXCI_MC1P_CRDTS_TC1_SMASK			0x1F00ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC1P_CRDTS_UNUSED_7_5_SHIFT		5
#define FXR_TXOTR_MSG_CFG_TXCI_MC1P_CRDTS_UNUSED_7_5_MASK		0x7ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC1P_CRDTS_UNUSED_7_5_SMASK		0xE0ull
#define FXR_TXOTR_MSG_CFG_TXCI_MC1P_CRDTS_TC0_SHIFT			0
#define FXR_TXOTR_MSG_CFG_TXCI_MC1P_CRDTS_TC0_MASK			0x1Full
#define FXR_TXOTR_MSG_CFG_TXCI_MC1P_CRDTS_TC0_SMASK			0x1Full
/*
* Table #8 of fxr_tx_otr_msg_top_csrs - txotr_msg_cfg_rx_omb_crdts
* This CSR contains the configuration parameters necessary to configure the 
* number of credits available for MC1 RX packets going from Packet Level 
* Tracking to Message Level Tracking.
*/
#define FXR_TXOTR_MSG_CFG_RX_OMB_CRDTS					(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000000020)
#define FXR_TXOTR_MSG_CFG_RX_OMB_CRDTS_RESETCSR				0x0000000010101010ull
#define FXR_TXOTR_MSG_CFG_RX_OMB_CRDTS_UNUSED_63_29_SHIFT		29
#define FXR_TXOTR_MSG_CFG_RX_OMB_CRDTS_UNUSED_63_29_MASK		0x7FFFFFFFFull
#define FXR_TXOTR_MSG_CFG_RX_OMB_CRDTS_UNUSED_63_29_SMASK		0xFFFFFFFFE0000000ull
#define FXR_TXOTR_MSG_CFG_RX_OMB_CRDTS_TC3_SHIFT			24
#define FXR_TXOTR_MSG_CFG_RX_OMB_CRDTS_TC3_MASK				0x1Full
#define FXR_TXOTR_MSG_CFG_RX_OMB_CRDTS_TC3_SMASK			0x1F000000ull
#define FXR_TXOTR_MSG_CFG_RX_OMB_CRDTS_UNUSED_23_21_SHIFT		21
#define FXR_TXOTR_MSG_CFG_RX_OMB_CRDTS_UNUSED_23_21_MASK		0x7ull
#define FXR_TXOTR_MSG_CFG_RX_OMB_CRDTS_UNUSED_23_21_SMASK		0xE00000ull
#define FXR_TXOTR_MSG_CFG_RX_OMB_CRDTS_TC2_SHIFT			16
#define FXR_TXOTR_MSG_CFG_RX_OMB_CRDTS_TC2_MASK				0x1Full
#define FXR_TXOTR_MSG_CFG_RX_OMB_CRDTS_TC2_SMASK			0x1F0000ull
#define FXR_TXOTR_MSG_CFG_RX_OMB_CRDTS_UNUSED_15_13_SHIFT		13
#define FXR_TXOTR_MSG_CFG_RX_OMB_CRDTS_UNUSED_15_13_MASK		0x7ull
#define FXR_TXOTR_MSG_CFG_RX_OMB_CRDTS_UNUSED_15_13_SMASK		0xE000ull
#define FXR_TXOTR_MSG_CFG_RX_OMB_CRDTS_TC1_SHIFT			8
#define FXR_TXOTR_MSG_CFG_RX_OMB_CRDTS_TC1_MASK				0x1Full
#define FXR_TXOTR_MSG_CFG_RX_OMB_CRDTS_TC1_SMASK			0x1F00ull
#define FXR_TXOTR_MSG_CFG_RX_OMB_CRDTS_UNUSED_7_5_SHIFT			5
#define FXR_TXOTR_MSG_CFG_RX_OMB_CRDTS_UNUSED_7_5_MASK			0x7ull
#define FXR_TXOTR_MSG_CFG_RX_OMB_CRDTS_UNUSED_7_5_SMASK			0xE0ull
#define FXR_TXOTR_MSG_CFG_RX_OMB_CRDTS_TC0_SHIFT			0
#define FXR_TXOTR_MSG_CFG_RX_OMB_CRDTS_TC0_MASK				0x1Full
#define FXR_TXOTR_MSG_CFG_RX_OMB_CRDTS_TC0_SMASK			0x1Full
/*
* Table #9 of fxr_tx_otr_msg_top_csrs - txotr_msg_cfg_prefrag_opb_fifo_crdts
* This CSR contains the configuration parameters necessary to configure the 
* number of credits in the Pre-Fragmentation Engine OPB Input Queues.
*/
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS			(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000000028)
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_RESETCSR		0x0000000044444444ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_UNUSED_63_31_SHIFT	31
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_UNUSED_63_31_MASK	0x1FFFFFFFFull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_UNUSED_63_31_SMASK	0xFFFFFFFF80000000ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_MC1TC3_SHIFT		28
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_MC1TC3_MASK		0x7ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_MC1TC3_SMASK		0x70000000ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_UNUSED_27_SHIFT	27
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_UNUSED_27_MASK		0x1ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_UNUSED_27_SMASK	0x8000000ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_MC1TC2_SHIFT		24
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_MC1TC2_MASK		0x7ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_MC1TC2_SMASK		0x7000000ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_UNUSED_23_SHIFT	23
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_UNUSED_23_MASK		0x1ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_UNUSED_23_SMASK	0x800000ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_MC1TC1_SHIFT		20
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_MC1TC1_MASK		0x7ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_MC1TC1_SMASK		0x700000ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_UNUSED_19_SHIFT	19
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_UNUSED_19_MASK		0x1ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_UNUSED_19_SMASK	0x80000ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_MC1TC0_SHIFT		16
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_MC1TC0_MASK		0x7ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_MC1TC0_SMASK		0x70000ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_UNUSED_15_SHIFT	15
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_UNUSED_15_MASK		0x1ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_UNUSED_15_SMASK	0x8000ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_MC0TC3_SHIFT		12
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_MC0TC3_MASK		0x7ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_MC0TC3_SMASK		0x7000ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_UNUSED_11_SHIFT	11
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_UNUSED_11_MASK		0x1ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_UNUSED_11_SMASK	0x800ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_MC0TC2_SHIFT		8
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_MC0TC2_MASK		0x7ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_MC0TC2_SMASK		0x700ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_UNUSED_7_SHIFT		7
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_UNUSED_7_MASK		0x1ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_UNUSED_7_SMASK		0x80ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_MC0TC1_SHIFT		4
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_MC0TC1_MASK		0x7ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_MC0TC1_SMASK		0x70ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_UNUSED_3_SHIFT		3
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_UNUSED_3_MASK		0x1ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_UNUSED_3_SMASK		0x8ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_MC0TC0_SHIFT		0
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_MC0TC0_MASK		0x7ull
#define FXR_TXOTR_MSG_CFG_PREFRAG_OPB_FIFO_CRDTS_MC0TC0_SMASK		0x7ull
/*
* Table #10 of fxr_tx_otr_msg_top_csrs - txotr_msg_cfg_fp_opb_fifo_crdts
* This CSR contains the configuration parameters necessary to configure the 
* number of credits in the Fast Path OPB Input Queues.
*/
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000000030)
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_RESETCSR			0x0842108421084210ull
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_UNUSED_63_60_SHIFT		60
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_UNUSED_63_60_MASK		0xFull
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_UNUSED_63_60_SMASK		0xF000000000000000ull
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC1PTC3_SHIFT		55
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC1PTC3_MASK		0x1Full
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC1PTC3_SMASK		0xF80000000000000ull
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC1PTC2_SHIFT		50
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC1PTC2_MASK		0x1Full
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC1PTC2_SMASK		0x7C000000000000ull
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC1PTC1_SHIFT		45
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC1PTC1_MASK		0x1Full
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC1PTC1_SMASK		0x3E00000000000ull
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC1PTC0_SHIFT		40
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC1PTC0_MASK		0x1Full
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC1PTC0_SMASK		0x1F0000000000ull
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC1TC3_SHIFT		35
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC1TC3_MASK			0x1Full
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC1TC3_SMASK		0xF800000000ull
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC1TC2_SHIFT		30
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC1TC2_MASK			0x1Full
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC1TC2_SMASK		0x7C0000000ull
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC1TC1_SHIFT		25
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC1TC1_MASK			0x1Full
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC1TC1_SMASK		0x3E000000ull
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC1TC0_SHIFT		20
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC1TC0_MASK			0x1Full
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC1TC0_SMASK		0x1F00000ull
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC0TC3_SHIFT		15
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC0TC3_MASK			0x1Full
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC0TC3_SMASK		0xF8000ull
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC0TC2_SHIFT		10
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC0TC2_MASK			0x1Full
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC0TC2_SMASK		0x7C00ull
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC0TC1_SHIFT		5
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC0TC1_MASK			0x1Full
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC0TC1_SMASK		0x3E0ull
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC0TC0_SHIFT		0
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC0TC0_MASK			0x1Full
#define FXR_TXOTR_MSG_CFG_FP_OPB_FIFO_CRDTS_MC0TC0_SMASK		0x1Full
/*
* Table #11 of fxr_tx_otr_msg_top_csrs - txotr_msg_cfg_msgid_1
* This CSR contains the configuration parameters necessary to set the number of 
* reserved MSG_IDs for each MC/TC combination.
*/
#define FXR_TXOTR_MSG_CFG_MSGID_1					(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000000038)
#define FXR_TXOTR_MSG_CFG_MSGID_1_RESETCSR				0x4040404040404040ull
#define FXR_TXOTR_MSG_CFG_MSGID_1_RSVD_MC1_TC3_SHIFT			56
#define FXR_TXOTR_MSG_CFG_MSGID_1_RSVD_MC1_TC3_MASK			0xFFull
#define FXR_TXOTR_MSG_CFG_MSGID_1_RSVD_MC1_TC3_SMASK			0xFF00000000000000ull
#define FXR_TXOTR_MSG_CFG_MSGID_1_RSVD_MC1_TC2_SHIFT			48
#define FXR_TXOTR_MSG_CFG_MSGID_1_RSVD_MC1_TC2_MASK			0xFFull
#define FXR_TXOTR_MSG_CFG_MSGID_1_RSVD_MC1_TC2_SMASK			0xFF000000000000ull
#define FXR_TXOTR_MSG_CFG_MSGID_1_RSVD_MC1_TC1_SHIFT			40
#define FXR_TXOTR_MSG_CFG_MSGID_1_RSVD_MC1_TC1_MASK			0xFFull
#define FXR_TXOTR_MSG_CFG_MSGID_1_RSVD_MC1_TC1_SMASK			0xFF0000000000ull
#define FXR_TXOTR_MSG_CFG_MSGID_1_RSVD_MC1_TC0_SHIFT			32
#define FXR_TXOTR_MSG_CFG_MSGID_1_RSVD_MC1_TC0_MASK			0xFFull
#define FXR_TXOTR_MSG_CFG_MSGID_1_RSVD_MC1_TC0_SMASK			0xFF00000000ull
#define FXR_TXOTR_MSG_CFG_MSGID_1_RSVD_MC0_TC3_SHIFT			24
#define FXR_TXOTR_MSG_CFG_MSGID_1_RSVD_MC0_TC3_MASK			0xFFull
#define FXR_TXOTR_MSG_CFG_MSGID_1_RSVD_MC0_TC3_SMASK			0xFF000000ull
#define FXR_TXOTR_MSG_CFG_MSGID_1_RSVD_MC0_TC2_SHIFT			16
#define FXR_TXOTR_MSG_CFG_MSGID_1_RSVD_MC0_TC2_MASK			0xFFull
#define FXR_TXOTR_MSG_CFG_MSGID_1_RSVD_MC0_TC2_SMASK			0xFF0000ull
#define FXR_TXOTR_MSG_CFG_MSGID_1_RSVD_MC0_TC1_SHIFT			8
#define FXR_TXOTR_MSG_CFG_MSGID_1_RSVD_MC0_TC1_MASK			0xFFull
#define FXR_TXOTR_MSG_CFG_MSGID_1_RSVD_MC0_TC1_SMASK			0xFF00ull
#define FXR_TXOTR_MSG_CFG_MSGID_1_RSVD_MC0_TC0_SHIFT			0
#define FXR_TXOTR_MSG_CFG_MSGID_1_RSVD_MC0_TC0_MASK			0xFFull
#define FXR_TXOTR_MSG_CFG_MSGID_1_RSVD_MC0_TC0_SMASK			0xFFull
/*
* Table #12 of fxr_tx_otr_msg_top_csrs - txotr_msg_cfg_msgid_2
* This CSR contains the configuration parameters necessary to set the total 
* shared Message Identifiers that can be allocated simultaneously.
*/
#define FXR_TXOTR_MSG_CFG_MSGID_2					(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000000040)
#define FXR_TXOTR_MSG_CFG_MSGID_2_RESETCSR				0x0000000000003000ull
#define FXR_TXOTR_MSG_CFG_MSGID_2_UNUSED_63_14_SHIFT			14
#define FXR_TXOTR_MSG_CFG_MSGID_2_UNUSED_63_14_MASK			0x3FFFFFFFFFFFFull
#define FXR_TXOTR_MSG_CFG_MSGID_2_UNUSED_63_14_SMASK			0xFFFFFFFFFFFFC000ull
#define FXR_TXOTR_MSG_CFG_MSGID_2_SHARED_SHIFT				0
#define FXR_TXOTR_MSG_CFG_MSGID_2_SHARED_MASK				0x3FFFull
#define FXR_TXOTR_MSG_CFG_MSGID_2_SHARED_SMASK				0x3FFFull
/*
* Table #13 of fxr_tx_otr_msg_top_csrs - txotr_msg_cfg_omb_fifo_arb
* This CSR contains the configuration parameters necessary to configure the OMB 
* Queue Arbitration. By default the arbitration scheme for these queues is round 
* robin. 
*/
#define FXR_TXOTR_MSG_CFG_OMB_FIFO_ARB					(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000000048)
#define FXR_TXOTR_MSG_CFG_OMB_FIFO_ARB_RESETCSR				0x0000000000000000ull
#define FXR_TXOTR_MSG_CFG_OMB_FIFO_ARB_UNUSED_63_2_SHIFT		2
#define FXR_TXOTR_MSG_CFG_OMB_FIFO_ARB_UNUSED_63_2_MASK			0x3FFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_CFG_OMB_FIFO_ARB_UNUSED_63_2_SMASK		0xFFFFFFFFFFFFFFFCull
#define FXR_TXOTR_MSG_CFG_OMB_FIFO_ARB_RENDEZ_PRIO_TC_SHIFT		1
#define FXR_TXOTR_MSG_CFG_OMB_FIFO_ARB_RENDEZ_PRIO_TC_MASK		0x1ull
#define FXR_TXOTR_MSG_CFG_OMB_FIFO_ARB_RENDEZ_PRIO_TC_SMASK		0x2ull
#define FXR_TXOTR_MSG_CFG_OMB_FIFO_ARB_RENDEZ_PRIO_ALL_SHIFT		0
#define FXR_TXOTR_MSG_CFG_OMB_FIFO_ARB_RENDEZ_PRIO_ALL_MASK		0x1ull
#define FXR_TXOTR_MSG_CFG_OMB_FIFO_ARB_RENDEZ_PRIO_ALL_SMASK		0x1ull
/*
* Table #14 of fxr_tx_otr_msg_top_csrs - txotr_msg_cfg_transmit_delay
* This CSR contains the configuration parameters necessary to configure the 
* counter used as a comparison for Rendezvous transactions which are delayed 
* before being sent into the network. 
*/
#define FXR_TXOTR_MSG_CFG_TRANSMIT_DELAY				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000000050)
#define FXR_TXOTR_MSG_CFG_TRANSMIT_DELAY_RESETCSR			0x00000000000004B0ull
#define FXR_TXOTR_MSG_CFG_TRANSMIT_DELAY_UNUSED_63_33_SHIFT		33
#define FXR_TXOTR_MSG_CFG_TRANSMIT_DELAY_UNUSED_63_33_MASK		0x7FFFFFFFull
#define FXR_TXOTR_MSG_CFG_TRANSMIT_DELAY_UNUSED_63_33_SMASK		0xFFFFFFFE00000000ull
#define FXR_TXOTR_MSG_CFG_TRANSMIT_DELAY_IGNORE_TRANSMIT_DELAY_SHIFT	32
#define FXR_TXOTR_MSG_CFG_TRANSMIT_DELAY_IGNORE_TRANSMIT_DELAY_MASK	0x1ull
#define FXR_TXOTR_MSG_CFG_TRANSMIT_DELAY_IGNORE_TRANSMIT_DELAY_SMASK	0x100000000ull
#define FXR_TXOTR_MSG_CFG_TRANSMIT_DELAY_SCALER_SHIFT			0
#define FXR_TXOTR_MSG_CFG_TRANSMIT_DELAY_SCALER_MASK			0xFFFFFFFFull
#define FXR_TXOTR_MSG_CFG_TRANSMIT_DELAY_SCALER_SMASK			0xFFFFFFFFull
/*
* Table #15 of fxr_tx_otr_msg_top_csrs - txotr_msg_cfg_cancel_msg_req_1
* This CSR in conjunction with #%%#txotr_msg_cfg_cancel_msg_req_2#%%# CSR, 
* #%%#txotr_msg_cfg_cancel_msg_req_3#%%# CSR, and #%%#txotr_msg_cfg_cancel_msg_req_4#%%# 
* CSR control the canceling of messages pending in the OMB. When a cancel is 
* requested, software should write the #%%#busy#%%# bit to 1'b1. If the bit is 
* set, hardware is busy processing the cancel request. Once the cancel request 
* has been completed, hardware will clear the #%%#busy#%%# bit.
*/
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000000058)
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_RESETCSR			0x0000000000000000ull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_UNUSED_63_56_SHIFT		56
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_UNUSED_63_56_MASK		0xFFull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_UNUSED_63_56_SMASK		0xFF00000000000000ull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_TC_MASK_SHIFT		54
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_TC_MASK_MASK			0x3ull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_TC_MASK_SMASK		0xC0000000000000ull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_TC_SHIFT			52
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_TC_MASK			0x3ull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_TC_SMASK			0x30000000000000ull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_UNUSED_51_SHIFT		51
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_UNUSED_51_MASK		0x1ull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_UNUSED_51_SMASK		0x8000000000000ull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_MD_HANDLE_MASK_SHIFT		40
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_MD_HANDLE_MASK_MASK		0x7FFull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_MD_HANDLE_MASK_SMASK		0x7FF0000000000ull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_UNUSED_39_SHIFT		39
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_UNUSED_39_MASK		0x1ull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_UNUSED_39_SMASK		0x8000000000ull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_MD_HANDLE_SHIFT		28
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_MD_HANDLE_MASK		0x7FFull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_MD_HANDLE_SMASK		0x7FF0000000ull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_IPID_MASK_SHIFT		16
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_IPID_MASK_MASK		0xFFFull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_IPID_MASK_SMASK		0xFFF0000ull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_IPID_SHIFT			4
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_IPID_MASK			0xFFFull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_IPID_SMASK			0xFFF0ull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_UNUSED_3_1_SHIFT		1
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_UNUSED_3_1_MASK		0x7ull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_UNUSED_3_1_SMASK		0xEull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_BUSY_SHIFT			0
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_BUSY_MASK			0x1ull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_1_BUSY_SMASK			0x1ull
/*
* Table #16 of fxr_tx_otr_msg_top_csrs - txotr_msg_cfg_cancel_msg_req_2
* This CSR in conjunction with #%%#txotr_msg_cfg_cancel_msg_req_1#%%# CSR, 
* #%%#txotr_msg_cfg_cancel_msg_req_3#%%# CSR, and #%%#txotr_msg_cfg_cancel_msg_req_4#%%# 
* CSR control the canceling of messages pending in the OMB. See 
* #%%#txotr_msg_cfg_cancel_msg_req_1#%%# CSR for complete details.
*/
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_2				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000000060)
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_2_RESETCSR			0x0000000000000000ull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_2_USER_POINTER_SHIFT		0
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_2_USER_POINTER_MASK		0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_2_USER_POINTER_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #17 of fxr_tx_otr_msg_top_csrs - txotr_msg_cfg_cancel_msg_req_3
* This CSR in conjunction with #%%#txotr_msg_cfg_cancel_msg_req_1#%%# CSR, 
* #%%#txotr_msg_cfg_cancel_msg_req_2#%%# CSR, and #%%#txotr_msg_cfg_cancel_msg_req_4#%%# 
* CSR control the canceling of messages pending in the OMB. See 
* #%%#txotr_msg_cfg_cancel_msg_req_1#%%# CSR for complete details.
*/
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_3				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000000068)
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_3_RESETCSR			0x0000000000000000ull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_3_USER_POINTER_MASK_SHIFT	0
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_3_USER_POINTER_MASK_MASK	0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_3_USER_POINTER_MASK_SMASK	0xFFFFFFFFFFFFFFFFull
/*
* Table #18 of fxr_tx_otr_msg_top_csrs - txotr_msg_cfg_cancel_msg_req_4
* This CSR in conjunction with #%%#txotr_msg_cfg_cancel_msg_req_1#%%# CSR, 
* #%%#txotr_msg_cfg_cancel_msg_req_2#%%# CSR, and #%%#txotr_msg_cfg_cancel_msg_req_3#%%# 
* CSR control the canceling of messages pending in the OMB. See 
* #%%#txotr_msg_cfg_cancel_msg_req_1#%%# CSR for complete details.
*/
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_4				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000000070)
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_4_RESETCSR			0x0000000000000000ull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_4_UNUSED_63_48_SHIFT		48
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_4_UNUSED_63_48_MASK		0xFFFFull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_4_UNUSED_63_48_SMASK		0xFFFF000000000000ull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_4_DLID_MASK_SHIFT		24
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_4_DLID_MASK_MASK		0xFFFFFFull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_4_DLID_MASK_SMASK		0xFFFFFF000000ull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_4_DLID_SHIFT			0
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_4_DLID_MASK			0xFFFFFFull
#define FXR_TXOTR_MSG_CFG_CANCEL_MSG_REQ_4_DLID_SMASK			0xFFFFFFull
/*
* Table #19 of fxr_tx_otr_msg_top_csrs - txotr_msg_cfg_force_msg_to_fpe
* This CSR is used to force Fast Path messages to the Fragmentation Programmable 
* Engine. This CSR must be configured identically to #%%#Section 29.7.3.56, 
* 'Force Message to Fragmentation Programmable Engine Configuration 
* CSR'#%%#.
*/
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000000078)
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_RESETCSR			0x0000000000000000ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_UNUSED_63_15_SHIFT		15
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_UNUSED_63_15_MASK		0x1FFFFFFFFFFFFull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_UNUSED_63_15_SMASK		0xFFFFFFFFFFFF8000ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_E2E_CTRL_SHIFT		14
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_E2E_CTRL_MASK		0x1ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_E2E_CTRL_SMASK		0x4000ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_CTS_SHIFT			13
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_CTS_MASK			0x1ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_CTS_SMASK			0x2000ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_BASIC_ACK_SHIFT		12
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_BASIC_ACK_MASK		0x1ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_BASIC_ACK_SMASK		0x1000ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_DMA_REPLY_SHIFT		11
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_DMA_REPLY_MASK		0x1ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_DMA_REPLY_SMASK		0x800ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_BUFF_REPLY_SHIFT		10
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_BUFF_REPLY_MASK		0x1ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_BUFF_REPLY_SMASK		0x400ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_STANDARD_ACK_SHIFT		9
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_STANDARD_ACK_MASK		0x1ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_STANDARD_ACK_SMASK		0x200ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_DMA_TWOOP_SHIFT		8
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_DMA_TWOOP_MASK		0x1ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_DMA_TWOOP_SMASK		0x100ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_DMA_FATOMIC_SHIFT		7
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_DMA_FATOMIC_MASK		0x1ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_DMA_FATOMIC_SMASK		0x80ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_BUFF_TWOOP_SHIFT		6
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_BUFF_TWOOP_MASK		0x1ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_BUFF_TWOOP_SMASK		0x40ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_BUFF_FATOMIC_SHIFT		5
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_BUFF_FATOMIC_MASK		0x1ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_BUFF_FATOMIC_SMASK		0x20ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_DMA_GET_SHIFT		4
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_DMA_GET_MASK			0x1ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_DMA_GET_SMASK		0x10ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_BUFF_PA_SHIFT		3
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_BUFF_PA_MASK			0x1ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_BUFF_PA_SMASK		0x8ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_DMA_PA_SHIFT			2
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_DMA_PA_MASK			0x1ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_DMA_PA_SMASK			0x4ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_RDV_EVENT_SHIFT		1
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_RDV_EVENT_MASK		0x1ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_RDV_EVENT_SMASK		0x2ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_RTS_SHIFT			0
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_RTS_MASK			0x1ull
#define FXR_TXOTR_MSG_CFG_FORCE_MSG_TO_FPE_RTS_SMASK			0x1ull
/*
* Table #20 of fxr_tx_otr_msg_top_csrs - txotr_msg_cfg_tc0
* This CSR is used to enable TC0 and configure the maximum number of bytes 
* allowed to be outstanding on this traffic class.
*/
#define FXR_TXOTR_MSG_CFG_TC0						(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000000080)
#define FXR_TXOTR_MSG_CFG_TC0_RESETCSR					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_CFG_TC0_ENABLE_SHIFT				63
#define FXR_TXOTR_MSG_CFG_TC0_ENABLE_MASK				0x1ull
#define FXR_TXOTR_MSG_CFG_TC0_ENABLE_SMASK				0x8000000000000000ull
#define FXR_TXOTR_MSG_CFG_TC0_MAX_BYTES_SHIFT				0
#define FXR_TXOTR_MSG_CFG_TC0_MAX_BYTES_MASK				0x7FFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_CFG_TC0_MAX_BYTES_SMASK				0x7FFFFFFFFFFFFFFFull
/*
* Table #21 of fxr_tx_otr_msg_top_csrs - txotr_msg_cfg_tc1
* This CSR is used to enable TC1 and configure the maximum number of bytes 
* allowed to be outstanding on this traffic class.
*/
#define FXR_TXOTR_MSG_CFG_TC1						(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000000088)
#define FXR_TXOTR_MSG_CFG_TC1_RESETCSR					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_CFG_TC1_ENABLE_SHIFT				63
#define FXR_TXOTR_MSG_CFG_TC1_ENABLE_MASK				0x1ull
#define FXR_TXOTR_MSG_CFG_TC1_ENABLE_SMASK				0x8000000000000000ull
#define FXR_TXOTR_MSG_CFG_TC1_MAX_BYTES_SHIFT				0
#define FXR_TXOTR_MSG_CFG_TC1_MAX_BYTES_MASK				0x7FFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_CFG_TC1_MAX_BYTES_SMASK				0x7FFFFFFFFFFFFFFFull
/*
* Table #22 of fxr_tx_otr_msg_top_csrs - txotr_msg_cfg_tc2
* This CSR is used to enable TC2 and configure the maximum number of bytes 
* allowed to be outstanding on this traffic class.
*/
#define FXR_TXOTR_MSG_CFG_TC2						(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000000090)
#define FXR_TXOTR_MSG_CFG_TC2_RESETCSR					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_CFG_TC2_ENABLE_SHIFT				63
#define FXR_TXOTR_MSG_CFG_TC2_ENABLE_MASK				0x1ull
#define FXR_TXOTR_MSG_CFG_TC2_ENABLE_SMASK				0x8000000000000000ull
#define FXR_TXOTR_MSG_CFG_TC2_MAX_BYTES_SHIFT				0
#define FXR_TXOTR_MSG_CFG_TC2_MAX_BYTES_MASK				0x7FFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_CFG_TC2_MAX_BYTES_SMASK				0x7FFFFFFFFFFFFFFFull
/*
* Table #23 of fxr_tx_otr_msg_top_csrs - txotr_msg_cfg_tc3
* This CSR is used to enable TC3 and configure the maximum number of bytes 
* allowed to be outstanding on this traffic class.
*/
#define FXR_TXOTR_MSG_CFG_TC3						(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000000098)
#define FXR_TXOTR_MSG_CFG_TC3_RESETCSR					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_CFG_TC3_ENABLE_SHIFT				63
#define FXR_TXOTR_MSG_CFG_TC3_ENABLE_MASK				0x1ull
#define FXR_TXOTR_MSG_CFG_TC3_ENABLE_SMASK				0x8000000000000000ull
#define FXR_TXOTR_MSG_CFG_TC3_MAX_BYTES_SHIFT				0
#define FXR_TXOTR_MSG_CFG_TC3_MAX_BYTES_MASK				0x7FFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_CFG_TC3_MAX_BYTES_SMASK				0x7FFFFFFFFFFFFFFFull
/*
* Table #24 of fxr_tx_otr_msg_top_csrs - txotr_msg_cfg_rendezvous
* This CSR is to configure the Rendezvous protocol in OTR. The CSR determines 
* the maximum number of CTS Replies that BPE can handle at a given time. 
* .
*/
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS					(FXR_TX_OTR_MSG_TOP_CSRS + 0x0000000000A0)
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_RESETCSR				0x0000000000000000ull
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_UNUSED_63_1_SHIFT			1
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_UNUSED_63_1_MASK			0x7FFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_UNUSED_63_1_SMASK			0xFFFFFFFFFFFFFFFEull
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_DISALLOW_RMESSAGE_SHIFT		0
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_DISALLOW_RMESSAGE_MASK		0x1ull
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_DISALLOW_RMESSAGE_SMASK		0x1ull
/*
* Table #25 of fxr_tx_otr_msg_top_csrs - txotr_msg_cfg_rfs
* This CSR is used to configure the Rendezvous Fragment Size (RFS) per MC/TC. A 
* setting of 3'd7 is not valid and defaults to 8KB. This CSR should be 
* configured to the exact same settings as #%%#Section 29.7.3.51, 'Rendezvous 
* Fragment Size Configuration CSR'#%%#.
*/
#define FXR_TXOTR_MSG_CFG_RFS						(FXR_TX_OTR_MSG_TOP_CSRS + 0x0000000000A8)
#define FXR_TXOTR_MSG_CFG_RFS_RESETCSR					0x0000000055555555ull
#define FXR_TXOTR_MSG_CFG_RFS_UNUSED_63_31_SHIFT			31
#define FXR_TXOTR_MSG_CFG_RFS_UNUSED_63_31_MASK				0x1FFFFFFFFull
#define FXR_TXOTR_MSG_CFG_RFS_UNUSED_63_31_SMASK			0xFFFFFFFF80000000ull
#define FXR_TXOTR_MSG_CFG_RFS_MC1TC3_SHIFT_SHIFT			28
#define FXR_TXOTR_MSG_CFG_RFS_MC1TC3_SHIFT_MASK				0x7ull
#define FXR_TXOTR_MSG_CFG_RFS_MC1TC3_SHIFT_SMASK			0x70000000ull
#define FXR_TXOTR_MSG_CFG_RFS_UNUSED_27_SHIFT				27
#define FXR_TXOTR_MSG_CFG_RFS_UNUSED_27_MASK				0x1ull
#define FXR_TXOTR_MSG_CFG_RFS_UNUSED_27_SMASK				0x8000000ull
#define FXR_TXOTR_MSG_CFG_RFS_MC1TC2_SHIFT_SHIFT			24
#define FXR_TXOTR_MSG_CFG_RFS_MC1TC2_SHIFT_MASK				0x7ull
#define FXR_TXOTR_MSG_CFG_RFS_MC1TC2_SHIFT_SMASK			0x7000000ull
#define FXR_TXOTR_MSG_CFG_RFS_UNUSED_23_SHIFT				23
#define FXR_TXOTR_MSG_CFG_RFS_UNUSED_23_MASK				0x1ull
#define FXR_TXOTR_MSG_CFG_RFS_UNUSED_23_SMASK				0x800000ull
#define FXR_TXOTR_MSG_CFG_RFS_MC1TC1_SHIFT_SHIFT			20
#define FXR_TXOTR_MSG_CFG_RFS_MC1TC1_SHIFT_MASK				0x7ull
#define FXR_TXOTR_MSG_CFG_RFS_MC1TC1_SHIFT_SMASK			0x700000ull
#define FXR_TXOTR_MSG_CFG_RFS_UNUSED_19_SHIFT				19
#define FXR_TXOTR_MSG_CFG_RFS_UNUSED_19_MASK				0x1ull
#define FXR_TXOTR_MSG_CFG_RFS_UNUSED_19_SMASK				0x80000ull
#define FXR_TXOTR_MSG_CFG_RFS_MC1TC0_SHIFT_SHIFT			16
#define FXR_TXOTR_MSG_CFG_RFS_MC1TC0_SHIFT_MASK				0x7ull
#define FXR_TXOTR_MSG_CFG_RFS_MC1TC0_SHIFT_SMASK			0x70000ull
#define FXR_TXOTR_MSG_CFG_RFS_UNUSED_15_SHIFT				15
#define FXR_TXOTR_MSG_CFG_RFS_UNUSED_15_MASK				0x1ull
#define FXR_TXOTR_MSG_CFG_RFS_UNUSED_15_SMASK				0x8000ull
#define FXR_TXOTR_MSG_CFG_RFS_MC0TC3_SHIFT_SHIFT			12
#define FXR_TXOTR_MSG_CFG_RFS_MC0TC3_SHIFT_MASK				0x7ull
#define FXR_TXOTR_MSG_CFG_RFS_MC0TC3_SHIFT_SMASK			0x7000ull
#define FXR_TXOTR_MSG_CFG_RFS_UNUSED_11_SHIFT				11
#define FXR_TXOTR_MSG_CFG_RFS_UNUSED_11_MASK				0x1ull
#define FXR_TXOTR_MSG_CFG_RFS_UNUSED_11_SMASK				0x800ull
#define FXR_TXOTR_MSG_CFG_RFS_MC0TC2_SHIFT_SHIFT			8
#define FXR_TXOTR_MSG_CFG_RFS_MC0TC2_SHIFT_MASK				0x7ull
#define FXR_TXOTR_MSG_CFG_RFS_MC0TC2_SHIFT_SMASK			0x700ull
#define FXR_TXOTR_MSG_CFG_RFS_UNUSED_7_SHIFT				7
#define FXR_TXOTR_MSG_CFG_RFS_UNUSED_7_MASK				0x1ull
#define FXR_TXOTR_MSG_CFG_RFS_UNUSED_7_SMASK				0x80ull
#define FXR_TXOTR_MSG_CFG_RFS_MC0TC1_SHIFT_SHIFT			4
#define FXR_TXOTR_MSG_CFG_RFS_MC0TC1_SHIFT_MASK				0x7ull
#define FXR_TXOTR_MSG_CFG_RFS_MC0TC1_SHIFT_SMASK			0x70ull
#define FXR_TXOTR_MSG_CFG_RFS_UNUSED_3_SHIFT				3
#define FXR_TXOTR_MSG_CFG_RFS_UNUSED_3_MASK				0x1ull
#define FXR_TXOTR_MSG_CFG_RFS_UNUSED_3_SMASK				0x8ull
#define FXR_TXOTR_MSG_CFG_RFS_MC0TC0_SHIFT_SHIFT			0
#define FXR_TXOTR_MSG_CFG_RFS_MC0TC0_SHIFT_MASK				0x7ull
#define FXR_TXOTR_MSG_CFG_RFS_MC0TC0_SHIFT_SMASK			0x7ull
/*
* Table #26 of fxr_tx_otr_msg_top_csrs - txotr_msg_cfg_rendezvous_rc
* This CSR is used to configure the Routing Control (RC) bits for Rendezvous 
* Put, Atomic, and Get packets generated from a Rendezvous transaction. This CSR 
* cannot be changed while commands and packets are in flight.
*/
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_RC					(FXR_TX_OTR_MSG_TOP_CSRS + 0x0000000000B0)
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_RC_RESETCSR			0x0000000000000044ull
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_RC_UNUSED_63_7_SHIFT		7
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_RC_UNUSED_63_7_MASK		0x1FFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_RC_UNUSED_63_7_SMASK		0xFFFFFFFFFFFFFF80ull
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_RC_PORT1_SHIFT			4
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_RC_PORT1_MASK			0x7ull
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_RC_PORT1_SMASK			0x70ull
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_RC_UNUSED_3_SHIFT			3
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_RC_UNUSED_3_MASK			0x1ull
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_RC_UNUSED_3_SMASK			0x8ull
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_RC_PORT0_SHIFT			0
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_RC_PORT0_MASK			0x7ull
#define FXR_TXOTR_MSG_CFG_RENDEZVOUS_RC_PORT0_SMASK			0x7ull
/*
* Table #27 of fxr_tx_otr_msg_top_csrs - txotr_msg_cfg_timeout
* This CSR contains the configuration parameters necessary to set the length of 
* the timeout interval used to retransmit outstanding packets. The 
* #%%#TIMEOUT#%%# field should match exactly what is contained in the 
* #%%#TIMEOUT#%%# field of #%%#txotr_pkt_cfg_timeout#%%#.
*/
#define FXR_TXOTR_MSG_CFG_TIMEOUT					(FXR_TX_OTR_MSG_TOP_CSRS + 0x0000000000B8)
#define FXR_TXOTR_MSG_CFG_TIMEOUT_RESETCSR				0x0000800000000000ull
#define FXR_TXOTR_MSG_CFG_TIMEOUT_UNUSED_63_48_SHIFT			48
#define FXR_TXOTR_MSG_CFG_TIMEOUT_UNUSED_63_48_MASK			0xFFFFull
#define FXR_TXOTR_MSG_CFG_TIMEOUT_UNUSED_63_48_SMASK			0xFFFF000000000000ull
#define FXR_TXOTR_MSG_CFG_TIMEOUT_TIMEOUT_SHIFT				36
#define FXR_TXOTR_MSG_CFG_TIMEOUT_TIMEOUT_MASK				0xFFFull
#define FXR_TXOTR_MSG_CFG_TIMEOUT_TIMEOUT_SMASK				0xFFF000000000ull
#define FXR_TXOTR_MSG_CFG_TIMEOUT_UNUSED_35_0_SHIFT			0
#define FXR_TXOTR_MSG_CFG_TIMEOUT_UNUSED_35_0_MASK			0xFFFFFFFFFull
#define FXR_TXOTR_MSG_CFG_TIMEOUT_UNUSED_35_0_SMASK			0xFFFFFFFFFull
/*
* Table #28 of fxr_tx_otr_msg_top_csrs - txotr_msg_cfg_small_header
* This CSR contains the configuration parameters necessary to allow or disallow 
* the use of small headers in OTR packet generation. If the small headers are 
* disabled, packets are forced to use the 16B header formats. Note that this 
* does not apply to short replies and short ACKs since changing these command 
* types from short to long would also require a modification to the command's 
* opcode.
*/
#define FXR_TXOTR_MSG_CFG_SMALL_HEADER					(FXR_TX_OTR_MSG_TOP_CSRS + 0x0000000000C0)
#define FXR_TXOTR_MSG_CFG_SMALL_HEADER_RESETCSR				0x0000000000000001ull
#define FXR_TXOTR_MSG_CFG_SMALL_HEADER_UNUSED_63_1_SHIFT		1
#define FXR_TXOTR_MSG_CFG_SMALL_HEADER_UNUSED_63_1_MASK			0x7FFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_CFG_SMALL_HEADER_UNUSED_63_1_SMASK		0xFFFFFFFFFFFFFFFEull
#define FXR_TXOTR_MSG_CFG_SMALL_HEADER_ENABLE_SHIFT			0
#define FXR_TXOTR_MSG_CFG_SMALL_HEADER_ENABLE_MASK			0x1ull
#define FXR_TXOTR_MSG_CFG_SMALL_HEADER_ENABLE_SMASK			0x1ull
/*
* Table #29 of fxr_tx_otr_msg_top_csrs - txotr_msg_cfg_ack_refused
* This CSR contains the configuration parameters necessary to post an event with 
* a Portals ACK with an opcode of PTL_ACK_REFUSED is received.
*/
#define FXR_TXOTR_MSG_CFG_ACK_REFUSED					(FXR_TX_OTR_MSG_TOP_CSRS + 0x0000000000C8)
#define FXR_TXOTR_MSG_CFG_ACK_REFUSED_RESETCSR				0x0000000000000000ull
#define FXR_TXOTR_MSG_CFG_ACK_REFUSED_UNUSED_63_1_SHIFT			1
#define FXR_TXOTR_MSG_CFG_ACK_REFUSED_UNUSED_63_1_MASK			0x7FFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_CFG_ACK_REFUSED_UNUSED_63_1_SMASK			0xFFFFFFFFFFFFFFFEull
#define FXR_TXOTR_MSG_CFG_ACK_REFUSED_ENABLE_SHIFT			0
#define FXR_TXOTR_MSG_CFG_ACK_REFUSED_ENABLE_MASK			0x1ull
#define FXR_TXOTR_MSG_CFG_ACK_REFUSED_ENABLE_SMASK			0x1ull
/*
* Table #30 of fxr_tx_otr_msg_top_csrs - txotr_msg_cfg_rc_ordered_map
* This CSR contains the mapping of the packet Routing Control (rc[2:0]) field to 
* ordered needed for message ordering. This configuration of this CSR must be 
* identical to the configuration of #%%#Section 29.7.3.52, 'Routing Control 
* Ordered Mapping Configuration CSR'#%%# in the packet CSRs. 
*/
#define FXR_TXOTR_MSG_CFG_RC_ORDERED_MAP				(FXR_TX_OTR_MSG_TOP_CSRS + 0x0000000000D0)
#define FXR_TXOTR_MSG_CFG_RC_ORDERED_MAP_RESETCSR			0x000000000000000Full
#define FXR_TXOTR_MSG_CFG_RC_ORDERED_MAP_ORDERED_SHIFT			0
#define FXR_TXOTR_MSG_CFG_RC_ORDERED_MAP_ORDERED_MASK			0xFFull
#define FXR_TXOTR_MSG_CFG_RC_ORDERED_MAP_ORDERED_SMASK			0xFFull
/*
* Table #31 of fxr_tx_otr_msg_top_csrs - txotr_msg_cfg_buff_eng
* This CSR contains the configuration parameters necessary to configure the 
* Buffer Engine in the Buffer Programmable Engine (BPE).
*/
#define FXR_TXOTR_MSG_CFG_BUFF_ENG					(FXR_TX_OTR_MSG_TOP_CSRS + 0x0000000000D8)
#define FXR_TXOTR_MSG_CFG_BUFF_ENG_RESETCSR				0x0000000000000000ull
#define FXR_TXOTR_MSG_CFG_BUFF_ENG_UNUSED_63_3_SHIFT			3
#define FXR_TXOTR_MSG_CFG_BUFF_ENG_UNUSED_63_3_MASK			0x1FFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_CFG_BUFF_ENG_UNUSED_63_3_SMASK			0xFFFFFFFFFFFFFFF8ull
#define FXR_TXOTR_MSG_CFG_BUFF_ENG_AUTHENTICATION_SUCCESSFUL_SHIFT	2
#define FXR_TXOTR_MSG_CFG_BUFF_ENG_AUTHENTICATION_SUCCESSFUL_MASK	0x1ull
#define FXR_TXOTR_MSG_CFG_BUFF_ENG_AUTHENTICATION_SUCCESSFUL_SMASK	0x4ull
#define FXR_TXOTR_MSG_CFG_BUFF_ENG_AUTHENTICATION_COMPLETE_SHIFT	1
#define FXR_TXOTR_MSG_CFG_BUFF_ENG_AUTHENTICATION_COMPLETE_MASK		0x1ull
#define FXR_TXOTR_MSG_CFG_BUFF_ENG_AUTHENTICATION_COMPLETE_SMASK	0x2ull
#define FXR_TXOTR_MSG_CFG_BUFF_ENG_START_AUTHENTICATION_SHIFT		0
#define FXR_TXOTR_MSG_CFG_BUFF_ENG_START_AUTHENTICATION_MASK		0x1ull
#define FXR_TXOTR_MSG_CFG_BUFF_ENG_START_AUTHENTICATION_SMASK		0x1ull
/*
* Table #32 of fxr_tx_otr_msg_top_csrs - txotr_msg_err_sts_2
* This is the Error Status CSR. Bits are set by hardware or by writing to the 
* #%%#txotr_msg_err_frc_2#%%# CSR. Bits are cleared by writing to the 
* #%%#txotr_msg_err_clr_2#%%# CSR.
*/
#define FXR_TXOTR_MSG_ERR_STS_2						(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000002000)
#define FXR_TXOTR_MSG_ERR_STS_2_RESETCSR				0x0000000000000000ull
#define FXR_TXOTR_MSG_ERR_STS_2_UNUSED_63_21_SHIFT			21
#define FXR_TXOTR_MSG_ERR_STS_2_UNUSED_63_21_MASK			0x7FFFFFFFFFFull
#define FXR_TXOTR_MSG_ERR_STS_2_UNUSED_63_21_SMASK			0xFFFFFFFFFFE00000ull
#define FXR_TXOTR_MSG_ERR_STS_2_MULTICAST_ADDR_SHIFT			20
#define FXR_TXOTR_MSG_ERR_STS_2_MULTICAST_ADDR_MASK			0x1ull
#define FXR_TXOTR_MSG_ERR_STS_2_MULTICAST_ADDR_SMASK			0x100000ull
#define FXR_TXOTR_MSG_ERR_STS_2_CANCELLED_MSG_SHIFT			19
#define FXR_TXOTR_MSG_ERR_STS_2_CANCELLED_MSG_MASK			0x1ull
#define FXR_TXOTR_MSG_ERR_STS_2_CANCELLED_MSG_SMASK			0x80000ull
#define FXR_TXOTR_MSG_ERR_STS_2_RMESSAGE_CMD_SHIFT			18
#define FXR_TXOTR_MSG_ERR_STS_2_RMESSAGE_CMD_MASK			0x1ull
#define FXR_TXOTR_MSG_ERR_STS_2_RMESSAGE_CMD_SMASK			0x40000ull
#define FXR_TXOTR_MSG_ERR_STS_2_UNKNOWN_CMD_SHIFT			17
#define FXR_TXOTR_MSG_ERR_STS_2_UNKNOWN_CMD_MASK			0x1ull
#define FXR_TXOTR_MSG_ERR_STS_2_UNKNOWN_CMD_SMASK			0x20000ull
#define FXR_TXOTR_MSG_ERR_STS_2_INVALID_CMD_SHIFT			16
#define FXR_TXOTR_MSG_ERR_STS_2_INVALID_CMD_MASK			0x1ull
#define FXR_TXOTR_MSG_ERR_STS_2_INVALID_CMD_SMASK			0x10000ull
#define FXR_TXOTR_MSG_ERR_STS_2_BPE_QUEUE_UNF_SHIFT			15
#define FXR_TXOTR_MSG_ERR_STS_2_BPE_QUEUE_UNF_MASK			0x1ull
#define FXR_TXOTR_MSG_ERR_STS_2_BPE_QUEUE_UNF_SMASK			0x8000ull
#define FXR_TXOTR_MSG_ERR_STS_2_BPE_QUEUE_OVF_SHIFT			14
#define FXR_TXOTR_MSG_ERR_STS_2_BPE_QUEUE_OVF_MASK			0x1ull
#define FXR_TXOTR_MSG_ERR_STS_2_BPE_QUEUE_OVF_SMASK			0x4000ull
#define FXR_TXOTR_MSG_ERR_STS_2_MSG_QUEUE_UNF_SHIFT			13
#define FXR_TXOTR_MSG_ERR_STS_2_MSG_QUEUE_UNF_MASK			0x1ull
#define FXR_TXOTR_MSG_ERR_STS_2_MSG_QUEUE_UNF_SMASK			0x2000ull
#define FXR_TXOTR_MSG_ERR_STS_2_MSG_QUEUE_OVF_SHIFT			12
#define FXR_TXOTR_MSG_ERR_STS_2_MSG_QUEUE_OVF_MASK			0x1ull
#define FXR_TXOTR_MSG_ERR_STS_2_MSG_QUEUE_OVF_SMASK			0x1000ull
#define FXR_TXOTR_MSG_ERR_STS_2_CMD_SBE_SHIFT				11
#define FXR_TXOTR_MSG_ERR_STS_2_CMD_SBE_MASK				0x1ull
#define FXR_TXOTR_MSG_ERR_STS_2_CMD_SBE_SMASK				0x800ull
#define FXR_TXOTR_MSG_ERR_STS_2_CMD_MBE_SHIFT				10
#define FXR_TXOTR_MSG_ERR_STS_2_CMD_MBE_MASK				0x1ull
#define FXR_TXOTR_MSG_ERR_STS_2_CMD_MBE_SMASK				0x400ull
#define FXR_TXOTR_MSG_ERR_STS_2_BPE_DATA_MEM_SBE_SHIFT			9
#define FXR_TXOTR_MSG_ERR_STS_2_BPE_DATA_MEM_SBE_MASK			0x1ull
#define FXR_TXOTR_MSG_ERR_STS_2_BPE_DATA_MEM_SBE_SMASK			0x200ull
#define FXR_TXOTR_MSG_ERR_STS_2_BPE_DATA_MEM_MBE_SHIFT			8
#define FXR_TXOTR_MSG_ERR_STS_2_BPE_DATA_MEM_MBE_MASK			0x1ull
#define FXR_TXOTR_MSG_ERR_STS_2_BPE_DATA_MEM_MBE_SMASK			0x100ull
#define FXR_TXOTR_MSG_ERR_STS_2_BPE_PROG_MEM_SBE_SHIFT			7
#define FXR_TXOTR_MSG_ERR_STS_2_BPE_PROG_MEM_SBE_MASK			0x1ull
#define FXR_TXOTR_MSG_ERR_STS_2_BPE_PROG_MEM_SBE_SMASK			0x80ull
#define FXR_TXOTR_MSG_ERR_STS_2_BPE_PROG_MEM_MBE_SHIFT			6
#define FXR_TXOTR_MSG_ERR_STS_2_BPE_PROG_MEM_MBE_MASK			0x1ull
#define FXR_TXOTR_MSG_ERR_STS_2_BPE_PROG_MEM_MBE_SMASK			0x40ull
#define FXR_TXOTR_MSG_ERR_STS_2_MSGID_MEM_SBE_SHIFT			5
#define FXR_TXOTR_MSG_ERR_STS_2_MSGID_MEM_SBE_MASK			0x1ull
#define FXR_TXOTR_MSG_ERR_STS_2_MSGID_MEM_SBE_SMASK			0x20ull
#define FXR_TXOTR_MSG_ERR_STS_2_MSGID_MEM_MBE_SHIFT			4
#define FXR_TXOTR_MSG_ERR_STS_2_MSGID_MEM_MBE_MASK			0x1ull
#define FXR_TXOTR_MSG_ERR_STS_2_MSGID_MEM_MBE_SMASK			0x10ull
#define FXR_TXOTR_MSG_ERR_STS_2_OMB_SBE_SHIFT				3
#define FXR_TXOTR_MSG_ERR_STS_2_OMB_SBE_MASK				0x1ull
#define FXR_TXOTR_MSG_ERR_STS_2_OMB_SBE_SMASK				0x8ull
#define FXR_TXOTR_MSG_ERR_STS_2_OMB_MBE_SHIFT				2
#define FXR_TXOTR_MSG_ERR_STS_2_OMB_MBE_MASK				0x1ull
#define FXR_TXOTR_MSG_ERR_STS_2_OMB_MBE_SMASK				0x4ull
#define FXR_TXOTR_MSG_ERR_STS_2_BPE_FIRMWARE_SHIFT			1
#define FXR_TXOTR_MSG_ERR_STS_2_BPE_FIRMWARE_MASK			0x1ull
#define FXR_TXOTR_MSG_ERR_STS_2_BPE_FIRMWARE_SMASK			0x2ull
#define FXR_TXOTR_MSG_ERR_STS_2_DIAGNOSTIC_SHIFT			0
#define FXR_TXOTR_MSG_ERR_STS_2_DIAGNOSTIC_MASK				0x1ull
#define FXR_TXOTR_MSG_ERR_STS_2_DIAGNOSTIC_SMASK			0x1ull
/*
* Table #33 of fxr_tx_otr_msg_top_csrs - txotr_msg_err_clr_2
* This is the Error Clear CSR. Writing a 1 to a valid bit will clear the 
* corresponding bit in the #%%#txotr_msg_err_sts_2#%%# CSR.
*/
#define FXR_TXOTR_MSG_ERR_CLR_2						(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000002008)
#define FXR_TXOTR_MSG_ERR_CLR_2_RESETCSR				0x0000000000000000ull
#define FXR_TXOTR_MSG_ERR_CLR_2_UNUSED_63_21_SHIFT			21
#define FXR_TXOTR_MSG_ERR_CLR_2_UNUSED_63_21_MASK			0x7FFFFFFFFFFull
#define FXR_TXOTR_MSG_ERR_CLR_2_UNUSED_63_21_SMASK			0xFFFFFFFFFFE00000ull
#define FXR_TXOTR_MSG_ERR_CLR_2_EVENTS_SHIFT				0
#define FXR_TXOTR_MSG_ERR_CLR_2_EVENTS_MASK				0x1FFFFFull
#define FXR_TXOTR_MSG_ERR_CLR_2_EVENTS_SMASK				0x1FFFFFull
/*
* Table #34 of fxr_tx_otr_msg_top_csrs - txotr_msg_err_frc_2
* This is the Error Force CSR. Writing a 1 to a valid bit will set the 
* corresponding bit in the #%%#txotr_msg_err_sts_2#%%# CSR.
*/
#define FXR_TXOTR_MSG_ERR_FRC_2						(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000002010)
#define FXR_TXOTR_MSG_ERR_FRC_2_RESETCSR				0x0000000000000000ull
#define FXR_TXOTR_MSG_ERR_FRC_2_UNUSED_63_21_SHIFT			21
#define FXR_TXOTR_MSG_ERR_FRC_2_UNUSED_63_21_MASK			0x7FFFFFFFFFFull
#define FXR_TXOTR_MSG_ERR_FRC_2_UNUSED_63_21_SMASK			0xFFFFFFFFFFE00000ull
#define FXR_TXOTR_MSG_ERR_FRC_2_EVENTS_SHIFT				0
#define FXR_TXOTR_MSG_ERR_FRC_2_EVENTS_MASK				0x1FFFFFull
#define FXR_TXOTR_MSG_ERR_FRC_2_EVENTS_SMASK				0x1FFFFFull
/*
* Table #35 of fxr_tx_otr_msg_top_csrs - txotr_msg_err_en_host_2
* This is the Error Enable CSR for the Host Interrupt. If a bit is set, the 
* corresponding error bit in #%%#txotr_msg_err_sts_2#%%# CSR causes an interrupt 
* on the HOST interrupt signal.
*/
#define FXR_TXOTR_MSG_ERR_EN_HOST_2					(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000002018)
#define FXR_TXOTR_MSG_ERR_EN_HOST_2_RESETCSR				0x0000000000000000ull
#define FXR_TXOTR_MSG_ERR_EN_HOST_2_UNUSED_63_21_SHIFT			21
#define FXR_TXOTR_MSG_ERR_EN_HOST_2_UNUSED_63_21_MASK			0x7FFFFFFFFFFull
#define FXR_TXOTR_MSG_ERR_EN_HOST_2_UNUSED_63_21_SMASK			0xFFFFFFFFFFE00000ull
#define FXR_TXOTR_MSG_ERR_EN_HOST_2_EVENTS_SHIFT			0
#define FXR_TXOTR_MSG_ERR_EN_HOST_2_EVENTS_MASK				0x1FFFFFull
#define FXR_TXOTR_MSG_ERR_EN_HOST_2_EVENTS_SMASK			0x1FFFFFull
/*
* Table #36 of fxr_tx_otr_msg_top_csrs - txotr_msg_err_first_host_2
* This is the First Error CSR for the Host Interrupt. When this CSR is clear, it 
* captures the next #%%#txotr_msg_err_sts_2#%%# CSR value when a new HOST 
* interrupt occurs.
*/
#define FXR_TXOTR_MSG_ERR_FIRST_HOST_2					(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000002020)
#define FXR_TXOTR_MSG_ERR_FIRST_HOST_2_RESETCSR				0x0000000000000000ull
#define FXR_TXOTR_MSG_ERR_FIRST_HOST_2_UNUSED_63_21_SHIFT		21
#define FXR_TXOTR_MSG_ERR_FIRST_HOST_2_UNUSED_63_21_MASK		0x7FFFFFFFFFFull
#define FXR_TXOTR_MSG_ERR_FIRST_HOST_2_UNUSED_63_21_SMASK		0xFFFFFFFFFFE00000ull
#define FXR_TXOTR_MSG_ERR_FIRST_HOST_2_EVENTS_SHIFT			0
#define FXR_TXOTR_MSG_ERR_FIRST_HOST_2_EVENTS_MASK			0x1FFFFFull
#define FXR_TXOTR_MSG_ERR_FIRST_HOST_2_EVENTS_SMASK			0x1FFFFFull
/*
* Table #37 of fxr_tx_otr_msg_top_csrs - txotr_msg_err_en_bmc_2
* This is the Error Enable CSR for the Quarantine Interrupt. If a bit is set, 
* the corresponding error bit in #%%#txotr_msg_err_sts_2#%%# CSR causes an 
* interrupt on the QUAR interrupt signal.
*/
#define FXR_TXOTR_MSG_ERR_EN_BMC_2					(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000002028)
#define FXR_TXOTR_MSG_ERR_EN_BMC_2_RESETCSR				0x0000000000000000ull
#define FXR_TXOTR_MSG_ERR_EN_BMC_2_UNUSED_63_21_SHIFT			21
#define FXR_TXOTR_MSG_ERR_EN_BMC_2_UNUSED_63_21_MASK			0x7FFFFFFFFFFull
#define FXR_TXOTR_MSG_ERR_EN_BMC_2_UNUSED_63_21_SMASK			0xFFFFFFFFFFE00000ull
#define FXR_TXOTR_MSG_ERR_EN_BMC_2_EVENTS_SHIFT				0
#define FXR_TXOTR_MSG_ERR_EN_BMC_2_EVENTS_MASK				0x1FFFFFull
#define FXR_TXOTR_MSG_ERR_EN_BMC_2_EVENTS_SMASK				0x1FFFFFull
/*
* Table #38 of fxr_tx_otr_msg_top_csrs - txotr_msg_err_first_bmc_2
* This is the First Error CSR for the BMC Interrupt. When this CSR is clear, it 
* captures the next #%%#txotr_msg_err_sts_2#%%# CSR value when a new BMC 
* interrupt occurs.
*/
#define FXR_TXOTR_MSG_ERR_FIRST_BMC_2					(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000002030)
#define FXR_TXOTR_MSG_ERR_FIRST_BMC_2_RESETCSR				0x0000000000000000ull
#define FXR_TXOTR_MSG_ERR_FIRST_BMC_2_UNUSED_63_21_SHIFT		21
#define FXR_TXOTR_MSG_ERR_FIRST_BMC_2_UNUSED_63_21_MASK			0x7FFFFFFFFFFull
#define FXR_TXOTR_MSG_ERR_FIRST_BMC_2_UNUSED_63_21_SMASK		0xFFFFFFFFFFE00000ull
#define FXR_TXOTR_MSG_ERR_FIRST_BMC_2_EVENTS_SHIFT			0
#define FXR_TXOTR_MSG_ERR_FIRST_BMC_2_EVENTS_MASK			0x1FFFFFull
#define FXR_TXOTR_MSG_ERR_FIRST_BMC_2_EVENTS_SMASK			0x1FFFFFull
/*
* Table #39 of fxr_tx_otr_msg_top_csrs - txotr_msg_err_en_quar_2
* This is the Error Enable CSR for the BMC Interrupt. If a bit is set, the 
* corresponding error bit in #%%#txotr_msg_err_sts_2#%%# CSR causes an interrupt 
* on the BMC interrupt signal.
*/
#define FXR_TXOTR_MSG_ERR_EN_QUAR_2					(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000002038)
#define FXR_TXOTR_MSG_ERR_EN_QUAR_2_RESETCSR				0x0000000000000000ull
#define FXR_TXOTR_MSG_ERR_EN_QUAR_2_UNUSED_63_21_SHIFT			21
#define FXR_TXOTR_MSG_ERR_EN_QUAR_2_UNUSED_63_21_MASK			0x7FFFFFFFFFFull
#define FXR_TXOTR_MSG_ERR_EN_QUAR_2_UNUSED_63_21_SMASK			0xFFFFFFFFFFE00000ull
#define FXR_TXOTR_MSG_ERR_EN_QUAR_2_EVENTS_SHIFT			0
#define FXR_TXOTR_MSG_ERR_EN_QUAR_2_EVENTS_MASK				0x1FFFFFull
#define FXR_TXOTR_MSG_ERR_EN_QUAR_2_EVENTS_SMASK			0x1FFFFFull
/*
* Table #40 of fxr_tx_otr_msg_top_csrs - txotr_msg_err_first_quar_2
* This is the First Error CSR for the Quarantine Interrupt. When this CSR is 
* clear, it captures the next #%%#txotr_msg_err_sts_2#%%# CSR value when a new 
* QUAR interrupt occurs.
*/
#define FXR_TXOTR_MSG_ERR_FIRST_QUAR_2					(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000002040)
#define FXR_TXOTR_MSG_ERR_FIRST_QUAR_2_RESETCSR				0x0000000000000000ull
#define FXR_TXOTR_MSG_ERR_FIRST_QUAR_2_UNUSED_63_21_SHIFT		21
#define FXR_TXOTR_MSG_ERR_FIRST_QUAR_2_UNUSED_63_21_MASK		0x7FFFFFFFFFFull
#define FXR_TXOTR_MSG_ERR_FIRST_QUAR_2_UNUSED_63_21_SMASK		0xFFFFFFFFFFE00000ull
#define FXR_TXOTR_MSG_ERR_FIRST_QUAR_2_EVENTS_SHIFT			0
#define FXR_TXOTR_MSG_ERR_FIRST_QUAR_2_EVENTS_MASK			0x1FFFFFull
#define FXR_TXOTR_MSG_ERR_FIRST_QUAR_2_EVENTS_SMASK			0x1FFFFFull
/*
* Table #41 of fxr_tx_otr_msg_top_csrs - txotr_msg_err_info_bpe_firmware
* This is the error information CSR for an error occurring in the firmware of 
* the Buffer Programmable Engine. State in this CSR is updated when 
* #%%#bpe_firmware#%%# error flag is set.
*/
#define FXR_TXOTR_MSG_ERR_INFO_BPE_FIRMWARE				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000002048)
#define FXR_TXOTR_MSG_ERR_INFO_BPE_FIRMWARE_RESETCSR			0x0000000000000000ull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_FIRMWARE_UNUSED_63_48_SHIFT		48
#define FXR_TXOTR_MSG_ERR_INFO_BPE_FIRMWARE_UNUSED_63_48_MASK		0xFFFFull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_FIRMWARE_UNUSED_63_48_SMASK		0xFFFF000000000000ull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_FIRMWARE_PKT_ID_SHIFT		32
#define FXR_TXOTR_MSG_ERR_INFO_BPE_FIRMWARE_PKT_ID_MASK			0xFFFFull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_FIRMWARE_PKT_ID_SMASK		0xFFFF00000000ull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_FIRMWARE_MSG_ID_SHIFT		16
#define FXR_TXOTR_MSG_ERR_INFO_BPE_FIRMWARE_MSG_ID_MASK			0xFFFFull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_FIRMWARE_MSG_ID_SMASK		0xFFFF0000ull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_FIRMWARE_UNUSED_15_13_SHIFT		13
#define FXR_TXOTR_MSG_ERR_INFO_BPE_FIRMWARE_UNUSED_15_13_MASK		0x7ull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_FIRMWARE_UNUSED_15_13_SMASK		0xE000ull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_FIRMWARE_CTXT_SHIFT			8
#define FXR_TXOTR_MSG_ERR_INFO_BPE_FIRMWARE_CTXT_MASK			0x1Full
#define FXR_TXOTR_MSG_ERR_INFO_BPE_FIRMWARE_CTXT_SMASK			0x1F00ull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_FIRMWARE_ENCODING_SHIFT		0
#define FXR_TXOTR_MSG_ERR_INFO_BPE_FIRMWARE_ENCODING_MASK		0xFFull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_FIRMWARE_ENCODING_SMASK		0xFFull
/*
* Table #42 of fxr_tx_otr_msg_top_csrs - txotr_msg_err_info_omb_be
* This is the error information CSR for a bit error occurring in the OMB. State 
* in this CSR is updated when #%%#omb_mbe#%%# or #%%#omb_sbe#%%# error flags are 
* set.
*/
#define FXR_TXOTR_MSG_ERR_INFO_OMB_BE					(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000002050)
#define FXR_TXOTR_MSG_ERR_INFO_OMB_BE_RESETCSR				0x0000000000000000ull
#define FXR_TXOTR_MSG_ERR_INFO_OMB_BE_UNUSED_63_40_SHIFT		40
#define FXR_TXOTR_MSG_ERR_INFO_OMB_BE_UNUSED_63_40_MASK			0xFFFFFFull
#define FXR_TXOTR_MSG_ERR_INFO_OMB_BE_UNUSED_63_40_SMASK		0xFFFFFF0000000000ull
#define FXR_TXOTR_MSG_ERR_INFO_OMB_BE_SBE_SHIFT				32
#define FXR_TXOTR_MSG_ERR_INFO_OMB_BE_SBE_MASK				0xFFull
#define FXR_TXOTR_MSG_ERR_INFO_OMB_BE_SBE_SMASK				0xFF00000000ull
#define FXR_TXOTR_MSG_ERR_INFO_OMB_BE_MBE_SHIFT				24
#define FXR_TXOTR_MSG_ERR_INFO_OMB_BE_MBE_MASK				0xFFull
#define FXR_TXOTR_MSG_ERR_INFO_OMB_BE_MBE_SMASK				0xFF000000ull
#define FXR_TXOTR_MSG_ERR_INFO_OMB_BE_SYNDROME_SHIFT			16
#define FXR_TXOTR_MSG_ERR_INFO_OMB_BE_SYNDROME_MASK			0xFFull
#define FXR_TXOTR_MSG_ERR_INFO_OMB_BE_SYNDROME_SMASK			0xFF0000ull
#define FXR_TXOTR_MSG_ERR_INFO_OMB_BE_MSG_ID_SHIFT			0
#define FXR_TXOTR_MSG_ERR_INFO_OMB_BE_MSG_ID_MASK			0xFFFFull
#define FXR_TXOTR_MSG_ERR_INFO_OMB_BE_MSG_ID_SMASK			0xFFFFull
/*
* Table #43 of fxr_tx_otr_msg_top_csrs - txotr_msg_err_info_msgid_mem_be
* This is the error information CSR for a bit error occurring in the Message ID 
* Memory. State in this CSR is updated when #%%#msgid_mem_mbe#%%# or 
* #%%#msgid_mem_sbe#%%# error flags are set.
*/
#define FXR_TXOTR_MSG_ERR_INFO_MSGID_MEM_BE				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000002058)
#define FXR_TXOTR_MSG_ERR_INFO_MSGID_MEM_BE_RESETCSR			0x0000000000000000ull
#define FXR_TXOTR_MSG_ERR_INFO_MSGID_MEM_BE_UNUSED_63_25_SHIFT		25
#define FXR_TXOTR_MSG_ERR_INFO_MSGID_MEM_BE_UNUSED_63_25_MASK		0x7FFFFFFFFFull
#define FXR_TXOTR_MSG_ERR_INFO_MSGID_MEM_BE_UNUSED_63_25_SMASK		0xFFFFFFFFFE000000ull
#define FXR_TXOTR_MSG_ERR_INFO_MSGID_MEM_BE_MBE_SHIFT			24
#define FXR_TXOTR_MSG_ERR_INFO_MSGID_MEM_BE_MBE_MASK			0x1ull
#define FXR_TXOTR_MSG_ERR_INFO_MSGID_MEM_BE_MBE_SMASK			0x1000000ull
#define FXR_TXOTR_MSG_ERR_INFO_MSGID_MEM_BE_SYNDROME_SHIFT		16
#define FXR_TXOTR_MSG_ERR_INFO_MSGID_MEM_BE_SYNDROME_MASK		0xFFull
#define FXR_TXOTR_MSG_ERR_INFO_MSGID_MEM_BE_SYNDROME_SMASK		0xFF0000ull
#define FXR_TXOTR_MSG_ERR_INFO_MSGID_MEM_BE_UNUSED_15_7_SHIFT		7
#define FXR_TXOTR_MSG_ERR_INFO_MSGID_MEM_BE_UNUSED_15_7_MASK		0x1FFull
#define FXR_TXOTR_MSG_ERR_INFO_MSGID_MEM_BE_UNUSED_15_7_SMASK		0xFF80ull
#define FXR_TXOTR_MSG_ERR_INFO_MSGID_MEM_BE_ADDRESS_SHIFT		0
#define FXR_TXOTR_MSG_ERR_INFO_MSGID_MEM_BE_ADDRESS_MASK		0x7Full
#define FXR_TXOTR_MSG_ERR_INFO_MSGID_MEM_BE_ADDRESS_SMASK		0x7Full
/*
* Table #44 of fxr_tx_otr_msg_top_csrs - txotr_msg_err_info_bpe_prog_mem_be
* This is the error information CSR for a bit error occurring in the BPE Program 
* Memory. State in this CSR is updated when #%%#bpe_prog_mem_mbe#%%# or 
* #%%#bpe_prog_mem_sbe#%%# error flags are set.
*/
#define FXR_TXOTR_MSG_ERR_INFO_BPE_PROG_MEM_BE				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000002060)
#define FXR_TXOTR_MSG_ERR_INFO_BPE_PROG_MEM_BE_RESETCSR			0x0000000000000000ull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_PROG_MEM_BE_UNUSED_63_26_SHIFT	26
#define FXR_TXOTR_MSG_ERR_INFO_BPE_PROG_MEM_BE_UNUSED_63_26_MASK	0x3FFFFFFFFFull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_PROG_MEM_BE_UNUSED_63_26_SMASK	0xFFFFFFFFFC000000ull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_PROG_MEM_BE_SBE_SHIFT		25
#define FXR_TXOTR_MSG_ERR_INFO_BPE_PROG_MEM_BE_SBE_MASK			0x1ull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_PROG_MEM_BE_SBE_SMASK		0x2000000ull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_PROG_MEM_BE_MBE_SHIFT		24
#define FXR_TXOTR_MSG_ERR_INFO_BPE_PROG_MEM_BE_MBE_MASK			0x1ull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_PROG_MEM_BE_MBE_SMASK		0x1000000ull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_PROG_MEM_BE_SYNDROME_SHIFT		16
#define FXR_TXOTR_MSG_ERR_INFO_BPE_PROG_MEM_BE_SYNDROME_MASK		0xFFull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_PROG_MEM_BE_SYNDROME_SMASK		0xFF0000ull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_PROG_MEM_BE_UNUSED_15_14_SHIFT	14
#define FXR_TXOTR_MSG_ERR_INFO_BPE_PROG_MEM_BE_UNUSED_15_14_MASK	0x3ull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_PROG_MEM_BE_UNUSED_15_14_SMASK	0xC000ull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_PROG_MEM_BE_ADDRESS_SHIFT		0
#define FXR_TXOTR_MSG_ERR_INFO_BPE_PROG_MEM_BE_ADDRESS_MASK		0x3FFFull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_PROG_MEM_BE_ADDRESS_SMASK		0x3FFFull
/*
* Table #45 of fxr_tx_otr_msg_top_csrs - txotr_msg_err_info_bpe_data_mem_be
* This is the error information CSR for a bit error occurring in the FPE Data 
* Memory. State in this CSR is updated when #%%#bpe_data_mem_mbe#%%# or 
* #%%#bpe_data_mem_sbe#%%# error flags are set.
*/
#define FXR_TXOTR_MSG_ERR_INFO_BPE_DATA_MEM_BE				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000002068)
#define FXR_TXOTR_MSG_ERR_INFO_BPE_DATA_MEM_BE_RESETCSR			0x0000000000000000ull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_DATA_MEM_BE_UNUSED_63_26_SHIFT	26
#define FXR_TXOTR_MSG_ERR_INFO_BPE_DATA_MEM_BE_UNUSED_63_26_MASK	0x3FFFFFFFFFull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_DATA_MEM_BE_UNUSED_63_26_SMASK	0xFFFFFFFFFC000000ull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_DATA_MEM_BE_SBE_SHIFT		25
#define FXR_TXOTR_MSG_ERR_INFO_BPE_DATA_MEM_BE_SBE_MASK			0x1ull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_DATA_MEM_BE_SBE_SMASK		0x2000000ull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_DATA_MEM_BE_MBE_SHIFT		24
#define FXR_TXOTR_MSG_ERR_INFO_BPE_DATA_MEM_BE_MBE_MASK			0x1ull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_DATA_MEM_BE_MBE_SMASK		0x1000000ull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_DATA_MEM_BE_SYNDROME_SHIFT		16
#define FXR_TXOTR_MSG_ERR_INFO_BPE_DATA_MEM_BE_SYNDROME_MASK		0xFFull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_DATA_MEM_BE_SYNDROME_SMASK		0xFF0000ull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_DATA_MEM_BE_UNUSED_15_10_SHIFT	10
#define FXR_TXOTR_MSG_ERR_INFO_BPE_DATA_MEM_BE_UNUSED_15_10_MASK	0x3Full
#define FXR_TXOTR_MSG_ERR_INFO_BPE_DATA_MEM_BE_UNUSED_15_10_SMASK	0xFC00ull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_DATA_MEM_BE_ADDRESS_SHIFT		0
#define FXR_TXOTR_MSG_ERR_INFO_BPE_DATA_MEM_BE_ADDRESS_MASK		0x3FFull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_DATA_MEM_BE_ADDRESS_SMASK		0x3FFull
/*
* Table #46 of fxr_tx_otr_msg_top_csrs - txotr_msg_err_info_txci_cmd_be
* This is the error information CSR for a bit error occurring in a command from 
* TXCI. State in this CSR is updated when #%%#cmd_mbe#%%# or #%%#cmd_sbe#%%# 
* error flags are set.
*/
#define FXR_TXOTR_MSG_ERR_INFO_TXCI_CMD_BE				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000002070)
#define FXR_TXOTR_MSG_ERR_INFO_TXCI_CMD_BE_RESETCSR			0x0000000000000000ull
#define FXR_TXOTR_MSG_ERR_INFO_TXCI_CMD_BE_UNUSED_63_32_SHIFT		32
#define FXR_TXOTR_MSG_ERR_INFO_TXCI_CMD_BE_UNUSED_63_32_MASK		0xFFFFFFFFull
#define FXR_TXOTR_MSG_ERR_INFO_TXCI_CMD_BE_UNUSED_63_32_SMASK		0xFFFFFFFF00000000ull
#define FXR_TXOTR_MSG_ERR_INFO_TXCI_CMD_BE_SBE_SHIFT			28
#define FXR_TXOTR_MSG_ERR_INFO_TXCI_CMD_BE_SBE_MASK			0xFull
#define FXR_TXOTR_MSG_ERR_INFO_TXCI_CMD_BE_SBE_SMASK			0xF0000000ull
#define FXR_TXOTR_MSG_ERR_INFO_TXCI_CMD_BE_MBE_SHIFT			24
#define FXR_TXOTR_MSG_ERR_INFO_TXCI_CMD_BE_MBE_MASK			0xFull
#define FXR_TXOTR_MSG_ERR_INFO_TXCI_CMD_BE_MBE_SMASK			0xF000000ull
#define FXR_TXOTR_MSG_ERR_INFO_TXCI_CMD_BE_SYNDROME_SHIFT		16
#define FXR_TXOTR_MSG_ERR_INFO_TXCI_CMD_BE_SYNDROME_MASK		0xFFull
#define FXR_TXOTR_MSG_ERR_INFO_TXCI_CMD_BE_SYNDROME_SMASK		0xFF0000ull
#define FXR_TXOTR_MSG_ERR_INFO_TXCI_CMD_BE_TBD_SHIFT			0
#define FXR_TXOTR_MSG_ERR_INFO_TXCI_CMD_BE_TBD_MASK			0xFFFFull
#define FXR_TXOTR_MSG_ERR_INFO_TXCI_CMD_BE_TBD_SMASK			0xFFFFull
/*
* Table #47 of fxr_tx_otr_msg_top_csrs - txotr_msg_err_info_msg_ovf_unf
* This is the error information CSR for a overflow or underflow error occurring 
* in a queue in the tx_otr_msg partition. State in this CSR is updated when 
* #%%#msg_queue_ovf#%%# or #%%#msg_queue_unf#%%# error flags are 
* set.
*/
#define FXR_TXOTR_MSG_ERR_INFO_MSG_OVF_UNF				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000002078)
#define FXR_TXOTR_MSG_ERR_INFO_MSG_OVF_UNF_RESETCSR			0x0000000000000000ull
#define FXR_TXOTR_MSG_ERR_INFO_MSG_OVF_UNF_UNUSED_63_16_SHIFT		16
#define FXR_TXOTR_MSG_ERR_INFO_MSG_OVF_UNF_UNUSED_63_16_MASK		0xFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_ERR_INFO_MSG_OVF_UNF_UNUSED_63_16_SMASK		0xFFFFFFFFFFFF0000ull
#define FXR_TXOTR_MSG_ERR_INFO_MSG_OVF_UNF_UNF_QUEUE_SHIFT		8
#define FXR_TXOTR_MSG_ERR_INFO_MSG_OVF_UNF_UNF_QUEUE_MASK		0xFFull
#define FXR_TXOTR_MSG_ERR_INFO_MSG_OVF_UNF_UNF_QUEUE_SMASK		0xFF00ull
#define FXR_TXOTR_MSG_ERR_INFO_MSG_OVF_UNF_OVF_QUEUE_SHIFT		0
#define FXR_TXOTR_MSG_ERR_INFO_MSG_OVF_UNF_OVF_QUEUE_MASK		0xFFull
#define FXR_TXOTR_MSG_ERR_INFO_MSG_OVF_UNF_OVF_QUEUE_SMASK		0xFFull
/*
* Table #48 of fxr_tx_otr_msg_top_csrs - txotr_msg_err_info_bpe_ovf_unf
* This is the error information CSR for a overflow or underflow error occurring 
* in a queue in the tx_otr_bpe partition. State in this CSR is updated when 
* #%%#bpe_queue_ovf#%%# or #%%#bpe_queue_unf#%%# error flags are 
* set.
*/
#define FXR_TXOTR_MSG_ERR_INFO_BPE_OVF_UNF				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000002080)
#define FXR_TXOTR_MSG_ERR_INFO_BPE_OVF_UNF_RESETCSR			0x0000000000000000ull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_OVF_UNF_UNUSED_63_16_SHIFT		16
#define FXR_TXOTR_MSG_ERR_INFO_BPE_OVF_UNF_UNUSED_63_16_MASK		0xFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_OVF_UNF_UNUSED_63_16_SMASK		0xFFFFFFFFFFFF0000ull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_OVF_UNF_UNF_QUEUE_SHIFT		8
#define FXR_TXOTR_MSG_ERR_INFO_BPE_OVF_UNF_UNF_QUEUE_MASK		0xFFull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_OVF_UNF_UNF_QUEUE_SMASK		0xFF00ull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_OVF_UNF_OVF_QUEUE_SHIFT		0
#define FXR_TXOTR_MSG_ERR_INFO_BPE_OVF_UNF_OVF_QUEUE_MASK		0xFFull
#define FXR_TXOTR_MSG_ERR_INFO_BPE_OVF_UNF_OVF_QUEUE_SMASK		0xFFull
/*
* Table #49 of fxr_tx_otr_msg_top_csrs - txotr_msg_err_info_invalid_cmd
* This is the error information CSR for an invalid or malformed command received 
* from TXCI. State in this CSR is updated when #%%#invalid_cmd#%%# error flag is 
* set.
*/
#define FXR_TXOTR_MSG_ERR_INFO_INVALID_CMD				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000002088)
#define FXR_TXOTR_MSG_ERR_INFO_INVALID_CMD_RESETCSR			0x0000000000000000ull
#define FXR_TXOTR_MSG_ERR_INFO_INVALID_CMD_UNUSED_63_20_SHIFT		20
#define FXR_TXOTR_MSG_ERR_INFO_INVALID_CMD_UNUSED_63_20_MASK		0xFFFFFFFFFFFull
#define FXR_TXOTR_MSG_ERR_INFO_INVALID_CMD_UNUSED_63_20_SMASK		0xFFFFFFFFFFF00000ull
#define FXR_TXOTR_MSG_ERR_INFO_INVALID_CMD_TBD_SHIFT			4
#define FXR_TXOTR_MSG_ERR_INFO_INVALID_CMD_TBD_MASK			0xFFFFull
#define FXR_TXOTR_MSG_ERR_INFO_INVALID_CMD_TBD_SMASK			0xFFFF0ull
#define FXR_TXOTR_MSG_ERR_INFO_INVALID_CMD_ENCODING_SHIFT		0
#define FXR_TXOTR_MSG_ERR_INFO_INVALID_CMD_ENCODING_MASK		0xFull
#define FXR_TXOTR_MSG_ERR_INFO_INVALID_CMD_ENCODING_SMASK		0xFull
/*
* Table #50 of fxr_tx_otr_msg_top_csrs - txotr_msg_err_info_unknown_cmd
* This is the error information CSR for an unknown command received from TXCI. 
* State in this CSR is updated when #%%#unknown_cmd#%%# error flag is 
* set.
*/
#define FXR_TXOTR_MSG_ERR_INFO_UNKNOWN_CMD				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000002090)
#define FXR_TXOTR_MSG_ERR_INFO_UNKNOWN_CMD_RESETCSR			0x0000000000000000ull
#define FXR_TXOTR_MSG_ERR_INFO_UNKNOWN_CMD_UNUSED_63_13_SHIFT		13
#define FXR_TXOTR_MSG_ERR_INFO_UNKNOWN_CMD_UNUSED_63_13_MASK		0x7FFFFFFFFFFFFull
#define FXR_TXOTR_MSG_ERR_INFO_UNKNOWN_CMD_UNUSED_63_13_SMASK		0xFFFFFFFFFFFFE000ull
#define FXR_TXOTR_MSG_ERR_INFO_UNKNOWN_CMD_IOVEC_SHIFT			12
#define FXR_TXOTR_MSG_ERR_INFO_UNKNOWN_CMD_IOVEC_MASK			0x1ull
#define FXR_TXOTR_MSG_ERR_INFO_UNKNOWN_CMD_IOVEC_SMASK			0x1000ull
#define FXR_TXOTR_MSG_ERR_INFO_UNKNOWN_CMD_UNUSED_11_SHIFT		11
#define FXR_TXOTR_MSG_ERR_INFO_UNKNOWN_CMD_UNUSED_11_MASK		0x1ull
#define FXR_TXOTR_MSG_ERR_INFO_UNKNOWN_CMD_UNUSED_11_SMASK		0x800ull
#define FXR_TXOTR_MSG_ERR_INFO_UNKNOWN_CMD_CMD_SHIFT			4
#define FXR_TXOTR_MSG_ERR_INFO_UNKNOWN_CMD_CMD_MASK			0x7Full
#define FXR_TXOTR_MSG_ERR_INFO_UNKNOWN_CMD_CMD_SMASK			0x7F0ull
#define FXR_TXOTR_MSG_ERR_INFO_UNKNOWN_CMD_CTYPE_SHIFT			0
#define FXR_TXOTR_MSG_ERR_INFO_UNKNOWN_CMD_CTYPE_MASK			0xFull
#define FXR_TXOTR_MSG_ERR_INFO_UNKNOWN_CMD_CTYPE_SMASK			0xFull
/*
* Table #51 of fxr_tx_otr_msg_top_csrs - txotr_msg_err_info_rmessage_cmd
* This is the error information CSR for an unexpected Rendezvous Message 
* (RMessage) command from TXCI. State in this CSR is updated when 
* #%%#rmessage_cmd#%%# error flag is set.
*/
#define FXR_TXOTR_MSG_ERR_INFO_RMESSAGE_CMD				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000002098)
#define FXR_TXOTR_MSG_ERR_INFO_RMESSAGE_CMD_RESETCSR			0x0000000000000000ull
#define FXR_TXOTR_MSG_ERR_INFO_RMESSAGE_CMD_UNUSED_63_16_SHIFT		16
#define FXR_TXOTR_MSG_ERR_INFO_RMESSAGE_CMD_UNUSED_63_16_MASK		0xFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_ERR_INFO_RMESSAGE_CMD_UNUSED_63_16_SMASK		0xFFFFFFFFFFFF0000ull
#define FXR_TXOTR_MSG_ERR_INFO_RMESSAGE_CMD_TBD_SHIFT			0
#define FXR_TXOTR_MSG_ERR_INFO_RMESSAGE_CMD_TBD_MASK			0xFFFFull
#define FXR_TXOTR_MSG_ERR_INFO_RMESSAGE_CMD_TBD_SMASK			0xFFFFull
/*
* Table #52 of fxr_tx_otr_msg_top_csrs - txotr_msg_err_info_cancelled_msg
* This is the error information CSR for the four most recent canceled messages 
* in the OMB. State in this CSR is updated when #%%#cancelled_msg#%%# error flag 
* is set.
*/
#define FXR_TXOTR_MSG_ERR_INFO_CANCELLED_MSG				(FXR_TX_OTR_MSG_TOP_CSRS + 0x0000000020A0)
#define FXR_TXOTR_MSG_ERR_INFO_CANCELLED_MSG_RESETCSR			0x0000000000000000ull
#define FXR_TXOTR_MSG_ERR_INFO_CANCELLED_MSG_MSG_ID3_SHIFT		48
#define FXR_TXOTR_MSG_ERR_INFO_CANCELLED_MSG_MSG_ID3_MASK		0xFFFFull
#define FXR_TXOTR_MSG_ERR_INFO_CANCELLED_MSG_MSG_ID3_SMASK		0xFFFF000000000000ull
#define FXR_TXOTR_MSG_ERR_INFO_CANCELLED_MSG_MSG_ID2_SHIFT		32
#define FXR_TXOTR_MSG_ERR_INFO_CANCELLED_MSG_MSG_ID2_MASK		0xFFFFull
#define FXR_TXOTR_MSG_ERR_INFO_CANCELLED_MSG_MSG_ID2_SMASK		0xFFFF00000000ull
#define FXR_TXOTR_MSG_ERR_INFO_CANCELLED_MSG_MSG_ID1_SHIFT		16
#define FXR_TXOTR_MSG_ERR_INFO_CANCELLED_MSG_MSG_ID1_MASK		0xFFFFull
#define FXR_TXOTR_MSG_ERR_INFO_CANCELLED_MSG_MSG_ID1_SMASK		0xFFFF0000ull
#define FXR_TXOTR_MSG_ERR_INFO_CANCELLED_MSG_MSG_ID0_SHIFT		0
#define FXR_TXOTR_MSG_ERR_INFO_CANCELLED_MSG_MSG_ID0_MASK		0xFFFFull
#define FXR_TXOTR_MSG_ERR_INFO_CANCELLED_MSG_MSG_ID0_SMASK		0xFFFFull
/*
* Table #53 of fxr_tx_otr_msg_top_csrs - txotr_msg_err_info_multicast_addr
* This is the error information CSR for a Portals command which targets a 
* multicast address range. State in this CSR is updated when #%%#multicast_addr#%%# 
* error flag is set.
*/
#define FXR_TXOTR_MSG_ERR_INFO_MULTICAST_ADDR				(FXR_TX_OTR_MSG_TOP_CSRS + 0x0000000020A8)
#define FXR_TXOTR_MSG_ERR_INFO_MULTICAST_ADDR_RESETCSR			0x0000000000000000ull
#define FXR_TXOTR_MSG_ERR_INFO_MULTICAST_ADDR_TBD_SHIFT			0
#define FXR_TXOTR_MSG_ERR_INFO_MULTICAST_ADDR_TBD_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_ERR_INFO_MULTICAST_ADDR_TBD_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #54 of fxr_tx_otr_msg_top_csrs - txotr_msg_dbg_omb_access
* This CSR grants read and write access to the Outstanding Message Buffer 
* (OMB).
*/
#define FXR_TXOTR_MSG_DBG_OMB_ACCESS					(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000006000)
#define FXR_TXOTR_MSG_DBG_OMB_ACCESS_RESETCSR				0x0080000000000000ull
#define FXR_TXOTR_MSG_DBG_OMB_ACCESS_VALID_SHIFT			63
#define FXR_TXOTR_MSG_DBG_OMB_ACCESS_VALID_MASK				0x1ull
#define FXR_TXOTR_MSG_DBG_OMB_ACCESS_VALID_SMASK			0x8000000000000000ull
#define FXR_TXOTR_MSG_DBG_OMB_ACCESS_WRITE_SHIFT			62
#define FXR_TXOTR_MSG_DBG_OMB_ACCESS_WRITE_MASK				0x1ull
#define FXR_TXOTR_MSG_DBG_OMB_ACCESS_WRITE_SMASK			0x4000000000000000ull
#define FXR_TXOTR_MSG_DBG_OMB_ACCESS_ECC_SHIFT				61
#define FXR_TXOTR_MSG_DBG_OMB_ACCESS_ECC_MASK				0x1ull
#define FXR_TXOTR_MSG_DBG_OMB_ACCESS_ECC_SMASK				0x2000000000000000ull
#define FXR_TXOTR_MSG_DBG_OMB_ACCESS_PAYLOAD_REGS_SHIFT			52
#define FXR_TXOTR_MSG_DBG_OMB_ACCESS_PAYLOAD_REGS_MASK			0xFFull
#define FXR_TXOTR_MSG_DBG_OMB_ACCESS_PAYLOAD_REGS_SMASK			0xFF0000000000000ull
#define FXR_TXOTR_MSG_DBG_OMB_ACCESS_ADDRESS_SHIFT			0
#define FXR_TXOTR_MSG_DBG_OMB_ACCESS_ADDRESS_MASK			0xFFFFull
#define FXR_TXOTR_MSG_DBG_OMB_ACCESS_ADDRESS_SMASK			0xFFFFull
/*
* Table #55 of fxr_tx_otr_msg_top_csrs - txotr_msg_dbg_omb_payload0
* This CSR is the payload register related to #%%#Section 29.8.3.51, 
* 'Outstanding Message Buffer Access Debug CSR'#%%# for bits 63:0 of the buffer 
* entry.
*/
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD0					(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000006008)
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD0_RESETCSR				0x0000000000000000ull
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD0_DATA_SHIFT			0
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD0_DATA_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD0_DATA_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #56 of fxr_tx_otr_msg_top_csrs - txotr_msg_dbg_omb_payload1
* This CSR is the payload register related to #%%#Section 29.8.3.51, 
* 'Outstanding Message Buffer Access Debug CSR'#%%# for bits 127:64 of the 
* buffer entry.
*/
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD1					(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000006010)
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD1_RESETCSR				0x0000000000000000ull
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD1_DATA_SHIFT			0
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD1_DATA_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD1_DATA_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #57 of fxr_tx_otr_msg_top_csrs - txotr_msg_dbg_omb_payload2
* This CSR is the payload register related to #%%#Section 29.8.3.51, 
* 'Outstanding Message Buffer Access Debug CSR'#%%# for bits 191:128 of the 
* buffer entry.
*/
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD2					(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000006018)
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD2_RESETCSR				0x0000000000000000ull
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD2_DATA_SHIFT			0
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD2_DATA_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD2_DATA_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #58 of fxr_tx_otr_msg_top_csrs - txotr_msg_dbg_omb_payload3
* This CSR is the payload register related to #%%#Section 29.8.3.51, 
* 'Outstanding Message Buffer Access Debug CSR'#%%# for bits 255:192 of the 
* buffer entry.
*/
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD3					(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000006020)
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD3_RESETCSR				0x0000000000000000ull
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD3_DATA_SHIFT			0
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD3_DATA_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD3_DATA_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #59 of fxr_tx_otr_msg_top_csrs - txotr_msg_dbg_omb_payload4
* This CSR is the payload register related to #%%#Section 29.8.3.51, 
* 'Outstanding Message Buffer Access Debug CSR'#%%# for bits 319:256 of the 
* buffer entry.
*/
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD4					(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000006028)
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD4_RESETCSR				0x0000000000000000ull
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD4_DATA_SHIFT			0
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD4_DATA_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD4_DATA_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #60 of fxr_tx_otr_msg_top_csrs - txotr_msg_dbg_omb_payload5
* This CSR is the payload register related to #%%#Section 29.8.3.51, 
* 'Outstanding Message Buffer Access Debug CSR'#%%# for bits 383:320 of the 
* buffer entry.
*/
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD5					(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000006030)
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD5_RESETCSR				0x0000000000000000ull
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD5_DATA_SHIFT			0
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD5_DATA_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD5_DATA_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #61 of fxr_tx_otr_msg_top_csrs - txotr_msg_dbg_omb_payload6
* This CSR is the payload register related to #%%#Section 29.8.3.51, 
* 'Outstanding Message Buffer Access Debug CSR'#%%# for bits 447:384 of the 
* buffer entry.
*/
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD6					(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000006038)
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD6_RESETCSR				0x0000000000000000ull
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD6_DATA_SHIFT			0
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD6_DATA_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD6_DATA_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #62 of fxr_tx_otr_msg_top_csrs - txotr_msg_dbg_omb_payload7
* This CSR is the payload register related to #%%#Section 29.8.3.51, 
* 'Outstanding Message Buffer Access Debug CSR'#%%# for bits 511:448 of the 
* buffer entry.
*/
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD7					(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000006040)
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD7_RESETCSR				0x0000000000000000ull
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD7_DATA_SHIFT			0
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD7_DATA_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_DBG_OMB_PAYLOAD7_DATA_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #63 of fxr_tx_otr_msg_top_csrs - txotr_msg_dbg_msgid_memory
* This CSR is used to read and write the OTR's MSG_ID Memory.
*/
#define FXR_TXOTR_MSG_DBG_MSGID_MEMORY					(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000006050)
#define FXR_TXOTR_MSG_DBG_MSGID_MEMORY_RESETCSR				0x0000000000000000ull
#define FXR_TXOTR_MSG_DBG_MSGID_MEMORY_DATA_SHIFT			0
#define FXR_TXOTR_MSG_DBG_MSGID_MEMORY_DATA_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_DBG_MSGID_MEMORY_DATA_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #64 of fxr_tx_otr_msg_top_csrs - txotr_msg_dbg_bpe_prog_mem_access
* This CSR grants read and write access to the BPE Program Memory.
*/
#define FXR_TXOTR_MSG_DBG_BPE_PROG_MEM_ACCESS				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000006650)
#define FXR_TXOTR_MSG_DBG_BPE_PROG_MEM_ACCESS_RESETCSR			0x0010000000000000ull
#define FXR_TXOTR_MSG_DBG_BPE_PROG_MEM_ACCESS_VALID_SHIFT		63
#define FXR_TXOTR_MSG_DBG_BPE_PROG_MEM_ACCESS_VALID_MASK		0x1ull
#define FXR_TXOTR_MSG_DBG_BPE_PROG_MEM_ACCESS_VALID_SMASK		0x8000000000000000ull
#define FXR_TXOTR_MSG_DBG_BPE_PROG_MEM_ACCESS_WRITE_SHIFT		62
#define FXR_TXOTR_MSG_DBG_BPE_PROG_MEM_ACCESS_WRITE_MASK		0x1ull
#define FXR_TXOTR_MSG_DBG_BPE_PROG_MEM_ACCESS_WRITE_SMASK		0x4000000000000000ull
#define FXR_TXOTR_MSG_DBG_BPE_PROG_MEM_ACCESS_ECC_SHIFT			61
#define FXR_TXOTR_MSG_DBG_BPE_PROG_MEM_ACCESS_ECC_MASK			0x1ull
#define FXR_TXOTR_MSG_DBG_BPE_PROG_MEM_ACCESS_ECC_SMASK			0x2000000000000000ull
#define FXR_TXOTR_MSG_DBG_BPE_PROG_MEM_ACCESS_PAYLOAD_REGS_SHIFT	52
#define FXR_TXOTR_MSG_DBG_BPE_PROG_MEM_ACCESS_PAYLOAD_REGS_MASK		0xFFull
#define FXR_TXOTR_MSG_DBG_BPE_PROG_MEM_ACCESS_PAYLOAD_REGS_SMASK	0xFF0000000000000ull
#define FXR_TXOTR_MSG_DBG_BPE_PROG_MEM_ACCESS_ADDRESS_SHIFT		0
#define FXR_TXOTR_MSG_DBG_BPE_PROG_MEM_ACCESS_ADDRESS_MASK		0x3FFFull
#define FXR_TXOTR_MSG_DBG_BPE_PROG_MEM_ACCESS_ADDRESS_SMASK		0x3FFFull
/*
* Table #65 of fxr_tx_otr_msg_top_csrs - txotr_msg_dbg_bpe_prog_mem_payload0
* This CSR is the payload register related to #%%#Section 29.8.3.61, 'BPE 
* Program Memory Access Debug CSR'#%%# for bits 31:0 of the buffer 
* entry.
*/
#define FXR_TXOTR_MSG_DBG_BPE_PROG_MEM_PAYLOAD0				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000006658)
#define FXR_TXOTR_MSG_DBG_BPE_PROG_MEM_PAYLOAD0_RESETCSR		0x0000000000000000ull
#define FXR_TXOTR_MSG_DBG_BPE_PROG_MEM_PAYLOAD0_UNUSED_63_32_SHIFT	32
#define FXR_TXOTR_MSG_DBG_BPE_PROG_MEM_PAYLOAD0_UNUSED_63_32_MASK	0xFFFFFFFFull
#define FXR_TXOTR_MSG_DBG_BPE_PROG_MEM_PAYLOAD0_UNUSED_63_32_SMASK	0xFFFFFFFF00000000ull
#define FXR_TXOTR_MSG_DBG_BPE_PROG_MEM_PAYLOAD0_DATA_SHIFT		0
#define FXR_TXOTR_MSG_DBG_BPE_PROG_MEM_PAYLOAD0_DATA_MASK		0xFFFFFFFFull
#define FXR_TXOTR_MSG_DBG_BPE_PROG_MEM_PAYLOAD0_DATA_SMASK		0xFFFFFFFFull
/*
* Table #66 of fxr_tx_otr_msg_top_csrs - txotr_msg_dbg_bpe_data_mem_access
* This CSR grants read and write access to the BPE Data Memory.
*/
#define FXR_TXOTR_MSG_DBG_BPE_DATA_MEM_ACCESS				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000006660)
#define FXR_TXOTR_MSG_DBG_BPE_DATA_MEM_ACCESS_RESETCSR			0x0010000000000000ull
#define FXR_TXOTR_MSG_DBG_BPE_DATA_MEM_ACCESS_VALID_SHIFT		63
#define FXR_TXOTR_MSG_DBG_BPE_DATA_MEM_ACCESS_VALID_MASK		0x1ull
#define FXR_TXOTR_MSG_DBG_BPE_DATA_MEM_ACCESS_VALID_SMASK		0x8000000000000000ull
#define FXR_TXOTR_MSG_DBG_BPE_DATA_MEM_ACCESS_WRITE_SHIFT		62
#define FXR_TXOTR_MSG_DBG_BPE_DATA_MEM_ACCESS_WRITE_MASK		0x1ull
#define FXR_TXOTR_MSG_DBG_BPE_DATA_MEM_ACCESS_WRITE_SMASK		0x4000000000000000ull
#define FXR_TXOTR_MSG_DBG_BPE_DATA_MEM_ACCESS_ECC_SHIFT			61
#define FXR_TXOTR_MSG_DBG_BPE_DATA_MEM_ACCESS_ECC_MASK			0x1ull
#define FXR_TXOTR_MSG_DBG_BPE_DATA_MEM_ACCESS_ECC_SMASK			0x2000000000000000ull
#define FXR_TXOTR_MSG_DBG_BPE_DATA_MEM_ACCESS_PAYLOAD_REGS_SHIFT	52
#define FXR_TXOTR_MSG_DBG_BPE_DATA_MEM_ACCESS_PAYLOAD_REGS_MASK		0xFFull
#define FXR_TXOTR_MSG_DBG_BPE_DATA_MEM_ACCESS_PAYLOAD_REGS_SMASK	0xFF0000000000000ull
#define FXR_TXOTR_MSG_DBG_BPE_DATA_MEM_ACCESS_ADDRESS_SHIFT		0
#define FXR_TXOTR_MSG_DBG_BPE_DATA_MEM_ACCESS_ADDRESS_MASK		0x3FFull
#define FXR_TXOTR_MSG_DBG_BPE_DATA_MEM_ACCESS_ADDRESS_SMASK		0x3FFull
/*
* Table #67 of fxr_tx_otr_msg_top_csrs - txotr_msg_dbg_bpe_data_mem_payload0
* This CSR is the payload register related to #%%#Section 29.8.3.63, 'BPE Data 
* Memory Access Debug CSR'#%%# for bits 63:0 of the buffer entry.
*/
#define FXR_TXOTR_MSG_DBG_BPE_DATA_MEM_PAYLOAD0				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000006668)
#define FXR_TXOTR_MSG_DBG_BPE_DATA_MEM_PAYLOAD0_RESETCSR		0x0000000000000000ull
#define FXR_TXOTR_MSG_DBG_BPE_DATA_MEM_PAYLOAD0_DATA_SHIFT		0
#define FXR_TXOTR_MSG_DBG_BPE_DATA_MEM_PAYLOAD0_DATA_MASK		0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_DBG_BPE_DATA_MEM_PAYLOAD0_DATA_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #68 of fxr_tx_otr_msg_top_csrs - txotr_msg_dbg_bpe_context_available_reg
* This CSR reads the context-available registers of the BPE. 
*/
#define FXR_TXOTR_MSG_DBG_BPE_CONTEXT_AVAILABLE_REG			(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000006670)
#define FXR_TXOTR_MSG_DBG_BPE_CONTEXT_AVAILABLE_REG_RESETCSR		0x0000000000000000ull
#define FXR_TXOTR_MSG_DBG_BPE_CONTEXT_AVAILABLE_REG_UNUSED_63_16_SHIFT	16
#define FXR_TXOTR_MSG_DBG_BPE_CONTEXT_AVAILABLE_REG_UNUSED_63_16_MASK	0xFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_DBG_BPE_CONTEXT_AVAILABLE_REG_UNUSED_63_16_SMASK	0xFFFFFFFFFFFF0000ull
#define FXR_TXOTR_MSG_DBG_BPE_CONTEXT_AVAILABLE_REG_NACK_SHIFT		12
#define FXR_TXOTR_MSG_DBG_BPE_CONTEXT_AVAILABLE_REG_NACK_MASK		0xFull
#define FXR_TXOTR_MSG_DBG_BPE_CONTEXT_AVAILABLE_REG_NACK_SMASK		0xF000ull
#define FXR_TXOTR_MSG_DBG_BPE_CONTEXT_AVAILABLE_REG_TIMEOUT_SHIFT	4
#define FXR_TXOTR_MSG_DBG_BPE_CONTEXT_AVAILABLE_REG_TIMEOUT_MASK	0xFFull
#define FXR_TXOTR_MSG_DBG_BPE_CONTEXT_AVAILABLE_REG_TIMEOUT_SMASK	0xFF0ull
#define FXR_TXOTR_MSG_DBG_BPE_CONTEXT_AVAILABLE_REG_CTS_SHIFT		0
#define FXR_TXOTR_MSG_DBG_BPE_CONTEXT_AVAILABLE_REG_CTS_MASK		0xFull
#define FXR_TXOTR_MSG_DBG_BPE_CONTEXT_AVAILABLE_REG_CTS_SMASK		0xFull
/*
* Table #69 of fxr_tx_otr_msg_top_csrs - txotr_msg_dbg_omb_msg_count
* This CSR tracks the number of messages received in the OMB input queues from 
* TXCI. 
*/
#define FXR_TXOTR_MSG_DBG_OMB_MSG_COUNT					(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000006680)
#define FXR_TXOTR_MSG_DBG_OMB_MSG_COUNT_RESETCSR			0x0000000000000000ull
#define FXR_TXOTR_MSG_DBG_OMB_MSG_COUNT_COUNT_SHIFT			0
#define FXR_TXOTR_MSG_DBG_OMB_MSG_COUNT_COUNT_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_DBG_OMB_MSG_COUNT_COUNT_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #70 of fxr_tx_otr_msg_top_csrs - txotr_msg_dbg_omb_rendez_msg_count
* This CSR tracks the total number of messages received in the OMB Rendezvous 
* input queues from BPE. 
*/
#define FXR_TXOTR_MSG_DBG_OMB_RENDEZ_MSG_COUNT				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000006820)
#define FXR_TXOTR_MSG_DBG_OMB_RENDEZ_MSG_COUNT_RESETCSR			0x0000000000000000ull
#define FXR_TXOTR_MSG_DBG_OMB_RENDEZ_MSG_COUNT_COUNT_SHIFT		0
#define FXR_TXOTR_MSG_DBG_OMB_RENDEZ_MSG_COUNT_COUNT_MASK		0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_DBG_OMB_RENDEZ_MSG_COUNT_COUNT_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #71 of fxr_tx_otr_msg_top_csrs - txotr_msg_dbg_omb_reply_pkt_count
* This CSR counts the total number of reply packets received from packet-level 
* partition.
*/
#define FXR_TXOTR_MSG_DBG_OMB_REPLY_PKT_COUNT				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000006860)
#define FXR_TXOTR_MSG_DBG_OMB_REPLY_PKT_COUNT_RESETCSR			0x0000000000000000ull
#define FXR_TXOTR_MSG_DBG_OMB_REPLY_PKT_COUNT_COUNT_SHIFT		0
#define FXR_TXOTR_MSG_DBG_OMB_REPLY_PKT_COUNT_COUNT_MASK		0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_DBG_OMB_REPLY_PKT_COUNT_COUNT_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #72 of fxr_tx_otr_msg_top_csrs - txotr_msg_dbg_rxdma_cmd_count
* This CSR counts the total number of commands sent to RXDMA.
*/
#define FXR_TXOTR_MSG_DBG_RXDMA_CMD_COUNT				(FXR_TX_OTR_MSG_TOP_CSRS + 0x0000000068A0)
#define FXR_TXOTR_MSG_DBG_RXDMA_CMD_COUNT_RESETCSR			0x0000000000000000ull
#define FXR_TXOTR_MSG_DBG_RXDMA_CMD_COUNT_COUNT_SHIFT			0
#define FXR_TXOTR_MSG_DBG_RXDMA_CMD_COUNT_COUNT_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_DBG_RXDMA_CMD_COUNT_COUNT_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #73 of fxr_tx_otr_msg_top_csrs - txotr_msg_dbg_cts_list_pointers0
* This CSR shows the current values of the CTS Pending List pointers for 
* TC0.
*/
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS0				(FXR_TX_OTR_MSG_TOP_CSRS + 0x0000000068E0)
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS0_RESETCSR			0x0000000000000000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS0_UNUSED_63_62_SHIFT		62
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS0_UNUSED_63_62_MASK		0x3ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS0_UNUSED_63_62_SMASK		0xC000000000000000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS0_DELAY_TAIL_SHIFT		48
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS0_DELAY_TAIL_MASK		0x3FFFull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS0_DELAY_TAIL_SMASK		0x3FFF000000000000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS0_UNUSED_47_46_SHIFT		46
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS0_UNUSED_47_46_MASK		0x3ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS0_UNUSED_47_46_SMASK		0xC00000000000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS0_DELAY_HEAD_SHIFT		32
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS0_DELAY_HEAD_MASK		0x3FFFull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS0_DELAY_HEAD_SMASK		0x3FFF00000000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS0_UNUSED_31_30_SHIFT		30
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS0_UNUSED_31_30_MASK		0x3ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS0_UNUSED_31_30_SMASK		0xC0000000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS0_IMM_TAIL_SHIFT		16
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS0_IMM_TAIL_MASK		0x3FFFull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS0_IMM_TAIL_SMASK		0x3FFF0000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS0_UNUSED_15_14_SHIFT		14
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS0_UNUSED_15_14_MASK		0x3ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS0_UNUSED_15_14_SMASK		0xC000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS0_IMM_HEAD_SHIFT		0
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS0_IMM_HEAD_MASK		0x3FFFull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS0_IMM_HEAD_SMASK		0x3FFFull
/*
* Table #74 of fxr_tx_otr_msg_top_csrs - txotr_msg_dbg_cts_list_pointers1
* This CSR shows the current values of the CTS Pending List pointers for 
* TC1.
*/
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS1				(FXR_TX_OTR_MSG_TOP_CSRS + 0x0000000068E8)
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS1_RESETCSR			0x0000000000000000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS1_UNUSED_63_62_SHIFT		62
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS1_UNUSED_63_62_MASK		0x3ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS1_UNUSED_63_62_SMASK		0xC000000000000000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS1_DELAY_TAIL_SHIFT		48
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS1_DELAY_TAIL_MASK		0x3FFFull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS1_DELAY_TAIL_SMASK		0x3FFF000000000000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS1_UNUSED_47_46_SHIFT		46
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS1_UNUSED_47_46_MASK		0x3ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS1_UNUSED_47_46_SMASK		0xC00000000000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS1_DELAY_HEAD_SHIFT		32
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS1_DELAY_HEAD_MASK		0x3FFFull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS1_DELAY_HEAD_SMASK		0x3FFF00000000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS1_UNUSED_31_30_SHIFT		30
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS1_UNUSED_31_30_MASK		0x3ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS1_UNUSED_31_30_SMASK		0xC0000000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS1_IMM_TAIL_SHIFT		16
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS1_IMM_TAIL_MASK		0x3FFFull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS1_IMM_TAIL_SMASK		0x3FFF0000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS1_UNUSED_15_14_SHIFT		14
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS1_UNUSED_15_14_MASK		0x3ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS1_UNUSED_15_14_SMASK		0xC000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS1_IMM_HEAD_SHIFT		0
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS1_IMM_HEAD_MASK		0x3FFFull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS1_IMM_HEAD_SMASK		0x3FFFull
/*
* Table #75 of fxr_tx_otr_msg_top_csrs - txotr_msg_dbg_cts_list_pointers2
* This CSR shows the current values of the CTS Pending List pointers for 
* TC2.
*/
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS2				(FXR_TX_OTR_MSG_TOP_CSRS + 0x0000000068F0)
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS2_RESETCSR			0x0000000000000000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS2_UNUSED_63_62_SHIFT		62
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS2_UNUSED_63_62_MASK		0x3ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS2_UNUSED_63_62_SMASK		0xC000000000000000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS2_DELAY_TAIL_SHIFT		48
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS2_DELAY_TAIL_MASK		0x3FFFull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS2_DELAY_TAIL_SMASK		0x3FFF000000000000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS2_UNUSED_47_46_SHIFT		46
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS2_UNUSED_47_46_MASK		0x3ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS2_UNUSED_47_46_SMASK		0xC00000000000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS2_DELAY_HEAD_SHIFT		32
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS2_DELAY_HEAD_MASK		0x3FFFull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS2_DELAY_HEAD_SMASK		0x3FFF00000000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS2_UNUSED_31_30_SHIFT		30
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS2_UNUSED_31_30_MASK		0x3ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS2_UNUSED_31_30_SMASK		0xC0000000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS2_IMM_TAIL_SHIFT		16
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS2_IMM_TAIL_MASK		0x3FFFull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS2_IMM_TAIL_SMASK		0x3FFF0000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS2_UNUSED_15_14_SHIFT		14
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS2_UNUSED_15_14_MASK		0x3ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS2_UNUSED_15_14_SMASK		0xC000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS2_IMM_HEAD_SHIFT		0
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS2_IMM_HEAD_MASK		0x3FFFull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS2_IMM_HEAD_SMASK		0x3FFFull
/*
* Table #76 of fxr_tx_otr_msg_top_csrs - txotr_msg_dbg_cts_list_pointers3
* This CSR shows the current values of the CTS Pending List pointers for 
* TC3.
*/
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS3				(FXR_TX_OTR_MSG_TOP_CSRS + 0x0000000068F8)
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS3_RESETCSR			0x0000000000000000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS3_UNUSED_63_62_SHIFT		62
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS3_UNUSED_63_62_MASK		0x3ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS3_UNUSED_63_62_SMASK		0xC000000000000000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS3_DELAY_TAIL_SHIFT		48
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS3_DELAY_TAIL_MASK		0x3FFFull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS3_DELAY_TAIL_SMASK		0x3FFF000000000000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS3_UNUSED_47_46_SHIFT		46
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS3_UNUSED_47_46_MASK		0x3ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS3_UNUSED_47_46_SMASK		0xC00000000000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS3_DELAY_HEAD_SHIFT		32
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS3_DELAY_HEAD_MASK		0x3FFFull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS3_DELAY_HEAD_SMASK		0x3FFF00000000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS3_UNUSED_31_30_SHIFT		30
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS3_UNUSED_31_30_MASK		0x3ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS3_UNUSED_31_30_SMASK		0xC0000000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS3_IMM_TAIL_SHIFT		16
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS3_IMM_TAIL_MASK		0x3FFFull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS3_IMM_TAIL_SMASK		0x3FFF0000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS3_UNUSED_15_14_SHIFT		14
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS3_UNUSED_15_14_MASK		0x3ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS3_UNUSED_15_14_SMASK		0xC000ull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS3_IMM_HEAD_SHIFT		0
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS3_IMM_HEAD_MASK		0x3FFFull
#define FXR_TXOTR_MSG_DBG_CTS_LIST_POINTERS3_IMM_HEAD_SMASK		0x3FFFull
/*
* Table #77 of fxr_tx_otr_msg_top_csrs - txotr_msg_dbg_out_rendez_trans_count
* This CSR tracks the number of outstanding rendezvous transactions in OTR. The 
* count is incremented when an RTS is received and decremented when the final 
* ACK is processed and a command (or event) is sent to RXDMA. 
*/
#define FXR_TXOTR_MSG_DBG_OUT_RENDEZ_TRANS_COUNT			(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000006900)
#define FXR_TXOTR_MSG_DBG_OUT_RENDEZ_TRANS_COUNT_RESETCSR		0x0000000000000000ull
#define FXR_TXOTR_MSG_DBG_OUT_RENDEZ_TRANS_COUNT_COUNT_SHIFT		0
#define FXR_TXOTR_MSG_DBG_OUT_RENDEZ_TRANS_COUNT_COUNT_MASK		0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_DBG_OUT_RENDEZ_TRANS_COUNT_COUNT_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #78 of fxr_tx_otr_msg_top_csrs - txotr_msg_dbg_mc0_outstanding_msg_cnt
* This CSR keeps a count of the number of outstanding messages for MC0. 
* 
*/
#define FXR_TXOTR_MSG_DBG_MC0_OUTSTANDING_MSG_CNT			(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000006940)
#define FXR_TXOTR_MSG_DBG_MC0_OUTSTANDING_MSG_CNT_RESETCSR		0x0000000000000000ull
#define FXR_TXOTR_MSG_DBG_MC0_OUTSTANDING_MSG_CNT_TC3_SHIFT		48
#define FXR_TXOTR_MSG_DBG_MC0_OUTSTANDING_MSG_CNT_TC3_MASK		0xFFFFull
#define FXR_TXOTR_MSG_DBG_MC0_OUTSTANDING_MSG_CNT_TC3_SMASK		0xFFFF000000000000ull
#define FXR_TXOTR_MSG_DBG_MC0_OUTSTANDING_MSG_CNT_TC2_SHIFT		32
#define FXR_TXOTR_MSG_DBG_MC0_OUTSTANDING_MSG_CNT_TC2_MASK		0xFFFFull
#define FXR_TXOTR_MSG_DBG_MC0_OUTSTANDING_MSG_CNT_TC2_SMASK		0xFFFF00000000ull
#define FXR_TXOTR_MSG_DBG_MC0_OUTSTANDING_MSG_CNT_TC1_SHIFT		16
#define FXR_TXOTR_MSG_DBG_MC0_OUTSTANDING_MSG_CNT_TC1_MASK		0xFFFFull
#define FXR_TXOTR_MSG_DBG_MC0_OUTSTANDING_MSG_CNT_TC1_SMASK		0xFFFF0000ull
#define FXR_TXOTR_MSG_DBG_MC0_OUTSTANDING_MSG_CNT_TC0_SHIFT		0
#define FXR_TXOTR_MSG_DBG_MC0_OUTSTANDING_MSG_CNT_TC0_MASK		0xFFFFull
#define FXR_TXOTR_MSG_DBG_MC0_OUTSTANDING_MSG_CNT_TC0_SMASK		0xFFFFull
/*
* Table #79 of fxr_tx_otr_msg_top_csrs - txotr_msg_dbg_mc1_outstanding_msg_cnt
* This CSR keeps a count of the number of outstanding messages for MC1. 
* 
*/
#define FXR_TXOTR_MSG_DBG_MC1_OUTSTANDING_MSG_CNT			(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000006948)
#define FXR_TXOTR_MSG_DBG_MC1_OUTSTANDING_MSG_CNT_RESETCSR		0x0000000000000000ull
#define FXR_TXOTR_MSG_DBG_MC1_OUTSTANDING_MSG_CNT_TC3_SHIFT		48
#define FXR_TXOTR_MSG_DBG_MC1_OUTSTANDING_MSG_CNT_TC3_MASK		0xFFFFull
#define FXR_TXOTR_MSG_DBG_MC1_OUTSTANDING_MSG_CNT_TC3_SMASK		0xFFFF000000000000ull
#define FXR_TXOTR_MSG_DBG_MC1_OUTSTANDING_MSG_CNT_TC2_SHIFT		32
#define FXR_TXOTR_MSG_DBG_MC1_OUTSTANDING_MSG_CNT_TC2_MASK		0xFFFFull
#define FXR_TXOTR_MSG_DBG_MC1_OUTSTANDING_MSG_CNT_TC2_SMASK		0xFFFF00000000ull
#define FXR_TXOTR_MSG_DBG_MC1_OUTSTANDING_MSG_CNT_TC1_SHIFT		16
#define FXR_TXOTR_MSG_DBG_MC1_OUTSTANDING_MSG_CNT_TC1_MASK		0xFFFFull
#define FXR_TXOTR_MSG_DBG_MC1_OUTSTANDING_MSG_CNT_TC1_SMASK		0xFFFF0000ull
#define FXR_TXOTR_MSG_DBG_MC1_OUTSTANDING_MSG_CNT_TC0_SHIFT		0
#define FXR_TXOTR_MSG_DBG_MC1_OUTSTANDING_MSG_CNT_TC0_MASK		0xFFFFull
#define FXR_TXOTR_MSG_DBG_MC1_OUTSTANDING_MSG_CNT_TC0_SMASK		0xFFFFull
/*
* Table #80 of fxr_tx_otr_msg_top_csrs - txotr_msg_prf_stall_omb_entries_x
* This CSR configures the performance registers used to track stalling due to a 
* lack of OMB entries. See more details in Performance Counters Specification, 
* page #%%#419#%%#.
*/
#define FXR_TXOTR_MSG_PRF_STALL_OMB_ENTRIES_X				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000008000)
#define FXR_TXOTR_MSG_PRF_STALL_OMB_ENTRIES_X_RESETCSR			0x0000000000000000ull
#define FXR_TXOTR_MSG_PRF_STALL_OMB_ENTRIES_X_UNUSED_63_3_SHIFT		3
#define FXR_TXOTR_MSG_PRF_STALL_OMB_ENTRIES_X_UNUSED_63_3_MASK		0x1FFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_PRF_STALL_OMB_ENTRIES_X_UNUSED_63_3_SMASK		0xFFFFFFFFFFFFFFF8ull
#define FXR_TXOTR_MSG_PRF_STALL_OMB_ENTRIES_X_MCTC_SHIFT		0
#define FXR_TXOTR_MSG_PRF_STALL_OMB_ENTRIES_X_MCTC_MASK			0x7ull
#define FXR_TXOTR_MSG_PRF_STALL_OMB_ENTRIES_X_MCTC_SMASK		0x7ull
/*
* Table #81 of fxr_tx_otr_msg_top_csrs - txotr_msg_prf_stall_omb_entries_y
* This CSR configures the performance registers used to track stalling due to a 
* lack of OMB entries. See more details in Performance Counters Specification, 
* page #%%#419#%%#.
*/
#define FXR_TXOTR_MSG_PRF_STALL_OMB_ENTRIES_Y				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000008008)
#define FXR_TXOTR_MSG_PRF_STALL_OMB_ENTRIES_Y_RESETCSR			0x0000000000000004ull
#define FXR_TXOTR_MSG_PRF_STALL_OMB_ENTRIES_Y_UNUSED_63_3_SHIFT		3
#define FXR_TXOTR_MSG_PRF_STALL_OMB_ENTRIES_Y_UNUSED_63_3_MASK		0x1FFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_PRF_STALL_OMB_ENTRIES_Y_UNUSED_63_3_SMASK		0xFFFFFFFFFFFFFFF8ull
#define FXR_TXOTR_MSG_PRF_STALL_OMB_ENTRIES_Y_MCTC_SHIFT		0
#define FXR_TXOTR_MSG_PRF_STALL_OMB_ENTRIES_Y_MCTC_MASK			0x7ull
#define FXR_TXOTR_MSG_PRF_STALL_OMB_ENTRIES_Y_MCTC_SMASK		0x7ull
/*
* Table #82 of fxr_tx_otr_msg_top_csrs - txotr_msg_prf_stall_rxdma_credits_x
* This CSR configures the performance registers used to track stalling due to a 
* lack of RXDMA Credits. See more details in Performance Counters Specification, 
* page #%%#419#%%#.
*/
#define FXR_TXOTR_MSG_PRF_STALL_RXDMA_CREDITS_X				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000008010)
#define FXR_TXOTR_MSG_PRF_STALL_RXDMA_CREDITS_X_RESETCSR		0x0000000000000000ull
#define FXR_TXOTR_MSG_PRF_STALL_RXDMA_CREDITS_X_UNUSED_63_3_SHIFT	3
#define FXR_TXOTR_MSG_PRF_STALL_RXDMA_CREDITS_X_UNUSED_63_3_MASK	0x1FFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_PRF_STALL_RXDMA_CREDITS_X_UNUSED_63_3_SMASK	0xFFFFFFFFFFFFFFF8ull
#define FXR_TXOTR_MSG_PRF_STALL_RXDMA_CREDITS_X_MCTC_SHIFT		0
#define FXR_TXOTR_MSG_PRF_STALL_RXDMA_CREDITS_X_MCTC_MASK		0x7ull
#define FXR_TXOTR_MSG_PRF_STALL_RXDMA_CREDITS_X_MCTC_SMASK		0x7ull
/*
* Table #83 of fxr_tx_otr_msg_top_csrs - txotr_msg_prf_stall_rxdma_credits_y
* This CSR configures the performance registers used to track stalling due to a 
* lack of RXDMA credits. See more details in Performance Counters Specification, 
* page #%%#419#%%#.
*/
#define FXR_TXOTR_MSG_PRF_STALL_RXDMA_CREDITS_Y				(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000008018)
#define FXR_TXOTR_MSG_PRF_STALL_RXDMA_CREDITS_Y_RESETCSR		0x0000000000000004ull
#define FXR_TXOTR_MSG_PRF_STALL_RXDMA_CREDITS_Y_UNUSED_63_3_SHIFT	3
#define FXR_TXOTR_MSG_PRF_STALL_RXDMA_CREDITS_Y_UNUSED_63_3_MASK	0x1FFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_PRF_STALL_RXDMA_CREDITS_Y_UNUSED_63_3_SMASK	0xFFFFFFFFFFFFFFF8ull
#define FXR_TXOTR_MSG_PRF_STALL_RXDMA_CREDITS_Y_MCTC_SHIFT		0
#define FXR_TXOTR_MSG_PRF_STALL_RXDMA_CREDITS_Y_MCTC_MASK		0x7ull
#define FXR_TXOTR_MSG_PRF_STALL_RXDMA_CREDITS_Y_MCTC_SMASK		0x7ull
/*
* Table #84 of fxr_tx_otr_msg_top_csrs - txotr_msg_prf_stall_m_to_p_credits_x
* This CSR configures the performance registers used to track stalling due to a 
* lack of Message Partition to Packet Partition Credits. See more details in 
* Performance Counters Specification, page #%%#420#%%#.
*/
#define FXR_TXOTR_MSG_PRF_STALL_M_TO_P_CREDITS_X			(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000008020)
#define FXR_TXOTR_MSG_PRF_STALL_M_TO_P_CREDITS_X_RESETCSR		0x0000000000000000ull
#define FXR_TXOTR_MSG_PRF_STALL_M_TO_P_CREDITS_X_UNUSED_63_4_SHIFT	4
#define FXR_TXOTR_MSG_PRF_STALL_M_TO_P_CREDITS_X_UNUSED_63_4_MASK	0xFFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_PRF_STALL_M_TO_P_CREDITS_X_UNUSED_63_4_SMASK	0xFFFFFFFFFFFFFFF0ull
#define FXR_TXOTR_MSG_PRF_STALL_M_TO_P_CREDITS_X_MCTC_SHIFT		0
#define FXR_TXOTR_MSG_PRF_STALL_M_TO_P_CREDITS_X_MCTC_MASK		0xFull
#define FXR_TXOTR_MSG_PRF_STALL_M_TO_P_CREDITS_X_MCTC_SMASK		0xFull
/*
* Table #85 of fxr_tx_otr_msg_top_csrs - txotr_msg_prf_stall_m_to_p_credits_y
* This CSR configures the performance registers used to track stalling due to a 
* lack of Message Partition to Packet Partition credits. See more details in 
* Performance Counters Specification, page #%%#420#%%#.
*/
#define FXR_TXOTR_MSG_PRF_STALL_M_TO_P_CREDITS_Y			(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000008028)
#define FXR_TXOTR_MSG_PRF_STALL_M_TO_P_CREDITS_Y_RESETCSR		0x0000000000000004ull
#define FXR_TXOTR_MSG_PRF_STALL_M_TO_P_CREDITS_Y_UNUSED_63_4_SHIFT	4
#define FXR_TXOTR_MSG_PRF_STALL_M_TO_P_CREDITS_Y_UNUSED_63_4_MASK	0xFFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_PRF_STALL_M_TO_P_CREDITS_Y_UNUSED_63_4_SMASK	0xFFFFFFFFFFFFFFF0ull
#define FXR_TXOTR_MSG_PRF_STALL_M_TO_P_CREDITS_Y_MCTC_SHIFT		0
#define FXR_TXOTR_MSG_PRF_STALL_M_TO_P_CREDITS_Y_MCTC_MASK		0xFull
#define FXR_TXOTR_MSG_PRF_STALL_M_TO_P_CREDITS_Y_MCTC_SMASK		0xFull
/*
* Table #86 of fxr_tx_otr_msg_top_csrs - txotr_msg_prf_stall_prefrag_credits_x
* This CSR configures the performance registers used to track stalling due to a 
* lack of Pre-fragmentation Credits. See more details in Performance Counters 
* Specification, page #%%#420#%%#.
*/
#define FXR_TXOTR_MSG_PRF_STALL_PREFRAG_CREDITS_X			(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000008030)
#define FXR_TXOTR_MSG_PRF_STALL_PREFRAG_CREDITS_X_RESETCSR		0x0000000000000000ull
#define FXR_TXOTR_MSG_PRF_STALL_PREFRAG_CREDITS_X_UNUSED_63_3_SHIFT	3
#define FXR_TXOTR_MSG_PRF_STALL_PREFRAG_CREDITS_X_UNUSED_63_3_MASK	0x1FFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_PRF_STALL_PREFRAG_CREDITS_X_UNUSED_63_3_SMASK	0xFFFFFFFFFFFFFFF8ull
#define FXR_TXOTR_MSG_PRF_STALL_PREFRAG_CREDITS_X_MCTC_SHIFT		0
#define FXR_TXOTR_MSG_PRF_STALL_PREFRAG_CREDITS_X_MCTC_MASK		0x7ull
#define FXR_TXOTR_MSG_PRF_STALL_PREFRAG_CREDITS_X_MCTC_SMASK		0x7ull
/*
* Table #87 of fxr_tx_otr_msg_top_csrs - txotr_msg_prf_stall_prefrag_credits_y
* This CSR configures the performance registers used to track stalling due to a 
* lack of Message Partition to Packet Partition credits. See more details in 
* Performance Counters Specification, page #%%#420#%%#.
*/
#define FXR_TXOTR_MSG_PRF_STALL_PREFRAG_CREDITS_Y			(FXR_TX_OTR_MSG_TOP_CSRS + 0x000000008038)
#define FXR_TXOTR_MSG_PRF_STALL_PREFRAG_CREDITS_Y_RESETCSR		0x0000000000000004ull
#define FXR_TXOTR_MSG_PRF_STALL_PREFRAG_CREDITS_Y_UNUSED_63_3_SHIFT	3
#define FXR_TXOTR_MSG_PRF_STALL_PREFRAG_CREDITS_Y_UNUSED_63_3_MASK	0x1FFFFFFFFFFFFFFFull
#define FXR_TXOTR_MSG_PRF_STALL_PREFRAG_CREDITS_Y_UNUSED_63_3_SMASK	0xFFFFFFFFFFFFFFF8ull
#define FXR_TXOTR_MSG_PRF_STALL_PREFRAG_CREDITS_Y_MCTC_SHIFT		0
#define FXR_TXOTR_MSG_PRF_STALL_PREFRAG_CREDITS_Y_MCTC_MASK		0x7ull
#define FXR_TXOTR_MSG_PRF_STALL_PREFRAG_CREDITS_Y_MCTC_SMASK		0x7ull

#endif 		/* DEF_FXR_TX_OTR_MSG_TOP_CSRS_SW_DEF */

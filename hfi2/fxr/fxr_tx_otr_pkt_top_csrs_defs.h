/*
*------------------------------------------------------------------------------
*                                                                              
*  INTEL CONFIDENTIAL                                                          
*                                                                              
*  Copyright 2016 Intel Corporation All Rights Reserved.                 
*                                                                              
*  The source code contained or described herein and all documents related     
*  to the source code ("Material") are owned by Intel Corporation or its    
*  suppliers or licensors. Title to the Material remains with Intel            
*  Corporation or its suppliers and licensors. The Material contains trade     
*  secrets and proprietary and confidential information of Intel or its        
*  suppliers and licensors. The Material is protected by worldwide copyright   
*  and trade secret laws and treaty provisions. No part of the Material may    
*  be used, copied, reproduced, modified, published, uploaded, posted,         
*  transmitted, distributed, or disclosed in any way without Intel's prior     
*  express written permission.                                                 
*                                                                              
*  No license under any patent, copyright, trade secret or other intellectual  
*  property right is granted to or conferred upon you by disclosure or         
*  delivery of the Materials, either expressly, by implication, inducement,    
*  estoppel or otherwise. Any license under such intellectual property rights  
*  must be express and approved by Intel in writing.                           
*                                                                              
*------------------------------------------------------------------------------
*  Auto-generated by /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/i_csrs.pl
*  i_csrs.pl Version 1.5 last modified on Thursday 1/7/16 17:24:50
*  /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/i_csrs.pl -C -R -ST fxr_tx_otr -unit=fxr_tx_otr_pkt_top_csrs -o /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/fxr /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/repo_xml/300_Memory_Map.xml /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/repo_xml/323_Memory_Map_TX_OTR.xml
*------------------------------------------------------------------------------
*/

#ifndef DEF_FXR_TX_OTR_PKT_TOP_CSRS_SW_DEF
#define DEF_FXR_TX_OTR_PKT_TOP_CSRS_SW_DEF

#ifndef FXR_TX_OTR_PKT_TOP_CSRS
#define FXR_TX_OTR_PKT_TOP_CSRS									0x000000000000
#endif
#define FXR_NUM_CONTEXTS									192
#define FXR_NUM_PIDS										4096
#define FXR_MAX_CONTEXT										191
#define FXR_TX_CONTEXT_ENTRIES									128
#define FXR_TX_CONTEXT_MAX									127
#define FXR_RX_CONTEXT_ENTRIES									16
#define FXR_RX_CONTEXT_MAX									15
#define FXR_NUM_SL										32
#define FXR_MAX_SL										31
#define TXOTR_PKT_CFG_BASE									0
#define TXOTR_PKT_ERR_BASE									8192
#define TXOTR_PKT_STS_BASE									16384
#define TXOTR_PKT_DBG_BASE									24576
#define TXOTR_PKT_PRF_BASE									32768
#define TXOTR_PKT_OFFSET									8
#define TXOTR_MSG_CFG_BASE									0
#define TXOTR_MSG_ERR_BASE									8192
#define TXOTR_MSG_STS_BASE									16384
#define TXOTR_MSG_DBG_BASE									24576
#define TXOTR_MSG_PRF_BASE									32768
#define TXOTR_MSG_OFFSET									8
/*
* Table #4 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_postfrag_opb_fifo_crdts
* This CSR contains the configuration parameters necessary to configure the 
* number of credits in the Post-Fragmentation Engine OPB Input 
* Queues.
*/
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000000)
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_RESETCSR					0x0000000044444444ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_UNUSED_63_31_SHIFT				31
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_UNUSED_63_31_MASK				0x1FFFFFFFFull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_UNUSED_63_31_SMASK				0xFFFFFFFF80000000ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_MC1TC3_SHIFT					28
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_MC1TC3_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_MC1TC3_SMASK					0x70000000ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_UNUSED_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_UNUSED_27_MASK				0x1ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_UNUSED_27_SMASK				0x8000000ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_MC1TC2_SHIFT					24
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_MC1TC2_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_MC1TC2_SMASK					0x7000000ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_UNUSED_23_SHIFT				23
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_UNUSED_23_MASK				0x1ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_UNUSED_23_SMASK				0x800000ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_MC1TC1_SHIFT					20
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_MC1TC1_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_MC1TC1_SMASK					0x700000ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_UNUSED_19_SHIFT				19
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_UNUSED_19_MASK				0x1ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_UNUSED_19_SMASK				0x80000ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_MC1TC0_SHIFT					16
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_MC1TC0_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_MC1TC0_SMASK					0x70000ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_UNUSED_15_SHIFT				15
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_UNUSED_15_MASK				0x1ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_UNUSED_15_SMASK				0x8000ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_MC0TC3_SHIFT					12
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_MC0TC3_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_MC0TC3_SMASK					0x7000ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_UNUSED_11_SHIFT				11
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_UNUSED_11_MASK				0x1ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_UNUSED_11_SMASK				0x800ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_MC0TC2_SHIFT					8
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_MC0TC2_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_MC0TC2_SMASK					0x700ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_UNUSED_7_SHIFT				7
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_UNUSED_7_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_UNUSED_7_SMASK				0x80ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_MC0TC1_SHIFT					4
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_MC0TC1_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_MC0TC1_SMASK					0x70ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_UNUSED_3_SHIFT				3
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_UNUSED_3_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_UNUSED_3_SMASK				0x8ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_MC0TC0_SHIFT					0
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_MC0TC0_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_POSTFRAG_OPB_FIFO_CRDTS_MC0TC0_SMASK					0x7ull
/*
* Table #5 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_retransmission_fifo_crdts
* This CSR contains the configuration parameters necessary to configure the 
* number of credits in the Retransmission OPB Queues.
*/
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000018)
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_RESETCSR					0x0000000044444444ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_UNUSED_63_31_SHIFT				31
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_UNUSED_63_31_MASK				0x1FFFFFFFFull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_UNUSED_63_31_SMASK				0xFFFFFFFF80000000ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_MC1TC3_SHIFT				28
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_MC1TC3_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_MC1TC3_SMASK				0x70000000ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_UNUSED_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_UNUSED_27_MASK				0x1ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_UNUSED_27_SMASK				0x8000000ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_MC1TC2_SHIFT				24
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_MC1TC2_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_MC1TC2_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_UNUSED_23_SHIFT				23
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_UNUSED_23_MASK				0x1ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_UNUSED_23_SMASK				0x800000ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_MC1TC1_SHIFT				20
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_MC1TC1_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_MC1TC1_SMASK				0x700000ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_UNUSED_19_SHIFT				19
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_UNUSED_19_MASK				0x1ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_UNUSED_19_SMASK				0x80000ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_MC1TC0_SHIFT				16
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_MC1TC0_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_MC1TC0_SMASK				0x70000ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_UNUSED_15_SHIFT				15
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_UNUSED_15_MASK				0x1ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_UNUSED_15_SMASK				0x8000ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_MC0TC3_SHIFT				12
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_MC0TC3_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_MC0TC3_SMASK				0x7000ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_UNUSED_11_SHIFT				11
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_UNUSED_11_MASK				0x1ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_UNUSED_11_SMASK				0x800ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_MC0TC2_SHIFT				8
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_MC0TC2_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_MC0TC2_SMASK				0x700ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_UNUSED_7_SHIFT				7
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_UNUSED_7_MASK				0x1ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_UNUSED_7_SMASK				0x80ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_MC0TC1_SHIFT				4
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_MC0TC1_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_MC0TC1_SMASK				0x70ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_UNUSED_3_SHIFT				3
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_UNUSED_3_MASK				0x1ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_UNUSED_3_SMASK				0x8ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_MC0TC0_SHIFT				0
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_MC0TC0_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_RETRANSMISSION_FIFO_CRDTS_MC0TC0_SMASK				0x7ull
/*
* Table #6 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_rxe2e_crdts
* This CSR contains the configuration parameters necessary to configure the 
* number of credits refunded to RXE2E for MC1 packets and MC1 packet status 
* indicators after reset.
*/
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000020)
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_RESETCSR							0x0000000010101010ull
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_UNUSED_63_29_SHIFT					29
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_UNUSED_63_29_MASK						0x7FFFFFFFFull
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_UNUSED_63_29_SMASK					0xFFFFFFFFE0000000ull
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_TC3_SHIFT							24
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_TC3_MASK							0x1Full
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_TC3_SMASK							0x1F000000ull
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_UNUSED_23_21_SHIFT					21
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_UNUSED_23_21_MASK						0x7ull
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_UNUSED_23_21_SMASK					0xE00000ull
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_TC2_SHIFT							16
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_TC2_MASK							0x1Full
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_TC2_SMASK							0x1F0000ull
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_UNUSED_15_13_SHIFT					13
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_UNUSED_15_13_MASK						0x7ull
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_UNUSED_15_13_SMASK					0xE000ull
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_TC1_SHIFT							8
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_TC1_MASK							0x1Full
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_TC1_SMASK							0x1F00ull
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_UNUSED_7_5_SHIFT						5
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_UNUSED_7_5_MASK						0x7ull
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_UNUSED_7_5_SMASK						0xE0ull
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_TC0_SHIFT							0
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_TC0_MASK							0x1Full
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_TC0_SMASK							0x1Full
/*
* Table #7 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_txdma_int
* This CSR contains the configuration parameters necessary to configure the 
* RXDMA Interface.
*/
#define FXR_TXOTR_PKT_CFG_TXDMA_INT								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000028)
#define FXR_TXOTR_PKT_CFG_TXDMA_INT_RESETCSR							0x0000000000000004ull
#define FXR_TXOTR_PKT_CFG_TXDMA_INT_UNUSED_63_3_SHIFT						3
#define FXR_TXOTR_PKT_CFG_TXDMA_INT_UNUSED_63_3_MASK						0x1FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_TXDMA_INT_UNUSED_63_3_SMASK						0xFFFFFFFFFFFFFFF8ull
#define FXR_TXOTR_PKT_CFG_TXDMA_INT_CRDTS_SHIFT							0
#define FXR_TXOTR_PKT_CFG_TXDMA_INT_CRDTS_MASK							0x7ull
#define FXR_TXOTR_PKT_CFG_TXDMA_INT_CRDTS_SMASK							0x7ull
/*
* Table #8 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_memory_scheduler
* This CSR contains the configuration parameters necessary to configure the 
* number of credits for HI requests from TXDMA and HI responses from 
* TXCI.
*/
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000030)
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_RESETCSR						0x0000004488000808ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_UNUSED_63_53_SHIFT					53
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_UNUSED_63_53_MASK					0x7FFull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_UNUSED_63_53_SMASK					0xFFE0000000000000ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PRIV_LEVEL_SHIFT					52
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PRIV_LEVEL_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PRIV_LEVEL_SMASK					0x10000000000000ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PID_SHIFT						40
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PID_MASK						0xFFFull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PID_SMASK						0xFFF0000000000ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PSN_SO_SHIFT						39
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PSN_SO_MASK						0x1ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PSN_SO_SMASK						0x8000000000ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PSN_GLOBALFLOWID_SHIFT				38
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PSN_GLOBALFLOWID_MASK				0x1ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PSN_GLOBALFLOWID_SMASK				0x4000000000ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PSN_CHINT_SHIFT					36
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PSN_CHINT_MASK					0x3ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PSN_CHINT_SMASK					0x3000000000ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_FPE_SO_SHIFT						35
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_FPE_SO_MASK						0x1ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_FPE_SO_SMASK						0x800000000ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_FPE_GLOBALFLOWID_SHIFT				34
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_FPE_GLOBALFLOWID_MASK				0x1ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_FPE_GLOBALFLOWID_SMASK				0x400000000ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_FPE_CHINT_SHIFT					32
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_FPE_CHINT_MASK					0x3ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_FPE_CHINT_SMASK					0x300000000ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_TXDMA_REQ_REQACK_SHIFT				28
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_TXDMA_REQ_REQACK_MASK				0xFull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_TXDMA_REQ_REQACK_SMASK				0xF0000000ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_TXDMA_REQ_RSPACK_SHIFT				24
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_TXDMA_REQ_RSPACK_MASK				0xFull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_TXDMA_REQ_RSPACK_SMASK				0xF000000ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_UNUSED_23_13_SHIFT					13
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_UNUSED_23_13_MASK					0x7FFull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_UNUSED_23_13_SMASK					0xFFE000ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_TXCI_RSP_REQACK_SHIFT				8
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_TXCI_RSP_REQACK_MASK					0x1Full
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_TXCI_RSP_REQACK_SMASK				0x1F00ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_UNUSED_7_5_SHIFT					5
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_UNUSED_7_5_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_UNUSED_7_5_SMASK					0xE0ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_TXCI_RSP_RSPACK_SHIFT				0
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_TXCI_RSP_RSPACK_MASK					0x1Full
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_TXCI_RSP_RSPACK_SMASK				0x1Full
/*
* Table #9 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_pktid_1
* This CSR contains the configuration parameters necessary to set the number of 
* reserved PKT_IDs for each MC/TC combination.
*/
#define FXR_TXOTR_PKT_CFG_PKTID_1								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000038)
#define FXR_TXOTR_PKT_CFG_PKTID_1_RESETCSR							0x4040404040404040ull
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC1_TC3_SHIFT						56
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC1_TC3_MASK						0xFFull
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC1_TC3_SMASK						0xFF00000000000000ull
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC1_TC2_SHIFT						48
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC1_TC2_MASK						0xFFull
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC1_TC2_SMASK						0xFF000000000000ull
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC1_TC1_SHIFT						40
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC1_TC1_MASK						0xFFull
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC1_TC1_SMASK						0xFF0000000000ull
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC1_TC0_SHIFT						32
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC1_TC0_MASK						0xFFull
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC1_TC0_SMASK						0xFF00000000ull
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC0_TC3_SHIFT						24
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC0_TC3_MASK						0xFFull
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC0_TC3_SMASK						0xFF000000ull
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC0_TC2_SHIFT						16
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC0_TC2_MASK						0xFFull
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC0_TC2_SMASK						0xFF0000ull
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC0_TC1_SHIFT						8
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC0_TC1_MASK						0xFFull
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC0_TC1_SMASK						0xFF00ull
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC0_TC0_SHIFT						0
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC0_TC0_MASK						0xFFull
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC0_TC0_SMASK						0xFFull
/*
* Table #10 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_pktid_2
* This CSR contains the configuration parameters necessary to set the total 
* shared Packet Identifiers that can be allocated simultaneously.
*/
#define FXR_TXOTR_PKT_CFG_PKTID_2								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000040)
#define FXR_TXOTR_PKT_CFG_PKTID_2_RESETCSR							0x0000000000003000ull
#define FXR_TXOTR_PKT_CFG_PKTID_2_UNUSED_63_14_SHIFT						14
#define FXR_TXOTR_PKT_CFG_PKTID_2_UNUSED_63_14_MASK						0x3FFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_PKTID_2_UNUSED_63_14_SMASK						0xFFFFFFFFFFFFC000ull
#define FXR_TXOTR_PKT_CFG_PKTID_2_SHARED_SHIFT							0
#define FXR_TXOTR_PKT_CFG_PKTID_2_SHARED_MASK							0x3FFFull
#define FXR_TXOTR_PKT_CFG_PKTID_2_SHARED_SMASK							0x3FFFull
/*
* Table #11 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_opb_fifo_gen_arb
* This CSR contains the configuration parameters necessary to configure the OPB 
* Arbitration. The arbitration scheme by default is a leaky bucket 
* scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_GEN_ARB							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000048)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_GEN_ARB_RESETCSR						0x0000000000000003ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_GEN_ARB_UNUSED_63_2_SHIFT					2
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_GEN_ARB_UNUSED_63_2_MASK					0x3FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_GEN_ARB_UNUSED_63_2_SMASK					0xFFFFFFFFFFFFFFFCull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_GEN_ARB_PENDING_ACK_PRIORITY_SHIFT				1
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_GEN_ARB_PENDING_ACK_PRIORITY_MASK				0x1ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_GEN_ARB_PENDING_ACK_PRIORITY_SMASK				0x2ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_GEN_ARB_RETRANSMIT_PRIORITY_SHIFT				0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_GEN_ARB_RETRANSMIT_PRIORITY_MASK				0x1ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_GEN_ARB_RETRANSMIT_PRIORITY_SMASK				0x1ull
/*
* Table #12 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_opb_fifo_arb_fp_mc0tc0
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC0/TC0 Fast Path Queue. The arbitration 
* scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC0						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000058)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC0_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC0_UNUSED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC0_UNUSED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC0_UNUSED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC0_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC0_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC0_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC0_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC0_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC0_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC0_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC0_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC0_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #13 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_opb_fifo_arb_fp_mc0tc1
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC0/TC1 Fast Path Queue. The arbitration 
* scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC1						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000060)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC1_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC1_UNUSED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC1_UNUSED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC1_UNUSED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC1_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC1_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC1_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC1_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC1_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC1_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC1_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC1_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC1_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #14 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_opb_fifo_arb_fp_mc0tc2
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC0/TC2 Fast Path Queue. The arbitration 
* scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC2						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000068)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC2_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC2_UNUSED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC2_UNUSED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC2_UNUSED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC2_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC2_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC2_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC2_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC2_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC2_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC2_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC2_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC2_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #15 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_opb_fifo_arb_fp_mc0tc3
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC0/TC3 Fast Path Queue. The arbitration 
* scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC3						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000070)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC3_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC3_UNUSED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC3_UNUSED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC3_UNUSED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC3_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC3_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC3_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC3_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC3_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC3_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC3_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC3_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC3_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #16 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_opb_fifo_arb_fp_mc1tc0
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC1/TC0 Fast Path Queue. The arbitration 
* scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC0						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000078)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC0_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC0_UNUSED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC0_UNUSED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC0_UNUSED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC0_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC0_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC0_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC0_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC0_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC0_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC0_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC0_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC0_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #17 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_opb_fifo_arb_fp_mc1tc1
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC1/TC1 Fast Path Queue. The arbitration 
* scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC1						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000080)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC1_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC1_UNUSED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC1_UNUSED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC1_UNUSED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC1_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC1_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC1_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC1_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC1_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC1_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC1_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC1_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC1_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #18 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_opb_fifo_arb_fp_mc1tc2
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC1/TC2 Fast Path Queue. The arbitration 
* scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC2						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000088)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC2_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC2_UNUSED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC2_UNUSED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC2_UNUSED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC2_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC2_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC2_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC2_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC2_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC2_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC2_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC2_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC2_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #19 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_opb_fifo_arb_fp_mc1tc3
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC1/TC3 Fast Path Queue. The arbitration 
* scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC3						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000090)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC3_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC3_UNUSED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC3_UNUSED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC3_UNUSED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC3_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC3_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC3_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC3_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC3_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC3_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC3_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC3_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC3_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #20 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_opb_fifo_arb_pf_mc0tc0
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC0/TC0 Post Fragmentation Queue. The 
* arbitration scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC0						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000098)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC0_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC0_UNUSED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC0_UNUSED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC0_UNUSED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC0_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC0_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC0_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC0_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC0_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC0_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC0_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC0_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC0_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #21 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_opb_fifo_arb_pf_mc0tc1
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC0/TC1 Post Fragmentation Queue. The 
* arbitration scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC1						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000000A0)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC1_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC1_UNUSED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC1_UNUSED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC1_UNUSED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC1_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC1_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC1_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC1_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC1_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC1_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC1_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC1_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC1_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #22 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_opb_fifo_arb_pf_mc0tc2
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC0/TC2 Post Fragmentation Queue. The 
* arbitration scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC2						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000000A8)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC2_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC2_UNUSED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC2_UNUSED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC2_UNUSED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC2_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC2_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC2_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC2_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC2_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC2_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC2_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC2_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC2_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #23 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_opb_fifo_arb_pf_mc0tc3
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC0/TC3 Post Fragmentation Queue. The 
* arbitration scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC3						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000000B0)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC3_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC3_UNUSED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC3_UNUSED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC3_UNUSED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC3_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC3_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC3_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC3_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC3_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC3_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC3_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC3_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC3_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #24 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_opb_fifo_arb_pf_mc1tc0
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC1/TC0 Post Fragmentation Queue. The 
* arbitration scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC0						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000000B8)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC0_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC0_UNUSED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC0_UNUSED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC0_UNUSED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC0_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC0_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC0_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC0_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC0_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC0_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC0_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC0_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC0_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #25 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_opb_fifo_arb_pf_mc1tc1
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC1/TC1 Post Fragmentation Queue. The 
* arbitration scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC1						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000000C0)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC1_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC1_UNUSED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC1_UNUSED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC1_UNUSED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC1_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC1_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC1_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC1_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC1_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC1_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC1_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC1_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC1_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #26 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_opb_fifo_arb_pf_mc1tc2
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC1/TC2 Post Fragmentation Queue. The 
* arbitration scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC2						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000000C8)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC2_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC2_UNUSED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC2_UNUSED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC2_UNUSED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC2_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC2_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC2_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC2_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC2_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC2_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC2_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC2_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC2_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #27 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_opb_fifo_arb_pf_mc1tc3
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC1/TC3 Post Fragmentation Queue. The 
* arbitration scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC3						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000000D0)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC3_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC3_UNUSED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC3_UNUSED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC3_UNUSED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC3_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC3_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC3_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC3_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC3_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC3_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC3_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC3_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC3_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #28 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_opb_fifo_arb_mc0tc0
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC0/TC0. The arbitration scheme by default 
* is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC0							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000000D8)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC0_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC0_UNUSED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC0_UNUSED_63_27_MASK					0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC0_UNUSED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC0_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC0_LEAK_INTEGER_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC0_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC0_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC0_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC0_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC0_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC0_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC0_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #29 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_opb_fifo_arb_mc0tc1
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC0/TC1. The arbitration scheme by default 
* is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC1							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000000E0)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC1_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC1_UNUSED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC1_UNUSED_63_27_MASK					0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC1_UNUSED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC1_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC1_LEAK_INTEGER_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC1_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC1_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC1_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC1_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC1_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC1_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC1_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #30 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_opb_fifo_arb_mc0tc2
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC0/TC2. The arbitration scheme by default 
* is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC2							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000000E8)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC2_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC2_UNUSED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC2_UNUSED_63_27_MASK					0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC2_UNUSED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC2_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC2_LEAK_INTEGER_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC2_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC2_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC2_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC2_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC2_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC2_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC2_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #31 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_opb_fifo_arb_mc0tc3
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC0/TC3. The arbitration scheme by default 
* is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC3							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000000F0)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC3_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC3_UNUSED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC3_UNUSED_63_27_MASK					0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC3_UNUSED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC3_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC3_LEAK_INTEGER_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC3_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC3_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC3_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC3_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC3_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC3_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC3_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #32 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_opb_fifo_arb_mc1tc0
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC1/TC0. The arbitration scheme by default 
* is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC0							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000000F8)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC0_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC0_UNUSED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC0_UNUSED_63_27_MASK					0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC0_UNUSED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC0_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC0_LEAK_INTEGER_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC0_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC0_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC0_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC0_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC0_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC0_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC0_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #33 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_opb_fifo_arb_mc1tc1
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC1/TC1. The arbitration scheme by default 
* is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC1							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000100)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC1_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC1_UNUSED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC1_UNUSED_63_27_MASK					0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC1_UNUSED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC1_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC1_LEAK_INTEGER_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC1_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC1_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC1_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC1_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC1_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC1_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC1_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #34 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_opb_fifo_arb_mc1tc2
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC1/TC2. The arbitration scheme by default 
* is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC2							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000108)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC2_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC2_UNUSED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC2_UNUSED_63_27_MASK					0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC2_UNUSED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC2_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC2_LEAK_INTEGER_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC2_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC2_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC2_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC2_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC2_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC2_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC2_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #35 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_opb_fifo_arb_mc1tc3
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC1/TC3. The arbitration scheme by default 
* is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC3							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000110)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC3_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC3_UNUSED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC3_UNUSED_63_27_MASK					0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC3_UNUSED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC3_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC3_LEAK_INTEGER_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC3_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC3_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC3_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC3_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC3_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC3_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC3_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #36 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_max_seq_dist
* This CSR contains the configuration parameters necessary to configure the 
* checking of Maximum Sequence Distance violations. 
*/
#define FXR_TXOTR_PKT_CFG_MAX_SEQ_DIST								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000120)
#define FXR_TXOTR_PKT_CFG_MAX_SEQ_DIST_RESETCSR							0x0000000000600400ull
#define FXR_TXOTR_PKT_CFG_MAX_SEQ_DIST_UNUSED_63_24_SHIFT					24
#define FXR_TXOTR_PKT_CFG_MAX_SEQ_DIST_UNUSED_63_24_MASK					0xFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_MAX_SEQ_DIST_UNUSED_63_24_SMASK					0xFFFFFFFFFF000000ull
#define FXR_TXOTR_PKT_CFG_MAX_SEQ_DIST_SKID_DISTANCE_SHIFT					16
#define FXR_TXOTR_PKT_CFG_MAX_SEQ_DIST_SKID_DISTANCE_MASK					0xFFull
#define FXR_TXOTR_PKT_CFG_MAX_SEQ_DIST_SKID_DISTANCE_SMASK					0xFF0000ull
#define FXR_TXOTR_PKT_CFG_MAX_SEQ_DIST_THRESHOLD_DISTANCE_SHIFT					0
#define FXR_TXOTR_PKT_CFG_MAX_SEQ_DIST_THRESHOLD_DISTANCE_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_MAX_SEQ_DIST_THRESHOLD_DISTANCE_SMASK					0xFFFFull
/*
* Table #37 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_force_retrans_pending
* This CSR contains the configuration parameters necessary to force BPE to mark 
* entries in a Local Sequence as PENDING (as BPE walks a Local Sequence for an 
* Out-of-Sequence NACK-based retransmit) even if credits exist to immediately 
* retransmit the packet. 
*/
#define FXR_TXOTR_PKT_CFG_FORCE_RETRANS_PENDING							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000128)
#define FXR_TXOTR_PKT_CFG_FORCE_RETRANS_PENDING_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_FORCE_RETRANS_PENDING_LOCAL_SEQUENCE_SHIFT				0
#define FXR_TXOTR_PKT_CFG_FORCE_RETRANS_PENDING_LOCAL_SEQUENCE_MASK				0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_FORCE_RETRANS_PENDING_LOCAL_SEQUENCE_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #38 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_timeout
* This CSR contains the configuration parameters necessary to set the length of 
* the timeout interval used to retransmit outstanding packets. The 
* #%%#TIMEOUT#%%# value must exactly match time #%%#TIMEOUT#%%# value in 
* #%%#txotr_msg_cfg_timeout#%%#.
*/
#define FXR_TXOTR_PKT_CFG_TIMEOUT								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000140)
#define FXR_TXOTR_PKT_CFG_TIMEOUT_RESETCSR							0x0000800E00000400ull
#define FXR_TXOTR_PKT_CFG_TIMEOUT_UNUSED_63_49_SHIFT						49
#define FXR_TXOTR_PKT_CFG_TIMEOUT_UNUSED_63_49_MASK						0x7FFFull
#define FXR_TXOTR_PKT_CFG_TIMEOUT_UNUSED_63_49_SMASK						0xFFFE000000000000ull
#define FXR_TXOTR_PKT_CFG_TIMEOUT_DISABLE_RETRANS_LIMIT_UNCONNECTED_SHIFT			48
#define FXR_TXOTR_PKT_CFG_TIMEOUT_DISABLE_RETRANS_LIMIT_UNCONNECTED_MASK			0x1ull
#define FXR_TXOTR_PKT_CFG_TIMEOUT_DISABLE_RETRANS_LIMIT_UNCONNECTED_SMASK			0x1000000000000ull
#define FXR_TXOTR_PKT_CFG_TIMEOUT_TIMEOUT_SHIFT							36
#define FXR_TXOTR_PKT_CFG_TIMEOUT_TIMEOUT_MASK							0xFFFull
#define FXR_TXOTR_PKT_CFG_TIMEOUT_TIMEOUT_SMASK							0xFFF000000000ull
#define FXR_TXOTR_PKT_CFG_TIMEOUT_MAX_RETRIES_SHIFT						32
#define FXR_TXOTR_PKT_CFG_TIMEOUT_MAX_RETRIES_MASK						0xFull
#define FXR_TXOTR_PKT_CFG_TIMEOUT_MAX_RETRIES_SMASK						0xF00000000ull
#define FXR_TXOTR_PKT_CFG_TIMEOUT_SCALER_SHIFT							0
#define FXR_TXOTR_PKT_CFG_TIMEOUT_SCALER_MASK							0xFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_TIMEOUT_SCALER_SMASK							0xFFFFFFFFull
/*
* Table #39 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_slid_pt0
* This CSR contains the configuration parameters necessary to configure the 
* Source Local Identifier (SLID) for Port 0. The SLID in a packet is configured 
* based on the fields in this CSR as well as the SLID[1:0] or SLID[2:0] (based 
* on the command type) contained in the command. The SLID which gets inserted 
* into a packet is determined using the following formula: SLID = (BASE & 
* ~(2N-1)) | (SLID_LOW & (2N-1)) where SLID_LOW is a 24-bit field derived by 
* zero-extending SLID[1:0] or SLID[2:0] contained in the corresponding command 
* and N is the lmc contained in #%%#Section 29.7.3.38, 'LID Mask Control 
* Configuration CSR'#%%#.
*/
#define FXR_TXOTR_PKT_CFG_SLID_PT0								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000148)
#define FXR_TXOTR_PKT_CFG_SLID_PT0_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_SLID_PT0_UNUSED_63_24_SHIFT						24
#define FXR_TXOTR_PKT_CFG_SLID_PT0_UNUSED_63_24_MASK						0xFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_SLID_PT0_UNUSED_63_24_SMASK						0xFFFFFFFFFF000000ull
#define FXR_TXOTR_PKT_CFG_SLID_PT0_BASE_SHIFT							0
#define FXR_TXOTR_PKT_CFG_SLID_PT0_BASE_MASK							0xFFFFFFull
#define FXR_TXOTR_PKT_CFG_SLID_PT0_BASE_SMASK							0xFFFFFFull
/*
* Table #40 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_slid_pt1
* This CSR contains the configuration parameters necessary to configure the 
* Source Local Identifier (SLID) for Port 1. The SLID in a packet is configured 
* based on the fields in this CSR as well as the SLID[1:0] or SLID[2:0] (based 
* on the command type) contained in the command. The SLID which gets inserted 
* into a packet is as described in #%%#Section 29.7.3.36, 'SLID Port 0 
* Configuration CSR'#%%#, but uses the lmc described in #%%#Section 29.7.3.39, 
* 'Port Mode Configuration CSR'#%%#.
*/
#define FXR_TXOTR_PKT_CFG_SLID_PT1								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000150)
#define FXR_TXOTR_PKT_CFG_SLID_PT1_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_SLID_PT1_UNUSED_63_24_SHIFT						24
#define FXR_TXOTR_PKT_CFG_SLID_PT1_UNUSED_63_24_MASK						0xFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_SLID_PT1_UNUSED_63_24_SMASK						0xFFFFFFFFFF000000ull
#define FXR_TXOTR_PKT_CFG_SLID_PT1_BASE_SHIFT							0
#define FXR_TXOTR_PKT_CFG_SLID_PT1_BASE_MASK							0xFFFFFFull
#define FXR_TXOTR_PKT_CFG_SLID_PT1_BASE_SMASK							0xFFFFFFull
/*
* Table #41 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_lmc
* This CSR contains the configuration parameters necessary to configure the LID 
* Mask Control Bits (LMC) for both ports. The LMC is used in OTR to calculate 
* the SLID which gets inserted into a packet as well as the address used in the 
* PSN Cache for evicts and fills. The maximum value of lmc is two. A value of 
* three is interpreted as two.
*/
#define FXR_TXOTR_PKT_CFG_LMC									(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000158)
#define FXR_TXOTR_PKT_CFG_LMC_RESETCSR								0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_LMC_LMC_P1_SHIFT							4
#define FXR_TXOTR_PKT_CFG_LMC_LMC_P1_MASK							0x3ull
#define FXR_TXOTR_PKT_CFG_LMC_LMC_P1_SMASK							0x30ull
#define FXR_TXOTR_PKT_CFG_LMC_LMC_P0_SHIFT							0
#define FXR_TXOTR_PKT_CFG_LMC_LMC_P0_MASK							0x3ull
#define FXR_TXOTR_PKT_CFG_LMC_LMC_P0_SMASK							0x3ull
/*
* Table #42 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_port_mode
* This CSR contains the configuration parameters necessary to configure the 
* operational mode and lid assignment.
*/
#define FXR_TXOTR_PKT_CFG_PORT_MODE								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000160)
#define FXR_TXOTR_PKT_CFG_PORT_MODE_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_PORT_MODE_UNUSED_63_2_SHIFT						2
#define FXR_TXOTR_PKT_CFG_PORT_MODE_UNUSED_63_2_MASK						0x3FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_PORT_MODE_UNUSED_63_2_SMASK						0xFFFFFFFFFFFFFFFCull
#define FXR_TXOTR_PKT_CFG_PORT_MODE_MODE_SHIFT							0
#define FXR_TXOTR_PKT_CFG_PORT_MODE_MODE_MASK							0x3ull
#define FXR_TXOTR_PKT_CFG_PORT_MODE_MODE_SMASK							0x3ull
/*
* Table #43 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_adapive_en
* This CSR contains the configuration parameters necessary to disable the 
* setting of adaptive_en. If the Retransmit Count for a packet is equal to or 
* less than #%%#DISABLE_COUNT#%%#, then adaptive_en is no longer allowed to be 
* set for that packet. 
*/
#define FXR_TXOTR_PKT_CFG_ADAPIVE_EN								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000168)
#define FXR_TXOTR_PKT_CFG_ADAPIVE_EN_RESETCSR							0x000000000000000Cull
#define FXR_TXOTR_PKT_CFG_ADAPIVE_EN_UNUSED_63_4_SHIFT						4
#define FXR_TXOTR_PKT_CFG_ADAPIVE_EN_UNUSED_63_4_MASK						0xFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_ADAPIVE_EN_UNUSED_63_4_SMASK						0xFFFFFFFFFFFFFFF0ull
#define FXR_TXOTR_PKT_CFG_ADAPIVE_EN_DISABLE_COUNT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_ADAPIVE_EN_DISABLE_COUNT_MASK						0xFull
#define FXR_TXOTR_PKT_CFG_ADAPIVE_EN_DISABLE_COUNT_SMASK					0xFull
/*
* Table #44 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_port_fail_over
* This CSR contains the configuration parameters necessary to determine when a 
* packet should fail over to the opposite port to which it has previously been 
* using. If the Retransmit Count for a packet is equal to or less than 
* #%%#COUNT#%%#, then the packet should fail over to the opposite port it was 
* previously using. 
*/
#define FXR_TXOTR_PKT_CFG_PORT_FAIL_OVER							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000170)
#define FXR_TXOTR_PKT_CFG_PORT_FAIL_OVER_RESETCSR						0x000000000000000Aull
#define FXR_TXOTR_PKT_CFG_PORT_FAIL_OVER_UNUSED_63_4_SHIFT					4
#define FXR_TXOTR_PKT_CFG_PORT_FAIL_OVER_UNUSED_63_4_MASK					0xFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_PORT_FAIL_OVER_UNUSED_63_4_SMASK					0xFFFFFFFFFFFFFFF0ull
#define FXR_TXOTR_PKT_CFG_PORT_FAIL_OVER_COUNT_SHIFT						0
#define FXR_TXOTR_PKT_CFG_PORT_FAIL_OVER_COUNT_MASK						0xFull
#define FXR_TXOTR_PKT_CFG_PORT_FAIL_OVER_COUNT_SMASK						0xFull
/*
* Table #45 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_frag_eng
* This CSR contains the configuration parameters necessary to configure the 
* Fragmentation Engine in the Fragmentation Programmable Engine 
* (FPE).
*/
#define FXR_TXOTR_PKT_CFG_FRAG_ENG								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000178)
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_RESETCSR							0x0000000000FF00FFull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_UNUSED_63_37_SHIFT						37
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_UNUSED_63_37_MASK						0x7FFFFFFull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_UNUSED_63_37_SMASK						0xFFFFFFE000000000ull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_AUTHENTICATION_SUCCESSFUL_SHIFT				36
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_AUTHENTICATION_SUCCESSFUL_MASK				0x1ull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_AUTHENTICATION_SUCCESSFUL_SMASK				0x1000000000ull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_AUTHENTICATION_COMPLETE_SHIFT				35
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_AUTHENTICATION_COMPLETE_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_AUTHENTICATION_COMPLETE_SMASK				0x800000000ull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_START_AUTHENTICATION_SHIFT					34
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_START_AUTHENTICATION_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_START_AUTHENTICATION_SMASK					0x400000000ull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_POST_FRAG_PRIO_SHIFT						33
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_POST_FRAG_PRIO_MASK						0x1ull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_POST_FRAG_PRIO_SMASK						0x200000000ull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_MSG_ORDERING_OFF_SHIFT					32
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_MSG_ORDERING_OFF_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_MSG_ORDERING_OFF_SMASK					0x100000000ull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_MAX_DMA_PREFETCH_SHIFT					16
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_MAX_DMA_PREFETCH_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_MAX_DMA_PREFETCH_SMASK					0xFFFF0000ull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_MAX_DMA_CMDS_SHIFT						0
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_MAX_DMA_CMDS_MASK						0xFFFFull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_MAX_DMA_CMDS_SMASK						0xFFFFull
/*
* Table #46 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_valid_tc_dlid
* Describes max dlid per port, valid TC's per port.
*/
#define FXR_TXOTR_PKT_CFG_VALID_TC_DLID								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000180)
#define FXR_TXOTR_PKT_CFG_VALID_TC_DLID_RESETCSR						0x00FFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_VALID_TC_DLID_TC_VALID_P1_SHIFT					52
#define FXR_TXOTR_PKT_CFG_VALID_TC_DLID_TC_VALID_P1_MASK					0xFull
#define FXR_TXOTR_PKT_CFG_VALID_TC_DLID_TC_VALID_P1_SMASK					0xF0000000000000ull
#define FXR_TXOTR_PKT_CFG_VALID_TC_DLID_MAX_DLID_P1_SHIFT					28
#define FXR_TXOTR_PKT_CFG_VALID_TC_DLID_MAX_DLID_P1_MASK					0xFFFFFFull
#define FXR_TXOTR_PKT_CFG_VALID_TC_DLID_MAX_DLID_P1_SMASK					0xFFFFFF0000000ull
#define FXR_TXOTR_PKT_CFG_VALID_TC_DLID_TC_VALID_P0_SHIFT					24
#define FXR_TXOTR_PKT_CFG_VALID_TC_DLID_TC_VALID_P0_MASK					0xFull
#define FXR_TXOTR_PKT_CFG_VALID_TC_DLID_TC_VALID_P0_SMASK					0xF000000ull
#define FXR_TXOTR_PKT_CFG_VALID_TC_DLID_MAX_DLID_P0_SHIFT					0
#define FXR_TXOTR_PKT_CFG_VALID_TC_DLID_MAX_DLID_P0_MASK					0xFFFFFFull
#define FXR_TXOTR_PKT_CFG_VALID_TC_DLID_MAX_DLID_P0_SMASK					0xFFFFFFull
/*
* Table #47 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_psn_cache_client_disable
* This CSR contains the disable bit for client psn cache requests. A one value 
* will hold off any client requests. This has no effect on csr psn cache 
* requests. 
*/
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_CLIENT_DISABLE						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000188)
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_CLIENT_DISABLE_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_CLIENT_DISABLE_CLIENT_PSN_CACHE_REQUEST_DISABLE_SHIFT	0
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_CLIENT_DISABLE_CLIENT_PSN_CACHE_REQUEST_DISABLE_MASK	0x1ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_CLIENT_DISABLE_CLIENT_PSN_CACHE_REQUEST_DISABLE_SMASK	0x1ull
/*
* Table #48 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_psn_base_addr_p0_tc
* Host memory base addresses of psn state (both RX and TX) for port 0, per tc. 
* 
*/
#define FXR_TXOTR_PKT_CFG_PSN_BASE_ADDR_P0_TC							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000190)
#define FXR_TXOTR_PKT_CFG_PSN_BASE_ADDR_P0_TC_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_PSN_BASE_ADDR_P0_TC_ADDRESS_SHIFT					12
#define FXR_TXOTR_PKT_CFG_PSN_BASE_ADDR_P0_TC_ADDRESS_MASK					0x1FFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_PSN_BASE_ADDR_P0_TC_ADDRESS_SMASK					0x1FFFFFFFFFFF000ull
/*
* Table #49 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_psn_base_addr_p1_tc
* Host memory base addresses of psn state(both RX and TX) for port 1, per 
* tc.
*/
#define FXR_TXOTR_PKT_CFG_PSN_BASE_ADDR_P1_TC							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000001B0)
#define FXR_TXOTR_PKT_CFG_PSN_BASE_ADDR_P1_TC_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_PSN_BASE_ADDR_P1_TC_ADDRESS_SHIFT					12
#define FXR_TXOTR_PKT_CFG_PSN_BASE_ADDR_P1_TC_ADDRESS_MASK					0x1FFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_PSN_BASE_ADDR_P1_TC_ADDRESS_SMASK					0x1FFFFFFFFFFF000ull
/*
* Table #50 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_psn_cache_access_ctl
* The PSN Cache access control can be used to write or read, PSN cache data and 
* tag memories as well as invalidate tag entries and flush cache data to host 
* memory. For reads, if the requested address is not in cache, a fill request is 
* sent to hiarb with possibly an evict request. For writes, if the requested 
* address is not in cache, an evict request is sent to hiarb (assuming no 
* invalid entries in tag line) and then the PSN Cache Data is written.
*/
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000001D0)
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_RESETCSR						0x63FFFFFFE0000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_BAD_ADDR_SHIFT					63
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_BAD_ADDR_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_BAD_ADDR_SMASK					0x8000000000000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_BUSY_SHIFT					62
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_BUSY_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_BUSY_SMASK					0x4000000000000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_CMD_SHIFT					58
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_CMD_MASK						0xFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_CMD_SMASK					0x3C00000000000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_MASK_ADDRESS_SHIFT				29
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_MASK_ADDRESS_MASK				0x1FFFFFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_MASK_ADDRESS_SMASK				0x3FFFFFFE0000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_ADDRESS_SHIFT					0
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_ADDRESS_MASK					0x1FFFFFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_ADDRESS_SMASK					0x1FFFFFFFull
/*
* Table #51 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_psn_cache_access_data
* This csr along with #%%#txotr_pkt_cfg_psn_cache_access_ctl#%%# is used to 
* read, write (warmup/teardown) the PSN Cache. See  #%%#txotr_pkt_cfg_psn_cache_access_ctl#%%# 
* for proper technique. .
*/
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000001D8)
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_CTRL_SHIFT					60
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_CTRL_MASK					0xFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_CTRL_SMASK					0xF000000000000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_MAX_SEQ_DIST_SHIFT				48
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_MAX_SEQ_DIST_MASK				0xFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_MAX_SEQ_DIST_SMASK				0xFFF000000000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_OLDEST_UNORDERED_SHIFT				32
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_OLDEST_UNORDERED_MASK				0xFFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_OLDEST_UNORDERED_SMASK				0xFFFF00000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_NEXT_SEQ_UNORDERED_SHIFT			16
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_NEXT_SEQ_UNORDERED_MASK				0xFFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_NEXT_SEQ_UNORDERED_SMASK			0xFFFF0000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_NEXT_SEQ_ORDERED_SHIFT				0
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_NEXT_SEQ_ORDERED_MASK				0xFFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_NEXT_SEQ_ORDERED_SMASK				0xFFFFull
/*
* Table #52 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_psn_cache_access_data_bit_enable
* This CSR is used for masked bit writes to the PSN Cache. This CSR is only used 
* with CACHE_CMD_WR. If this CSR is all 1's, no read or fill is necessary. If 
* this CSR is not all 1's, a read-modify-write is required which may require a 
* fill from host memory. See  #%%#txotr_pkt_cfg_psn_cache_access_ctl#%%# for 
* proper technique.
*/
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE					(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000001E0)
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_RESETCSR				0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_CTRL_SHIFT				60
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_CTRL_MASK				0xFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_CTRL_SMASK				0xF000000000000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_MAX_SEQ_DIST_SHIFT			48
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_MAX_SEQ_DIST_MASK			0xFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_MAX_SEQ_DIST_SMASK			0xFFF000000000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_OLDEST_UNORDERED_SHIFT		32
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_OLDEST_UNORDERED_MASK		0xFFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_OLDEST_UNORDERED_SMASK		0xFFFF00000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_NEXT_SEQ_UNORDERED_SHIFT		16
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_NEXT_SEQ_UNORDERED_MASK		0xFFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_NEXT_SEQ_UNORDERED_SMASK		0xFFFF0000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_NEXT_SEQ_ORDERED_SHIFT		0
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_NEXT_SEQ_ORDERED_MASK		0xFFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_NEXT_SEQ_ORDERED_SMASK		0xFFFFull
/*
* Table #53 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_psn_cache_access_tag
* This is the psn cache tag data csr. This csr along with   is used to read, 
* write the PSN Cache Tag. See  #%%#txotr_pkt_cfg_psn_cache_access_ctl#%%# for 
* proper technique. This layout is for two ways. There are 8 of these regs for a 
* total of 16 ways.
*/
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000001E8)
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG_RESERVE_HI_SHIFT					62
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG_RESERVE_HI_MASK					0x3ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG_RESERVE_HI_SMASK					0xC000000000000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG_TAG_WAY_VALID_HI_SHIFT				61
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG_TAG_WAY_VALID_HI_MASK				0x1ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG_TAG_WAY_VALID_HI_SMASK				0x2000000000000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG_TAG_WAY_ADDR_HI_SHIFT				32
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG_TAG_WAY_ADDR_HI_MASK				0x1FFFFFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG_TAG_WAY_ADDR_HI_SMASK				0x1FFFFFFF00000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG_RESERVE_LO_SHIFT					30
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG_RESERVE_LO_MASK					0x3ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG_RESERVE_LO_SMASK					0xC0000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG_TAG_WAY_VALID_LO_SHIFT				29
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG_TAG_WAY_VALID_LO_MASK				0x1ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG_TAG_WAY_VALID_LO_SMASK				0x20000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG_TAG_WAY_ADDR_LO_SHIFT				0
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG_TAG_WAY_ADDR_LO_MASK				0x1FFFFFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG_TAG_WAY_ADDR_LO_SMASK				0x1FFFFFFFull
/*
* Table #54 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_rfs
* This CSR is used to configure the Rendezvous Fragment Size (RFS) per MC/TC. A 
* setting of 3'd7 is not valid and defaults to 8KB. This CSR should be 
* configured to the exact same settings as #%%#Section 29.8.3.22, 'Rendezvous 
* Fragment Size Configuration CSR'#%%#.
*/
#define FXR_TXOTR_PKT_CFG_RFS									(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000228)
#define FXR_TXOTR_PKT_CFG_RFS_RESETCSR								0x0000000055555555ull
#define FXR_TXOTR_PKT_CFG_RFS_UNUSED_63_31_SHIFT						31
#define FXR_TXOTR_PKT_CFG_RFS_UNUSED_63_31_MASK							0x1FFFFFFFFull
#define FXR_TXOTR_PKT_CFG_RFS_UNUSED_63_31_SMASK						0xFFFFFFFF80000000ull
#define FXR_TXOTR_PKT_CFG_RFS_MC1TC3_SHIFT_SHIFT						28
#define FXR_TXOTR_PKT_CFG_RFS_MC1TC3_SHIFT_MASK							0x7ull
#define FXR_TXOTR_PKT_CFG_RFS_MC1TC3_SHIFT_SMASK						0x70000000ull
#define FXR_TXOTR_PKT_CFG_RFS_UNUSED_27_SHIFT							27
#define FXR_TXOTR_PKT_CFG_RFS_UNUSED_27_MASK							0x1ull
#define FXR_TXOTR_PKT_CFG_RFS_UNUSED_27_SMASK							0x8000000ull
#define FXR_TXOTR_PKT_CFG_RFS_MC1TC2_SHIFT_SHIFT						24
#define FXR_TXOTR_PKT_CFG_RFS_MC1TC2_SHIFT_MASK							0x7ull
#define FXR_TXOTR_PKT_CFG_RFS_MC1TC2_SHIFT_SMASK						0x7000000ull
#define FXR_TXOTR_PKT_CFG_RFS_UNUSED_23_SHIFT							23
#define FXR_TXOTR_PKT_CFG_RFS_UNUSED_23_MASK							0x1ull
#define FXR_TXOTR_PKT_CFG_RFS_UNUSED_23_SMASK							0x800000ull
#define FXR_TXOTR_PKT_CFG_RFS_MC1TC1_SHIFT_SHIFT						20
#define FXR_TXOTR_PKT_CFG_RFS_MC1TC1_SHIFT_MASK							0x7ull
#define FXR_TXOTR_PKT_CFG_RFS_MC1TC1_SHIFT_SMASK						0x700000ull
#define FXR_TXOTR_PKT_CFG_RFS_UNUSED_19_SHIFT							19
#define FXR_TXOTR_PKT_CFG_RFS_UNUSED_19_MASK							0x1ull
#define FXR_TXOTR_PKT_CFG_RFS_UNUSED_19_SMASK							0x80000ull
#define FXR_TXOTR_PKT_CFG_RFS_MC1TC0_SHIFT_SHIFT						16
#define FXR_TXOTR_PKT_CFG_RFS_MC1TC0_SHIFT_MASK							0x7ull
#define FXR_TXOTR_PKT_CFG_RFS_MC1TC0_SHIFT_SMASK						0x70000ull
#define FXR_TXOTR_PKT_CFG_RFS_UNUSED_15_SHIFT							15
#define FXR_TXOTR_PKT_CFG_RFS_UNUSED_15_MASK							0x1ull
#define FXR_TXOTR_PKT_CFG_RFS_UNUSED_15_SMASK							0x8000ull
#define FXR_TXOTR_PKT_CFG_RFS_MC0TC3_SHIFT_SHIFT						12
#define FXR_TXOTR_PKT_CFG_RFS_MC0TC3_SHIFT_MASK							0x7ull
#define FXR_TXOTR_PKT_CFG_RFS_MC0TC3_SHIFT_SMASK						0x7000ull
#define FXR_TXOTR_PKT_CFG_RFS_UNUSED_11_SHIFT							11
#define FXR_TXOTR_PKT_CFG_RFS_UNUSED_11_MASK							0x1ull
#define FXR_TXOTR_PKT_CFG_RFS_UNUSED_11_SMASK							0x800ull
#define FXR_TXOTR_PKT_CFG_RFS_MC0TC2_SHIFT_SHIFT						8
#define FXR_TXOTR_PKT_CFG_RFS_MC0TC2_SHIFT_MASK							0x7ull
#define FXR_TXOTR_PKT_CFG_RFS_MC0TC2_SHIFT_SMASK						0x700ull
#define FXR_TXOTR_PKT_CFG_RFS_UNUSED_7_SHIFT							7
#define FXR_TXOTR_PKT_CFG_RFS_UNUSED_7_MASK							0x1ull
#define FXR_TXOTR_PKT_CFG_RFS_UNUSED_7_SMASK							0x80ull
#define FXR_TXOTR_PKT_CFG_RFS_MC0TC1_SHIFT_SHIFT						4
#define FXR_TXOTR_PKT_CFG_RFS_MC0TC1_SHIFT_MASK							0x7ull
#define FXR_TXOTR_PKT_CFG_RFS_MC0TC1_SHIFT_SMASK						0x70ull
#define FXR_TXOTR_PKT_CFG_RFS_UNUSED_3_SHIFT							3
#define FXR_TXOTR_PKT_CFG_RFS_UNUSED_3_MASK							0x1ull
#define FXR_TXOTR_PKT_CFG_RFS_UNUSED_3_SMASK							0x8ull
#define FXR_TXOTR_PKT_CFG_RFS_MC0TC0_SHIFT_SHIFT						0
#define FXR_TXOTR_PKT_CFG_RFS_MC0TC0_SHIFT_MASK							0x7ull
#define FXR_TXOTR_PKT_CFG_RFS_MC0TC0_SHIFT_SMASK						0x7ull
/*
* Table #55 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_rc_ordered_map
* This CSR contains the mapping of the packet Routing Control (rc[2:0]) field to 
* ordered needed for Packet Sequence Number (PSN) checking. This configuration 
* of this CSR must be identical to the configuration of #%%#Section 29.8.3.27, 
* 'Routing Control Ordered Mapping Configuration CSR'#%%# in the message CSRs. 
* 
*/
#define FXR_TXOTR_PKT_CFG_RC_ORDERED_MAP							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000230)
#define FXR_TXOTR_PKT_CFG_RC_ORDERED_MAP_RESETCSR						0x000000000000000Full
#define FXR_TXOTR_PKT_CFG_RC_ORDERED_MAP_ORDERED_SHIFT						0
#define FXR_TXOTR_PKT_CFG_RC_ORDERED_MAP_ORDERED_MASK						0xFFull
#define FXR_TXOTR_PKT_CFG_RC_ORDERED_MAP_ORDERED_SMASK						0xFFull
/*
* Table #56 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_nack_retras_disable
* This CSR disables NACK-based retransmission. 
*/
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000238)
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_RESOURCE_TC3_SHIFT				7
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_RESOURCE_TC3_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_RESOURCE_TC3_SMASK				0x80ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_RESOURCE_TC2_SHIFT				6
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_RESOURCE_TC2_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_RESOURCE_TC2_SMASK				0x40ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_RESOURCE_TC1_SHIFT				5
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_RESOURCE_TC1_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_RESOURCE_TC1_SMASK				0x20ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_RESOURCE_TC0_SHIFT				4
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_RESOURCE_TC0_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_RESOURCE_TC0_SMASK				0x10ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_OOS_TC3_SHIFT					3
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_OOS_TC3_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_OOS_TC3_SMASK					0x8ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_OOS_TC2_SHIFT					2
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_OOS_TC2_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_OOS_TC2_SMASK					0x4ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_OOS_TC1_SHIFT					1
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_OOS_TC1_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_OOS_TC1_SMASK					0x2ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_OOS_TC0_SHIFT					0
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_OOS_TC0_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_OOS_TC0_SMASK					0x1ull
/*
* Table #57 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_retrans_blocking
* This CSR disables NACK-based retransmission. 
*/
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000240)
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC1TC3_PF_SHIFT					15
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC1TC3_PF_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC1TC3_PF_SMASK					0x8000ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC1TC2_PF_SHIFT					14
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC1TC2_PF_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC1TC2_PF_SMASK					0x4000ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC1TC1_PF_SHIFT					13
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC1TC1_PF_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC1TC1_PF_SMASK					0x2000ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC1TC0_PF_SHIFT					12
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC1TC0_PF_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC1TC0_PF_SMASK					0x1000ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC0TC3_PF_SHIFT					11
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC0TC3_PF_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC0TC3_PF_SMASK					0x800ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC0TC2_PF_SHIFT					10
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC0TC2_PF_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC0TC2_PF_SMASK					0x400ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC0TC1_PF_SHIFT					9
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC0TC1_PF_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC0TC1_PF_SMASK					0x200ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC0TC0_PF_SHIFT					8
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC0TC0_PF_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC0TC0_PF_SMASK					0x100ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC1TC3_FP_SHIFT					7
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC1TC3_FP_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC1TC3_FP_SMASK					0x80ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC1TC2_FP_SHIFT					6
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC1TC2_FP_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC1TC2_FP_SMASK					0x40ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC1TC1_FP_SHIFT					5
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC1TC1_FP_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC1TC1_FP_SMASK					0x20ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC1TC0_FP_SHIFT					4
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC1TC0_FP_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC1TC0_FP_SMASK					0x10ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC0TC3_FP_SHIFT					3
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC0TC3_FP_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC0TC3_FP_SMASK					0x8ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC0TC2_FP_SHIFT					2
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC0TC2_FP_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC0TC2_FP_SMASK					0x4ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC0TC1_FP_SHIFT					1
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC0TC1_FP_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC0TC1_FP_SMASK					0x2ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC0TC0_FP_SHIFT					0
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC0TC0_FP_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_RETRANS_BLOCKING_MC0TC0_FP_SMASK					0x1ull
/*
* Table #58 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_lpsn_max_dist
* This CSR contains the configuration parameters necessary to configure the 
* maximum distance between the oldest Local Packet Sequence Number and the 
* current Local Packet Sequence Number. When the distance between the oldest 
* LPSN and the current LPSN reaches #%%#MAX_DIST#%%#, the MCTC corresponding to 
* the packet which detected the violation is stalled until the oldest LPSN is 
* updated and the distance is no longer violated.
*/
#define FXR_TXOTR_PKT_CFG_LPSN_MAX_DIST								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000248)
#define FXR_TXOTR_PKT_CFG_LPSN_MAX_DIST_RESETCSR						0x0000000000007F9Cull
#define FXR_TXOTR_PKT_CFG_LPSN_MAX_DIST_UNUSED_63_16_SHIFT					16
#define FXR_TXOTR_PKT_CFG_LPSN_MAX_DIST_UNUSED_63_16_MASK					0xFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_LPSN_MAX_DIST_UNUSED_63_16_SMASK					0xFFFFFFFFFFFF0000ull
#define FXR_TXOTR_PKT_CFG_LPSN_MAX_DIST_MAX_DIST_SHIFT						0
#define FXR_TXOTR_PKT_CFG_LPSN_MAX_DIST_MAX_DIST_MASK						0xFFFFull
#define FXR_TXOTR_PKT_CFG_LPSN_MAX_DIST_MAX_DIST_SMASK						0xFFFFull
/*
* Table #59 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_force_msg_to_fpe
* This CSR is used to force Fast Path messages to the Fragmentation Programmable 
* Engine. This CSR must be configured identically to #%%#Section 29.8.3.16, 
* 'Force Message to Fragmentation Programmable Engine Configuration 
* CSR'#%%#.
*/
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000250)
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_UNUSED_63_15_SHIFT					15
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_UNUSED_63_15_MASK					0x1FFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_UNUSED_63_15_SMASK					0xFFFFFFFFFFFF8000ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_E2E_CTRL_SHIFT					14
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_E2E_CTRL_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_E2E_CTRL_SMASK					0x4000ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_CTS_SHIFT						13
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_CTS_MASK						0x1ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_CTS_SMASK						0x2000ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_BASIC_ACK_SHIFT					12
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_BASIC_ACK_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_BASIC_ACK_SMASK					0x1000ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_DMA_REPLY_SHIFT					11
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_DMA_REPLY_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_DMA_REPLY_SMASK					0x800ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_BUFF_REPLY_SHIFT					10
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_BUFF_REPLY_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_BUFF_REPLY_SMASK					0x400ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_STANDARD_ACK_SHIFT					9
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_STANDARD_ACK_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_STANDARD_ACK_SMASK					0x200ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_DMA_TWOOP_SHIFT					8
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_DMA_TWOOP_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_DMA_TWOOP_SMASK					0x100ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_DMA_FATOMIC_SHIFT					7
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_DMA_FATOMIC_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_DMA_FATOMIC_SMASK					0x80ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_BUFF_TWOOP_SHIFT					6
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_BUFF_TWOOP_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_BUFF_TWOOP_SMASK					0x40ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_BUFF_FATOMIC_SHIFT					5
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_BUFF_FATOMIC_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_BUFF_FATOMIC_SMASK					0x20ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_DMA_GET_SHIFT					4
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_DMA_GET_MASK						0x1ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_DMA_GET_SMASK					0x10ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_BUFF_PA_SHIFT					3
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_BUFF_PA_MASK						0x1ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_BUFF_PA_SMASK					0x8ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_DMA_PA_SHIFT						2
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_DMA_PA_MASK						0x1ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_DMA_PA_SMASK						0x4ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_RDV_EVENT_SHIFT					1
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_RDV_EVENT_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_RDV_EVENT_SMASK					0x2ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_RTS_SHIFT						0
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_RTS_MASK						0x1ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_RTS_SMASK						0x1ull
/*
* Table #60 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_cfg_entropy
* This CSR is used to configure the entropy field inserted into packets 
* generated by OTR on a per TC basis.
*/
#define FXR_TXOTR_PKT_CFG_ENTROPY								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000258)
#define FXR_TXOTR_PKT_CFG_ENTROPY_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_ENTROPY_TC3_SHIFT							48
#define FXR_TXOTR_PKT_CFG_ENTROPY_TC3_MASK							0xFFFFull
#define FXR_TXOTR_PKT_CFG_ENTROPY_TC3_SMASK							0xFFFF000000000000ull
#define FXR_TXOTR_PKT_CFG_ENTROPY_TC2_SHIFT							32
#define FXR_TXOTR_PKT_CFG_ENTROPY_TC2_MASK							0xFFFFull
#define FXR_TXOTR_PKT_CFG_ENTROPY_TC2_SMASK							0xFFFF00000000ull
#define FXR_TXOTR_PKT_CFG_ENTROPY_TC1_SHIFT							16
#define FXR_TXOTR_PKT_CFG_ENTROPY_TC1_MASK							0xFFFFull
#define FXR_TXOTR_PKT_CFG_ENTROPY_TC1_SMASK							0xFFFF0000ull
#define FXR_TXOTR_PKT_CFG_ENTROPY_TC0_SHIFT							0
#define FXR_TXOTR_PKT_CFG_ENTROPY_TC0_MASK							0xFFFFull
#define FXR_TXOTR_PKT_CFG_ENTROPY_TC0_SMASK							0xFFFFull
/*
* Table #61 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_sts_1
* This is the Error Status CSR. Bits are set by hardware or by writing to the 
* #%%#txotr_pkt_err_frc_1#%%# CSR. Bits are cleared by writing to the 
* #%%#txotr_pkt_err_clr_1#%%# CSR.
*/
#define FXR_TXOTR_PKT_ERR_STS_1									(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002000)
#define FXR_TXOTR_PKT_ERR_STS_1_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_UNUSED_63_41_SHIFT						41
#define FXR_TXOTR_PKT_ERR_STS_1_UNUSED_63_41_MASK						0x7FFFFFull
#define FXR_TXOTR_PKT_ERR_STS_1_UNUSED_63_41_SMASK						0xFFFFFE0000000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_TC3_RETRANS_LIMIT_SHIFT						40
#define FXR_TXOTR_PKT_ERR_STS_1_TC3_RETRANS_LIMIT_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_TC3_RETRANS_LIMIT_SMASK						0x10000000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_TC2_RETRANS_LIMIT_SHIFT						39
#define FXR_TXOTR_PKT_ERR_STS_1_TC2_RETRANS_LIMIT_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_TC2_RETRANS_LIMIT_SMASK						0x8000000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_TC1_RETRANS_LIMIT_SHIFT						38
#define FXR_TXOTR_PKT_ERR_STS_1_TC1_RETRANS_LIMIT_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_TC1_RETRANS_LIMIT_SMASK						0x4000000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_TC0_RETRANS_LIMIT_SHIFT						37
#define FXR_TXOTR_PKT_ERR_STS_1_TC0_RETRANS_LIMIT_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_TC0_RETRANS_LIMIT_SMASK						0x2000000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_TC3_FAIL_OVER_SHIFT						36
#define FXR_TXOTR_PKT_ERR_STS_1_TC3_FAIL_OVER_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_TC3_FAIL_OVER_SMASK						0x1000000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_TC2_FAIL_OVER_SHIFT						35
#define FXR_TXOTR_PKT_ERR_STS_1_TC2_FAIL_OVER_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_TC2_FAIL_OVER_SMASK						0x800000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_TC1_FAIL_OVER_SHIFT						34
#define FXR_TXOTR_PKT_ERR_STS_1_TC1_FAIL_OVER_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_TC1_FAIL_OVER_SMASK						0x400000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_TC0_FAIL_OVER_SHIFT						33
#define FXR_TXOTR_PKT_ERR_STS_1_TC0_FAIL_OVER_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_TC0_FAIL_OVER_SMASK						0x200000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_LOCAL_SEQ_STALL_SHIFT						32
#define FXR_TXOTR_PKT_ERR_STS_1_LOCAL_SEQ_STALL_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_LOCAL_SEQ_STALL_SMASK						0x100000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_TXDMA_SHIFT							31
#define FXR_TXOTR_PKT_ERR_STS_1_TXDMA_MASK							0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_TXDMA_SMASK							0x80000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_RETRANS_NACK_SHIFT						30
#define FXR_TXOTR_PKT_ERR_STS_1_RETRANS_NACK_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_RETRANS_NACK_SMASK						0x40000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_HASH_TIMEOUT_SHIFT						29
#define FXR_TXOTR_PKT_ERR_STS_1_HASH_TIMEOUT_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_HASH_TIMEOUT_SMASK						0x20000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_UNCONNECTED_DLID_SHIFT						28
#define FXR_TXOTR_PKT_ERR_STS_1_UNCONNECTED_DLID_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_UNCONNECTED_DLID_SMASK						0x10000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_MISROUTED_PKT_SHIFT						27
#define FXR_TXOTR_PKT_ERR_STS_1_MISROUTED_PKT_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_MISROUTED_PKT_SMASK						0x8000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_AT_RSP_SHIFT							26
#define FXR_TXOTR_PKT_ERR_STS_1_AT_RSP_MASK							0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_AT_RSP_SMASK							0x4000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_PKT_QUEUE_UNF_SHIFT						25
#define FXR_TXOTR_PKT_ERR_STS_1_PKT_QUEUE_UNF_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_PKT_QUEUE_UNF_SMASK						0x2000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_PKT_QUEUE_OVF_SHIFT						24
#define FXR_TXOTR_PKT_ERR_STS_1_PKT_QUEUE_OVF_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_PKT_QUEUE_OVF_SMASK						0x1000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_HI_SBE_SHIFT							23
#define FXR_TXOTR_PKT_ERR_STS_1_HI_SBE_MASK							0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_HI_SBE_SMASK							0x800000ull
#define FXR_TXOTR_PKT_ERR_STS_1_HI_MBE_SHIFT							22
#define FXR_TXOTR_PKT_ERR_STS_1_HI_MBE_MASK							0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_HI_MBE_SMASK							0x400000ull
#define FXR_TXOTR_PKT_ERR_STS_1_RX_PKT_SBE_SHIFT						21
#define FXR_TXOTR_PKT_ERR_STS_1_RX_PKT_SBE_MASK							0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_RX_PKT_SBE_SMASK						0x200000ull
#define FXR_TXOTR_PKT_ERR_STS_1_RX_PKT_MBE_SHIFT						20
#define FXR_TXOTR_PKT_ERR_STS_1_RX_PKT_MBE_MASK							0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_RX_PKT_MBE_SMASK						0x100000ull
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_DATA_MEM_SBE_SHIFT						19
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_DATA_MEM_SBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_DATA_MEM_SBE_SMASK						0x80000ull
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_DATA_MEM_MBE_SHIFT						18
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_DATA_MEM_MBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_DATA_MEM_MBE_SMASK						0x40000ull
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_PROG_MEM_SBE_SHIFT						17
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_PROG_MEM_SBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_PROG_MEM_SBE_SMASK						0x20000ull
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_PROG_MEM_MBE_SHIFT						16
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_PROG_MEM_MBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_PROG_MEM_MBE_SMASK						0x10000ull
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_CACHE_TAG_SBE_SHIFT						15
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_CACHE_TAG_SBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_CACHE_TAG_SBE_SMASK						0x8000ull
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_CACHE_TAG_MBE_SHIFT						14
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_CACHE_TAG_MBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_CACHE_TAG_MBE_SMASK						0x4000ull
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_CACHE_DATA_SBE_SHIFT					13
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_CACHE_DATA_SBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_CACHE_DATA_SBE_SMASK					0x2000ull
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_CACHE_DATA_MBE_SHIFT					12
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_CACHE_DATA_MBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_CACHE_DATA_MBE_SMASK					0x1000ull
#define FXR_TXOTR_PKT_ERR_STS_1_OTM_SBE_SHIFT							11
#define FXR_TXOTR_PKT_ERR_STS_1_OTM_SBE_MASK							0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_OTM_SBE_SMASK							0x800ull
#define FXR_TXOTR_PKT_ERR_STS_1_OTM_MBE_SHIFT							10
#define FXR_TXOTR_PKT_ERR_STS_1_OTM_MBE_MASK							0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_OTM_MBE_SMASK							0x400ull
#define FXR_TXOTR_PKT_ERR_STS_1_IOVEC_BUFF_SBE_SHIFT						9
#define FXR_TXOTR_PKT_ERR_STS_1_IOVEC_BUFF_SBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_IOVEC_BUFF_SBE_SMASK						0x200ull
#define FXR_TXOTR_PKT_ERR_STS_1_IOVEC_BUFF_MBE_SHIFT						8
#define FXR_TXOTR_PKT_ERR_STS_1_IOVEC_BUFF_MBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_IOVEC_BUFF_MBE_SMASK						0x100ull
#define FXR_TXOTR_PKT_ERR_STS_1_HASH_TABLE_SBE_SHIFT						7
#define FXR_TXOTR_PKT_ERR_STS_1_HASH_TABLE_SBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_HASH_TABLE_SBE_SMASK						0x80ull
#define FXR_TXOTR_PKT_ERR_STS_1_HASH_TABLE_MBE_SHIFT						6
#define FXR_TXOTR_PKT_ERR_STS_1_HASH_TABLE_MBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_HASH_TABLE_MBE_SMASK						0x40ull
#define FXR_TXOTR_PKT_ERR_STS_1_PKTID_LIST_SBE_SHIFT						5
#define FXR_TXOTR_PKT_ERR_STS_1_PKTID_LIST_SBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_PKTID_LIST_SBE_SMASK						0x20ull
#define FXR_TXOTR_PKT_ERR_STS_1_PKTID_LIST_MBE_SHIFT						4
#define FXR_TXOTR_PKT_ERR_STS_1_PKTID_LIST_MBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_PKTID_LIST_MBE_SMASK						0x10ull
#define FXR_TXOTR_PKT_ERR_STS_1_OPB_SBE_SHIFT							3
#define FXR_TXOTR_PKT_ERR_STS_1_OPB_SBE_MASK							0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_OPB_SBE_SMASK							0x8ull
#define FXR_TXOTR_PKT_ERR_STS_1_OPB_MBE_SHIFT							2
#define FXR_TXOTR_PKT_ERR_STS_1_OPB_MBE_MASK							0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_OPB_MBE_SMASK							0x4ull
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_FIRMWARE_SHIFT						1
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_FIRMWARE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_FIRMWARE_SMASK						0x2ull
#define FXR_TXOTR_PKT_ERR_STS_1_DIAGNOSTIC_SHIFT						0
#define FXR_TXOTR_PKT_ERR_STS_1_DIAGNOSTIC_MASK							0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_DIAGNOSTIC_SMASK						0x1ull
/*
* Table #62 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_clr_1
* This is the Error Clear CSR. Writing a 1 to a valid bit will clear the 
* corresponding bit in the #%%#txotr_pkt_err_sts_1#%%# CSR.
*/
#define FXR_TXOTR_PKT_ERR_CLR_1									(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002008)
#define FXR_TXOTR_PKT_ERR_CLR_1_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_CLR_1_UNUSED_63_41_SHIFT						41
#define FXR_TXOTR_PKT_ERR_CLR_1_UNUSED_63_41_MASK						0x7FFFFFull
#define FXR_TXOTR_PKT_ERR_CLR_1_UNUSED_63_41_SMASK						0xFFFFFE0000000000ull
#define FXR_TXOTR_PKT_ERR_CLR_1_EVENTS_SHIFT							0
#define FXR_TXOTR_PKT_ERR_CLR_1_EVENTS_MASK							0x1FFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_CLR_1_EVENTS_SMASK							0x1FFFFFFFFFFull
/*
* Table #63 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_frc_1
* This is the Error Force CSR. Writing a 1 to a valid bit will set the 
* corresponding bit in the #%%#txotr_pkt_err_sts_1#%%# CSR.
*/
#define FXR_TXOTR_PKT_ERR_FRC_1									(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002010)
#define FXR_TXOTR_PKT_ERR_FRC_1_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_FRC_1_UNUSED_63_41_SHIFT						41
#define FXR_TXOTR_PKT_ERR_FRC_1_UNUSED_63_41_MASK						0x7FFFFFull
#define FXR_TXOTR_PKT_ERR_FRC_1_UNUSED_63_41_SMASK						0xFFFFFE0000000000ull
#define FXR_TXOTR_PKT_ERR_FRC_1_EVENTS_SHIFT							0
#define FXR_TXOTR_PKT_ERR_FRC_1_EVENTS_MASK							0x1FFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_FRC_1_EVENTS_SMASK							0x1FFFFFFFFFFull
/*
* Table #64 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_en_host_1
* This is the Error Enable CSR for the Host Interrupt. If a bit is set, the 
* corresponding error bit in #%%#txotr_pkt_err_sts_1#%%# CSR causes an interrupt 
* on the HOST interrupt signal.
*/
#define FXR_TXOTR_PKT_ERR_EN_HOST_1								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002018)
#define FXR_TXOTR_PKT_ERR_EN_HOST_1_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_EN_HOST_1_UNUSED_63_41_SHIFT						41
#define FXR_TXOTR_PKT_ERR_EN_HOST_1_UNUSED_63_41_MASK						0x7FFFFFull
#define FXR_TXOTR_PKT_ERR_EN_HOST_1_UNUSED_63_41_SMASK						0xFFFFFE0000000000ull
#define FXR_TXOTR_PKT_ERR_EN_HOST_1_EVENTS_SHIFT						0
#define FXR_TXOTR_PKT_ERR_EN_HOST_1_EVENTS_MASK							0x1FFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_EN_HOST_1_EVENTS_SMASK						0x1FFFFFFFFFFull
/*
* Table #65 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_first_host_1
* This is the First Error CSR for the Host Interrupt. When this CSR is clear, it 
* captures the next #%%#txotr_pkt_err_sts_1#%%# CSR value when a new HOST 
* interrupt occurs.
*/
#define FXR_TXOTR_PKT_ERR_FIRST_HOST_1								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002020)
#define FXR_TXOTR_PKT_ERR_FIRST_HOST_1_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_FIRST_HOST_1_UNUSED_63_41_SHIFT					41
#define FXR_TXOTR_PKT_ERR_FIRST_HOST_1_UNUSED_63_41_MASK					0x7FFFFFull
#define FXR_TXOTR_PKT_ERR_FIRST_HOST_1_UNUSED_63_41_SMASK					0xFFFFFE0000000000ull
#define FXR_TXOTR_PKT_ERR_FIRST_HOST_1_EVENTS_SHIFT						0
#define FXR_TXOTR_PKT_ERR_FIRST_HOST_1_EVENTS_MASK						0x1FFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_FIRST_HOST_1_EVENTS_SMASK						0x1FFFFFFFFFFull
/*
* Table #66 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_en_bmc_1
* This is the Error Enable CSR for the Quarantine Interrupt. If a bit is set, 
* the corresponding error bit in #%%#txotr_pkt_err_sts_1#%%# CSR causes an 
* interrupt on the QUAR interrupt signal.
*/
#define FXR_TXOTR_PKT_ERR_EN_BMC_1								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002028)
#define FXR_TXOTR_PKT_ERR_EN_BMC_1_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_EN_BMC_1_UNUSED_63_41_SHIFT						41
#define FXR_TXOTR_PKT_ERR_EN_BMC_1_UNUSED_63_41_MASK						0x7FFFFFull
#define FXR_TXOTR_PKT_ERR_EN_BMC_1_UNUSED_63_41_SMASK						0xFFFFFE0000000000ull
#define FXR_TXOTR_PKT_ERR_EN_BMC_1_EVENTS_SHIFT							0
#define FXR_TXOTR_PKT_ERR_EN_BMC_1_EVENTS_MASK							0x1FFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_EN_BMC_1_EVENTS_SMASK							0x1FFFFFFFFFFull
/*
* Table #67 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_first_bmc_1
* This is the First Error CSR for the BMC Interrupt. When this CSR is clear, it 
* captures the next #%%#txotr_pkt_err_sts_1#%%# CSR value when a new BMC 
* interrupt occurs.
*/
#define FXR_TXOTR_PKT_ERR_FIRST_BMC_1								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002030)
#define FXR_TXOTR_PKT_ERR_FIRST_BMC_1_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_FIRST_BMC_1_UNUSED_63_41_SHIFT					41
#define FXR_TXOTR_PKT_ERR_FIRST_BMC_1_UNUSED_63_41_MASK						0x7FFFFFull
#define FXR_TXOTR_PKT_ERR_FIRST_BMC_1_UNUSED_63_41_SMASK					0xFFFFFE0000000000ull
#define FXR_TXOTR_PKT_ERR_FIRST_BMC_1_EVENTS_SHIFT						0
#define FXR_TXOTR_PKT_ERR_FIRST_BMC_1_EVENTS_MASK						0x1FFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_FIRST_BMC_1_EVENTS_SMASK						0x1FFFFFFFFFFull
/*
* Table #68 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_en_quar_1
* This is the Error Enable CSR for the BMC Interrupt. If a bit is set, the 
* corresponding error bit in #%%#txotr_pkt_err_sts_1#%%# CSR causes an interrupt 
* on the BMC interrupt signal.
*/
#define FXR_TXOTR_PKT_ERR_EN_QUAR_1								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002038)
#define FXR_TXOTR_PKT_ERR_EN_QUAR_1_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_EN_QUAR_1_UNUSED_63_41_SHIFT						41
#define FXR_TXOTR_PKT_ERR_EN_QUAR_1_UNUSED_63_41_MASK						0x7FFFFFull
#define FXR_TXOTR_PKT_ERR_EN_QUAR_1_UNUSED_63_41_SMASK						0xFFFFFE0000000000ull
#define FXR_TXOTR_PKT_ERR_EN_QUAR_1_EVENTS_SHIFT						0
#define FXR_TXOTR_PKT_ERR_EN_QUAR_1_EVENTS_MASK							0x1FFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_EN_QUAR_1_EVENTS_SMASK						0x1FFFFFFFFFFull
/*
* Table #69 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_first_quar_1
* This is the First Error CSR for the Quarantine Interrupt. When this CSR is 
* clear, it captures the next #%%#txotr_pkt_err_sts_1#%%# CSR value when a new 
* QUAR interrupt occurs.
*/
#define FXR_TXOTR_PKT_ERR_FIRST_QUAR_1								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002040)
#define FXR_TXOTR_PKT_ERR_FIRST_QUAR_1_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_FIRST_QUAR_1_UNUSED_63_41_SHIFT					41
#define FXR_TXOTR_PKT_ERR_FIRST_QUAR_1_UNUSED_63_41_MASK					0x7FFFFFull
#define FXR_TXOTR_PKT_ERR_FIRST_QUAR_1_UNUSED_63_41_SMASK					0xFFFFFE0000000000ull
#define FXR_TXOTR_PKT_ERR_FIRST_QUAR_1_EVENTS_SHIFT						0
#define FXR_TXOTR_PKT_ERR_FIRST_QUAR_1_EVENTS_MASK						0x1FFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_FIRST_QUAR_1_EVENTS_SMASK						0x1FFFFFFFFFFull
/*
* Table #70 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_info_fpe_firmware
* This is the error information CSR for an error occurring in the firmware of 
* the Fragmentation Programmable Engine. State in this CSR is updated when 
* #%%#fpe_firmware#%%# error flag is set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002048)
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_UNUSED_63_32_SHIFT					32
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_UNUSED_63_32_MASK					0xFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_UNUSED_63_32_SMASK					0xFFFFFFFF00000000ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_MSG_ID_SHIFT					16
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_MSG_ID_MASK						0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_MSG_ID_SMASK					0xFFFF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_UNUSED_15_13_SHIFT					13
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_UNUSED_15_13_MASK					0x7ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_UNUSED_15_13_SMASK					0xE000ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_CTXT_SHIFT						8
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_CTXT_MASK						0x1Full
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_CTXT_SMASK						0x1F00ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_ENCODING_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_ENCODING_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_ENCODING_SMASK					0xFFull
/*
* Table #71 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_info_opb_be
* This is the error information CSR for a bit error occurring in the OPB. State 
* in this CSR is updated when #%%#opb_mbe#%%# or #%%#opb_sbe#%%# error flags are 
* set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002050)
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_UNUSED_63_48_SHIFT					48
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_UNUSED_63_48_MASK						0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_UNUSED_63_48_SMASK					0xFFFF000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_SBE_SHIFT							46
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_SBE_MASK							0x3ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_SBE_SMASK							0xC00000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_MBE_SHIFT							44
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_MBE_MASK							0x3ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_MBE_SMASK							0x300000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_UNUSED_43_41_SHIFT					41
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_UNUSED_43_41_MASK						0x7ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_UNUSED_43_41_SMASK					0xE0000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_SYNDROME_SHIFT						32
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_SYNDROME_MASK						0x1FFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_SYNDROME_SMASK						0x1FF00000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_MSG_ID_SHIFT						16
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_MSG_ID_MASK						0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_MSG_ID_SMASK						0xFFFF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_PKT_ID_SHIFT						0
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_PKT_ID_MASK						0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_PKT_ID_SMASK						0xFFFFull
/*
* Table #72 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_info_pktid_list_be
* This is the error information CSR for a bit error occurring in the Packet ID 
* Linked List. State in this CSR is updated when #%%#pktid_list_mbe#%%# or 
* #%%#pktid_list_sbe#%%# error flags are set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002058)
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_UNUSED_63_25_SHIFT					25
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_UNUSED_63_25_MASK					0x7FFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_UNUSED_63_25_SMASK					0xFFFFFFFFFE000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_MBE_SHIFT						24
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_MBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_MBE_SMASK						0x1000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_UNUSED_23_22_SHIFT					22
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_UNUSED_23_22_MASK					0x3ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_UNUSED_23_22_SMASK					0xC00000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_SYNDROME_SHIFT					16
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_SYNDROME_MASK					0x3Full
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_SYNDROME_SMASK					0x3F0000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_ADDRESS_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_ADDRESS_MASK					0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_ADDRESS_SMASK					0xFFFFull
/*
* Table #73 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_info_hash_table_be
* This is the error information CSR for a bit error occurring in the Hash Table. 
* State in this CSR is updated when #%%#hash_table_mbe#%%# or #%%#hash_table_sbe#%%# 
* error flags are set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002060)
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_UNUSED_63_25_SHIFT					25
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_UNUSED_63_25_MASK					0x7FFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_UNUSED_63_25_SMASK					0xFFFFFFFFFE000000ull
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_MBE_SHIFT						24
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_MBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_MBE_SMASK						0x1000000ull
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_SYNDROME_SHIFT					16
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_SYNDROME_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_SYNDROME_SMASK					0xFF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_UNUSED_15_7_SHIFT					7
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_UNUSED_15_7_MASK					0x1FFull
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_UNUSED_15_7_SMASK					0xFF80ull
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_ADDRESS_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_ADDRESS_MASK					0x7Full
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_ADDRESS_SMASK					0x7Full
/*
* Table #74 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_info_iovec_buff_be
* This is the error information CSR for a bit error occurring in the IOVEC 
* Buffer Space. State in this CSR is updated when #%%#iovec_buff_mbe#%%# or 
* #%%#iovec_buff_sbe#%%# error flags are set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002068)
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_UNUSED_63_40_SHIFT					40
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_UNUSED_63_40_MASK					0xFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_UNUSED_63_40_SMASK					0xFFFFFF0000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_SBE_SHIFT						32
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_SBE_MASK						0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_SBE_SMASK						0xFF00000000ull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_MBE_SHIFT						24
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_MBE_MASK						0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_MBE_SMASK						0xFF000000ull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_SYNDROME_SHIFT					16
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_SYNDROME_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_SYNDROME_SMASK					0xFF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_UNUSED_15_5_SHIFT					5
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_UNUSED_15_5_MASK					0x7FFull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_UNUSED_15_5_SMASK					0xFFE0ull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_ADDRESS_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_ADDRESS_MASK					0x1Full
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_ADDRESS_SMASK					0x1Full
/*
* Table #75 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_info_otm_be
* This is the error information CSR for a bit error occurring in the OTM. State 
* in this CSR is updated when #%%#otm_mbe#%%# or #%%#otm_sbe#%%# error flags are 
* set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002070)
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_UNUSED_63_29_SHIFT					29
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_UNUSED_63_29_MASK						0x7FFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_UNUSED_63_29_SMASK					0xFFFFFFFFE0000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_MBE_SHIFT							28
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_MBE_MASK							0x1ull
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_MBE_SMASK							0x10000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_UNUSED_27_25_SHIFT					25
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_UNUSED_27_25_MASK						0x7ull
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_UNUSED_27_25_SMASK					0xE000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_SYNDROME_SHIFT						16
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_SYNDROME_MASK						0x1FFull
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_SYNDROME_SMASK						0x1FF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_UNUSED_15_7_SHIFT						7
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_UNUSED_15_7_MASK						0x1FFull
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_UNUSED_15_7_SMASK						0xFF80ull
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_ADDRESS_SHIFT						0
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_ADDRESS_MASK						0x7Full
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_ADDRESS_SMASK						0x7Full
/*
* Table #76 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_info_psn_cache_tag_sbe
* Error Info for the PSN Cache tag #%%#psn_cache_tag_sbe#%%# events. There are 8 
* ecc domains each domain covers two tag ways. tag_mem[543:0] = 
* {tag_ecc[7:0][7:0],tag_way_data[7:0][1:0][29:0]}
*/
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002078)
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_SBE_LAST_ADDRESS_SHIFT				31
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_SBE_LAST_ADDRESS_MASK				0x7FFull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_SBE_LAST_ADDRESS_SMASK				0x3FF80000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_SBE_COUNT_SHIFT				19
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_SBE_COUNT_MASK					0xFFFull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_SBE_COUNT_SMASK				0x7FF80000ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_SBE_SHIFT					11
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_SBE_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_SBE_SMASK					0x7F800ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_SBE_LAST_DOMAIN_SHIFT				8
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_SBE_LAST_DOMAIN_MASK				0x7ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_SBE_LAST_DOMAIN_SMASK				0x700ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_SBE_LAST_SYNDROME_SHIFT			0
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_SBE_LAST_SYNDROME_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_SBE_LAST_SYNDROME_SMASK			0xFFull
/*
* Table #77 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_info_psn_cache_tag_mbe
* Error Info for the PSN Cache tag #%%#psn_cache_tag_mbe#%%# events. There are 8 
* ecc domains each domain covers two tag ways. tag_mem[543:0] = 
* {tag_ecc[7:0][7:0],tag_way_data[7:0][1:0][29:0]}
*/
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002080)
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_MBE_LAST_ADDRESS_SHIFT				23
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_MBE_LAST_ADDRESS_MASK				0x7FFull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_MBE_LAST_ADDRESS_SMASK				0x3FF800000ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_MBE_COUNT_SHIFT				19
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_MBE_COUNT_MASK					0xFull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_MBE_COUNT_SMASK				0x780000ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_MBE_SHIFT					11
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_MBE_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_MBE_SMASK					0x7F800ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_MBE_LAST_DOMAIN_SHIFT				8
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_MBE_LAST_DOMAIN_MASK				0x7ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_MBE_LAST_DOMAIN_SMASK				0x700ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_MBE_LAST_SYNDROME_SHIFT			0
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_MBE_LAST_SYNDROME_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_MBE_LAST_SYNDROME_SMASK			0xFFull
/*
* Table #78 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_info_psn_cache_data_sbe_mbe
* Error Info for the PSN Cache Data #%%#psn_cache_data_sbe#%%# and 
* #%%#psn_cache_data_mbe#%%# events. There is no address associated with these. 
* 
*/
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002088)
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE_SBE_COUNT_SHIFT				20
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE_SBE_COUNT_MASK				0xFFFull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE_SBE_COUNT_SMASK				0xFFF00000ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE_SBE_LAST_SYNDROME_SHIFT			12
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE_SBE_LAST_SYNDROME_MASK			0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE_SBE_LAST_SYNDROME_SMASK			0xFF000ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE_MBE_COUNT_SHIFT				8
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE_MBE_COUNT_MASK				0xFull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE_MBE_COUNT_SMASK				0xF00ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE_MBE_LAST_SYNDROME_SHIFT			0
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE_MBE_LAST_SYNDROME_MASK			0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE_MBE_LAST_SYNDROME_SMASK			0xFFull
/*
* Table #79 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_info_fpe_prog_mem_be
* This is the error information CSR for a bit error occurring in the FPE Program 
* Memory. State in this CSR is updated when #%%#fpe_prog_mem_mbe#%%# or 
* #%%#fpe_prog_mem_sbe#%%# error flags are set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002090)
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_UNUSED_63_26_SHIFT				26
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_UNUSED_63_26_MASK				0x3FFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_UNUSED_63_26_SMASK				0xFFFFFFFFFC000000ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_SBE_SHIFT					25
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_SBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_SBE_SMASK					0x2000000ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_MBE_SHIFT					24
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_MBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_MBE_SMASK					0x1000000ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_SYNDROME_SHIFT					16
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_SYNDROME_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_SYNDROME_SMASK					0xFF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_UNUSED_15_14_SHIFT				14
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_UNUSED_15_14_MASK				0x3ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_UNUSED_15_14_SMASK				0xC000ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_ADDRESS_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_ADDRESS_MASK					0x3FFFull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_ADDRESS_SMASK					0x3FFFull
/*
* Table #80 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_info_fpe_data_mem_be
* This is the error information CSR for a bit error occurring in the FPE Data 
* Memory. State in this CSR is updated when #%%#fpe_data_mem_mbe#%%# or 
* #%%#fpe_data_mem_sbe#%%# error flags are set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002098)
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_UNUSED_63_26_SHIFT				26
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_UNUSED_63_26_MASK				0x3FFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_UNUSED_63_26_SMASK				0xFFFFFFFFFC000000ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_SBE_SHIFT					25
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_SBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_SBE_SMASK					0x2000000ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_MBE_SHIFT					24
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_MBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_MBE_SMASK					0x1000000ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_SYNDROME_SHIFT					16
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_SYNDROME_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_SYNDROME_SMASK					0xFF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_UNUSED_15_10_SHIFT				10
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_UNUSED_15_10_MASK				0x3Full
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_UNUSED_15_10_SMASK				0xFC00ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_ADDRESS_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_ADDRESS_MASK					0x3FFull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_ADDRESS_SMASK					0x3FFull
/*
* Table #81 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_info_rx_pkt_be
* This is the error information CSR for a bit error occurring in a packet from 
* RXE2E. State in this CSR is updated when #%%#rx_pkt_mbe#%%# or 
* #%%#rx_pkt_sbe#%%# error flags are set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_RX_PKT_BE							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000020A0)
#define FXR_TXOTR_PKT_ERR_INFO_RX_PKT_BE_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_RX_PKT_BE_UNUSED_63_32_SHIFT					32
#define FXR_TXOTR_PKT_ERR_INFO_RX_PKT_BE_UNUSED_63_32_MASK					0xFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_RX_PKT_BE_UNUSED_63_32_SMASK					0xFFFFFFFF00000000ull
#define FXR_TXOTR_PKT_ERR_INFO_RX_PKT_BE_SBE_SHIFT						28
#define FXR_TXOTR_PKT_ERR_INFO_RX_PKT_BE_SBE_MASK						0xFull
#define FXR_TXOTR_PKT_ERR_INFO_RX_PKT_BE_SBE_SMASK						0xF0000000ull
#define FXR_TXOTR_PKT_ERR_INFO_RX_PKT_BE_MBE_SHIFT						24
#define FXR_TXOTR_PKT_ERR_INFO_RX_PKT_BE_MBE_MASK						0xFull
#define FXR_TXOTR_PKT_ERR_INFO_RX_PKT_BE_MBE_SMASK						0xF000000ull
#define FXR_TXOTR_PKT_ERR_INFO_RX_PKT_BE_SYNDROME_SHIFT						16
#define FXR_TXOTR_PKT_ERR_INFO_RX_PKT_BE_SYNDROME_MASK						0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_RX_PKT_BE_SYNDROME_SMASK						0xFF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_RX_PKT_BE_TBD_SHIFT						0
#define FXR_TXOTR_PKT_ERR_INFO_RX_PKT_BE_TBD_MASK						0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_RX_PKT_BE_TBD_SMASK						0xFFFFull
/*
* Table #82 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_info_hi_be
* This is the error information CSR for a bit error occurring in a Host 
* Interface response. State in this CSR is updated when #%%#hi_mbe#%%# or 
* #%%#hi_sbe#%%# error flags are set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_HI_BE								(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000020A8)
#define FXR_TXOTR_PKT_ERR_INFO_HI_BE_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_HI_BE_UNUSED_63_26_SHIFT						26
#define FXR_TXOTR_PKT_ERR_INFO_HI_BE_UNUSED_63_26_MASK						0x3FFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_HI_BE_UNUSED_63_26_SMASK						0xFFFFFFFFFC000000ull
#define FXR_TXOTR_PKT_ERR_INFO_HI_BE_SBE_SHIFT							25
#define FXR_TXOTR_PKT_ERR_INFO_HI_BE_SBE_MASK							0x1ull
#define FXR_TXOTR_PKT_ERR_INFO_HI_BE_SBE_SMASK							0x2000000ull
#define FXR_TXOTR_PKT_ERR_INFO_HI_BE_MBE_SHIFT							24
#define FXR_TXOTR_PKT_ERR_INFO_HI_BE_MBE_MASK							0x1ull
#define FXR_TXOTR_PKT_ERR_INFO_HI_BE_MBE_SMASK							0x1000000ull
#define FXR_TXOTR_PKT_ERR_INFO_HI_BE_SYNDROME_SHIFT						16
#define FXR_TXOTR_PKT_ERR_INFO_HI_BE_SYNDROME_MASK						0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_HI_BE_SYNDROME_SMASK						0xFF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_HI_BE_TBD_SHIFT							0
#define FXR_TXOTR_PKT_ERR_INFO_HI_BE_TBD_MASK							0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_HI_BE_TBD_SMASK							0xFFFFull
/*
* Table #83 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_info_pkt_ovf_unf
* This is the error information CSR for a overflow or underflow error occurring 
* in a queue in the tx_otr_pkt partition. State in this CSR is updated when 
* #%%#pkt_queue_unf#%%# or #%%#pkt_queue_ovf#%%# error flags are 
* set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_PKT_OVF_UNF							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000020B0)
#define FXR_TXOTR_PKT_ERR_INFO_PKT_OVF_UNF_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKT_OVF_UNF_UNUSED_63_16_SHIFT					16
#define FXR_TXOTR_PKT_ERR_INFO_PKT_OVF_UNF_UNUSED_63_16_MASK					0xFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKT_OVF_UNF_UNUSED_63_16_SMASK					0xFFFFFFFFFFFF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKT_OVF_UNF_UNF_QUEUE_SHIFT					8
#define FXR_TXOTR_PKT_ERR_INFO_PKT_OVF_UNF_UNF_QUEUE_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKT_OVF_UNF_UNF_QUEUE_SMASK					0xFF00ull
#define FXR_TXOTR_PKT_ERR_INFO_PKT_OVF_UNF_OVF_QUEUE_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_PKT_OVF_UNF_OVF_QUEUE_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKT_OVF_UNF_OVF_QUEUE_SMASK					0xFFull
/*
* Table #84 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_info_at_rsp
* This is the error information CSR for an error in an Address Translation 
* response. State in this CSR is updated when #%%#at_rsp#%%# error flag is 
* set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP								(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000020B8)
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_UNUSED_63_25_SHIFT					25
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_UNUSED_63_25_MASK						0x7FFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_UNUSED_63_25_SMASK					0xFFFFFFFFFE000000ull
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_REQUESTOR_SHIFT						24
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_REQUESTOR_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_REQUESTOR_SMASK						0x1000000ull
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_UNUSED_23_SHIFT						23
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_UNUSED_23_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_UNUSED_23_SMASK						0x800000ull
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_OTM_INDEX_SHIFT						16
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_OTM_INDEX_MASK						0x7Full
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_OTM_INDEX_SMASK						0x7F0000ull
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_TID_SHIFT							4
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_TID_MASK							0xFFFull
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_TID_SMASK							0xFFF0ull
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_UNUSED_3_2_SHIFT						2
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_UNUSED_3_2_MASK						0x3ull
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_UNUSED_3_2_SMASK						0xCull
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_ENCODING_SHIFT						0
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_ENCODING_MASK						0x3ull
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_ENCODING_SMASK						0x3ull
/*
* Table #85 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_info_misrouted_pkt
* This is the error information CSR for a misrouted reply packet received from 
* RXE2E. State in this CSR is updated when #%%#misrouted_pkt#%%# error flag is 
* set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_MISROUTED_PKT							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000020C0)
#define FXR_TXOTR_PKT_ERR_INFO_MISROUTED_PKT_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_MISROUTED_PKT_UNUSED_63_48_SHIFT					48
#define FXR_TXOTR_PKT_ERR_INFO_MISROUTED_PKT_UNUSED_63_48_MASK					0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_MISROUTED_PKT_UNUSED_63_48_SMASK					0xFFFF000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_MISROUTED_PKT_PKT_ID_SHIFT					32
#define FXR_TXOTR_PKT_ERR_INFO_MISROUTED_PKT_PKT_ID_MASK					0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_MISROUTED_PKT_PKT_ID_SMASK					0xFFFF00000000ull
#define FXR_TXOTR_PKT_ERR_INFO_MISROUTED_PKT_SLID_SHIFT						8
#define FXR_TXOTR_PKT_ERR_INFO_MISROUTED_PKT_SLID_MASK						0xFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_MISROUTED_PKT_SLID_SMASK						0xFFFFFF00ull
#define FXR_TXOTR_PKT_ERR_INFO_MISROUTED_PKT_UNUSED_7_5_SHIFT					5
#define FXR_TXOTR_PKT_ERR_INFO_MISROUTED_PKT_UNUSED_7_5_MASK					0x7ull
#define FXR_TXOTR_PKT_ERR_INFO_MISROUTED_PKT_UNUSED_7_5_SMASK					0xE0ull
#define FXR_TXOTR_PKT_ERR_INFO_MISROUTED_PKT_ENCODING_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_MISROUTED_PKT_ENCODING_MASK					0x1Full
#define FXR_TXOTR_PKT_ERR_INFO_MISROUTED_PKT_ENCODING_SMASK					0x1Full
/*
* Table #86 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_info_unconnected_dlid
* This is the error information CSR for a command that is attempting to send to 
* an unconnected DLID. State in this CSR is updated when #%%#unconnected_dlid#%%# 
* error flag is set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_UNCONNECTED_DLID							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000020C8)
#define FXR_TXOTR_PKT_ERR_INFO_UNCONNECTED_DLID_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_UNCONNECTED_DLID_UNUSED_63_44_SHIFT				44
#define FXR_TXOTR_PKT_ERR_INFO_UNCONNECTED_DLID_UNUSED_63_44_MASK				0xFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_UNCONNECTED_DLID_UNUSED_63_44_SMASK				0xFFFFF00000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_UNCONNECTED_DLID_ADDRESS_SHIFT					16
#define FXR_TXOTR_PKT_ERR_INFO_UNCONNECTED_DLID_ADDRESS_MASK					0xFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_UNCONNECTED_DLID_ADDRESS_SMASK					0xFFFFFFF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_UNCONNECTED_DLID_MSG_ID_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_UNCONNECTED_DLID_MSG_ID_MASK					0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_UNCONNECTED_DLID_MSG_ID_SMASK					0xFFFFull
/*
* Table #87 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_info_hash_timeout
* This is the error information CSR for an entry in the Hash Table which has 
* experienced a timeout. State in this CSR is updated when #%%#hash_timeout#%%# 
* error flag is set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TIMEOUT							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000020D0)
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TIMEOUT_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TIMEOUT_UNUSED_63_23_SHIFT					23
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TIMEOUT_UNUSED_63_23_MASK					0x1FFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TIMEOUT_UNUSED_63_23_SMASK					0xFFFFFFFFFF800000ull
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TIMEOUT_ADDRESS_SHIFT					16
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TIMEOUT_ADDRESS_MASK					0x7Full
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TIMEOUT_ADDRESS_SMASK					0x7F0000ull
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TIMEOUT_OLDEST_PKT_ID_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TIMEOUT_OLDEST_PKT_ID_MASK					0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TIMEOUT_OLDEST_PKT_ID_SMASK					0xFFFFull
/*
* Table #88 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_info_retrans_nack
* This is the error information CSR for a NACK Reply which generates a 
* retransmit. State in this CSR is updated when #%%#retrans_nack#%%# error flag 
* is set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_NACK							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000020D8)
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_NACK_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_NACK_UNUSED_63_16_SHIFT					16
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_NACK_UNUSED_63_16_MASK					0xFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_NACK_UNUSED_63_16_SMASK					0xFFFFFFFFFFFF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_NACK_PKT_ID_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_NACK_PKT_ID_MASK						0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_NACK_PKT_ID_SMASK					0xFFFFull
/*
* Table #89 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_info_txdma
* This is the error information CSR for a packet which has experienced an error 
* in TXDMA, after leaving TXOTR. State in this CSR is updated when #%%#txdma#%%# 
* error flag is set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_TXDMA								(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000020E0)
#define FXR_TXOTR_PKT_ERR_INFO_TXDMA_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_TXDMA_UNUSED_63_20_SHIFT						20
#define FXR_TXOTR_PKT_ERR_INFO_TXDMA_UNUSED_63_20_MASK						0xFFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_TXDMA_UNUSED_63_20_SMASK						0xFFFFFFFFFFF00000ull
#define FXR_TXOTR_PKT_ERR_INFO_TXDMA_ENCODING_SHIFT						16
#define FXR_TXOTR_PKT_ERR_INFO_TXDMA_ENCODING_MASK						0xFull
#define FXR_TXOTR_PKT_ERR_INFO_TXDMA_ENCODING_SMASK						0xF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_TXDMA_PKT_ID_SHIFT						0
#define FXR_TXOTR_PKT_ERR_INFO_TXDMA_PKT_ID_MASK						0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_TXDMA_PKT_ID_SMASK						0xFFFFull
/*
* Table #90 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_inject_psn_cache_sbe_mbe
* Error Injection for the various sbe/mbe fields. Setting a single bit will 
* cause an sbe in the ecc field and cause that bit to be flipped, no data bits 
* will be flipped. Setting 2 bits will cause an mbe. An even number of bits > 2 
* may or may not cause an mbe. Setting an odd number of bits that is a legal 
* syndrome for that data width will cause an sbe and the corresponding data bit 
* to be flipped. See shrtl_ecc_correct.sv for legal syndromes for each data 
* width.
*/
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000020E8)
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_PSN_CACHE_DATA_ERR_INJ_ENABLE_SHIFT		20
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_PSN_CACHE_DATA_ERR_INJ_ENABLE_MASK		0x1ull
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_PSN_CACHE_DATA_ERR_INJ_ENABLE_SMASK		0x100000ull
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_PSN_CACHE_DATA_ERR_INJ_MASK_SHIFT		12
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_PSN_CACHE_DATA_ERR_INJ_MASK_MASK		0xFFull
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_PSN_CACHE_DATA_ERR_INJ_MASK_SMASK		0xFF000ull
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_PSN_CACHE_TAG_ERR_INJ_ENABLE_SHIFT		11
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_PSN_CACHE_TAG_ERR_INJ_ENABLE_MASK		0x1ull
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_PSN_CACHE_TAG_ERR_INJ_ENABLE_SMASK		0x800ull
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_PSN_CACHE_TAG_ERR_INJ_DOMAIN_SHIFT		8
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_PSN_CACHE_TAG_ERR_INJ_DOMAIN_MASK		0x7ull
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_PSN_CACHE_TAG_ERR_INJ_DOMAIN_SMASK		0x700ull
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_PSN_CACHE_TAG_ERR_INJ_MASK_SHIFT		0
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_PSN_CACHE_TAG_ERR_INJ_MASK_MASK		0xFFull
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_PSN_CACHE_TAG_ERR_INJ_MASK_SMASK		0xFFull
/*
* Table #91 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_info_local_seq_stall
* This is the error information CSR for a stall in a local packet sequence. If 
* the distance between the oldest outstanding local packet sequence number and 
* the next local packet sequence number exceeds half of the sequence number 
* space, then the local sequence stalls. State in this CSR is updated when 
* #%%#local_seq_stall#%%# error flag is set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_LOCAL_SEQ_STALL							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000020F0)
#define FXR_TXOTR_PKT_ERR_INFO_LOCAL_SEQ_STALL_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_LOCAL_SEQ_STALL_UNUSED_63_40_SHIFT				40
#define FXR_TXOTR_PKT_ERR_INFO_LOCAL_SEQ_STALL_UNUSED_63_40_MASK				0xFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_LOCAL_SEQ_STALL_UNUSED_63_40_SMASK				0xFFFFFF0000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_LOCAL_SEQ_STALL_NEXT_LPSN_SHIFT					24
#define FXR_TXOTR_PKT_ERR_INFO_LOCAL_SEQ_STALL_NEXT_LPSN_MASK					0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_LOCAL_SEQ_STALL_NEXT_LPSN_SMASK					0xFFFF000000ull
#define FXR_TXOTR_PKT_ERR_INFO_LOCAL_SEQ_STALL_OLDEST_LPSN_SHIFT				8
#define FXR_TXOTR_PKT_ERR_INFO_LOCAL_SEQ_STALL_OLDEST_LPSN_MASK					0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_LOCAL_SEQ_STALL_OLDEST_LPSN_SMASK				0xFFFF00ull
#define FXR_TXOTR_PKT_ERR_INFO_LOCAL_SEQ_STALL_LOCAL_SEQUENCE_SHIFT				0
#define FXR_TXOTR_PKT_ERR_INFO_LOCAL_SEQ_STALL_LOCAL_SEQUENCE_MASK				0x7Full
#define FXR_TXOTR_PKT_ERR_INFO_LOCAL_SEQ_STALL_LOCAL_SEQUENCE_SMASK				0x7Full
/*
* Table #92 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_info_tc0_fail_over_limit
* This is the error information CSR for a fail over on TC0. State in this CSR is 
* updated when #%%#tc0_fail_over#%%# error flag is set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_TC0_FAIL_OVER_LIMIT						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000020F8)
#define FXR_TXOTR_PKT_ERR_INFO_TC0_FAIL_OVER_LIMIT_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_TC0_FAIL_OVER_LIMIT_LID_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_TC0_FAIL_OVER_LIMIT_LID_MASK					0xFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_TC0_FAIL_OVER_LIMIT_LID_SMASK					0xFFFFFFull
/*
* Table #93 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_info_tc1_fail_over_limit
* This is the error information CSR for a fail over on TC1. State in this CSR is 
* updated when #%%#tc1_fail_over#%%# error flag is set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_TC1_FAIL_OVER_LIMIT						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002100)
#define FXR_TXOTR_PKT_ERR_INFO_TC1_FAIL_OVER_LIMIT_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_TC1_FAIL_OVER_LIMIT_LID_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_TC1_FAIL_OVER_LIMIT_LID_MASK					0xFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_TC1_FAIL_OVER_LIMIT_LID_SMASK					0xFFFFFFull
/*
* Table #94 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_info_tc2_fail_over_limit
* This is the error information CSR for a fail over on TC2. State in this CSR is 
* updated when #%%#tc2_fail_over#%%# error flag is set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_TC2_FAIL_OVER_LIMIT						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002108)
#define FXR_TXOTR_PKT_ERR_INFO_TC2_FAIL_OVER_LIMIT_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_TC2_FAIL_OVER_LIMIT_LID_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_TC2_FAIL_OVER_LIMIT_LID_MASK					0xFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_TC2_FAIL_OVER_LIMIT_LID_SMASK					0xFFFFFFull
/*
* Table #95 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_info_tc3_fail_over_limit
* This is the error information CSR for a fail over on TC3. State in this CSR is 
* updated when #%%#tc3_fail_over#%%# error flag is set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_TC3_FAIL_OVER_LIMIT						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002110)
#define FXR_TXOTR_PKT_ERR_INFO_TC3_FAIL_OVER_LIMIT_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_TC3_FAIL_OVER_LIMIT_LID_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_TC3_FAIL_OVER_LIMIT_LID_MASK					0xFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_TC3_FAIL_OVER_LIMIT_LID_SMASK					0xFFFFFFull
/*
* Table #96 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_info_tc0_retrans_limit
* This is the error information CSR for a retransmit limit on TC0. State in this 
* CSR is updated when #%%#tc0_retrans_limit#%%# error flag is set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_TC0_RETRANS_LIMIT						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002118)
#define FXR_TXOTR_PKT_ERR_INFO_TC0_RETRANS_LIMIT_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_TC0_RETRANS_LIMIT_LID_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_TC0_RETRANS_LIMIT_LID_MASK					0xFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_TC0_RETRANS_LIMIT_LID_SMASK					0xFFFFFFull
/*
* Table #97 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_info_tc1_retrans_limit
* This is the error information CSR for a retransmit limit on TC1. State in this 
* CSR is updated when #%%#tc1_retrans_limit#%%# error flag is set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_TC1_RETRANS_LIMIT						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002120)
#define FXR_TXOTR_PKT_ERR_INFO_TC1_RETRANS_LIMIT_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_TC1_RETRANS_LIMIT_LID_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_TC1_RETRANS_LIMIT_LID_MASK					0xFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_TC1_RETRANS_LIMIT_LID_SMASK					0xFFFFFFull
/*
* Table #98 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_info_tc2_retrans_limit
* This is the error information CSR for a retransmit limit on TC2. State in this 
* CSR is updated when #%%#tc2_retrans_limit#%%# error flag is set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_TC2_RETRANS_LIMIT						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002128)
#define FXR_TXOTR_PKT_ERR_INFO_TC2_RETRANS_LIMIT_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_TC2_RETRANS_LIMIT_LID_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_TC2_RETRANS_LIMIT_LID_MASK					0xFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_TC2_RETRANS_LIMIT_LID_SMASK					0xFFFFFFull
/*
* Table #99 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_err_info_tc3_retrans_limit
* This is the error information CSR for a retransmit limit on TC3. State in this 
* CSR is updated when #%%#tc3_retrans_limit#%%# error flag is set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_TC3_RETRANS_LIMIT						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002130)
#define FXR_TXOTR_PKT_ERR_INFO_TC3_RETRANS_LIMIT_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_TC3_RETRANS_LIMIT_LID_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_TC3_RETRANS_LIMIT_LID_MASK					0xFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_TC3_RETRANS_LIMIT_LID_SMASK					0xFFFFFFull
/*
* Table #100 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_psn_cache_tag_way_enable
* These bits enable the 16 PSN Cache Tag Ways for filling and evicting. Set bits 
* to 0 to remove them from being an evict or fill candidate. For example, 
* setting to 16'h3 will only enable ways 1 and 0. This will stress the cache 
* causing more evicts and fills. Every bit cleared will decrease the cache 
* capacity by 1/16th. This can be useful for testing the cache. Any valid cache 
* entries that are in a disabled way will be invisible so another request for 
* that entry will result in a fill from memory, with possibly stale data, to one 
* of the enabled ways.
*/
#define FXR_TXOTR_PKT_DBG_PSN_CACHE_TAG_WAY_ENABLE						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006000)
#define FXR_TXOTR_PKT_DBG_PSN_CACHE_TAG_WAY_ENABLE_RESETCSR					0x000000000000FFFFull
#define FXR_TXOTR_PKT_DBG_PSN_CACHE_TAG_WAY_ENABLE_WAY_ENABLE_SHIFT				0
#define FXR_TXOTR_PKT_DBG_PSN_CACHE_TAG_WAY_ENABLE_WAY_ENABLE_MASK				0xFFFFull
#define FXR_TXOTR_PKT_DBG_PSN_CACHE_TAG_WAY_ENABLE_WAY_ENABLE_SMASK				0xFFFFull
/*
* Table #101 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_opb_access
* This CSR grants read and write access to the Outstanding Packet Buffer 
* (OPB).
*/
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006008)
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_RESETCSR							0x0050000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_VALID_SHIFT						63
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_VALID_MASK							0x1ull
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_VALID_SMASK						0x8000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_WRITE_SHIFT						62
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_WRITE_MASK							0x1ull
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_WRITE_SMASK						0x4000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_ECC_SHIFT							61
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_ECC_MASK							0x1ull
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_ECC_SMASK							0x2000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_PAYLOAD_REGS_SHIFT						52
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_PAYLOAD_REGS_MASK						0xFFull
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_PAYLOAD_REGS_SMASK						0xFF0000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_ADDRESS_SHIFT						0
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_ADDRESS_MASK						0xFFFFull
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_ADDRESS_SMASK						0xFFFFull
/*
* Table #102 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_opb_payload0
* This CSR is the payload register related to #%%#Section 29.7.3.98, 
* 'Outstanding Packet Buffer Access Debug CSR'#%%# for bits 63:0 of the buffer 
* entry.
*/
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD0								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006010)
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD0_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD0_DATA_SHIFT						0
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD0_DATA_MASK						0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD0_DATA_SMASK						0xFFFFFFFFFFFFFFFFull
/*
* Table #103 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_opb_payload1
* This CSR is the payload register related to #%%#Section 29.7.3.98, 
* 'Outstanding Packet Buffer Access Debug CSR'#%%# for bits 127:64 of the buffer 
* entry.
*/
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD1								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006018)
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD1_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD1_DATA_SHIFT						0
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD1_DATA_MASK						0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD1_DATA_SMASK						0xFFFFFFFFFFFFFFFFull
/*
* Table #104 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_opb_payload2
* This CSR is the payload register related to #%%#Section 29.7.3.98, 
* 'Outstanding Packet Buffer Access Debug CSR'#%%# for bits 191:128 of the 
* buffer entry.
*/
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD2								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006020)
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD2_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD2_DATA_SHIFT						0
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD2_DATA_MASK						0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD2_DATA_SMASK						0xFFFFFFFFFFFFFFFFull
/*
* Table #105 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_opb_payload3
* This CSR is the payload register related to #%%#Section 29.7.3.98, 
* 'Outstanding Packet Buffer Access Debug CSR'#%%# for bits 255:192 of the 
* buffer entry.
*/
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD3								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006028)
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD3_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD3_DATA_SHIFT						0
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD3_DATA_MASK						0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD3_DATA_SMASK						0xFFFFFFFFFFFFFFFFull
/*
* Table #106 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_opb_payload4
* This CSR is the payload register related to #%%#Section 29.7.3.98, 
* 'Outstanding Packet Buffer Access Debug CSR'#%%# for bits 279:256 of the 
* buffer entry.
*/
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD4								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006030)
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD4_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD4_DATA_SHIFT						0
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD4_DATA_MASK						0xFFFFFFull
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD4_DATA_SMASK						0xFFFFFFull
/*
* Table #107 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_pktid_list_access
* This CSR grants read and write access to the Packet Identifier 
* List.
*/
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006038)
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_RESETCSR						0x0010000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_VALID_SHIFT						63
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_VALID_MASK						0x1ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_VALID_SMASK						0x8000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_WRITE_SHIFT						62
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_WRITE_MASK						0x1ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_WRITE_SMASK						0x4000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_ECC_SHIFT						61
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_ECC_MASK						0x1ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_ECC_SMASK						0x2000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_PAYLOAD_REGS_SHIFT					52
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_PAYLOAD_REGS_MASK					0xFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_PAYLOAD_REGS_SMASK					0xFF0000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_ADDRESS_SHIFT					0
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_ADDRESS_MASK					0xFFFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_ADDRESS_SMASK					0xFFFFull
/*
* Table #108 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_pktid_list_payload
* This CSR is the payload register used in conjunction with #%%#txotr_pkt_dbg_pktid_list_access#%%# 
* CSR to read and write the OTR Packet Identifier List.
*/
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PAYLOAD							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006040)
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PAYLOAD_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PAYLOAD_DATA_SHIFT						0
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PAYLOAD_DATA_MASK						0xFFFFFFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PAYLOAD_DATA_SMASK						0xFFFFFFFull
/*
* Table #109 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_hash_table_access
* This CSR grants read and write access to the Hash Table.
*/
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006048)
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_RESETCSR						0x0020000000000000ull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_VALID_SHIFT						63
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_VALID_MASK						0x1ull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_VALID_SMASK						0x8000000000000000ull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_WRITE_SHIFT						62
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_WRITE_MASK						0x1ull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_WRITE_SMASK						0x4000000000000000ull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_ECC_SHIFT						61
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_ECC_MASK						0x1ull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_ECC_SMASK						0x2000000000000000ull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_PAYLOAD_REGS_SHIFT					52
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_PAYLOAD_REGS_MASK					0xFFull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_PAYLOAD_REGS_SMASK					0xFF0000000000000ull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_ADDRESS_SHIFT					0
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_ADDRESS_MASK					0x7Full
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_ADDRESS_SMASK					0x7Full
/*
* Table #110 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_hash_table_payload0
* This CSR is the payload register used in conjunction with #%%#txotr_pkt_dbg_hash_table_access#%%# 
* CSR to read and write the OTR Hash Table bits 63:0.
*/
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_PAYLOAD0							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006050)
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_PAYLOAD0_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_PAYLOAD0_DATA_SHIFT					0
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_PAYLOAD0_DATA_MASK						0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_PAYLOAD0_DATA_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #111 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_hash_table_payload1
* This CSR is the payload register used in conjunction with #%%#txotr_pkt_dbg_hash_table_access#%%# 
* CSR to read and write the OTR Hash Table bits 75:64.
*/
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_PAYLOAD1							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006058)
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_PAYLOAD1_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_PAYLOAD1_DATA_SHIFT					0
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_PAYLOAD1_DATA_MASK						0xFFFull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_PAYLOAD1_DATA_SMASK					0xFFFull
/*
* Table #112 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_otm_access
* This CSR grants read and write access to the Outstanding Translation Memory 
* (OTM).
*/
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006060)
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_RESETCSR							0x0020000000000000ull
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_VALID_SHIFT						63
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_VALID_MASK							0x1ull
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_VALID_SMASK						0x8000000000000000ull
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_WRITE_SHIFT						62
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_WRITE_MASK							0x1ull
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_WRITE_SMASK						0x4000000000000000ull
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_ECC_SHIFT							61
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_ECC_MASK							0x1ull
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_ECC_SMASK							0x2000000000000000ull
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_PAYLOAD_REGS_SHIFT						52
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_PAYLOAD_REGS_MASK						0xFFull
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_PAYLOAD_REGS_SMASK						0xFF0000000000000ull
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_ADDRESS_SHIFT						0
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_ADDRESS_MASK						0x7Full
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_ADDRESS_SMASK						0x7Full
/*
* Table #113 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_otm_payload0
* This CSR is the payload register used in conjunction with #%%#txotr_pkt_dbg_otm_access#%%# 
* CSR to read and write the OTR Outstanding Translation Memory bits 
* 63:0.
*/
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD0								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006068)
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD0_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD0_DATA_SHIFT						0
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD0_DATA_MASK						0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD0_DATA_SMASK						0xFFFFFFFFFFFFFFFFull
/*
* Table #114 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_otm_payload1
* This CSR is the payload register used in conjunction with #%%#txotr_pkt_dbg_otm_access#%%# 
* CSR to read and write the OTR Outstanding Translation Memory bits 
* 127:64.
*/
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD1								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006070)
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD1_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD1_DATA_SHIFT						0
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD1_DATA_MASK						0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD1_DATA_SMASK						0xFFFFFFFFFFFFFFFFull
/*
* Table #115 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_otm_payload2
* This CSR is the payload register used in conjunction with #%%#txotr_pkt_dbg_otm_access#%%# 
* CSR to read and write the OTR Outstanding Translation Memory bits 
* 136:128.
*/
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD2								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006078)
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD2_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD2_DATA_SHIFT						0
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD2_DATA_MASK						0x1FFull
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD2_DATA_SMASK						0x1FFull
/*
* Table #116 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_iovec_buffer_space_access
* This CSR grants read and write access to the IOVEC Buffer Space.
*/
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006080)
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_RESETCSR					0x0080000000000000ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_VALID_SHIFT					63
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_VALID_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_VALID_SMASK					0x8000000000000000ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_WRITE_SHIFT					62
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_WRITE_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_WRITE_SMASK					0x4000000000000000ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_ECC_SHIFT					61
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_ECC_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_ECC_SMASK					0x2000000000000000ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_PAYLOAD_REGS_SHIFT				52
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_PAYLOAD_REGS_MASK				0xFFull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_PAYLOAD_REGS_SMASK				0xFF0000000000000ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_ADDRESS_SHIFT				0
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_ADDRESS_MASK				0x7Full
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_ADDRESS_SMASK				0x7Full
/*
* Table #117 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_iovec_buffer_space_payload0
* This CSR is the payload register related to #%%#Section 29.7.3.113, 'IOVEC 
* Buffer Space Access Debug CSR'#%%# for bits 63:0 of the buffer 
* entry.
*/
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD0						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006088)
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD0_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD0_DATA_SHIFT				0
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD0_DATA_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD0_DATA_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #118 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_iovec_buffer_space_payload1
* This CSR is the payload register related to #%%#Section 29.7.3.113, 'IOVEC 
* Buffer Space Access Debug CSR'#%%# for bits 127:64 of the buffer 
* entry.
*/
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD1						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006090)
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD1_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD1_DATA_SHIFT				0
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD1_DATA_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD1_DATA_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #119 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_iovec_buffer_space_payload2
* This CSR is the payload register related to #%%#Section 29.7.3.113, 'IOVEC 
* Buffer Space Access Debug CSR'#%%# for bits 191:128 of the buffer 
* entry.
*/
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD2						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006098)
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD2_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD2_DATA_SHIFT				0
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD2_DATA_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD2_DATA_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #120 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_iovec_buffer_space_payload3
* This CSR is the payload register related to #%%#Section 29.7.3.113, 'IOVEC 
* Buffer Space Access Debug CSR'#%%# for bits 255:192 of the buffer 
* entry.
*/
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD3						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000060A0)
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD3_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD3_DATA_SHIFT				0
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD3_DATA_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD3_DATA_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #121 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_iovec_buffer_space_payload4
* This CSR is the payload register related to #%%#Section 29.7.3.113, 'IOVEC 
* Buffer Space Access Debug CSR'#%%# for bits 319:256 of the buffer 
* entry.
*/
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD4						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000060A8)
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD4_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD4_DATA_SHIFT				0
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD4_DATA_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD4_DATA_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #122 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_iovec_buffer_space_payload5
* This CSR is the payload register related to #%%#Section 29.7.3.113, 'IOVEC 
* Buffer Space Access Debug CSR'#%%# for bits 383:320 of the buffer 
* entry.
*/
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD5						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000060B0)
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD5_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD5_DATA_SHIFT				0
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD5_DATA_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD5_DATA_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #123 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_iovec_buffer_space_payload6
* This CSR is the payload register related to #%%#Section 29.7.3.113, 'IOVEC 
* Buffer Space Access Debug CSR'#%%# for bits 447:384 of the buffer 
* entry.
*/
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD6						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000060B8)
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD6_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD6_DATA_SHIFT				0
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD6_DATA_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD6_DATA_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #124 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_iovec_buffer_space_payload7
* This CSR is the payload register related to #%%#Section 29.7.3.113, 'IOVEC 
* Buffer Space Access Debug CSR'#%%# for bits 511:448 of the buffer 
* entry.
*/
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD7						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000060C0)
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD7_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD7_DATA_SHIFT				0
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD7_DATA_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD7_DATA_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #125 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_fpe_prog_mem_access
* This CSR grants read and write access to the FPE Program Memory.
*/
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000060C8)
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_RESETCSR						0x0010000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_VALID_SHIFT					63
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_VALID_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_VALID_SMASK					0x8000000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_WRITE_SHIFT					62
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_WRITE_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_WRITE_SMASK					0x4000000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_ECC_SHIFT						61
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_ECC_MASK						0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_ECC_SMASK						0x2000000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_PAYLOAD_REGS_SHIFT				52
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_PAYLOAD_REGS_MASK					0xFFull
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_PAYLOAD_REGS_SMASK				0xFF0000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_ADDRESS_SHIFT					0
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_ADDRESS_MASK					0x1FFFull
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_ADDRESS_SMASK					0x1FFFull
/*
* Table #126 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_fpe_prog_mem_payload0
* This CSR is the payload register related to #%%#Section 29.7.3.122, 'FPE 
* Program Memory Access Debug CSR'#%%# for bits 31:0 of the buffer 
* entry.
*/
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_PAYLOAD0							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000060D0)
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_PAYLOAD0_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_PAYLOAD0_UNUSED_63_32_SHIFT				32
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_PAYLOAD0_UNUSED_63_32_MASK				0xFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_PAYLOAD0_UNUSED_63_32_SMASK				0xFFFFFFFF00000000ull
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_PAYLOAD0_DATA_SHIFT					0
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_PAYLOAD0_DATA_MASK					0xFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_PAYLOAD0_DATA_SMASK					0xFFFFFFFFull
/*
* Table #127 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_fpe_data_mem_access
* This CSR grants read and write access to the FPE Data Memory.
*/
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000060D8)
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_RESETCSR						0x0010000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_VALID_SHIFT					63
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_VALID_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_VALID_SMASK					0x8000000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_WRITE_SHIFT					62
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_WRITE_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_WRITE_SMASK					0x4000000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_ECC_SHIFT						61
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_ECC_MASK						0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_ECC_SMASK						0x2000000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_PAYLOAD_REGS_SHIFT				52
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_PAYLOAD_REGS_MASK					0xFFull
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_PAYLOAD_REGS_SMASK				0xFF0000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_ADDRESS_SHIFT					0
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_ADDRESS_MASK					0x3FFull
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_ADDRESS_SMASK					0x3FFull
/*
* Table #128 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_fpe_data_mem_payload0
* This CSR is the payload register related to #%%#Section 29.7.3.124, 'FPE Data 
* Memory Access Debug CSR'#%%# for bits 63:0 of the buffer entry.
*/
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_PAYLOAD0							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000060E0)
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_PAYLOAD0_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_PAYLOAD0_DATA_SHIFT					0
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_PAYLOAD0_DATA_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_PAYLOAD0_DATA_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #129 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_fp_pre_frag_full_empty
* This CSR reads the full and empty bits for the Fast-Path and Pre-Fragmentation 
* Queues. 
*/
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000060E8)
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_UNUSED_63_48_SHIFT				48
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_UNUSED_63_48_MASK				0xFFFFull
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_UNUSED_63_48_SMASK				0xFFFF000000000000ull
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_PRE_FULL_SHIFT					40
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_PRE_FULL_MASK					0xFFull
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_PRE_FULL_SMASK					0xFF0000000000ull
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_PRE_EMPTY_SHIFT				32
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_PRE_EMPTY_MASK					0xFFull
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_PRE_EMPTY_SMASK				0xFF00000000ull
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_UNUSED_31_24_SHIFT				24
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_UNUSED_31_24_MASK				0xFFull
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_UNUSED_31_24_SMASK				0xFF000000ull
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_FAST_FULL_SHIFT				12
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_FAST_FULL_MASK					0xFFFull
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_FAST_FULL_SMASK				0xFFF000ull
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_FAST_EMPTY_SHIFT				0
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_FAST_EMPTY_MASK				0xFFFull
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_FAST_EMPTY_SMASK				0xFFFull
/*
* Table #130 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_post_frag_ret_full_empty
* This CSR reads the full and empty bits for the Post-Fragmentation and 
* Post-Fragmentaiton Retransmission Queues. 
*/
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000060F0)
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_UNUSED_63_48_SHIFT				48
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_UNUSED_63_48_MASK				0xFFFFull
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_UNUSED_63_48_SMASK				0xFFFF000000000000ull
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_POST_RET_FULL_SHIFT				40
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_POST_RET_FULL_MASK				0xFFull
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_POST_RET_FULL_SMASK				0xFF0000000000ull
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_POST_RET_EMPTY_SHIFT				32
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_POST_RET_EMPTY_MASK				0xFFull
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_POST_RET_EMPTY_SMASK				0xFF00000000ull
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_UNUSED_31_16_SHIFT				16
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_UNUSED_31_16_MASK				0xFFFFull
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_UNUSED_31_16_SMASK				0xFFFF0000ull
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_POST_FULL_SHIFT				8
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_POST_FULL_MASK				0xFFull
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_POST_FULL_SMASK				0xFF00ull
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_POST_EMPTY_SHIFT				0
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_POST_EMPTY_MASK				0xFFull
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_POST_EMPTY_SMASK				0xFFull
/*
* Table #131 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_fpe_context_available_reg
* This CSR reads the context-available registers of the FPE. 
*/
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_AVAILABLE_REG						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000060F8)
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_AVAILABLE_REG_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_AVAILABLE_REG_UNUSED_63_32_SHIFT				32
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_AVAILABLE_REG_UNUSED_63_32_MASK				0xFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_AVAILABLE_REG_UNUSED_63_32_SMASK				0xFFFFFFFF00000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_AVAILABLE_REG_FPE_SHIFT					0
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_AVAILABLE_REG_FPE_MASK					0xFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_AVAILABLE_REG_FPE_SMASK					0xFFFFFFFFull
/*
* Table #132 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_opb_fp_msg_count
* This CSR tracks the number of messages received in the OPB fast path input 
* queues from the message-level partition. 
*/
#define FXR_TXOTR_PKT_DBG_OPB_FP_MSG_COUNT							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006100)
#define FXR_TXOTR_PKT_DBG_OPB_FP_MSG_COUNT_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_FP_MSG_COUNT_COUNT_SHIFT						0
#define FXR_TXOTR_PKT_DBG_OPB_FP_MSG_COUNT_COUNT_MASK						0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_OPB_FP_MSG_COUNT_COUNT_SMASK						0xFFFFFFFFFFFFFFFFull
/*
* Table #133 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_opb_pre_frag_msg_count
* This CSR tracks the number of messages received in the OPB pre-fragmentation 
* input queues from the message-level partition. 
*/
#define FXR_TXOTR_PKT_DBG_OPB_PRE_FRAG_MSG_COUNT						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006160)
#define FXR_TXOTR_PKT_DBG_OPB_PRE_FRAG_MSG_COUNT_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_PRE_FRAG_MSG_COUNT_COUNT_SHIFT					0
#define FXR_TXOTR_PKT_DBG_OPB_PRE_FRAG_MSG_COUNT_COUNT_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_OPB_PRE_FRAG_MSG_COUNT_COUNT_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #134 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_opb_retrans_pre_frag_msg_count
* This CSR tracks the number of messages received in the OPB pre-fragmentation 
* retransmission input queues from BPE. 
*/
#define FXR_TXOTR_PKT_DBG_OPB_RETRANS_PRE_FRAG_MSG_COUNT					(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000061A0)
#define FXR_TXOTR_PKT_DBG_OPB_RETRANS_PRE_FRAG_MSG_COUNT_RESETCSR				0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_RETRANS_PRE_FRAG_MSG_COUNT_COUNT_SHIFT				0
#define FXR_TXOTR_PKT_DBG_OPB_RETRANS_PRE_FRAG_MSG_COUNT_COUNT_MASK				0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_OPB_RETRANS_PRE_FRAG_MSG_COUNT_COUNT_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #135 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_opb_retrans_post_frag_msg_count
* This CSR tracks the number of messages received in the OPB post-fragmentation 
* retransmission input queues from FPE. 
*/
#define FXR_TXOTR_PKT_DBG_OPB_RETRANS_POST_FRAG_MSG_COUNT					(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000061E0)
#define FXR_TXOTR_PKT_DBG_OPB_RETRANS_POST_FRAG_MSG_COUNT_RESETCSR				0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_RETRANS_POST_FRAG_MSG_COUNT_COUNT_SHIFT				0
#define FXR_TXOTR_PKT_DBG_OPB_RETRANS_POST_FRAG_MSG_COUNT_COUNT_MASK				0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_OPB_RETRANS_POST_FRAG_MSG_COUNT_COUNT_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #136 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_opb_post_frag_pkt_count
* This CSR tracks the number of messages received in the OPB post-fragmentation 
* input queues from FPE. 
*/
#define FXR_TXOTR_PKT_DBG_OPB_POST_FRAG_PKT_COUNT						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006220)
#define FXR_TXOTR_PKT_DBG_OPB_POST_FRAG_PKT_COUNT_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_POST_FRAG_PKT_COUNT_COUNT_SHIFT					0
#define FXR_TXOTR_PKT_DBG_OPB_POST_FRAG_PKT_COUNT_COUNT_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_OPB_POST_FRAG_PKT_COUNT_COUNT_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #137 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_opb_pkt_count
* This CSR counts the total number of packets sent through the packet-level 
* partition. 
*/
#define FXR_TXOTR_PKT_DBG_OPB_PKT_COUNT								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006260)
#define FXR_TXOTR_PKT_DBG_OPB_PKT_COUNT_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_PKT_COUNT_COUNT_SHIFT						0
#define FXR_TXOTR_PKT_DBG_OPB_PKT_COUNT_COUNT_MASK						0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_OPB_PKT_COUNT_COUNT_SMASK						0xFFFFFFFFFFFFFFFFull
/*
* Table #138 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_opb_reply_pkt_count
* This CSR counts the total number of reply packets received from 
* RXE2E.
*/
#define FXR_TXOTR_PKT_DBG_OPB_REPLY_PKT_COUNT							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006268)
#define FXR_TXOTR_PKT_DBG_OPB_REPLY_PKT_COUNT_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_REPLY_PKT_COUNT_COUNT_SHIFT					0
#define FXR_TXOTR_PKT_DBG_OPB_REPLY_PKT_COUNT_COUNT_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_OPB_REPLY_PKT_COUNT_COUNT_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #139 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_pktid_list_shared_pointers
* This CSR shows the current values of the Packet Identifier List shared 
* pointers.
*/
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000062A8)
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_UNUSED_63_30_SHIFT				30
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_UNUSED_63_30_MASK				0x3FFFFFFFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_UNUSED_63_30_SMASK				0xFFFFFFFFC0000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_TAIL_SHIFT					16
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_TAIL_MASK					0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_TAIL_SMASK					0x3FFF0000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_UNUSED_15_14_SHIFT				14
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_UNUSED_15_14_MASK				0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_UNUSED_15_14_SMASK				0xC000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_HEAD_SHIFT					0
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_HEAD_MASK					0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_HEAD_SMASK					0x3FFFull
/*
* Table #140 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_pktid_list_rsvd_pointers0
* This CSR shows the current values of the Packet Identifier List reserved 
* pointers for TC0.
*/
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS0						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000062B0)
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS0_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS0_UNUSED_63_62_SHIFT				62
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS0_UNUSED_63_62_MASK				0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS0_UNUSED_63_62_SMASK				0xC000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS0_MC1_TAIL_SHIFT				48
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS0_MC1_TAIL_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS0_MC1_TAIL_SMASK				0x3FFF000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS0_UNUSED_47_46_SHIFT				46
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS0_UNUSED_47_46_MASK				0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS0_UNUSED_47_46_SMASK				0xC00000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS0_MC1_HEAD_SHIFT				32
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS0_MC1_HEAD_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS0_MC1_HEAD_SMASK				0x3FFF00000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS0_UNUSED_31_30_SHIFT				30
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS0_UNUSED_31_30_MASK				0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS0_UNUSED_31_30_SMASK				0xC0000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS0_MC0_TAIL_SHIFT				16
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS0_MC0_TAIL_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS0_MC0_TAIL_SMASK				0x3FFF0000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS0_UNUSED_15_14_SHIFT				14
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS0_UNUSED_15_14_MASK				0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS0_UNUSED_15_14_SMASK				0xC000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS0_MC0_HEAD_SHIFT				0
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS0_MC0_HEAD_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS0_MC0_HEAD_SMASK				0x3FFFull
/*
* Table #141 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_pktid_list_rsvd_pointers1
* This CSR shows the current values of the Packet Identifier List reserved 
* pointers for TC1.
*/
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS1						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000062B8)
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS1_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS1_UNUSED_63_62_SHIFT				62
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS1_UNUSED_63_62_MASK				0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS1_UNUSED_63_62_SMASK				0xC000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS1_MC1_TAIL_SHIFT				48
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS1_MC1_TAIL_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS1_MC1_TAIL_SMASK				0x3FFF000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS1_UNUSED_47_46_SHIFT				46
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS1_UNUSED_47_46_MASK				0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS1_UNUSED_47_46_SMASK				0xC00000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS1_MC1_HEAD_SHIFT				32
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS1_MC1_HEAD_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS1_MC1_HEAD_SMASK				0x3FFF00000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS1_UNUSED_31_30_SHIFT				30
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS1_UNUSED_31_30_MASK				0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS1_UNUSED_31_30_SMASK				0xC0000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS1_MC0_TAIL_SHIFT				16
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS1_MC0_TAIL_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS1_MC0_TAIL_SMASK				0x3FFF0000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS1_UNUSED_15_14_SHIFT				14
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS1_UNUSED_15_14_MASK				0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS1_UNUSED_15_14_SMASK				0xC000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS1_MC0_HEAD_SHIFT				0
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS1_MC0_HEAD_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS1_MC0_HEAD_SMASK				0x3FFFull
/*
* Table #142 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_pktid_list_rsvd_pointers2
* This CSR shows the current values of the Packet Identifier List reserved 
* pointers for TC2.
*/
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS2						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000062C0)
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS2_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS2_UNUSED_63_62_SHIFT				62
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS2_UNUSED_63_62_MASK				0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS2_UNUSED_63_62_SMASK				0xC000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS2_MC1_TAIL_SHIFT				48
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS2_MC1_TAIL_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS2_MC1_TAIL_SMASK				0x3FFF000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS2_UNUSED_47_46_SHIFT				46
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS2_UNUSED_47_46_MASK				0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS2_UNUSED_47_46_SMASK				0xC00000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS2_MC1_HEAD_SHIFT				32
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS2_MC1_HEAD_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS2_MC1_HEAD_SMASK				0x3FFF00000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS2_UNUSED_31_30_SHIFT				30
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS2_UNUSED_31_30_MASK				0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS2_UNUSED_31_30_SMASK				0xC0000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS2_MC0_TAIL_SHIFT				16
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS2_MC0_TAIL_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS2_MC0_TAIL_SMASK				0x3FFF0000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS2_UNUSED_15_14_SHIFT				14
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS2_UNUSED_15_14_MASK				0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS2_UNUSED_15_14_SMASK				0xC000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS2_MC0_HEAD_SHIFT				0
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS2_MC0_HEAD_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS2_MC0_HEAD_SMASK				0x3FFFull
/*
* Table #143 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_pktid_list_rsvd_pointers3
* This CSR shows the current values of the Packet Identifier List reserved 
* pointers for TC3.
*/
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS3						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000062C8)
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS3_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS3_UNUSED_63_62_SHIFT				62
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS3_UNUSED_63_62_MASK				0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS3_UNUSED_63_62_SMASK				0xC000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS3_MC1_TAIL_SHIFT				48
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS3_MC1_TAIL_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS3_MC1_TAIL_SMASK				0x3FFF000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS3_UNUSED_47_46_SHIFT				46
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS3_UNUSED_47_46_MASK				0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS3_UNUSED_47_46_SMASK				0xC00000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS3_MC1_HEAD_SHIFT				32
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS3_MC1_HEAD_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS3_MC1_HEAD_SMASK				0x3FFF00000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS3_UNUSED_31_30_SHIFT				30
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS3_UNUSED_31_30_MASK				0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS3_UNUSED_31_30_SMASK				0xC0000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS3_MC0_TAIL_SHIFT				16
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS3_MC0_TAIL_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS3_MC0_TAIL_SMASK				0x3FFF0000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS3_UNUSED_15_14_SHIFT				14
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS3_UNUSED_15_14_MASK				0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS3_UNUSED_15_14_SMASK				0xC000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS3_MC0_HEAD_SHIFT				0
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS3_MC0_HEAD_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS3_MC0_HEAD_SMASK				0x3FFFull
/*
* Table #144 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_pktid_list_pending_pointers0
* This CSR shows the current values of the Packet Identifier List Pending ACK 
* pointers for TC0 and TC1.
*/
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000062D0)
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_UNUSED_63_62_SHIFT			62
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_UNUSED_63_62_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_UNUSED_63_62_SMASK			0xC000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_TC1_TAIL_SHIFT				48
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_TC1_TAIL_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_TC1_TAIL_SMASK				0x3FFF000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_UNUSED_47_46_SHIFT			46
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_UNUSED_47_46_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_UNUSED_47_46_SMASK			0xC00000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_TC1_HEAD_SHIFT				32
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_TC1_HEAD_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_TC1_HEAD_SMASK				0x3FFF00000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_UNUSED_31_30_SHIFT			30
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_UNUSED_31_30_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_UNUSED_31_30_SMASK			0xC0000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_TC0_TAIL_SHIFT				16
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_TC0_TAIL_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_TC0_TAIL_SMASK				0x3FFF0000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_UNUSED_15_14_SHIFT			14
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_UNUSED_15_14_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_UNUSED_15_14_SMASK			0xC000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_TC0_HEAD_SHIFT				0
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_TC0_HEAD_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_TC0_HEAD_SMASK				0x3FFFull
/*
* Table #145 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_pktid_list_pending_pointers1
* This CSR shows the current values of the Packet Identifier List Pending ACK 
* pointers for TC2 and TC3.
*/
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000062D8)
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_UNUSED_63_62_SHIFT			62
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_UNUSED_63_62_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_UNUSED_63_62_SMASK			0xC000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_TC3_TAIL_SHIFT				48
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_TC3_TAIL_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_TC3_TAIL_SMASK				0x3FFF000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_UNUSED_47_46_SHIFT			46
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_UNUSED_47_46_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_UNUSED_47_46_SMASK			0xC00000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_TC3_HEAD_SHIFT				32
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_TC3_HEAD_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_TC3_HEAD_SMASK				0x3FFF00000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_UNUSED_31_30_SHIFT			30
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_UNUSED_31_30_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_UNUSED_31_30_SMASK			0xC0000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_TC2_TAIL_SHIFT				16
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_TC2_TAIL_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_TC2_TAIL_SMASK				0x3FFF0000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_UNUSED_15_14_SHIFT			14
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_UNUSED_15_14_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_UNUSED_15_14_SMASK			0xC000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_TC2_HEAD_SHIFT				0
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_TC2_HEAD_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_TC2_HEAD_SMASK				0x3FFFull
/*
* Table #146 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_fpe_context_enable
* This CSR enables access to specific context within the fragmentation engine 
* (FPE). 
*/
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000062E0)
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_RESETCSR						0x0000000000FFFFFFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_UNUSED_63_24_SHIFT					24
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_UNUSED_63_24_MASK					0xFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_UNUSED_63_24_SMASK					0xFFFFFFFFFF000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC3_RSVD_SHIFT					23
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC3_RSVD_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC3_RSVD_SMASK					0x800000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC2_RSVD_SHIFT					22
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC2_RSVD_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC2_RSVD_SMASK					0x400000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC1_RSVD_SHIFT					21
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC1_RSVD_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC1_RSVD_SMASK					0x200000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC0_RSVD_SHIFT					20
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC0_RSVD_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC0_RSVD_SMASK					0x100000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC3_RSVD_SHIFT					19
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC3_RSVD_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC3_RSVD_SMASK					0x80000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC2_RSVD_SHIFT					18
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC2_RSVD_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC2_RSVD_SMASK					0x40000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC1_RSVD_SHIFT					17
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC1_RSVD_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC1_RSVD_SMASK					0x20000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC0_RSVD_SHIFT					16
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC0_RSVD_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC0_RSVD_SMASK					0x10000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED7_SHIFT					15
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED7_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED7_SMASK					0x8000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED6_SHIFT					14
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED6_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED6_SMASK					0x4000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED5_SHIFT					13
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED5_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED5_SMASK					0x2000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED4_SHIFT					12
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED4_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED4_SMASK					0x1000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED3_SHIFT					11
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED3_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED3_SMASK					0x800ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED2_SHIFT					10
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED2_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED2_SMASK					0x400ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED1_SHIFT					9
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED1_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED1_SMASK					0x200ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED0_SHIFT					8
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED0_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED0_SMASK					0x100ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC3_SHIFT					7
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC3_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC3_SMASK					0x80ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC2_SHIFT					6
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC2_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC2_SMASK					0x40ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC1_SHIFT					5
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC1_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC1_SMASK					0x20ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC0_SHIFT					4
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC0_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC0_SMASK					0x10ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC3_SHIFT					3
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC3_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC3_SMASK					0x8ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC2_SHIFT					2
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC2_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC2_SMASK					0x4ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC1_SHIFT					1
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC1_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC1_SMASK					0x2ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC0_SHIFT					0
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC0_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC0_SMASK					0x1ull
/*
* Table #147 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_fpe_context_mctc_map0
* This CSR indicates which MCTC is occupying a specific FPE context. 
* 
*/
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000062E8)
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_RESETCSR					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED7_SHIFT					60
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED7_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED7_SMASK					0xF000000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED6_SHIFT					56
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED6_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED6_SMASK					0xF00000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED5_SHIFT					52
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED5_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED5_SMASK					0xF0000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED4_SHIFT					48
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED4_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED4_SMASK					0xF000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED3_SHIFT					44
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED3_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED3_SMASK					0xF00000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED2_SHIFT					40
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED2_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED2_SMASK					0xF0000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED1_SHIFT					36
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED1_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED1_SMASK					0xF000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED0_SHIFT					32
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED0_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED0_SMASK					0xF00000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC1TC3_SHIFT					28
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC1TC3_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC1TC3_SMASK					0xF0000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC1TC2_SHIFT					24
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC1TC2_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC1TC2_SMASK					0xF000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC1TC1_SHIFT					20
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC1TC1_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC1TC1_SMASK					0xF00000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC1TC0_SHIFT					16
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC1TC0_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC1TC0_SMASK					0xF0000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC0TC3_SHIFT					12
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC0TC3_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC0TC3_SMASK					0xF000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC0TC2_SHIFT					8
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC0TC2_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC0TC2_SMASK					0xF00ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC0TC1_SHIFT					4
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC0TC1_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC0TC1_SMASK					0xF0ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC0TC0_SHIFT					0
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC0TC0_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC0TC0_SMASK					0xFull
/*
* Table #148 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_dbg_fpe_context_mctc_map1
* This CSR indicates which MCTC is occupying a specific FPE context. 
* 
*/
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000062F0)
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_RESETCSR					0x00000000FFFFFFFFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_UNUSED_63_32_SHIFT				32
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_UNUSED_63_32_MASK				0xFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_UNUSED_63_32_SMASK				0xFFFFFFFF00000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC1TC3_RSVD_SHIFT				28
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC1TC3_RSVD_MASK				0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC1TC3_RSVD_SMASK				0xF0000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC1TC2_RSVD_SHIFT				24
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC1TC2_RSVD_MASK				0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC1TC2_RSVD_SMASK				0xF000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC1TC1_RSVD_SHIFT				20
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC1TC1_RSVD_MASK				0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC1TC1_RSVD_SMASK				0xF00000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC1TC0_RSVD_SHIFT				16
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC1TC0_RSVD_MASK				0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC1TC0_RSVD_SMASK				0xF0000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC0TC3_RSVD_SHIFT				12
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC0TC3_RSVD_MASK				0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC0TC3_RSVD_SMASK				0xF000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC0TC2_RSVD_SHIFT				8
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC0TC2_RSVD_MASK				0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC0TC2_RSVD_SMASK				0xF00ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC0TC1_RSVD_SHIFT				4
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC0TC1_RSVD_MASK				0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC0TC1_RSVD_SMASK				0xF0ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC0TC0_RSVD_SHIFT				0
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC0TC0_RSVD_MASK				0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC0TC0_RSVD_SMASK				0xFull
/*
* Table #149 of fxr_tx_otr_pkt_top_csrs - txotr_pkg_dbg_mc0_outstanding_pkt_cnt
* This CSR keeps a count of the number of outstanding packets for MC0. 
* 
*/
#define FXR_TXOTR_PKG_DBG_MC0_OUTSTANDING_PKT_CNT						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000062F8)
#define FXR_TXOTR_PKG_DBG_MC0_OUTSTANDING_PKT_CNT_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKG_DBG_MC0_OUTSTANDING_PKT_CNT_TC3_SHIFT					48
#define FXR_TXOTR_PKG_DBG_MC0_OUTSTANDING_PKT_CNT_TC3_MASK					0xFFFFull
#define FXR_TXOTR_PKG_DBG_MC0_OUTSTANDING_PKT_CNT_TC3_SMASK					0xFFFF000000000000ull
#define FXR_TXOTR_PKG_DBG_MC0_OUTSTANDING_PKT_CNT_TC2_SHIFT					32
#define FXR_TXOTR_PKG_DBG_MC0_OUTSTANDING_PKT_CNT_TC2_MASK					0xFFFFull
#define FXR_TXOTR_PKG_DBG_MC0_OUTSTANDING_PKT_CNT_TC2_SMASK					0xFFFF00000000ull
#define FXR_TXOTR_PKG_DBG_MC0_OUTSTANDING_PKT_CNT_TC1_SHIFT					16
#define FXR_TXOTR_PKG_DBG_MC0_OUTSTANDING_PKT_CNT_TC1_MASK					0xFFFFull
#define FXR_TXOTR_PKG_DBG_MC0_OUTSTANDING_PKT_CNT_TC1_SMASK					0xFFFF0000ull
#define FXR_TXOTR_PKG_DBG_MC0_OUTSTANDING_PKT_CNT_TC0_SHIFT					0
#define FXR_TXOTR_PKG_DBG_MC0_OUTSTANDING_PKT_CNT_TC0_MASK					0xFFFFull
#define FXR_TXOTR_PKG_DBG_MC0_OUTSTANDING_PKT_CNT_TC0_SMASK					0xFFFFull
/*
* Table #150 of fxr_tx_otr_pkt_top_csrs - txotr_pkg_dbg_mc1_outstanding_pkt_cnt
* This CSR keeps a count of the number of outstanding packets for MC1. 
* 
*/
#define FXR_TXOTR_PKG_DBG_MC1_OUTSTANDING_PKT_CNT						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006300)
#define FXR_TXOTR_PKG_DBG_MC1_OUTSTANDING_PKT_CNT_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKG_DBG_MC1_OUTSTANDING_PKT_CNT_TC3_SHIFT					48
#define FXR_TXOTR_PKG_DBG_MC1_OUTSTANDING_PKT_CNT_TC3_MASK					0xFFFFull
#define FXR_TXOTR_PKG_DBG_MC1_OUTSTANDING_PKT_CNT_TC3_SMASK					0xFFFF000000000000ull
#define FXR_TXOTR_PKG_DBG_MC1_OUTSTANDING_PKT_CNT_TC2_SHIFT					32
#define FXR_TXOTR_PKG_DBG_MC1_OUTSTANDING_PKT_CNT_TC2_MASK					0xFFFFull
#define FXR_TXOTR_PKG_DBG_MC1_OUTSTANDING_PKT_CNT_TC2_SMASK					0xFFFF00000000ull
#define FXR_TXOTR_PKG_DBG_MC1_OUTSTANDING_PKT_CNT_TC1_SHIFT					16
#define FXR_TXOTR_PKG_DBG_MC1_OUTSTANDING_PKT_CNT_TC1_MASK					0xFFFFull
#define FXR_TXOTR_PKG_DBG_MC1_OUTSTANDING_PKT_CNT_TC1_SMASK					0xFFFF0000ull
#define FXR_TXOTR_PKG_DBG_MC1_OUTSTANDING_PKT_CNT_TC0_SHIFT					0
#define FXR_TXOTR_PKG_DBG_MC1_OUTSTANDING_PKT_CNT_TC0_MASK					0xFFFFull
#define FXR_TXOTR_PKG_DBG_MC1_OUTSTANDING_PKT_CNT_TC0_SMASK					0xFFFFull
/*
* Table #151 of fxr_tx_otr_pkt_top_csrs - txotr_pkg_dbg_to_nack_mask
* This CSR can be used to clear a bit in the Timeout NACK Mask. Hardware detects 
* a write of one to the #%%#enable#%%# bit and sets the corresponding bit in the 
* mask (as indicated by #%%#index#%%#) to zero. 
*/
#define FXR_TXOTR_PKG_DBG_TO_NACK_MASK								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006308)
#define FXR_TXOTR_PKG_DBG_TO_NACK_MASK_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKG_DBG_TO_NACK_MASK_UNUSED_63_9_SHIFT					9
#define FXR_TXOTR_PKG_DBG_TO_NACK_MASK_UNUSED_63_9_MASK						0x7FFFFFFFFFFFFFull
#define FXR_TXOTR_PKG_DBG_TO_NACK_MASK_UNUSED_63_9_SMASK					0xFFFFFFFFFFFFFE00ull
#define FXR_TXOTR_PKG_DBG_TO_NACK_MASK_ENABLE_SHIFT						8
#define FXR_TXOTR_PKG_DBG_TO_NACK_MASK_ENABLE_MASK						0x1ull
#define FXR_TXOTR_PKG_DBG_TO_NACK_MASK_ENABLE_SMASK						0x100ull
#define FXR_TXOTR_PKG_DBG_TO_NACK_MASK_INDEX_SHIFT						0
#define FXR_TXOTR_PKG_DBG_TO_NACK_MASK_INDEX_MASK						0xFFull
#define FXR_TXOTR_PKG_DBG_TO_NACK_MASK_INDEX_SMASK						0xFFull
/*
* Table #152 of fxr_tx_otr_pkt_top_csrs - txotr_pkg_dbg_pending_retransmit
* This CSR can be used to clear a bit in the Pending Retransmit Sidecar. 
* Hardware detects a write of one to the #%%#enable#%%# bit and sets the 
* corresponding bit in the mask (as indicated by #%%#index#%%#) to zero. 
* 
*/
#define FXR_TXOTR_PKG_DBG_PENDING_RETRANSMIT							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006310)
#define FXR_TXOTR_PKG_DBG_PENDING_RETRANSMIT_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKG_DBG_PENDING_RETRANSMIT_UNUSED_63_7_SHIFT					7
#define FXR_TXOTR_PKG_DBG_PENDING_RETRANSMIT_UNUSED_63_7_MASK					0x1FFFFFFFFFFFFFFull
#define FXR_TXOTR_PKG_DBG_PENDING_RETRANSMIT_UNUSED_63_7_SMASK					0xFFFFFFFFFFFFFF80ull
#define FXR_TXOTR_PKG_DBG_PENDING_RETRANSMIT_ENABLE_SHIFT					6
#define FXR_TXOTR_PKG_DBG_PENDING_RETRANSMIT_ENABLE_MASK					0x1ull
#define FXR_TXOTR_PKG_DBG_PENDING_RETRANSMIT_ENABLE_SMASK					0x40ull
#define FXR_TXOTR_PKG_DBG_PENDING_RETRANSMIT_INDEX_SHIFT					0
#define FXR_TXOTR_PKG_DBG_PENDING_RETRANSMIT_INDEX_MASK						0x3Full
#define FXR_TXOTR_PKG_DBG_PENDING_RETRANSMIT_INDEX_SMASK					0x3Full
/*
* Table #153 of fxr_tx_otr_pkt_top_csrs - txotr_pkg_dbg_oos_nack_mask
* This CSR can be used to clear a bit in the Out-of-Sequence NACK Mask. Hardware 
* detects a write of one to the #%%#enable#%%# bit and sets the corresponding 
* bit in the mask (as indicated by #%%#index#%%#) to zero. 
*/
#define FXR_TXOTR_PKG_DBG_OOS_NACK_MASK								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006318)
#define FXR_TXOTR_PKG_DBG_OOS_NACK_MASK_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKG_DBG_OOS_NACK_MASK_UNUSED_63_7_SHIFT					7
#define FXR_TXOTR_PKG_DBG_OOS_NACK_MASK_UNUSED_63_7_MASK					0x1FFFFFFFFFFFFFFull
#define FXR_TXOTR_PKG_DBG_OOS_NACK_MASK_UNUSED_63_7_SMASK					0xFFFFFFFFFFFFFF80ull
#define FXR_TXOTR_PKG_DBG_OOS_NACK_MASK_ENABLE_SHIFT						6
#define FXR_TXOTR_PKG_DBG_OOS_NACK_MASK_ENABLE_MASK						0x1ull
#define FXR_TXOTR_PKG_DBG_OOS_NACK_MASK_ENABLE_SMASK						0x40ull
#define FXR_TXOTR_PKG_DBG_OOS_NACK_MASK_INDEX_SHIFT						0
#define FXR_TXOTR_PKG_DBG_OOS_NACK_MASK_INDEX_MASK						0x3Full
#define FXR_TXOTR_PKG_DBG_OOS_NACK_MASK_INDEX_SMASK						0x3Full
/*
* Table #154 of fxr_tx_otr_pkt_top_csrs - txotr_pkg_dbg_head_pending
* This CSR can be used to clear a bit in the Head Pending Sidecar. Hardware 
* detects a write of one to the #%%#enable#%%# bit and sets the corresponding 
* bit in the mask (as indicated by #%%#index#%%#) to zero. 
*/
#define FXR_TXOTR_PKG_DBG_HEAD_PENDING								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006320)
#define FXR_TXOTR_PKG_DBG_HEAD_PENDING_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKG_DBG_HEAD_PENDING_UNUSED_63_9_SHIFT					9
#define FXR_TXOTR_PKG_DBG_HEAD_PENDING_UNUSED_63_9_MASK						0x7FFFFFFFFFFFFFull
#define FXR_TXOTR_PKG_DBG_HEAD_PENDING_UNUSED_63_9_SMASK					0xFFFFFFFFFFFFFE00ull
#define FXR_TXOTR_PKG_DBG_HEAD_PENDING_ENABLE_SHIFT						8
#define FXR_TXOTR_PKG_DBG_HEAD_PENDING_ENABLE_MASK						0x1ull
#define FXR_TXOTR_PKG_DBG_HEAD_PENDING_ENABLE_SMASK						0x100ull
#define FXR_TXOTR_PKG_DBG_HEAD_PENDING_INDEX_SHIFT						0
#define FXR_TXOTR_PKG_DBG_HEAD_PENDING_INDEX_MASK						0xFFull
#define FXR_TXOTR_PKG_DBG_HEAD_PENDING_INDEX_SMASK						0xFFull
/*
* Table #155 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_prf_stall_opb_entries_x
* This CSR configures the performance registers used to track stalling due to a 
* lack of OPB entries. See more details in Performance Counters Specification, 
* page #%%#419#%%#.
*/
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_X							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000008000)
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_X_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_X_UNUSED_63_3_SHIFT					3
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_X_UNUSED_63_3_MASK					0x1FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_X_UNUSED_63_3_SMASK					0xFFFFFFFFFFFFFFF8ull
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_X_MCTC_SHIFT					0
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_X_MCTC_MASK						0x7ull
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_X_MCTC_SMASK					0x7ull
/*
* Table #156 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_prf_stall_opb_entries_y
* This CSR configures the performance registers used to track stalling due to a 
* lack of OPB entries. See more details in Performance Counters Specification, 
* page #%%#419#%%#.
*/
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_Y							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000008008)
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_Y_RESETCSR						0x0000000000000004ull
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_Y_UNUSED_63_3_SHIFT					3
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_Y_UNUSED_63_3_MASK					0x1FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_Y_UNUSED_63_3_SMASK					0xFFFFFFFFFFFFFFF8ull
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_Y_MCTC_SHIFT					0
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_Y_MCTC_MASK						0x7ull
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_Y_MCTC_SMASK					0x7ull
/*
* Table #157 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_prf_stall_txdma_credits_x
* This CSR configures the performance registers used to track stalling due to a 
* lack of TXDMA credits. See more details in Performance Counters Specification, 
* page #%%#419#%%#.
*/
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_X							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000008010)
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_X_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_X_UNUSED_63_3_SHIFT				3
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_X_UNUSED_63_3_MASK				0x1FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_X_UNUSED_63_3_SMASK				0xFFFFFFFFFFFFFFF8ull
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_X_MCTC_SHIFT					0
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_X_MCTC_MASK					0x7ull
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_X_MCTC_SMASK					0x7ull
/*
* Table #158 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_prf_stall_txdma_credits_y
* This CSR configures the performance registers used to track stalling due to a 
* lack of TXDMA credits. See more details in Performance Counters Specification, 
* page #%%#419#%%#.
*/
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_Y							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000008018)
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_Y_RESETCSR					0x0000000000000004ull
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_Y_UNUSED_63_3_SHIFT				3
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_Y_UNUSED_63_3_MASK				0x1FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_Y_UNUSED_63_3_SMASK				0xFFFFFFFFFFFFFFF8ull
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_Y_MCTC_SHIFT					0
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_Y_MCTC_MASK					0x7ull
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_Y_MCTC_SMASK					0x7ull
/*
* Table #159 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_prf_stall_p_to_m_credits_x
* This CSR configures the performance registers used to track stalling due to a 
* lack of Packet Partition to Message Partition credits. See more details in 
* Performance Counters Specification, page #%%#420#%%#.
*/
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_X						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000008020)
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_X_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_X_UNUSED_63_2_SHIFT				2
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_X_UNUSED_63_2_MASK				0x3FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_X_UNUSED_63_2_SMASK				0xFFFFFFFFFFFFFFFCull
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_X_MCTC_SHIFT					0
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_X_MCTC_MASK					0x3ull
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_X_MCTC_SMASK					0x3ull
/*
* Table #160 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_prf_stall_p_to_m_credits_y
* This CSR configures the performance registers used to track stalling due to a 
* lack of Packet Partition to Message Partition credits. See more details in 
* Performance Counters Specification, page #%%#420#%%#.
*/
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_Y						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000008028)
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_Y_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_Y_UNUSED_63_2_SHIFT				2
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_Y_UNUSED_63_2_MASK				0x3FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_Y_UNUSED_63_2_SMASK				0xFFFFFFFFFFFFFFFCull
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_Y_MCTC_SHIFT					0
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_Y_MCTC_MASK					0x3ull
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_Y_MCTC_SMASK					0x3ull
/*
* Table #161 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_prf_latency
* This CSR configures the latency buckets for responses from the network. There 
* are five buckets into which response latencies can be binned: A, B, C, D, and 
* E. See more details in Performance Counters Specification, page 
* #%%#421#%%#.
*/
#define FXR_TXOTR_PKT_PRF_LATENCY								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000008030)
#define FXR_TXOTR_PKT_PRF_LATENCY_RESETCSR							0x0000CCC999666333ull
#define FXR_TXOTR_PKT_PRF_LATENCY_UNUSED_63_48_SHIFT						48
#define FXR_TXOTR_PKT_PRF_LATENCY_UNUSED_63_48_MASK						0xFFFFull
#define FXR_TXOTR_PKT_PRF_LATENCY_UNUSED_63_48_SMASK						0xFFFF000000000000ull
#define FXR_TXOTR_PKT_PRF_LATENCY_D_MAX_SHIFT							36
#define FXR_TXOTR_PKT_PRF_LATENCY_D_MAX_MASK							0xFFFull
#define FXR_TXOTR_PKT_PRF_LATENCY_D_MAX_SMASK							0xFFF000000000ull
#define FXR_TXOTR_PKT_PRF_LATENCY_C_MAX_SHIFT							24
#define FXR_TXOTR_PKT_PRF_LATENCY_C_MAX_MASK							0xFFFull
#define FXR_TXOTR_PKT_PRF_LATENCY_C_MAX_SMASK							0xFFF000000ull
#define FXR_TXOTR_PKT_PRF_LATENCY_B_MAX_SHIFT							12
#define FXR_TXOTR_PKT_PRF_LATENCY_B_MAX_MASK							0xFFFull
#define FXR_TXOTR_PKT_PRF_LATENCY_B_MAX_SMASK							0xFFF000ull
#define FXR_TXOTR_PKT_PRF_LATENCY_A_MAX_SHIFT							0
#define FXR_TXOTR_PKT_PRF_LATENCY_A_MAX_MASK							0xFFFull
#define FXR_TXOTR_PKT_PRF_LATENCY_A_MAX_SMASK							0xFFFull
/*
* Table #162 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_prf_pkts_opened_x
* This CSR configures the performance registers used to track the number of 
* packets generated by TXOTR. See more details in Performance Counters 
* Specification, page #%%#420#%%#.
*/
#define FXR_TXOTR_PKT_PRF_PKTS_OPENED_X								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000008038)
#define FXR_TXOTR_PKT_PRF_PKTS_OPENED_X_RESETCSR						0x0000000000000004ull
#define FXR_TXOTR_PKT_PRF_PKTS_OPENED_X_UNUSED_63_3_SHIFT					3
#define FXR_TXOTR_PKT_PRF_PKTS_OPENED_X_UNUSED_63_3_MASK					0x1FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_PRF_PKTS_OPENED_X_UNUSED_63_3_SMASK					0xFFFFFFFFFFFFFFF8ull
#define FXR_TXOTR_PKT_PRF_PKTS_OPENED_X_MCTC_SHIFT						0
#define FXR_TXOTR_PKT_PRF_PKTS_OPENED_X_MCTC_MASK						0x7ull
#define FXR_TXOTR_PKT_PRF_PKTS_OPENED_X_MCTC_SMASK						0x7ull
/*
* Table #163 of fxr_tx_otr_pkt_top_csrs - txotr_pkt_prf_pkts_closed_x
* This CSR configures the performance registers used to track the number of 
* packets completed by TXOTR. See more details in Performance Counters 
* Specification, page #%%#420#%%#.
*/
#define FXR_TXOTR_PKT_PRF_PKTS_CLOSED_X								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000008040)
#define FXR_TXOTR_PKT_PRF_PKTS_CLOSED_X_RESETCSR						0x0000000000000004ull
#define FXR_TXOTR_PKT_PRF_PKTS_CLOSED_X_UNUSED_63_3_SHIFT					3
#define FXR_TXOTR_PKT_PRF_PKTS_CLOSED_X_UNUSED_63_3_MASK					0x1FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_PRF_PKTS_CLOSED_X_UNUSED_63_3_SMASK					0xFFFFFFFFFFFFFFF8ull
#define FXR_TXOTR_PKT_PRF_PKTS_CLOSED_X_MCTC_SHIFT						0
#define FXR_TXOTR_PKT_PRF_PKTS_CLOSED_X_MCTC_MASK						0x7ull
#define FXR_TXOTR_PKT_PRF_PKTS_CLOSED_X_MCTC_SMASK						0x7ull

#endif 		/* DEF_FXR_TX_OTR_PKT_TOP_CSRS_SW_DEF */

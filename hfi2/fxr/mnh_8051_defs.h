/*
*------------------------------------------------------------------------------
*                                                                              
*  INTEL CONFIDENTIAL                                                          
*                                                                              
*  Copyright 2016 Intel Corporation All Rights Reserved.                 
*                                                                              
*  The source code contained or described herein and all documents related     
*  to the source code ("Material") are owned by Intel Corporation or its    
*  suppliers or licensors. Title to the Material remains with Intel            
*  Corporation or its suppliers and licensors. The Material contains trade     
*  secrets and proprietary and confidential information of Intel or its        
*  suppliers and licensors. The Material is protected by worldwide copyright   
*  and trade secret laws and treaty provisions. No part of the Material may    
*  be used, copied, reproduced, modified, published, uploaded, posted,         
*  transmitted, distributed, or disclosed in any way without Intel's prior     
*  express written permission.                                                 
*                                                                              
*  No license under any patent, copyright, trade secret or other intellectual  
*  property right is granted to or conferred upon you by disclosure or         
*  delivery of the Materials, either expressly, by implication, inducement,    
*  estoppel or otherwise. Any license under such intellectual property rights  
*  must be express and approved by Intel in writing.                           
*                                                                              
*------------------------------------------------------------------------------
*  Auto-generated by /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/i_csrs.pl
*  i_csrs.pl Version 1.5 last modified on Thursday 1/7/16 17:24:50
*  /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/i_csrs.pl -C -R -ST mnh_8051 -o /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/fxr Manor_Hill/Product_HAS/Manor Hill/xml/146_8051_Registers.xml
*------------------------------------------------------------------------------
*/

#ifndef DEF_MNH_8051_SW_DEF
#define DEF_MNH_8051_SW_DEF

#ifndef CRK_8051_CSRS
#define CRK_8051_CSRS								0x000000000000
#endif
/*
* Table #2 of 146_8051_Registers.xml - CRK8051_CFG_RAM_ACCESS_SETUP
* These registers are used to load and read the CRK8051 code and data memories 
* inside the Creek IP. To load the firmware into the CRK8051 code memory in auto 
* addressing mode:
*/
#define CRK_CRK8051_CFG_RAM_ACCESS_SETUP					(CRK_8051_CSRS + 0x000000000000)
#define CRK_CRK8051_CFG_RAM_ACCESS_SETUP_RESETCSR				0x0000000000000000ull
#define CRK_CRK8051_CFG_RAM_ACCESS_SETUP_UNUSED_63_9_SHIFT			9
#define CRK_CRK8051_CFG_RAM_ACCESS_SETUP_UNUSED_63_9_MASK			0x7FFFFFFFFFFFFFull
#define CRK_CRK8051_CFG_RAM_ACCESS_SETUP_UNUSED_63_9_SMASK			0xFFFFFFFFFFFFFE00ull
#define CRK_CRK8051_CFG_RAM_ACCESS_SETUP_AUTO_INCR_ADDR_SHIFT			8
#define CRK_CRK8051_CFG_RAM_ACCESS_SETUP_AUTO_INCR_ADDR_MASK			0x1ull
#define CRK_CRK8051_CFG_RAM_ACCESS_SETUP_AUTO_INCR_ADDR_SMASK			0x100ull
#define CRK_CRK8051_CFG_RAM_ACCESS_SETUP_UNUSED_7_1_SHIFT			1
#define CRK_CRK8051_CFG_RAM_ACCESS_SETUP_UNUSED_7_1_MASK			0x7Full
#define CRK_CRK8051_CFG_RAM_ACCESS_SETUP_UNUSED_7_1_SMASK			0xFEull
#define CRK_CRK8051_CFG_RAM_ACCESS_SETUP_RAM_SEL_SHIFT				0
#define CRK_CRK8051_CFG_RAM_ACCESS_SETUP_RAM_SEL_MASK				0x1ull
#define CRK_CRK8051_CFG_RAM_ACCESS_SETUP_RAM_SEL_SMASK				0x1ull
/*
* Table #3 of 146_8051_Registers.xml - CRK8051_CFG_RAM_ACCESS_CTRL
* 
*/
#define CRK_CRK8051_CFG_RAM_ACCESS_CTRL						(CRK_8051_CSRS + 0x000000000008)
#define CRK_CRK8051_CFG_RAM_ACCESS_CTRL_RESETCSR				0x0000000000000000ull
#define CRK_CRK8051_CFG_RAM_ACCESS_CTRL_UNUSED_63_25_SHIFT			25
#define CRK_CRK8051_CFG_RAM_ACCESS_CTRL_UNUSED_63_25_MASK			0x7FFFFFFFFFull
#define CRK_CRK8051_CFG_RAM_ACCESS_CTRL_UNUSED_63_25_SMASK			0xFFFFFFFFFE000000ull
#define CRK_CRK8051_CFG_RAM_ACCESS_CTRL_WRITE_ENA_SHIFT				24
#define CRK_CRK8051_CFG_RAM_ACCESS_CTRL_WRITE_ENA_MASK				0x1ull
#define CRK_CRK8051_CFG_RAM_ACCESS_CTRL_WRITE_ENA_SMASK				0x1000000ull
#define CRK_CRK8051_CFG_RAM_ACCESS_CTRL_UNUSED_23_17_SHIFT			17
#define CRK_CRK8051_CFG_RAM_ACCESS_CTRL_UNUSED_23_17_MASK			0x7Full
#define CRK_CRK8051_CFG_RAM_ACCESS_CTRL_UNUSED_23_17_SMASK			0xFE0000ull
#define CRK_CRK8051_CFG_RAM_ACCESS_CTRL_READ_ENA_SHIFT				16
#define CRK_CRK8051_CFG_RAM_ACCESS_CTRL_READ_ENA_MASK				0x1ull
#define CRK_CRK8051_CFG_RAM_ACCESS_CTRL_READ_ENA_SMASK				0x10000ull
#define CRK_CRK8051_CFG_RAM_ACCESS_CTRL_ADDRESS_SHIFT				0
#define CRK_CRK8051_CFG_RAM_ACCESS_CTRL_ADDRESS_MASK				0xFFFFull
#define CRK_CRK8051_CFG_RAM_ACCESS_CTRL_ADDRESS_SMASK				0xFFFFull
/*
* Table #4 of 146_8051_Registers.xml - CRK8051_CFG_RAM_ACCESS_WR_DATA
* 
*/
#define CRK_CRK8051_CFG_RAM_ACCESS_WR_DATA					(CRK_8051_CSRS + 0x000000000010)
#define CRK_CRK8051_CFG_RAM_ACCESS_WR_DATA_RESETCSR				0x0000000000000000ull
#define CRK_CRK8051_CFG_RAM_ACCESS_WR_DATA_VAL_SHIFT				0
#define CRK_CRK8051_CFG_RAM_ACCESS_WR_DATA_VAL_MASK				0xFFFFFFFFFFFFFFFFull
#define CRK_CRK8051_CFG_RAM_ACCESS_WR_DATA_VAL_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #5 of 146_8051_Registers.xml - CRK8051_CFG_RAM_ACCESS_STATUS
* 
*/
#define CRK_CRK8051_CFG_RAM_ACCESS_STATUS					(CRK_8051_CSRS + 0x000000000018)
#define CRK_CRK8051_CFG_RAM_ACCESS_STATUS_RESETCSR				0x0000000000010000ull
#define CRK_CRK8051_CFG_RAM_ACCESS_STATUS_UNUSED_63_17_SHIFT			17
#define CRK_CRK8051_CFG_RAM_ACCESS_STATUS_UNUSED_63_17_MASK			0x7FFFFFFFFFFFull
#define CRK_CRK8051_CFG_RAM_ACCESS_STATUS_UNUSED_63_17_SMASK			0xFFFFFFFFFFFE0000ull
#define CRK_CRK8051_CFG_RAM_ACCESS_STATUS_ACCESS_COMPLETED_SHIFT		16
#define CRK_CRK8051_CFG_RAM_ACCESS_STATUS_ACCESS_COMPLETED_MASK			0x1ull
#define CRK_CRK8051_CFG_RAM_ACCESS_STATUS_ACCESS_COMPLETED_SMASK		0x10000ull
#define CRK_CRK8051_CFG_RAM_ACCESS_STATUS_AUTO_ADDRESS_SHIFT			0
#define CRK_CRK8051_CFG_RAM_ACCESS_STATUS_AUTO_ADDRESS_MASK			0xFFFFull
#define CRK_CRK8051_CFG_RAM_ACCESS_STATUS_AUTO_ADDRESS_SMASK			0xFFFFull
/*
* Table #6 of 146_8051_Registers.xml - CRK8051_CFG_RAM_ACCESS_RD_DATA
* 
*/
#define CRK_CRK8051_CFG_RAM_ACCESS_RD_DATA					(CRK_8051_CSRS + 0x000000000020)
#define CRK_CRK8051_CFG_RAM_ACCESS_RD_DATA_RESETCSR				0x0000000000000000ull
#define CRK_CRK8051_CFG_RAM_ACCESS_RD_DATA_VAL_SHIFT				0
#define CRK_CRK8051_CFG_RAM_ACCESS_RD_DATA_VAL_MASK				0xFFFFFFFFFFFFFFFFull
#define CRK_CRK8051_CFG_RAM_ACCESS_RD_DATA_VAL_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #7 of 146_8051_Registers.xml - CRK8051_CFG_HOST_CMD_0
* These registers are used by the host to issue request to the CRK8051 related 
* to the LNI process.
*/
#define CRK_CRK8051_CFG_HOST_CMD_0						(CRK_8051_CSRS + 0x000000000028)
#define CRK_CRK8051_CFG_HOST_CMD_0_RESETCSR					0x0000000000000000ull
#define CRK_CRK8051_CFG_HOST_CMD_0_REQ_DATA_SHIFT				16
#define CRK_CRK8051_CFG_HOST_CMD_0_REQ_DATA_MASK				0xFFFFFFFFFFFFull
#define CRK_CRK8051_CFG_HOST_CMD_0_REQ_DATA_SMASK				0xFFFFFFFFFFFF0000ull
#define CRK_CRK8051_CFG_HOST_CMD_0_REQ_TYPE_SHIFT				8
#define CRK_CRK8051_CFG_HOST_CMD_0_REQ_TYPE_MASK				0xFFull
#define CRK_CRK8051_CFG_HOST_CMD_0_REQ_TYPE_SMASK				0xFF00ull
#define CRK_CRK8051_CFG_HOST_CMD_0_UNUSED_7_1_SHIFT				1
#define CRK_CRK8051_CFG_HOST_CMD_0_UNUSED_7_1_MASK				0x7Full
#define CRK_CRK8051_CFG_HOST_CMD_0_UNUSED_7_1_SMASK				0xFEull
#define CRK_CRK8051_CFG_HOST_CMD_0_REQ_NEW_SHIFT				0
#define CRK_CRK8051_CFG_HOST_CMD_0_REQ_NEW_MASK					0x1ull
#define CRK_CRK8051_CFG_HOST_CMD_0_REQ_NEW_SMASK				0x1ull
/*
* Table #8 of 146_8051_Registers.xml - CRK8051_CFG_HOST_CMD_1
* 
*/
#define CRK_CRK8051_CFG_HOST_CMD_1						(CRK_8051_CSRS + 0x000000000030)
#define CRK_CRK8051_CFG_HOST_CMD_1_RESETCSR					0x0000000000000001ull
#define CRK_CRK8051_CFG_HOST_CMD_1_RSP_DATA_SHIFT				16
#define CRK_CRK8051_CFG_HOST_CMD_1_RSP_DATA_MASK				0xFFFFFFFFFFFFull
#define CRK_CRK8051_CFG_HOST_CMD_1_RSP_DATA_SMASK				0xFFFFFFFFFFFF0000ull
#define CRK_CRK8051_CFG_HOST_CMD_1_RETURN_CODE_SHIFT				8
#define CRK_CRK8051_CFG_HOST_CMD_1_RETURN_CODE_MASK				0xFFull
#define CRK_CRK8051_CFG_HOST_CMD_1_RETURN_CODE_SMASK				0xFF00ull
#define CRK_CRK8051_CFG_HOST_CMD_1_UNUSED_7_1_SHIFT				1
#define CRK_CRK8051_CFG_HOST_CMD_1_UNUSED_7_1_MASK				0x7Full
#define CRK_CRK8051_CFG_HOST_CMD_1_UNUSED_7_1_SMASK				0xFEull
#define CRK_CRK8051_CFG_HOST_CMD_1_COMPLETED_SHIFT				0
#define CRK_CRK8051_CFG_HOST_CMD_1_COMPLETED_MASK				0x1ull
#define CRK_CRK8051_CFG_HOST_CMD_1_COMPLETED_SMASK				0x1ull
/*
* Table #9 of 146_8051_Registers.xml - CRK8051_CFG_LOCAL_GUID
* This register is used to store the local GUID, The access to this register is 
* programmable depending on The security mode. In the 'non-secure' mode (CRK 
* input pin i_top_crk8051_security_lock = 1), only hardware has write access. In 
* the 'secure' mode (CRK input pin i_top_crk8051_security_lock = 0), this 
* register is both writable and readable.
*/
#define CRK_CRK8051_CFG_LOCAL_GUID						(CRK_8051_CSRS + 0x000000000038)
#define CRK_CRK8051_CFG_LOCAL_GUID_RESETCSR					0x0000000000000000ull
#define CRK_CRK8051_CFG_LOCAL_GUID_VAL_SHIFT					0
#define CRK_CRK8051_CFG_LOCAL_GUID_VAL_MASK					0xFFFFFFFFFFFFFFFFull
#define CRK_CRK8051_CFG_LOCAL_GUID_VAL_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #10 of 146_8051_Registers.xml - CRK8051_STS_REMOTE_GUID
* 
*/
#define CRK_CRK8051_STS_REMOTE_GUID						(CRK_8051_CSRS + 0x000000000040)
#define CRK_CRK8051_STS_REMOTE_GUID_RESETCSR					0x0000000000000000ull
#define CRK_CRK8051_STS_REMOTE_GUID_VAL_SHIFT					0
#define CRK_CRK8051_STS_REMOTE_GUID_VAL_MASK					0xFFFFFFFFFFFFFFFFull
#define CRK_CRK8051_STS_REMOTE_GUID_VAL_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #11 of 146_8051_Registers.xml - CRK8051_STS_REMOTE_NODE_TYPE
* This register is used to store the remote Node Type received
*/
#define CRK_CRK8051_STS_REMOTE_NODE_TYPE					(CRK_8051_CSRS + 0x000000000048)
#define CRK_CRK8051_STS_REMOTE_NODE_TYPE_RESETCSR				0x0000000000000003ull
#define CRK_CRK8051_STS_REMOTE_NODE_TYPE_UNUSED_63_2_SHIFT			2
#define CRK_CRK8051_STS_REMOTE_NODE_TYPE_UNUSED_63_2_MASK			0x3FFFFFFFFFFFFFFFull
#define CRK_CRK8051_STS_REMOTE_NODE_TYPE_UNUSED_63_2_SMASK			0xFFFFFFFFFFFFFFFCull
#define CRK_CRK8051_STS_REMOTE_NODE_TYPE_VAL_SHIFT				0
#define CRK_CRK8051_STS_REMOTE_NODE_TYPE_VAL_MASK				0x3ull
#define CRK_CRK8051_STS_REMOTE_NODE_TYPE_VAL_SMASK				0x3ull
/*
* Table #12 of 146_8051_Registers.xml - CRK8051_STS_LOCAL_FM_SECURITY
* These registers are used to report the status on the firmware security for 
* both local and its remote peer.
*/
#define CRK_CRK8051_STS_LOCAL_FM_SECURITY					(CRK_8051_CSRS + 0x000000000050)
#define CRK_CRK8051_STS_LOCAL_FM_SECURITY_RESETCSR				0x0000000000000001ull
#define CRK_CRK8051_STS_LOCAL_FM_SECURITY_UNUSED_63_1_SHIFT			1
#define CRK_CRK8051_STS_LOCAL_FM_SECURITY_UNUSED_63_1_MASK			0x7FFFFFFFFFFFFFFFull
#define CRK_CRK8051_STS_LOCAL_FM_SECURITY_UNUSED_63_1_SMASK			0xFFFFFFFFFFFFFFFEull
#define CRK_CRK8051_STS_LOCAL_FM_SECURITY_DISABLED_SHIFT			0
#define CRK_CRK8051_STS_LOCAL_FM_SECURITY_DISABLED_MASK				0x1ull
#define CRK_CRK8051_STS_LOCAL_FM_SECURITY_DISABLED_SMASK			0x1ull
/*
* Table #13 of 146_8051_Registers.xml - CRK8051_STS_REMOTE_FM_SECURITY
* 
*/
#define CRK_CRK8051_STS_REMOTE_FM_SECURITY					(CRK_8051_CSRS + 0x000000000058)
#define CRK_CRK8051_STS_REMOTE_FM_SECURITY_RESETCSR				0x0000000000000001ull
#define CRK_CRK8051_STS_REMOTE_FM_SECURITY_UNUSED_63_1_SHIFT			1
#define CRK_CRK8051_STS_REMOTE_FM_SECURITY_UNUSED_63_1_MASK			0x7FFFFFFFFFFFFFFFull
#define CRK_CRK8051_STS_REMOTE_FM_SECURITY_UNUSED_63_1_SMASK			0xFFFFFFFFFFFFFFFEull
#define CRK_CRK8051_STS_REMOTE_FM_SECURITY_DISABLED_SHIFT			0
#define CRK_CRK8051_STS_REMOTE_FM_SECURITY_DISABLED_MASK			0x1ull
#define CRK_CRK8051_STS_REMOTE_FM_SECURITY_DISABLED_SMASK			0x1ull
/*
* Table #14 of 146_8051_Registers.xml - CRK8051_STS_CUR_STATE
* This register indicate the current state of the Creek Port
*/
#define CRK_CRK8051_STS_CUR_STATE						(CRK_8051_CSRS + 0x000000000060)
#define CRK_CRK8051_STS_CUR_STATE_RESETCSR					0x0000000000000090ull
#define CRK_CRK8051_STS_CUR_STATE_UNUSED_63_26_SHIFT				26
#define CRK_CRK8051_STS_CUR_STATE_UNUSED_63_26_MASK				0x3FFFFFFFFFull
#define CRK_CRK8051_STS_CUR_STATE_UNUSED_63_26_SMASK				0xFFFFFFFFFC000000ull
#define CRK_CRK8051_STS_CUR_STATE_INTERRUPT_B_ACK_SHIFT				25
#define CRK_CRK8051_STS_CUR_STATE_INTERRUPT_B_ACK_MASK				0x1ull
#define CRK_CRK8051_STS_CUR_STATE_INTERRUPT_B_ACK_SMASK				0x2000000ull
#define CRK_CRK8051_STS_CUR_STATE_INTERRUPT_A_ACK_SHIFT				24
#define CRK_CRK8051_STS_CUR_STATE_INTERRUPT_A_ACK_MASK				0x1ull
#define CRK_CRK8051_STS_CUR_STATE_INTERRUPT_A_ACK_SMASK				0x1000000ull
#define CRK_CRK8051_STS_CUR_STATE_FIRMWARE_SHIFT				16
#define CRK_CRK8051_STS_CUR_STATE_FIRMWARE_MASK					0xFFull
#define CRK_CRK8051_STS_CUR_STATE_FIRMWARE_SMASK				0xFF0000ull
#define CRK_CRK8051_STS_CUR_STATE_UNUSED_15_10_SHIFT				10
#define CRK_CRK8051_STS_CUR_STATE_UNUSED_15_10_MASK				0x3Full
#define CRK_CRK8051_STS_CUR_STATE_UNUSED_15_10_SMASK				0xFC00ull
#define CRK_CRK8051_STS_CUR_STATE_LINK_MODE_SHIFT				8
#define CRK_CRK8051_STS_CUR_STATE_LINK_MODE_MASK				0x3ull
#define CRK_CRK8051_STS_CUR_STATE_LINK_MODE_SMASK				0x300ull
#define CRK_CRK8051_STS_CUR_STATE_PORT_SHIFT					0
#define CRK_CRK8051_STS_CUR_STATE_PORT_MASK					0xFFull
#define CRK_CRK8051_STS_CUR_STATE_PORT_SMASK					0xFFull
/*
* Table #15 of 146_8051_Registers.xml - CRK8051_CFG_RST
* This register is used to do basic configuration on the CRK8051 
* block
*/
#define CRK_CRK8051_CFG_RST							(CRK_8051_CSRS + 0x000000000068)
#define CRK_CRK8051_CFG_RST_RESETCSR						0x000000000000001Full
#define CRK_CRK8051_CFG_RST_UNUSED_63_5_SHIFT					5
#define CRK_CRK8051_CFG_RST_UNUSED_63_5_MASK					0x7FFFFFFFFFFFFFFull
#define CRK_CRK8051_CFG_RST_UNUSED_63_5_SMASK					0xFFFFFFFFFFFFFFE0ull
#define CRK_CRK8051_CFG_RST_SFR_SHIFT						4
#define CRK_CRK8051_CFG_RST_SFR_MASK						0x1ull
#define CRK_CRK8051_CFG_RST_SFR_SMASK						0x10ull
#define CRK_CRK8051_CFG_RST_IRAM_SHIFT						3
#define CRK_CRK8051_CFG_RST_IRAM_MASK						0x1ull
#define CRK_CRK8051_CFG_RST_IRAM_SMASK						0x8ull
#define CRK_CRK8051_CFG_RST_DRAM_SHIFT						2
#define CRK_CRK8051_CFG_RST_DRAM_MASK						0x1ull
#define CRK_CRK8051_CFG_RST_DRAM_SMASK						0x4ull
#define CRK_CRK8051_CFG_RST_CRAM_SHIFT						1
#define CRK_CRK8051_CFG_RST_CRAM_MASK						0x1ull
#define CRK_CRK8051_CFG_RST_CRAM_SMASK						0x2ull
#define CRK_CRK8051_CFG_RST_M8051W_SHIFT					0
#define CRK_CRK8051_CFG_RST_M8051W_MASK						0x1ull
#define CRK_CRK8051_CFG_RST_M8051W_SMASK					0x1ull
/*
* Table #16 of 146_8051_Registers.xml - CRK8051_CFG_MODE
* 
*/
#define CRK_CRK8051_CFG_MODE							(CRK_8051_CSRS + 0x000000000070)
#define CRK_CRK8051_CFG_MODE_RESETCSR						0x0000000001000000ull
#define CRK_CRK8051_CFG_MODE_UNUSED_63_26_SHIFT					26
#define CRK_CRK8051_CFG_MODE_UNUSED_63_26_MASK					0x3FFFFFFFFFull
#define CRK_CRK8051_CFG_MODE_UNUSED_63_26_SMASK					0xFFFFFFFFFC000000ull
#define CRK_CRK8051_CFG_MODE_CLK_SELECT_SHIFT					24
#define CRK_CRK8051_CFG_MODE_CLK_SELECT_MASK					0x3ull
#define CRK_CRK8051_CFG_MODE_CLK_SELECT_SMASK					0x3000000ull
#define CRK_CRK8051_CFG_MODE_UNUSED_23_18_SHIFT					18
#define CRK_CRK8051_CFG_MODE_UNUSED_23_18_MASK					0x3Full
#define CRK_CRK8051_CFG_MODE_UNUSED_23_18_SMASK					0xFC0000ull
#define CRK_CRK8051_CFG_MODE_INTERRUPT_B_ENA_SHIFT				17
#define CRK_CRK8051_CFG_MODE_INTERRUPT_B_ENA_MASK				0x1ull
#define CRK_CRK8051_CFG_MODE_INTERRUPT_B_ENA_SMASK				0x20000ull
#define CRK_CRK8051_CFG_MODE_INTERRUPT_A_ENA_SHIFT				16
#define CRK_CRK8051_CFG_MODE_INTERRUPT_A_ENA_MASK				0x1ull
#define CRK_CRK8051_CFG_MODE_INTERRUPT_A_ENA_SMASK				0x10000ull
#define CRK_CRK8051_CFG_MODE_UNUSED_15_10_SHIFT					10
#define CRK_CRK8051_CFG_MODE_UNUSED_15_10_MASK					0x3Full
#define CRK_CRK8051_CFG_MODE_UNUSED_15_10_SMASK					0xFC00ull
#define CRK_CRK8051_CFG_MODE_POWER_SAVING_SHIFT					8
#define CRK_CRK8051_CFG_MODE_POWER_SAVING_MASK					0x3ull
#define CRK_CRK8051_CFG_MODE_POWER_SAVING_SMASK					0x300ull
#define CRK_CRK8051_CFG_MODE_GENERAL_SHIFT					0
#define CRK_CRK8051_CFG_MODE_GENERAL_MASK					0xFFull
#define CRK_CRK8051_CFG_MODE_GENERAL_SMASK					0xFFull
/*
* Table #17 of 146_8051_Registers.xml - CRK8051_DBG_SFR_MAP_1
* This register provides an easy CSR read access to the some of the CRK8051 
* internal SFR values
*/
#define CRK_CRK8051_DBG_SFR_MAP_1						(CRK_8051_CSRS + 0x000000000078)
#define CRK_CRK8051_DBG_SFR_MAP_1_RESETCSR					0x0000000000000000ull
#define CRK_CRK8051_DBG_SFR_MAP_1_TMP08_SHIFT					56
#define CRK_CRK8051_DBG_SFR_MAP_1_TMP08_MASK					0xFFull
#define CRK_CRK8051_DBG_SFR_MAP_1_TMP08_SMASK					0xFF00000000000000ull
#define CRK_CRK8051_DBG_SFR_MAP_1_TMP07_SHIFT					48
#define CRK_CRK8051_DBG_SFR_MAP_1_TMP07_MASK					0xFFull
#define CRK_CRK8051_DBG_SFR_MAP_1_TMP07_SMASK					0xFF000000000000ull
#define CRK_CRK8051_DBG_SFR_MAP_1_TMP06_SHIFT					40
#define CRK_CRK8051_DBG_SFR_MAP_1_TMP06_MASK					0xFFull
#define CRK_CRK8051_DBG_SFR_MAP_1_TMP06_SMASK					0xFF0000000000ull
#define CRK_CRK8051_DBG_SFR_MAP_1_TMP05_SHIFT					32
#define CRK_CRK8051_DBG_SFR_MAP_1_TMP05_MASK					0xFFull
#define CRK_CRK8051_DBG_SFR_MAP_1_TMP05_SMASK					0xFF00000000ull
#define CRK_CRK8051_DBG_SFR_MAP_1_TMP04_SHIFT					24
#define CRK_CRK8051_DBG_SFR_MAP_1_TMP04_MASK					0xFFull
#define CRK_CRK8051_DBG_SFR_MAP_1_TMP04_SMASK					0xFF000000ull
#define CRK_CRK8051_DBG_SFR_MAP_1_TMP03_SHIFT					16
#define CRK_CRK8051_DBG_SFR_MAP_1_TMP03_MASK					0xFFull
#define CRK_CRK8051_DBG_SFR_MAP_1_TMP03_SMASK					0xFF0000ull
#define CRK_CRK8051_DBG_SFR_MAP_1_TMP02_SHIFT					8
#define CRK_CRK8051_DBG_SFR_MAP_1_TMP02_MASK					0xFFull
#define CRK_CRK8051_DBG_SFR_MAP_1_TMP02_SMASK					0xFF00ull
#define CRK_CRK8051_DBG_SFR_MAP_1_TMP01_SHIFT					0
#define CRK_CRK8051_DBG_SFR_MAP_1_TMP01_MASK					0xFFull
#define CRK_CRK8051_DBG_SFR_MAP_1_TMP01_SMASK					0xFFull
/*
* Table #18 of 146_8051_Registers.xml - CRK8051_DBG_SFR_MAP_2
* 
*/
#define CRK_CRK8051_DBG_SFR_MAP_2						(CRK_8051_CSRS + 0x000000000080)
#define CRK_CRK8051_DBG_SFR_MAP_2_RESETCSR					0x0000000000000000ull
#define CRK_CRK8051_DBG_SFR_MAP_2_TMP16_SHIFT					56
#define CRK_CRK8051_DBG_SFR_MAP_2_TMP16_MASK					0xFFull
#define CRK_CRK8051_DBG_SFR_MAP_2_TMP16_SMASK					0xFF00000000000000ull
#define CRK_CRK8051_DBG_SFR_MAP_2_TMP15_SHIFT					48
#define CRK_CRK8051_DBG_SFR_MAP_2_TMP15_MASK					0xFFull
#define CRK_CRK8051_DBG_SFR_MAP_2_TMP15_SMASK					0xFF000000000000ull
#define CRK_CRK8051_DBG_SFR_MAP_2_TMP14_SHIFT					40
#define CRK_CRK8051_DBG_SFR_MAP_2_TMP14_MASK					0xFFull
#define CRK_CRK8051_DBG_SFR_MAP_2_TMP14_SMASK					0xFF0000000000ull
#define CRK_CRK8051_DBG_SFR_MAP_2_TMP13_SHIFT					32
#define CRK_CRK8051_DBG_SFR_MAP_2_TMP13_MASK					0xFFull
#define CRK_CRK8051_DBG_SFR_MAP_2_TMP13_SMASK					0xFF00000000ull
#define CRK_CRK8051_DBG_SFR_MAP_2_TMP12_SHIFT					24
#define CRK_CRK8051_DBG_SFR_MAP_2_TMP12_MASK					0xFFull
#define CRK_CRK8051_DBG_SFR_MAP_2_TMP12_SMASK					0xFF000000ull
#define CRK_CRK8051_DBG_SFR_MAP_2_TMP11_SHIFT					16
#define CRK_CRK8051_DBG_SFR_MAP_2_TMP11_MASK					0xFFull
#define CRK_CRK8051_DBG_SFR_MAP_2_TMP11_SMASK					0xFF0000ull
#define CRK_CRK8051_DBG_SFR_MAP_2_TMP10_SHIFT					8
#define CRK_CRK8051_DBG_SFR_MAP_2_TMP10_MASK					0xFFull
#define CRK_CRK8051_DBG_SFR_MAP_2_TMP10_SMASK					0xFF00ull
#define CRK_CRK8051_DBG_SFR_MAP_2_TMP09_SHIFT					0
#define CRK_CRK8051_DBG_SFR_MAP_2_TMP09_MASK					0xFFull
#define CRK_CRK8051_DBG_SFR_MAP_2_TMP09_SMASK					0xFFull
/*
* Table #19 of 146_8051_Registers.xml - CRK8051_DBG_HEART_BEAT
* 
*/
#define CRK_CRK8051_DBG_HEART_BEAT						(CRK_8051_CSRS + 0x000000000088)
#define CRK_CRK8051_DBG_HEART_BEAT_RESETCSR					0x0000000000000000ull
#define CRK_CRK8051_DBG_HEART_BEAT_UNUSED_63_16_SHIFT				16
#define CRK_CRK8051_DBG_HEART_BEAT_UNUSED_63_16_MASK				0xFFFFFFFFFFFFull
#define CRK_CRK8051_DBG_HEART_BEAT_UNUSED_63_16_SMASK				0xFFFFFFFFFFFF0000ull
#define CRK_CRK8051_DBG_HEART_BEAT_VAL_SHIFT					0
#define CRK_CRK8051_DBG_HEART_BEAT_VAL_MASK					0xFFFFull
#define CRK_CRK8051_DBG_HEART_BEAT_VAL_SMASK					0xFFFFull
/*
* Table #20 of 146_8051_Registers.xml - CRK8051_DBG_CODE_TRACING_SETUP
* 
*/
#define CRK_CRK8051_DBG_CODE_TRACING_SETUP					(CRK_8051_CSRS + 0x000000000090)
#define CRK_CRK8051_DBG_CODE_TRACING_SETUP_RESETCSR				0x0000000000000000ull
#define CRK_CRK8051_DBG_CODE_TRACING_SETUP_UNUSED_63_32_SHIFT			32
#define CRK_CRK8051_DBG_CODE_TRACING_SETUP_UNUSED_63_32_MASK			0xFFFFFFFFull
#define CRK_CRK8051_DBG_CODE_TRACING_SETUP_UNUSED_63_32_SMASK			0xFFFFFFFF00000000ull
#define CRK_CRK8051_DBG_CODE_TRACING_SETUP_HALT_ON_ADDR_SHIFT			16
#define CRK_CRK8051_DBG_CODE_TRACING_SETUP_HALT_ON_ADDR_MASK			0xFFFFull
#define CRK_CRK8051_DBG_CODE_TRACING_SETUP_HALT_ON_ADDR_SMASK			0xFFFF0000ull
#define CRK_CRK8051_DBG_CODE_TRACING_SETUP_UNUSED_15_9_SHIFT			9
#define CRK_CRK8051_DBG_CODE_TRACING_SETUP_UNUSED_15_9_MASK			0x7Full
#define CRK_CRK8051_DBG_CODE_TRACING_SETUP_UNUSED_15_9_SMASK			0xFE00ull
#define CRK_CRK8051_DBG_CODE_TRACING_SETUP_HALT_ON_ADDR_ENA_SHIFT		8
#define CRK_CRK8051_DBG_CODE_TRACING_SETUP_HALT_ON_ADDR_ENA_MASK		0x1ull
#define CRK_CRK8051_DBG_CODE_TRACING_SETUP_HALT_ON_ADDR_ENA_SMASK		0x100ull
#define CRK_CRK8051_DBG_CODE_TRACING_SETUP_UNUSED_7_1_SHIFT			1
#define CRK_CRK8051_DBG_CODE_TRACING_SETUP_UNUSED_7_1_MASK			0x7Full
#define CRK_CRK8051_DBG_CODE_TRACING_SETUP_UNUSED_7_1_SMASK			0xFEull
#define CRK_CRK8051_DBG_CODE_TRACING_SETUP_LOAD_CODE_ADDR_SHIFT			0
#define CRK_CRK8051_DBG_CODE_TRACING_SETUP_LOAD_CODE_ADDR_MASK			0x1ull
#define CRK_CRK8051_DBG_CODE_TRACING_SETUP_LOAD_CODE_ADDR_SMASK			0x1ull
/*
* Table #21 of 146_8051_Registers.xml - CRK8051_DBG_CODE_TRACING_ADDR
* 
*/
#define CRK_CRK8051_DBG_CODE_TRACING_ADDR					(CRK_8051_CSRS + 0x000000000098)
#define CRK_CRK8051_DBG_CODE_TRACING_ADDR_RESETCSR				0x0000000000000000ull
#define CRK_CRK8051_DBG_CODE_TRACING_ADDR_UNUSED_63_16_SHIFT			16
#define CRK_CRK8051_DBG_CODE_TRACING_ADDR_UNUSED_63_16_MASK			0xFFFFFFFFFFFFull
#define CRK_CRK8051_DBG_CODE_TRACING_ADDR_UNUSED_63_16_SMASK			0xFFFFFFFFFFFF0000ull
#define CRK_CRK8051_DBG_CODE_TRACING_ADDR_VAL_SHIFT				0
#define CRK_CRK8051_DBG_CODE_TRACING_ADDR_VAL_MASK				0xFFFFull
#define CRK_CRK8051_DBG_CODE_TRACING_ADDR_VAL_SMASK				0xFFFFull
/*
* Table #22 of 146_8051_Registers.xml - CRK8051_DBG_ERRINJ_ECC
* This register is used to inject errors to the code and data memories inside 
* the CRK8051
*/
#define CRK_CRK8051_DBG_ERRINJ_ECC						(CRK_8051_CSRS + 0x0000000000A0)
#define CRK_CRK8051_DBG_ERRINJ_ECC_RESETCSR					0x0000000000000000ull
#define CRK_CRK8051_DBG_ERRINJ_ECC_UNUSED_63_41_SHIFT				41
#define CRK_CRK8051_DBG_ERRINJ_ECC_UNUSED_63_41_MASK				0x7FFFFFull
#define CRK_CRK8051_DBG_ERRINJ_ECC_UNUSED_63_41_SMASK				0xFFFFFE0000000000ull
#define CRK_CRK8051_DBG_ERRINJ_ECC_CLEAR_ERROR_SHIFT				40
#define CRK_CRK8051_DBG_ERRINJ_ECC_CLEAR_ERROR_MASK				0x1ull
#define CRK_CRK8051_DBG_ERRINJ_ECC_CLEAR_ERROR_SMASK				0x10000000000ull
#define CRK_CRK8051_DBG_ERRINJ_ECC_UNUSED_39_33_SHIFT				33
#define CRK_CRK8051_DBG_ERRINJ_ECC_UNUSED_39_33_MASK				0x7Full
#define CRK_CRK8051_DBG_ERRINJ_ECC_UNUSED_39_33_SMASK				0xFE00000000ull
#define CRK_CRK8051_DBG_ERRINJ_ECC_MASK_SHIFT					24
#define CRK_CRK8051_DBG_ERRINJ_ECC_MASK_MASK					0x1FFull
#define CRK_CRK8051_DBG_ERRINJ_ECC_MASK_SMASK					0x1FF000000ull
#define CRK_CRK8051_DBG_ERRINJ_ECC_ADDRESS_SHIFT				8
#define CRK_CRK8051_DBG_ERRINJ_ECC_ADDRESS_MASK					0xFFFull
#define CRK_CRK8051_DBG_ERRINJ_ECC_ADDRESS_SMASK				0xFFF00ull
#define CRK_CRK8051_DBG_ERRINJ_ECC_UNUSED_7_5_SHIFT				5
#define CRK_CRK8051_DBG_ERRINJ_ECC_UNUSED_7_5_MASK				0x7ull
#define CRK_CRK8051_DBG_ERRINJ_ECC_UNUSED_7_5_SMASK				0xE0ull
#define CRK_CRK8051_DBG_ERRINJ_ECC_RAM_SELECT_SHIFT				3
#define CRK_CRK8051_DBG_ERRINJ_ECC_RAM_SELECT_MASK				0x3ull
#define CRK_CRK8051_DBG_ERRINJ_ECC_RAM_SELECT_SMASK				0x18ull
#define CRK_CRK8051_DBG_ERRINJ_ECC_MODE_SHIFT					1
#define CRK_CRK8051_DBG_ERRINJ_ECC_MODE_MASK					0x3ull
#define CRK_CRK8051_DBG_ERRINJ_ECC_MODE_SMASK					0x6ull
#define CRK_CRK8051_DBG_ERRINJ_ECC_ENABLE_SHIFT					0
#define CRK_CRK8051_DBG_ERRINJ_ECC_ENABLE_MASK					0x1ull
#define CRK_CRK8051_DBG_ERRINJ_ECC_ENABLE_SMASK					0x1ull
/*
* Table #23 of 146_8051_Registers.xml - CRK8051_DBG_ERR_INFO_CRAM
* This register is used to report the ECC errors in the CRK8051 code 
* memory
*/
#define CRK_CRK8051_DBG_ERR_INFO_CRAM						(CRK_8051_CSRS + 0x0000000000A8)
#define CRK_CRK8051_DBG_ERR_INFO_CRAM_RESETCSR					0x0000000000000000ull
#define CRK_CRK8051_DBG_ERR_INFO_CRAM_UNUSED_63_33_SHIFT			33
#define CRK_CRK8051_DBG_ERR_INFO_CRAM_UNUSED_63_33_MASK				0x7FFFFFFFull
#define CRK_CRK8051_DBG_ERR_INFO_CRAM_UNUSED_63_33_SMASK			0xFFFFFFFE00000000ull
#define CRK_CRK8051_DBG_ERR_INFO_CRAM_MBE_SYND_SHIFT				24
#define CRK_CRK8051_DBG_ERR_INFO_CRAM_MBE_SYND_MASK				0x1FFull
#define CRK_CRK8051_DBG_ERR_INFO_CRAM_MBE_SYND_SMASK				0x1FF000000ull
#define CRK_CRK8051_DBG_ERR_INFO_CRAM_UNUSED_23_17_SHIFT			17
#define CRK_CRK8051_DBG_ERR_INFO_CRAM_UNUSED_23_17_MASK				0x7Full
#define CRK_CRK8051_DBG_ERR_INFO_CRAM_UNUSED_23_17_SMASK			0xFE0000ull
#define CRK_CRK8051_DBG_ERR_INFO_CRAM_SBE_SYND_SHIFT				8
#define CRK_CRK8051_DBG_ERR_INFO_CRAM_SBE_SYND_MASK				0x1FFull
#define CRK_CRK8051_DBG_ERR_INFO_CRAM_SBE_SYND_SMASK				0x1FF00ull
#define CRK_CRK8051_DBG_ERR_INFO_CRAM_UNUSED_7_4_SHIFT				4
#define CRK_CRK8051_DBG_ERR_INFO_CRAM_UNUSED_7_4_MASK				0xFull
#define CRK_CRK8051_DBG_ERR_INFO_CRAM_UNUSED_7_4_SMASK				0xF0ull
#define CRK_CRK8051_DBG_ERR_INFO_CRAM_INJECTED_MBE_SHIFT			3
#define CRK_CRK8051_DBG_ERR_INFO_CRAM_INJECTED_MBE_MASK				0x1ull
#define CRK_CRK8051_DBG_ERR_INFO_CRAM_INJECTED_MBE_SMASK			0x8ull
#define CRK_CRK8051_DBG_ERR_INFO_CRAM_INJECTED_SBE_SHIFT			2
#define CRK_CRK8051_DBG_ERR_INFO_CRAM_INJECTED_SBE_MASK				0x1ull
#define CRK_CRK8051_DBG_ERR_INFO_CRAM_INJECTED_SBE_SMASK			0x4ull
#define CRK_CRK8051_DBG_ERR_INFO_CRAM_MBE_SHIFT					1
#define CRK_CRK8051_DBG_ERR_INFO_CRAM_MBE_MASK					0x1ull
#define CRK_CRK8051_DBG_ERR_INFO_CRAM_MBE_SMASK					0x2ull
#define CRK_CRK8051_DBG_ERR_INFO_CRAM_SBE_SHIFT					0
#define CRK_CRK8051_DBG_ERR_INFO_CRAM_SBE_MASK					0x1ull
#define CRK_CRK8051_DBG_ERR_INFO_CRAM_SBE_SMASK					0x1ull
/*
* Table #24 of 146_8051_Registers.xml - CRK8051_DBG_ERR_INFO_DRAM
* This register is used to report the ECC errors in the CRK8051 data 
* memory
*/
#define CRK_CRK8051_DBG_ERR_INFO_DRAM						(CRK_8051_CSRS + 0x0000000000B0)
#define CRK_CRK8051_DBG_ERR_INFO_DRAM_RESETCSR					0x0000000000000000ull
#define CRK_CRK8051_DBG_ERR_INFO_DRAM_UNUSED_63_21_SHIFT			21
#define CRK_CRK8051_DBG_ERR_INFO_DRAM_UNUSED_63_21_MASK				0x7FFFFFFFFFFull
#define CRK_CRK8051_DBG_ERR_INFO_DRAM_UNUSED_63_21_SMASK			0xFFFFFFFFFFE00000ull
#define CRK_CRK8051_DBG_ERR_INFO_DRAM_MBE_SYND_SHIFT				16
#define CRK_CRK8051_DBG_ERR_INFO_DRAM_MBE_SYND_MASK				0x1Full
#define CRK_CRK8051_DBG_ERR_INFO_DRAM_MBE_SYND_SMASK				0x1F0000ull
#define CRK_CRK8051_DBG_ERR_INFO_DRAM_UNUSED_15_13_SHIFT			13
#define CRK_CRK8051_DBG_ERR_INFO_DRAM_UNUSED_15_13_MASK				0x7ull
#define CRK_CRK8051_DBG_ERR_INFO_DRAM_UNUSED_15_13_SMASK			0xE000ull
#define CRK_CRK8051_DBG_ERR_INFO_DRAM_SBE_SYND_SHIFT				8
#define CRK_CRK8051_DBG_ERR_INFO_DRAM_SBE_SYND_MASK				0x1Full
#define CRK_CRK8051_DBG_ERR_INFO_DRAM_SBE_SYND_SMASK				0x1F00ull
#define CRK_CRK8051_DBG_ERR_INFO_DRAM_UNUSED_7_4_SHIFT				4
#define CRK_CRK8051_DBG_ERR_INFO_DRAM_UNUSED_7_4_MASK				0xFull
#define CRK_CRK8051_DBG_ERR_INFO_DRAM_UNUSED_7_4_SMASK				0xF0ull
#define CRK_CRK8051_DBG_ERR_INFO_DRAM_INJECTED_MBE_SHIFT			3
#define CRK_CRK8051_DBG_ERR_INFO_DRAM_INJECTED_MBE_MASK				0x1ull
#define CRK_CRK8051_DBG_ERR_INFO_DRAM_INJECTED_MBE_SMASK			0x8ull
#define CRK_CRK8051_DBG_ERR_INFO_DRAM_INJECTED_SBE_SHIFT			2
#define CRK_CRK8051_DBG_ERR_INFO_DRAM_INJECTED_SBE_MASK				0x1ull
#define CRK_CRK8051_DBG_ERR_INFO_DRAM_INJECTED_SBE_SMASK			0x4ull
#define CRK_CRK8051_DBG_ERR_INFO_DRAM_MBE_SHIFT					1
#define CRK_CRK8051_DBG_ERR_INFO_DRAM_MBE_MASK					0x1ull
#define CRK_CRK8051_DBG_ERR_INFO_DRAM_MBE_SMASK					0x2ull
#define CRK_CRK8051_DBG_ERR_INFO_DRAM_SBE_SHIFT					0
#define CRK_CRK8051_DBG_ERR_INFO_DRAM_SBE_MASK					0x1ull
#define CRK_CRK8051_DBG_ERR_INFO_DRAM_SBE_SMASK					0x1ull
/*
* Table #25 of 146_8051_Registers.xml - CRK8051_DBG_ERR_INFO_IRAM
* This register is used to report the ECC errors in the CRK8051 internal data 
* memory
*/
#define CRK_CRK8051_DBG_ERR_INFO_IRAM						(CRK_8051_CSRS + 0x0000000000B8)
#define CRK_CRK8051_DBG_ERR_INFO_IRAM_RESETCSR					0x0000000000000000ull
#define CRK_CRK8051_DBG_ERR_INFO_IRAM_UNUSED_63_21_SHIFT			21
#define CRK_CRK8051_DBG_ERR_INFO_IRAM_UNUSED_63_21_MASK				0x7FFFFFFFFFFull
#define CRK_CRK8051_DBG_ERR_INFO_IRAM_UNUSED_63_21_SMASK			0xFFFFFFFFFFE00000ull
#define CRK_CRK8051_DBG_ERR_INFO_IRAM_MBE_SYND_SHIFT				16
#define CRK_CRK8051_DBG_ERR_INFO_IRAM_MBE_SYND_MASK				0x1Full
#define CRK_CRK8051_DBG_ERR_INFO_IRAM_MBE_SYND_SMASK				0x1F0000ull
#define CRK_CRK8051_DBG_ERR_INFO_IRAM_UNUSED_15_13_SHIFT			13
#define CRK_CRK8051_DBG_ERR_INFO_IRAM_UNUSED_15_13_MASK				0x7ull
#define CRK_CRK8051_DBG_ERR_INFO_IRAM_UNUSED_15_13_SMASK			0xE000ull
#define CRK_CRK8051_DBG_ERR_INFO_IRAM_SBE_SYND_SHIFT				8
#define CRK_CRK8051_DBG_ERR_INFO_IRAM_SBE_SYND_MASK				0x1Full
#define CRK_CRK8051_DBG_ERR_INFO_IRAM_SBE_SYND_SMASK				0x1F00ull
#define CRK_CRK8051_DBG_ERR_INFO_IRAM_UNUSED_7_4_SHIFT				4
#define CRK_CRK8051_DBG_ERR_INFO_IRAM_UNUSED_7_4_MASK				0xFull
#define CRK_CRK8051_DBG_ERR_INFO_IRAM_UNUSED_7_4_SMASK				0xF0ull
#define CRK_CRK8051_DBG_ERR_INFO_IRAM_INJECTED_MBE_SHIFT			3
#define CRK_CRK8051_DBG_ERR_INFO_IRAM_INJECTED_MBE_MASK				0x1ull
#define CRK_CRK8051_DBG_ERR_INFO_IRAM_INJECTED_MBE_SMASK			0x8ull
#define CRK_CRK8051_DBG_ERR_INFO_IRAM_INJECTED_SBE_SHIFT			2
#define CRK_CRK8051_DBG_ERR_INFO_IRAM_INJECTED_SBE_MASK				0x1ull
#define CRK_CRK8051_DBG_ERR_INFO_IRAM_INJECTED_SBE_SMASK			0x4ull
#define CRK_CRK8051_DBG_ERR_INFO_IRAM_MBE_SHIFT					1
#define CRK_CRK8051_DBG_ERR_INFO_IRAM_MBE_MASK					0x1ull
#define CRK_CRK8051_DBG_ERR_INFO_IRAM_MBE_SMASK					0x2ull
#define CRK_CRK8051_DBG_ERR_INFO_IRAM_SBE_SHIFT					0
#define CRK_CRK8051_DBG_ERR_INFO_IRAM_SBE_MASK					0x1ull
#define CRK_CRK8051_DBG_ERR_INFO_IRAM_SBE_SMASK					0x1ull
/*
* Table #26 of 146_8051_Registers.xml - CRK8051_DBG_ERR_INFO_CNT_CRAM
* This register is used to report number of ECC errors in the CRK8051 code 
* memory
*/
#define CRK_CRK8051_DBG_ERR_INFO_CNT_CRAM					(CRK_8051_CSRS + 0x0000000000C0)
#define CRK_CRK8051_DBG_ERR_INFO_CNT_CRAM_RESETCSR				0x0000000000000000ull
#define CRK_CRK8051_DBG_ERR_INFO_CNT_CRAM_MBE_COUNT_SHIFT			32
#define CRK_CRK8051_DBG_ERR_INFO_CNT_CRAM_MBE_COUNT_MASK			0xFFFFFFFFull
#define CRK_CRK8051_DBG_ERR_INFO_CNT_CRAM_MBE_COUNT_SMASK			0xFFFFFFFF00000000ull
#define CRK_CRK8051_DBG_ERR_INFO_CNT_CRAM_SBE_COUNT_SHIFT			0
#define CRK_CRK8051_DBG_ERR_INFO_CNT_CRAM_SBE_COUNT_MASK			0xFFFFFFFFull
#define CRK_CRK8051_DBG_ERR_INFO_CNT_CRAM_SBE_COUNT_SMASK			0xFFFFFFFFull
/*
* Table #27 of 146_8051_Registers.xml - CRK8051_DBG_ERR_INFO_CNT_DRAM
* This register is used to report the number of ECC errors in the CRK8051 data 
* memory
*/
#define CRK_CRK8051_DBG_ERR_INFO_CNT_DRAM					(CRK_8051_CSRS + 0x0000000000C8)
#define CRK_CRK8051_DBG_ERR_INFO_CNT_DRAM_RESETCSR				0x0000000000000000ull
#define CRK_CRK8051_DBG_ERR_INFO_CNT_DRAM_MBE_COUNT_SHIFT			32
#define CRK_CRK8051_DBG_ERR_INFO_CNT_DRAM_MBE_COUNT_MASK			0xFFFFFFFFull
#define CRK_CRK8051_DBG_ERR_INFO_CNT_DRAM_MBE_COUNT_SMASK			0xFFFFFFFF00000000ull
#define CRK_CRK8051_DBG_ERR_INFO_CNT_DRAM_SBE_COUNT_SHIFT			0
#define CRK_CRK8051_DBG_ERR_INFO_CNT_DRAM_SBE_COUNT_MASK			0xFFFFFFFFull
#define CRK_CRK8051_DBG_ERR_INFO_CNT_DRAM_SBE_COUNT_SMASK			0xFFFFFFFFull
/*
* Table #28 of 146_8051_Registers.xml - CRK8051_DBG_ERR_INFO_CNT_IRAM
* This register is used to report the number of ECC errors in the CRK8051 data 
* memory
*/
#define CRK_CRK8051_DBG_ERR_INFO_CNT_IRAM					(CRK_8051_CSRS + 0x0000000000D0)
#define CRK_CRK8051_DBG_ERR_INFO_CNT_IRAM_RESETCSR				0x0000000000000000ull
#define CRK_CRK8051_DBG_ERR_INFO_CNT_IRAM_MBE_COUNT_SHIFT			32
#define CRK_CRK8051_DBG_ERR_INFO_CNT_IRAM_MBE_COUNT_MASK			0xFFFFFFFFull
#define CRK_CRK8051_DBG_ERR_INFO_CNT_IRAM_MBE_COUNT_SMASK			0xFFFFFFFF00000000ull
#define CRK_CRK8051_DBG_ERR_INFO_CNT_IRAM_SBE_COUNT_SHIFT			0
#define CRK_CRK8051_DBG_ERR_INFO_CNT_IRAM_SBE_COUNT_MASK			0xFFFFFFFFull
#define CRK_CRK8051_DBG_ERR_INFO_CNT_IRAM_SBE_COUNT_SMASK			0xFFFFFFFFull
/*
* Table #29 of 146_8051_Registers.xml - CRK8051_DBG_ERR_INFO_SET_BY_8051
* This register is used to report the number of ECC errors in the CRK8051 data 
* memory
*/
#define CRK_CRK8051_DBG_ERR_INFO_SET_BY_8051					(CRK_8051_CSRS + 0x0000000000D8)
#define CRK_CRK8051_DBG_ERR_INFO_SET_BY_8051_RESETCSR				0x0000000000000000ull
#define CRK_CRK8051_DBG_ERR_INFO_SET_BY_8051_UNUSED_63_48_SHIFT			48
#define CRK_CRK8051_DBG_ERR_INFO_SET_BY_8051_UNUSED_63_48_MASK			0xFFFFull
#define CRK_CRK8051_DBG_ERR_INFO_SET_BY_8051_UNUSED_63_48_SMASK			0xFFFF000000000000ull
#define CRK_CRK8051_DBG_ERR_INFO_SET_BY_8051_ERROR_SHIFT			16
#define CRK_CRK8051_DBG_ERR_INFO_SET_BY_8051_ERROR_MASK				0xFFFFFFFFull
#define CRK_CRK8051_DBG_ERR_INFO_SET_BY_8051_ERROR_SMASK			0xFFFFFFFF0000ull
#define CRK_CRK8051_DBG_ERR_INFO_SET_BY_8051_HOST_MSG_SHIFT			0
#define CRK_CRK8051_DBG_ERR_INFO_SET_BY_8051_HOST_MSG_MASK			0xFFFFull
#define CRK_CRK8051_DBG_ERR_INFO_SET_BY_8051_HOST_MSG_SMASK			0xFFFFull
/*
* Table #30 of 146_8051_Registers.xml - CRK8051_ERR_STS
* These registers are used to report errors
*/
#define CRK_CRK8051_ERR_STS							(CRK_8051_CSRS + 0x000000000100)
#define CRK_CRK8051_ERR_STS_RESETCSR						0x0000000000000000ull
#define CRK_CRK8051_ERR_STS_UNUSED_63_9_SHIFT					9
#define CRK_CRK8051_ERR_STS_UNUSED_63_9_MASK					0x7FFFFFFFFFFFFFull
#define CRK_CRK8051_ERR_STS_UNUSED_63_9_SMASK					0xFFFFFFFFFFFFFE00ull
#define CRK_CRK8051_ERR_STS_UNMATCHED_SECURE_MSG_ACROSS_BCC_LANES_SHIFT		8
#define CRK_CRK8051_ERR_STS_UNMATCHED_SECURE_MSG_ACROSS_BCC_LANES_MASK		0x1ull
#define CRK_CRK8051_ERR_STS_UNMATCHED_SECURE_MSG_ACROSS_BCC_LANES_SMASK		0x100ull
#define CRK_CRK8051_ERR_STS_IRAM_SBE_SHIFT					7
#define CRK_CRK8051_ERR_STS_IRAM_SBE_MASK					0x1ull
#define CRK_CRK8051_ERR_STS_IRAM_SBE_SMASK					0x80ull
#define CRK_CRK8051_ERR_STS_IRAM_MBE_SHIFT					6
#define CRK_CRK8051_ERR_STS_IRAM_MBE_MASK					0x1ull
#define CRK_CRK8051_ERR_STS_IRAM_MBE_SMASK					0x40ull
#define CRK_CRK8051_ERR_STS_DRAM_SBE_SHIFT					5
#define CRK_CRK8051_ERR_STS_DRAM_SBE_MASK					0x1ull
#define CRK_CRK8051_ERR_STS_DRAM_SBE_SMASK					0x20ull
#define CRK_CRK8051_ERR_STS_DRAM_MBE_SHIFT					4
#define CRK_CRK8051_ERR_STS_DRAM_MBE_MASK					0x1ull
#define CRK_CRK8051_ERR_STS_DRAM_MBE_SMASK					0x10ull
#define CRK_CRK8051_ERR_STS_CRAM_SBE_SHIFT					3
#define CRK_CRK8051_ERR_STS_CRAM_SBE_MASK					0x1ull
#define CRK_CRK8051_ERR_STS_CRAM_SBE_SMASK					0x8ull
#define CRK_CRK8051_ERR_STS_CRAM_MBE_SHIFT					2
#define CRK_CRK8051_ERR_STS_CRAM_MBE_MASK					0x1ull
#define CRK_CRK8051_ERR_STS_CRAM_MBE_SMASK					0x4ull
#define CRK_CRK8051_ERR_STS_LOST_8051_HEART_BEAT_SHIFT				1
#define CRK_CRK8051_ERR_STS_LOST_8051_HEART_BEAT_MASK				0x1ull
#define CRK_CRK8051_ERR_STS_LOST_8051_HEART_BEAT_SMASK				0x2ull
#define CRK_CRK8051_ERR_STS_SET_BY_8051_SHIFT					0
#define CRK_CRK8051_ERR_STS_SET_BY_8051_MASK					0x1ull
#define CRK_CRK8051_ERR_STS_SET_BY_8051_SMASK					0x1ull
/*
* Table #31 of 146_8051_Registers.xml - CRK8051_ERR_CLR
* 
*/
#define CRK_CRK8051_ERR_CLR							(CRK_8051_CSRS + 0x000000000108)
#define CRK_CRK8051_ERR_CLR_RESETCSR						0x0000000000000000ull
#define CRK_CRK8051_ERR_CLR_UNUSED_63_9_SHIFT					9
#define CRK_CRK8051_ERR_CLR_UNUSED_63_9_MASK					0x7FFFFFFFFFFFFFull
#define CRK_CRK8051_ERR_CLR_UNUSED_63_9_SMASK					0xFFFFFFFFFFFFFE00ull
#define CRK_CRK8051_ERR_CLR_UNMATCHED_SECURE_MSG_ACROSS_BCC_LANES_SHIFT		8
#define CRK_CRK8051_ERR_CLR_UNMATCHED_SECURE_MSG_ACROSS_BCC_LANES_MASK		0x1ull
#define CRK_CRK8051_ERR_CLR_UNMATCHED_SECURE_MSG_ACROSS_BCC_LANES_SMASK		0x100ull
#define CRK_CRK8051_ERR_CLR_IRAM_SBE_SHIFT					7
#define CRK_CRK8051_ERR_CLR_IRAM_SBE_MASK					0x1ull
#define CRK_CRK8051_ERR_CLR_IRAM_SBE_SMASK					0x80ull
#define CRK_CRK8051_ERR_CLR_IRAM_MBE_SHIFT					6
#define CRK_CRK8051_ERR_CLR_IRAM_MBE_MASK					0x1ull
#define CRK_CRK8051_ERR_CLR_IRAM_MBE_SMASK					0x40ull
#define CRK_CRK8051_ERR_CLR_DRAM_SBE_SHIFT					5
#define CRK_CRK8051_ERR_CLR_DRAM_SBE_MASK					0x1ull
#define CRK_CRK8051_ERR_CLR_DRAM_SBE_SMASK					0x20ull
#define CRK_CRK8051_ERR_CLR_DRAM_MBE_SHIFT					4
#define CRK_CRK8051_ERR_CLR_DRAM_MBE_MASK					0x1ull
#define CRK_CRK8051_ERR_CLR_DRAM_MBE_SMASK					0x10ull
#define CRK_CRK8051_ERR_CLR_CRAM_SBE_SHIFT					3
#define CRK_CRK8051_ERR_CLR_CRAM_SBE_MASK					0x1ull
#define CRK_CRK8051_ERR_CLR_CRAM_SBE_SMASK					0x8ull
#define CRK_CRK8051_ERR_CLR_CRAM_MBE_SHIFT					2
#define CRK_CRK8051_ERR_CLR_CRAM_MBE_MASK					0x1ull
#define CRK_CRK8051_ERR_CLR_CRAM_MBE_SMASK					0x4ull
#define CRK_CRK8051_ERR_CLR_LOST_8051_HEART_BEAT_SHIFT				1
#define CRK_CRK8051_ERR_CLR_LOST_8051_HEART_BEAT_MASK				0x1ull
#define CRK_CRK8051_ERR_CLR_LOST_8051_HEART_BEAT_SMASK				0x2ull
#define CRK_CRK8051_ERR_CLR_SET_BY_8051_SHIFT					0
#define CRK_CRK8051_ERR_CLR_SET_BY_8051_MASK					0x1ull
#define CRK_CRK8051_ERR_CLR_SET_BY_8051_SMASK					0x1ull
/*
* Table #32 of 146_8051_Registers.xml - CRK8051_ERR_FRC
* 
*/
#define CRK_CRK8051_ERR_FRC							(CRK_8051_CSRS + 0x000000000110)
#define CRK_CRK8051_ERR_FRC_RESETCSR						0x0000000000000000ull
#define CRK_CRK8051_ERR_FRC_UNUSED_63_9_SHIFT					9
#define CRK_CRK8051_ERR_FRC_UNUSED_63_9_MASK					0x7FFFFFFFFFFFFFull
#define CRK_CRK8051_ERR_FRC_UNUSED_63_9_SMASK					0xFFFFFFFFFFFFFE00ull
#define CRK_CRK8051_ERR_FRC_UNMATCHED_SECURE_MSG_ACROSS_BCC_LANES_SHIFT		8
#define CRK_CRK8051_ERR_FRC_UNMATCHED_SECURE_MSG_ACROSS_BCC_LANES_MASK		0x1ull
#define CRK_CRK8051_ERR_FRC_UNMATCHED_SECURE_MSG_ACROSS_BCC_LANES_SMASK		0x100ull
#define CRK_CRK8051_ERR_FRC_IRAM_SBE_SHIFT					7
#define CRK_CRK8051_ERR_FRC_IRAM_SBE_MASK					0x1ull
#define CRK_CRK8051_ERR_FRC_IRAM_SBE_SMASK					0x80ull
#define CRK_CRK8051_ERR_FRC_IRAM_MBE_SHIFT					6
#define CRK_CRK8051_ERR_FRC_IRAM_MBE_MASK					0x1ull
#define CRK_CRK8051_ERR_FRC_IRAM_MBE_SMASK					0x40ull
#define CRK_CRK8051_ERR_FRC_DRAM_SBE_SHIFT					5
#define CRK_CRK8051_ERR_FRC_DRAM_SBE_MASK					0x1ull
#define CRK_CRK8051_ERR_FRC_DRAM_SBE_SMASK					0x20ull
#define CRK_CRK8051_ERR_FRC_DRAM_MBE_SHIFT					4
#define CRK_CRK8051_ERR_FRC_DRAM_MBE_MASK					0x1ull
#define CRK_CRK8051_ERR_FRC_DRAM_MBE_SMASK					0x10ull
#define CRK_CRK8051_ERR_FRC_CRAM_SBE_SHIFT					3
#define CRK_CRK8051_ERR_FRC_CRAM_SBE_MASK					0x1ull
#define CRK_CRK8051_ERR_FRC_CRAM_SBE_SMASK					0x8ull
#define CRK_CRK8051_ERR_FRC_CRAM_MBE_SHIFT					2
#define CRK_CRK8051_ERR_FRC_CRAM_MBE_MASK					0x1ull
#define CRK_CRK8051_ERR_FRC_CRAM_MBE_SMASK					0x4ull
#define CRK_CRK8051_ERR_FRC_LOST_8051_HEART_BEAT_SHIFT				1
#define CRK_CRK8051_ERR_FRC_LOST_8051_HEART_BEAT_MASK				0x1ull
#define CRK_CRK8051_ERR_FRC_LOST_8051_HEART_BEAT_SMASK				0x2ull
#define CRK_CRK8051_ERR_FRC_SET_BY_8051_SHIFT					0
#define CRK_CRK8051_ERR_FRC_SET_BY_8051_MASK					0x1ull
#define CRK_CRK8051_ERR_FRC_SET_BY_8051_SMASK					0x1ull
/*
* Table #33 of 146_8051_Registers.xml - CRK8051_ERR_EN_HOST
* 
*/
#define CRK_CRK8051_ERR_EN_HOST							(CRK_8051_CSRS + 0x000000000118)
#define CRK_CRK8051_ERR_EN_HOST_RESETCSR					0x0000000000000000ull
#define CRK_CRK8051_ERR_EN_HOST_UNUSED_63_9_SHIFT				9
#define CRK_CRK8051_ERR_EN_HOST_UNUSED_63_9_MASK				0x7FFFFFFFFFFFFFull
#define CRK_CRK8051_ERR_EN_HOST_UNUSED_63_9_SMASK				0xFFFFFFFFFFFFFE00ull
#define CRK_CRK8051_ERR_EN_HOST_UNMATCHED_SECURE_MSG_ACROSS_BCC_LANES_SHIFT	8
#define CRK_CRK8051_ERR_EN_HOST_UNMATCHED_SECURE_MSG_ACROSS_BCC_LANES_MASK	0x1ull
#define CRK_CRK8051_ERR_EN_HOST_UNMATCHED_SECURE_MSG_ACROSS_BCC_LANES_SMASK	0x100ull
#define CRK_CRK8051_ERR_EN_HOST_IRAM_SBE_SHIFT					7
#define CRK_CRK8051_ERR_EN_HOST_IRAM_SBE_MASK					0x1ull
#define CRK_CRK8051_ERR_EN_HOST_IRAM_SBE_SMASK					0x80ull
#define CRK_CRK8051_ERR_EN_HOST_IRAM_MBE_SHIFT					6
#define CRK_CRK8051_ERR_EN_HOST_IRAM_MBE_MASK					0x1ull
#define CRK_CRK8051_ERR_EN_HOST_IRAM_MBE_SMASK					0x40ull
#define CRK_CRK8051_ERR_EN_HOST_DRAM_SBE_SHIFT					5
#define CRK_CRK8051_ERR_EN_HOST_DRAM_SBE_MASK					0x1ull
#define CRK_CRK8051_ERR_EN_HOST_DRAM_SBE_SMASK					0x20ull
#define CRK_CRK8051_ERR_EN_HOST_DRAM_MBE_SHIFT					4
#define CRK_CRK8051_ERR_EN_HOST_DRAM_MBE_MASK					0x1ull
#define CRK_CRK8051_ERR_EN_HOST_DRAM_MBE_SMASK					0x10ull
#define CRK_CRK8051_ERR_EN_HOST_CRAM_SBE_SHIFT					3
#define CRK_CRK8051_ERR_EN_HOST_CRAM_SBE_MASK					0x1ull
#define CRK_CRK8051_ERR_EN_HOST_CRAM_SBE_SMASK					0x8ull
#define CRK_CRK8051_ERR_EN_HOST_CRAM_MBE_SHIFT					2
#define CRK_CRK8051_ERR_EN_HOST_CRAM_MBE_MASK					0x1ull
#define CRK_CRK8051_ERR_EN_HOST_CRAM_MBE_SMASK					0x4ull
#define CRK_CRK8051_ERR_EN_HOST_LOST_8051_HEART_BEAT_SHIFT			1
#define CRK_CRK8051_ERR_EN_HOST_LOST_8051_HEART_BEAT_MASK			0x1ull
#define CRK_CRK8051_ERR_EN_HOST_LOST_8051_HEART_BEAT_SMASK			0x2ull
#define CRK_CRK8051_ERR_EN_HOST_SET_BY_8051_SHIFT				0
#define CRK_CRK8051_ERR_EN_HOST_SET_BY_8051_MASK				0x1ull
#define CRK_CRK8051_ERR_EN_HOST_SET_BY_8051_SMASK				0x1ull
/*
* Table #34 of 146_8051_Registers.xml - CRK8051_ERR_FIRST_HOST
* 
*/
#define CRK_CRK8051_ERR_FIRST_HOST						(CRK_8051_CSRS + 0x000000000120)
#define CRK_CRK8051_ERR_FIRST_HOST_RESETCSR					0x0000000000000000ull
#define CRK_CRK8051_ERR_FIRST_HOST_UNUSED_63_9_SHIFT				9
#define CRK_CRK8051_ERR_FIRST_HOST_UNUSED_63_9_MASK				0x7FFFFFFFFFFFFFull
#define CRK_CRK8051_ERR_FIRST_HOST_UNUSED_63_9_SMASK				0xFFFFFFFFFFFFFE00ull
#define CRK_CRK8051_ERR_FIRST_HOST_UNMATCHED_SECURE_MSG_ACROSS_BCC_LANES_SHIFT	8
#define CRK_CRK8051_ERR_FIRST_HOST_UNMATCHED_SECURE_MSG_ACROSS_BCC_LANES_MASK	0x1ull
#define CRK_CRK8051_ERR_FIRST_HOST_UNMATCHED_SECURE_MSG_ACROSS_BCC_LANES_SMASK	0x100ull
#define CRK_CRK8051_ERR_FIRST_HOST_IRAM_SBE_SHIFT				7
#define CRK_CRK8051_ERR_FIRST_HOST_IRAM_SBE_MASK				0x1ull
#define CRK_CRK8051_ERR_FIRST_HOST_IRAM_SBE_SMASK				0x80ull
#define CRK_CRK8051_ERR_FIRST_HOST_IRAM_MBE_SHIFT				6
#define CRK_CRK8051_ERR_FIRST_HOST_IRAM_MBE_MASK				0x1ull
#define CRK_CRK8051_ERR_FIRST_HOST_IRAM_MBE_SMASK				0x40ull
#define CRK_CRK8051_ERR_FIRST_HOST_DRAM_SBE_SHIFT				5
#define CRK_CRK8051_ERR_FIRST_HOST_DRAM_SBE_MASK				0x1ull
#define CRK_CRK8051_ERR_FIRST_HOST_DRAM_SBE_SMASK				0x20ull
#define CRK_CRK8051_ERR_FIRST_HOST_DRAM_MBE_SHIFT				4
#define CRK_CRK8051_ERR_FIRST_HOST_DRAM_MBE_MASK				0x1ull
#define CRK_CRK8051_ERR_FIRST_HOST_DRAM_MBE_SMASK				0x10ull
#define CRK_CRK8051_ERR_FIRST_HOST_CRAM_SBE_SHIFT				3
#define CRK_CRK8051_ERR_FIRST_HOST_CRAM_SBE_MASK				0x1ull
#define CRK_CRK8051_ERR_FIRST_HOST_CRAM_SBE_SMASK				0x8ull
#define CRK_CRK8051_ERR_FIRST_HOST_CRAM_MBE_SHIFT				2
#define CRK_CRK8051_ERR_FIRST_HOST_CRAM_MBE_MASK				0x1ull
#define CRK_CRK8051_ERR_FIRST_HOST_CRAM_MBE_SMASK				0x4ull
#define CRK_CRK8051_ERR_FIRST_HOST_LOST_8051_HEART_BEAT_SHIFT			1
#define CRK_CRK8051_ERR_FIRST_HOST_LOST_8051_HEART_BEAT_MASK			0x1ull
#define CRK_CRK8051_ERR_FIRST_HOST_LOST_8051_HEART_BEAT_SMASK			0x2ull
#define CRK_CRK8051_ERR_FIRST_HOST_SET_BY_8051_SHIFT				0
#define CRK_CRK8051_ERR_FIRST_HOST_SET_BY_8051_MASK				0x1ull
#define CRK_CRK8051_ERR_FIRST_HOST_SET_BY_8051_SMASK				0x1ull
/*
* Table #35 of 146_8051_Registers.xml - CRK8051_CFG_MISC_FUSE
* This register is used to for store miscellaneous configuration. when in 
* 'non-secure' mode (i_top_CRK8051_security_lock ==1) this register is set by 
* hardware and come from fuse value, and is locked out from CSR write access. 
* When in 'secure' mode (i_top_CRK8051_security_lock==0), this register is both 
* readable and writable.
*/
#define CRK_CRK8051_CFG_MISC_FUSE						(CRK_8051_CSRS + 0x000000000128)
#define CRK_CRK8051_CFG_MISC_FUSE_RESETCSR					0x0000000000000000ull
#define CRK_CRK8051_CFG_MISC_FUSE_UNUSED_63_8_SHIFT				8
#define CRK_CRK8051_CFG_MISC_FUSE_UNUSED_63_8_MASK				0xFFFFFFFFFFFFFFull
#define CRK_CRK8051_CFG_MISC_FUSE_UNUSED_63_8_SMASK				0xFFFFFFFFFFFFFF00ull
#define CRK_CRK8051_CFG_MISC_FUSE_VAL_SHIFT					0
#define CRK_CRK8051_CFG_MISC_FUSE_VAL_MASK					0xFFull
#define CRK_CRK8051_CFG_MISC_FUSE_VAL_SMASK					0xFFull
/*
* Table #36 of 146_8051_Registers.xml - CRK8051_CFG_SERDES
* This register is used to do the basic configuration on the CRK_SERDES block. 
* Note that this CSR is included here since there's no CSRs in the crk_serdes 
* block.
*/
#define CRK_CRK8051_CFG_SERDES							(CRK_8051_CSRS + 0x000000000130)
#define CRK_CRK8051_CFG_SERDES_RESETCSR						0x0000000000000000ull
#define CRK_CRK8051_CFG_SERDES_UNUSED_63_10_SHIFT				10
#define CRK_CRK8051_CFG_SERDES_UNUSED_63_10_MASK				0x3FFFFFFFFFFFFFull
#define CRK_CRK8051_CFG_SERDES_UNUSED_63_10_SMASK				0xFFFFFFFFFFFFFC00ull
#define CRK_CRK8051_CFG_SERDES_SER_TX_FIFO_CLK_SEL_SHIFT			8
#define CRK_CRK8051_CFG_SERDES_SER_TX_FIFO_CLK_SEL_MASK				0x3ull
#define CRK_CRK8051_CFG_SERDES_SER_TX_FIFO_CLK_SEL_SMASK			0x300ull
#define CRK_CRK8051_CFG_SERDES_UNUSED_7_1_SHIFT					1
#define CRK_CRK8051_CFG_SERDES_UNUSED_7_1_MASK					0x7Full
#define CRK_CRK8051_CFG_SERDES_UNUSED_7_1_SMASK					0xFEull
#define CRK_CRK8051_CFG_SERDES_SER_BYPASS_INPUT_FLOP_SHIFT			0
#define CRK_CRK8051_CFG_SERDES_SER_BYPASS_INPUT_FLOP_MASK			0x1ull
#define CRK_CRK8051_CFG_SERDES_SER_BYPASS_INPUT_FLOP_SMASK			0x1ull
/*
* Table #37 of 146_8051_Registers.xml - CRK8051_CFG_EXT_DEV_0
* These registers are used by the 8051 to issue request that the HOST need to 
* execute related to the configuration of an external device(i.e repeater in the 
* channel) during LNI process.
*/
#define CRK_CRK8051_CFG_EXT_DEV_0						(CRK_8051_CSRS + 0x000000000138)
#define CRK_CRK8051_CFG_EXT_DEV_0_RESETCSR					0x0000000000000001ull
#define CRK_CRK8051_CFG_EXT_DEV_0_UNUSED_63_32_SHIFT				32
#define CRK_CRK8051_CFG_EXT_DEV_0_UNUSED_63_32_MASK				0xFFFFFFFFull
#define CRK_CRK8051_CFG_EXT_DEV_0_UNUSED_63_32_SMASK				0xFFFFFFFF00000000ull
#define CRK_CRK8051_CFG_EXT_DEV_0_RSP_DATA_SHIFT				16
#define CRK_CRK8051_CFG_EXT_DEV_0_RSP_DATA_MASK					0xFFFFull
#define CRK_CRK8051_CFG_EXT_DEV_0_RSP_DATA_SMASK				0xFFFF0000ull
#define CRK_CRK8051_CFG_EXT_DEV_0_RETURN_CODE_SHIFT				8
#define CRK_CRK8051_CFG_EXT_DEV_0_RETURN_CODE_MASK				0xFFull
#define CRK_CRK8051_CFG_EXT_DEV_0_RETURN_CODE_SMASK				0xFF00ull
#define CRK_CRK8051_CFG_EXT_DEV_0_UNUSED_7_1_SHIFT				1
#define CRK_CRK8051_CFG_EXT_DEV_0_UNUSED_7_1_MASK				0x7Full
#define CRK_CRK8051_CFG_EXT_DEV_0_UNUSED_7_1_SMASK				0xFEull
#define CRK_CRK8051_CFG_EXT_DEV_0_COMPLETED_SHIFT				0
#define CRK_CRK8051_CFG_EXT_DEV_0_COMPLETED_MASK				0x1ull
#define CRK_CRK8051_CFG_EXT_DEV_0_COMPLETED_SMASK				0x1ull
/*
* Table #38 of 146_8051_Registers.xml - CRK8051_CFG_EXT_DEV_1
* 
*/
#define CRK_CRK8051_CFG_EXT_DEV_1						(CRK_8051_CSRS + 0x000000000140)
#define CRK_CRK8051_CFG_EXT_DEV_1_RESETCSR					0x0000000000000000ull
#define CRK_CRK8051_CFG_EXT_DEV_1_UNUSED_63_32_SHIFT				32
#define CRK_CRK8051_CFG_EXT_DEV_1_UNUSED_63_32_MASK				0xFFFFFFFFull
#define CRK_CRK8051_CFG_EXT_DEV_1_UNUSED_63_32_SMASK				0xFFFFFFFF00000000ull
#define CRK_CRK8051_CFG_EXT_DEV_1_REQ_DATA_SHIFT				16
#define CRK_CRK8051_CFG_EXT_DEV_1_REQ_DATA_MASK					0xFFFFull
#define CRK_CRK8051_CFG_EXT_DEV_1_REQ_DATA_SMASK				0xFFFF0000ull
#define CRK_CRK8051_CFG_EXT_DEV_1_REQ_TYPE_SHIFT				8
#define CRK_CRK8051_CFG_EXT_DEV_1_REQ_TYPE_MASK					0xFFull
#define CRK_CRK8051_CFG_EXT_DEV_1_REQ_TYPE_SMASK				0xFF00ull
#define CRK_CRK8051_CFG_EXT_DEV_1_UNUSED_7_1_SHIFT				1
#define CRK_CRK8051_CFG_EXT_DEV_1_UNUSED_7_1_MASK				0x7Full
#define CRK_CRK8051_CFG_EXT_DEV_1_UNUSED_7_1_SMASK				0xFEull
#define CRK_CRK8051_CFG_EXT_DEV_1_REQ_NEW_SHIFT					0
#define CRK_CRK8051_CFG_EXT_DEV_1_REQ_NEW_MASK					0x1ull
#define CRK_CRK8051_CFG_EXT_DEV_1_REQ_NEW_SMASK					0x1ull
/*
* Table #39 of 146_8051_Registers.xml - CRK8051_CFG_LOCAL_PORT_NO
* These registers are used to transport the port number securely.
*/
#define CRK_CRK8051_CFG_LOCAL_PORT_NO						(CRK_8051_CSRS + 0x000000000148)
#define CRK_CRK8051_CFG_LOCAL_PORT_NO_RESETCSR					0x0000000000000001ull
#define CRK_CRK8051_CFG_LOCAL_PORT_NO_UNUSED_63_8_SHIFT				8
#define CRK_CRK8051_CFG_LOCAL_PORT_NO_UNUSED_63_8_MASK				0xFFFFFFFFFFFFFFull
#define CRK_CRK8051_CFG_LOCAL_PORT_NO_UNUSED_63_8_SMASK				0xFFFFFFFFFFFFFF00ull
#define CRK_CRK8051_CFG_LOCAL_PORT_NO_VAL_SHIFT					0
#define CRK_CRK8051_CFG_LOCAL_PORT_NO_VAL_MASK					0xFFull
#define CRK_CRK8051_CFG_LOCAL_PORT_NO_VAL_SMASK					0xFFull
/*
* Table #40 of 146_8051_Registers.xml - CRK8051_STS_REMOTE_PORT_NO
* 
*/
#define CRK_CRK8051_STS_REMOTE_PORT_NO						(CRK_8051_CSRS + 0x000000000150)
#define CRK_CRK8051_STS_REMOTE_PORT_NO_RESETCSR					0x0000000000000001ull
#define CRK_CRK8051_STS_REMOTE_PORT_NO_UNUSED_63_8_SHIFT			8
#define CRK_CRK8051_STS_REMOTE_PORT_NO_UNUSED_63_8_MASK				0xFFFFFFFFFFFFFFull
#define CRK_CRK8051_STS_REMOTE_PORT_NO_UNUSED_63_8_SMASK			0xFFFFFFFFFFFFFF00ull
#define CRK_CRK8051_STS_REMOTE_PORT_NO_VAL_SHIFT				0
#define CRK_CRK8051_STS_REMOTE_PORT_NO_VAL_MASK					0xFFull
#define CRK_CRK8051_STS_REMOTE_PORT_NO_VAL_SMASK				0xFFull
/*
* Table #41 of 146_8051_Registers.xml - CRK8051_CFG_SER_LANES_DISABLE
* These registers are used by the upper layer link management software to 
* override the SerDes control. For example, it can be used to manually disable 
* one or more SerDes lanes in case of a catastrophic event like a broken cooling 
* fan to prevent overheating the chip.
*/
#define CRK_CRK8051_CFG_SER_LANES_DISABLE					(CRK_8051_CSRS + 0x000000000158)
#define CRK_CRK8051_CFG_SER_LANES_DISABLE_RESETCSR				0x0000000000000000ull
#define CRK_CRK8051_CFG_SER_LANES_DISABLE_UNUSED_63_8_SHIFT			8
#define CRK_CRK8051_CFG_SER_LANES_DISABLE_UNUSED_63_8_MASK			0xFFFFFFFFFFFFFFull
#define CRK_CRK8051_CFG_SER_LANES_DISABLE_UNUSED_63_8_SMASK			0xFFFFFFFFFFFFFF00ull
#define CRK_CRK8051_CFG_SER_LANES_DISABLE_VAL_SHIFT				0
#define CRK_CRK8051_CFG_SER_LANES_DISABLE_VAL_MASK				0xFFull
#define CRK_CRK8051_CFG_SER_LANES_DISABLE_VAL_SMASK				0xFFull
/*
* Table #42 of 146_8051_Registers.xml - CRK8051_DBG_SPARE
* These are spare registers used for the crk8051 firmware debugging.
*/
#define CRK_CRK8051_DBG_SPARE							(CRK_8051_CSRS + 0x000000000160)
#define CRK_CRK8051_DBG_SPARE_RESETCSR						0x0000000000000000ull
#define CRK_CRK8051_DBG_SPARE_UNUSED_63_16_SHIFT				16
#define CRK_CRK8051_DBG_SPARE_UNUSED_63_16_MASK					0xFFFFFFFFFFFFull
#define CRK_CRK8051_DBG_SPARE_UNUSED_63_16_SMASK				0xFFFFFFFFFFFF0000ull
#define CRK_CRK8051_DBG_SPARE_D1_SHIFT						8
#define CRK_CRK8051_DBG_SPARE_D1_MASK						0xFFull
#define CRK_CRK8051_DBG_SPARE_D1_SMASK						0xFF00ull
#define CRK_CRK8051_DBG_SPARE_D0_SHIFT						0
#define CRK_CRK8051_DBG_SPARE_D0_MASK						0xFFull
#define CRK_CRK8051_DBG_SPARE_D0_SMASK						0xFFull
/*
* Table #43 of 146_8051_Registers.xml - CRK8051_DBG_SER_LOS
* This register reports the signal detection status of the SerDes. It is also 
* used in some application (LWEG) as part of its initialization 
* process.
*/
#define CRK_CRK8051_DBG_SER_LOS							(CRK_8051_CSRS + 0x000000000168)
#define CRK_CRK8051_DBG_SER_LOS_RESETCSR					0x0000000000000001ull
#define CRK_CRK8051_DBG_SER_LOS_UNUSED_63_1_SHIFT				1
#define CRK_CRK8051_DBG_SER_LOS_UNUSED_63_1_MASK				0x7FFFFFFFFFFFFFFFull
#define CRK_CRK8051_DBG_SER_LOS_UNUSED_63_1_SMASK				0xFFFFFFFFFFFFFFFEull
#define CRK_CRK8051_DBG_SER_LOS_VAL_SHIFT					0
#define CRK_CRK8051_DBG_SER_LOS_VAL_MASK					0x1ull
#define CRK_CRK8051_DBG_SER_LOS_VAL_SMASK					0x1ull
/*
* Table #44 of 146_8051_Registers.xml - CRK8051_DBG_SER_OUTPUT0
* 
*/
#define CRK_CRK8051_DBG_SER_OUTPUT0						(CRK_8051_CSRS + 0x000000000170)
#define CRK_CRK8051_DBG_SER_OUTPUT0_RESETCSR					0x0000000000000000ull
#define CRK_CRK8051_DBG_SER_OUTPUT0_VAL_SHIFT					0
#define CRK_CRK8051_DBG_SER_OUTPUT0_VAL_MASK					0xFFFFFFFFFFFFFFFFull
#define CRK_CRK8051_DBG_SER_OUTPUT0_VAL_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #45 of 146_8051_Registers.xml - CRK8051_DBG_SER_OUTPUT1
* 
*/
#define CRK_CRK8051_DBG_SER_OUTPUT1						(CRK_8051_CSRS + 0x000000000178)
#define CRK_CRK8051_DBG_SER_OUTPUT1_RESETCSR					0x0000000000000000ull
#define CRK_CRK8051_DBG_SER_OUTPUT1_VAL_SHIFT					0
#define CRK_CRK8051_DBG_SER_OUTPUT1_VAL_MASK					0xFFFFFFFFFFFFFFFFull
#define CRK_CRK8051_DBG_SER_OUTPUT1_VAL_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #46 of 146_8051_Registers.xml - CRK8051_DBG_SER_OUTPUT2
* 
*/
#define CRK_CRK8051_DBG_SER_OUTPUT2						(CRK_8051_CSRS + 0x000000000180)
#define CRK_CRK8051_DBG_SER_OUTPUT2_RESETCSR					0x0000000000000000ull
#define CRK_CRK8051_DBG_SER_OUTPUT2_VAL_SHIFT					0
#define CRK_CRK8051_DBG_SER_OUTPUT2_VAL_MASK					0xFFFFFFFFFFFFFFFFull
#define CRK_CRK8051_DBG_SER_OUTPUT2_VAL_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #47 of 146_8051_Registers.xml - CRK8051_DBG_SER_OUTPUT3
* 
*/
#define CRK_CRK8051_DBG_SER_OUTPUT3						(CRK_8051_CSRS + 0x000000000188)
#define CRK_CRK8051_DBG_SER_OUTPUT3_RESETCSR					0x0000000000000000ull
#define CRK_CRK8051_DBG_SER_OUTPUT3_VAL_SHIFT					0
#define CRK_CRK8051_DBG_SER_OUTPUT3_VAL_MASK					0xFFFFFFFFFFFFFFFFull
#define CRK_CRK8051_DBG_SER_OUTPUT3_VAL_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #48 of 146_8051_Registers.xml - CRK8051_DBG_SER_INPUT0
* 
*/
#define CRK_CRK8051_DBG_SER_INPUT0						(CRK_8051_CSRS + 0x000000000190)
#define CRK_CRK8051_DBG_SER_INPUT0_RESETCSR					0x0000000000000000ull
#define CRK_CRK8051_DBG_SER_INPUT0_VAL_SHIFT					0
#define CRK_CRK8051_DBG_SER_INPUT0_VAL_MASK					0xFFFFFFFFFFFFFFFFull
#define CRK_CRK8051_DBG_SER_INPUT0_VAL_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #49 of 146_8051_Registers.xml - CRK8051_DBG_SER_INPUT1
* 
*/
#define CRK_CRK8051_DBG_SER_INPUT1						(CRK_8051_CSRS + 0x000000000198)
#define CRK_CRK8051_DBG_SER_INPUT1_RESETCSR					0x0000000000000000ull
#define CRK_CRK8051_DBG_SER_INPUT1_VAL_SHIFT					0
#define CRK_CRK8051_DBG_SER_INPUT1_VAL_MASK					0xFFFFFFFFFFFFFFFFull
#define CRK_CRK8051_DBG_SER_INPUT1_VAL_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #50 of 146_8051_Registers.xml - CRK8051_DBG_SER_INPUT2
* 
*/
#define CRK_CRK8051_DBG_SER_INPUT2						(CRK_8051_CSRS + 0x0000000001A0)
#define CRK_CRK8051_DBG_SER_INPUT2_RESETCSR					0x0000000000000000ull
#define CRK_CRK8051_DBG_SER_INPUT2_VAL_SHIFT					0
#define CRK_CRK8051_DBG_SER_INPUT2_VAL_MASK					0xFFFFFFFFFFFFFFFFull
#define CRK_CRK8051_DBG_SER_INPUT2_VAL_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #51 of 146_8051_Registers.xml - CRK8051_DBG_SER_MEMBUS_IF
* This register provide access to the SerDes MemBus interface for debugging and 
* post silicon electrical validation. This interface is locked when 
* CSR:CRK8051_CFG_MISC_FUSE.VAL[7] is set for security concern.
*/
#define CRK_CRK8051_DBG_SER_MEMBUS_IF						(CRK_8051_CSRS + 0x0000000001A8)
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_RESETCSR					0x0000000000000000ull
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_UNUSED_63_42_SHIFT			42
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_UNUSED_63_42_MASK				0x3FFFFFull
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_UNUSED_63_42_SMASK			0xFFFFFC0000000000ull
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_ACCESS_ERROR_SHIFT			41
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_ACCESS_ERROR_MASK				0x1ull
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_ACCESS_ERROR_SMASK			0x20000000000ull
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_ACCESS_COMPLETE_SHIFT			40
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_ACCESS_COMPLETE_MASK			0x1ull
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_ACCESS_COMPLETE_SMASK			0x10000000000ull
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_READ_DATA_SHIFT				32
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_READ_DATA_MASK				0xFFull
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_READ_DATA_SMASK				0xFF00000000ull
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_UNUSED_31_27_SHIFT			27
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_UNUSED_31_27_MASK				0x1Full
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_UNUSED_31_27_SMASK			0xF8000000ull
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_SEL_PIN_SHIFT				26
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_SEL_PIN_MASK				0x1ull
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_SEL_PIN_SMASK				0x4000000ull
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_WR_ENA_SHIFT				25
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_WR_ENA_MASK				0x1ull
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_WR_ENA_SMASK				0x2000000ull
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_NEW_REQ_SHIFT				24
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_NEW_REQ_MASK				0x1ull
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_NEW_REQ_SMASK				0x1000000ull
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_WRITE_DATA_SHIFT				16
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_WRITE_DATA_MASK				0xFFull
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_WRITE_DATA_SMASK				0xFF0000ull
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_ADDR_SHIFT				0
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_ADDR_MASK					0xFFFFull
#define CRK_CRK8051_DBG_SER_MEMBUS_IF_ADDR_SMASK				0xFFFFull

#endif 		/* DEF_MNH_8051_SW_DEF */

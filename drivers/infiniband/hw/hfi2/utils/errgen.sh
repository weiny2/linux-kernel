#!/bin/sh

#
# generate all the CSR structures.
#
lex error.lex
cc -g -o CSR.x lex.yy.c
cat ../chip/* | ./CSR.x

#
# OPIO name correction
#
cat OPIO_PHY.CSR | sed -e 's/FXR_OPIO_/MNH_OPIO_/g' > tmp
mv tmp OPIO_PHY.CSR

#
# The prefix used to be FXR on these defines, now FZC.
#
cat LCB.CSR | sed -e 's/FXR_LCB_/FZC_LCB_/g' > tmp
mv tmp LCB.CSR

#
# Change TP defines to use correct base, this is a hardware
# header files issue that will be fixed later.
# TP uses more than one register for its error domain because
# it has more than 64 bits (errors).
#
cat TP_0.CSR | sed -E -e "s/FXR_TP_([^,]*),/FXR_LM_TP0_CSRS + FXR_TP_\1,/g" > tmp
mv tmp TP_0.CSR
cat TP_1.CSR | sed -E -e "s/FXR_TP_([^,]*),/FXR_LM_TP0_CSRS + FXR_TP_\1,/g" > tmp
mv tmp TP_1.CSR

#
# Change FPC defines to use correct base, this is a hardware
# header files issue that will be fixed later.
#
cat FPC.CSR | sed -E -e "s/FXR_FPC_([^,]*),/FXR_LM_FPC0_CSRS + FXR_FPC_\1,/g" > tmp
mv tmp FPC.CSR

################################################################

echo "\
/*
 * Intel Omni-Path Architecture (OPA) Host Fabric Software
 *
 * This file is provided under a dual BSD/GPLv2 license.  When using or
 * redistributing this file, you may do so under either license.
 *
 * GPL LICENSE SUMMARY
 *
 * Copyright (c) 2015 Intel Corporation.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License, version 2, as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * BSD LICENSE
 *
 * Copyright (c) 2015 Intel Corporation.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *  * Neither the name of Intel Corporation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Intel(R) Omni-Path Gen2 HFI PCIe Driver
 */
" > errdef.h
echo "/*" >> errdef.h
echo " * DO NOT EDIT THIS FILE DIRECTLY" >> errdef.h
echo " * PLEASE GO THROUGH utils/errgen.sh SCRIPT" >> errdef.h
echo " */" >> errdef.h
echo "" >> errdef.h

################################################################

#
# FZC domain CSRs
#
echo "static struct hfi_error_csr hfi_fzc_error[] = {" >> errdef.h
cat LCB.CSR >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# OTR PKT domain CSRs
#
echo "static struct hfi_error_csr hfi_otr_pkt_error[] = {" >> errdef.h
cat TXOTR_PKT_0.CSR >> errdef.h
echo "	," >> errdef.h
cat TXOTR_PKT_1.CSR >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# HIFIS domain CSRs
#
echo "static struct hfi_error_csr hfi_hifis_error[] = {" >> errdef.h
cat HIFIS.CSR >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# LOCA domain CSRs
#
echo "static struct hfi_error_csr hfi_loca_error[] = {" >> errdef.h
cat LOCA0.CSR >> errdef.h
echo "	," >> errdef.h
cat LOCA1.CSR >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# PCIM domain CSRs
#
echo "static struct hfi_error_csr hfi_pcim_error[] = {" >> errdef.h
cat PCIM.CSR >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# TXCID domain CSRs
#
echo "static struct hfi_error_csr hfi_txcid_error[] = {" >> errdef.h
cat TXCID.CSR >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# TXCIC domain CSRs
#
echo "static struct hfi_error_csr hfi_txcic_error[] = {" >> errdef.h
cat TXCIC.CSR >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# OTR MSG domain CSRs
#
echo "static struct hfi_error_csr hfi_otr_msg_error[] = {" >> errdef.h
cat TXOTR_MSG.CSR >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# TXDMA domain CSRs
#
echo "static struct hfi_error_csr hfi_txdma_error[] = {" >> errdef.h
cat TXDMA.CSR >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# LM domain CSRs
#
echo "static struct hfi_error_csr hfi_lm_error[] = {" >> errdef.h
cat LM.CSR >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# RXE2E domain CSRs
#
echo "static struct hfi_error_csr hfi_rxe2e_error[] = {" >> errdef.h
cat RXE2E_1.CSR >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# RXHP domain CSRs
#
echo "static struct hfi_error_csr hfi_rxhp_error[] = {" >> errdef.h
cat RXHP_1.CSR >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# RXDMA domain CSRs
#
echo "static struct hfi_error_csr hfi_rxdma_error[] = {" >> errdef.h
cat RXDMA_1.CSR >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# RXET domain CSRs
#
echo "static struct hfi_error_csr hfi_rxet_error[] = {" >> errdef.h
cat RXET.CSR >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# RXHIARB domain CSRs
#
echo "static struct hfi_error_csr hfi_rxhiarb_error[] = {" >> errdef.h
cat RXHIARB_1.CSR >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# AT domain CSRs
#
echo "static struct hfi_error_csr hfi_at_error[] = {" >> errdef.h
cat AT_1.CSR >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# OPIO domain CSRs
#
echo "static struct hfi_error_csr hfi_opio_error[] = {" >> errdef.h
cat OPIO_PHY.CSR >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# RXCID domain CSRs
#
echo "static struct hfi_error_csr hfi_rxcid_error[] = {" >> errdef.h
cat RXCID.CSR >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# RXCIC domain CSRs
#
echo "static struct hfi_error_csr hfi_rxcic_error[] = {" >> errdef.h
cat RXCIC.CSR >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# FPC domain CSRs
#
echo "static struct hfi_error_csr hfi_fpc_error[] = {" >> errdef.h
cat FPC.CSR >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# TP domain CSRs
#
echo "static struct hfi_error_csr hfi_tp_error[] = {" >> errdef.h
cat TP_0.CSR >> errdef.h
echo "	," >> errdef.h
cat TP_1.CSR >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# PMON domain CSRs
#
echo "static struct hfi_error_csr hfi_pmon_error[] = {" >> errdef.h
cat PMON_1.CSR >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

################################################################

#
# put errdef.h into source directory.
#
mv errdef.h ../errdef.h

#
# remove generated tmp files
#
rm CSR.x
rm *.CSR
rm lex.yy.c

################################################################

/*
*------------------------------------------------------------------------------
*                                                                              
*  INTEL CONFIDENTIAL                                                          
*                                                                              
*  Copyright 2016 Intel Corporation All Rights Reserved.                 
*                                                                              
*  The source code contained or described herein and all documents related     
*  to the source code ("Material") are owned by Intel Corporation or its    
*  suppliers or licensors. Title to the Material remains with Intel            
*  Corporation or its suppliers and licensors. The Material contains trade     
*  secrets and proprietary and confidential information of Intel or its        
*  suppliers and licensors. The Material is protected by worldwide copyright   
*  and trade secret laws and treaty provisions. No part of the Material may    
*  be used, copied, reproduced, modified, published, uploaded, posted,         
*  transmitted, distributed, or disclosed in any way without Intel's prior     
*  express written permission.                                                 
*                                                                              
*  No license under any patent, copyright, trade secret or other intellectual  
*  property right is granted to or conferred upon you by disclosure or         
*  delivery of the Materials, either expressly, by implication, inducement,    
*  estoppel or otherwise. Any license under such intellectual property rights  
*  must be express and approved by Intel in writing.                           
*                                                                              
*------------------------------------------------------------------------------
*  Auto-generated by /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/i_csrs.pl
*  i_csrs.pl Version 1.5 last modified on Monday 12/19/16 11:42:34
*  /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/i_csrs.pl -C -RVREGS -ST fxr_tx_otr -unit=fxr_tx_otr_pkt_top_csrs -o /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/fxr /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/repo_xml/300_Memory_Map.xml /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/repo_xml/323_Memory_Map_TX_OTR.xml
*------------------------------------------------------------------------------
*/

#ifndef DEF_FXR_TX_OTR_PKT_TOP_CSRS_SW_DEF
#define DEF_FXR_TX_OTR_PKT_TOP_CSRS_SW_DEF

#ifndef FXR_TX_OTR_PKT_TOP_CSRS
#define FXR_TX_OTR_PKT_TOP_CSRS									0x000000000000
#endif
#ifndef FXR_TX_OTR_MSG_TOP_CSRS
#define FXR_TX_OTR_MSG_TOP_CSRS									0x000000000000
#endif
#define FXR_NUM_CONTEXTS									256
#define FXR_NUM_PIDS										4096
#define FXR_MAX_CONTEXT										255
#define FXR_TX_CONTEXT_ENTRIES									128
#define FXR_TX_CONTEXT_MAX									127
#define FXR_RX_CONTEXT_ENTRIES									16
#define FXR_RX_CONTEXT_MAX									15
#define FXR_NUM_SL										32
#define FXR_MAX_SL										31
#define TXOTR_PKT_CFG_BASE									0
#define TXOTR_PKT_ERR_BASE									8192
#define TXOTR_PKT_STS_BASE									16384
#define TXOTR_PKT_DBG_BASE									24576
#define TXOTR_PKT_PRF_BASE									32768
#define TXOTR_PKT_OFFSET									8
#define TXOTR_MSG_CFG_BASE									0
#define TXOTR_MSG_ERR_BASE									8192
#define TXOTR_MSG_STS_BASE									16384
#define TXOTR_MSG_DBG_BASE									24576
#define TXOTR_MSG_PRF_BASE									32768
#define TXOTR_MSG_OFFSET									8
/*
* Table #4 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_RXE2E_CRDTS
* This CSR contains the configuration parameters necessary to configure the 
* number of credits refunded to RXE2E for MC1 packets and MC1 packet status 
* indicators after reset.
*/
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000020)
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_RESETCSR							0x0000000010101010ull
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_RESERVED_63_29_SHIFT					29
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_RESERVED_63_29_MASK					0x7FFFFFFFFull
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_RESERVED_63_29_SMASK					0xFFFFFFFFE0000000ull
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_TC3_SHIFT							24
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_TC3_MASK							0x1Full
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_TC3_SMASK							0x1F000000ull
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_RESERVED_23_21_SHIFT					21
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_RESERVED_23_21_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_RESERVED_23_21_SMASK					0xE00000ull
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_TC2_SHIFT							16
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_TC2_MASK							0x1Full
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_TC2_SMASK							0x1F0000ull
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_RESERVED_15_13_SHIFT					13
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_RESERVED_15_13_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_RESERVED_15_13_SMASK					0xE000ull
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_TC1_SHIFT							8
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_TC1_MASK							0x1Full
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_TC1_SMASK							0x1F00ull
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_RESERVED_7_5_SHIFT					5
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_RESERVED_7_5_MASK						0x7ull
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_RESERVED_7_5_SMASK					0xE0ull
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_TC0_SHIFT							0
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_TC0_MASK							0x1Full
#define FXR_TXOTR_PKT_CFG_RXE2E_CRDTS_TC0_SMASK							0x1Full
/*
* Table #5 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_MEMORY_SCHEDULER
* This CSR contains the configuration parameters necessary to configure the 
* number of credits for HI requests from TXDMA and HI responses from 
* TXCI.
*/
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000030)
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_RESETCSR						0x0000060488002020ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_RESERVED_63_57_SHIFT					57
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_RESERVED_63_57_MASK					0x7Full
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_RESERVED_63_57_SMASK					0xFE00000000000000ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PRIV_LEVEL_SHIFT					56
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PRIV_LEVEL_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PRIV_LEVEL_SMASK					0x100000000000000ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PID_SHIFT						44
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PID_MASK						0xFFFull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PID_SMASK						0xFFF00000000000ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PSN_SO_SHIFT						43
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PSN_SO_MASK						0x1ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PSN_SO_SMASK						0x80000000000ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PSN_GLOBALFLOWID_SHIFT				42
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PSN_GLOBALFLOWID_MASK				0x1ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PSN_GLOBALFLOWID_SMASK				0x40000000000ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PSN_CHINT_VICTIM_WR_SHIFT				40
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PSN_CHINT_VICTIM_WR_MASK				0x3ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PSN_CHINT_VICTIM_WR_SMASK				0x30000000000ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PSN_CHINT_FLUSH_WR_SHIFT				38
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PSN_CHINT_FLUSH_WR_MASK				0x3ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PSN_CHINT_FLUSH_WR_SMASK				0xC000000000ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PSN_CHINT_RD_SHIFT					36
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PSN_CHINT_RD_MASK					0x3ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_PSN_CHINT_RD_SMASK					0x3000000000ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_FPE_SO_SHIFT						35
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_FPE_SO_MASK						0x1ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_FPE_SO_SMASK						0x800000000ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_FPE_GLOBALFLOWID_SHIFT				34
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_FPE_GLOBALFLOWID_MASK				0x1ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_FPE_GLOBALFLOWID_SMASK				0x400000000ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_FPE_CHINT_SHIFT					32
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_FPE_CHINT_MASK					0x3ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_FPE_CHINT_SMASK					0x300000000ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_TXDMA_REQ_REQACK_SHIFT				28
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_TXDMA_REQ_REQACK_MASK				0xFull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_TXDMA_REQ_REQACK_SMASK				0xF0000000ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_TXDMA_REQ_RSPACK_SHIFT				24
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_TXDMA_REQ_RSPACK_MASK				0xFull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_TXDMA_REQ_RSPACK_SMASK				0xF000000ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_RESERVED_23_14_SHIFT					14
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_RESERVED_23_14_MASK					0x3FFull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_RESERVED_23_14_SMASK					0xFFC000ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_TXCI_RSP_REQACK_SHIFT				8
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_TXCI_RSP_REQACK_MASK					0x3Full
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_TXCI_RSP_REQACK_SMASK				0x3F00ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_RESERVED_7_6_SHIFT					6
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_RESERVED_7_6_MASK					0x3ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_RESERVED_7_6_SMASK					0xC0ull
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_TXCI_RSP_RSPACK_SHIFT				0
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_TXCI_RSP_RSPACK_MASK					0x3Full
#define FXR_TXOTR_PKT_CFG_MEMORY_SCHEDULER_TXCI_RSP_RSPACK_SMASK				0x3Full
/*
* Table #6 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_PKTID_1
* This CSR contains the configuration parameters necessary to set the number of 
* reserved PKT_IDs for each MC/TC combination.
*/
#define FXR_TXOTR_PKT_CFG_PKTID_1								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000038)
#define FXR_TXOTR_PKT_CFG_PKTID_1_RESETCSR							0x0081020408102040ull
#define FXR_TXOTR_PKT_CFG_PKTID_1_RESERVED_63_56_SHIFT						56
#define FXR_TXOTR_PKT_CFG_PKTID_1_RESERVED_63_56_MASK						0xFFull
#define FXR_TXOTR_PKT_CFG_PKTID_1_RESERVED_63_56_SMASK						0xFF00000000000000ull
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC1_TC3_SHIFT						49
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC1_TC3_MASK						0x7Full
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC1_TC3_SMASK						0xFE000000000000ull
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC1_TC2_SHIFT						42
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC1_TC2_MASK						0x7Full
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC1_TC2_SMASK						0x1FC0000000000ull
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC1_TC1_SHIFT						35
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC1_TC1_MASK						0x7Full
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC1_TC1_SMASK						0x3F800000000ull
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC1_TC0_SHIFT						28
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC1_TC0_MASK						0x7Full
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC1_TC0_SMASK						0x7F0000000ull
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC0_TC3_SHIFT						21
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC0_TC3_MASK						0x7Full
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC0_TC3_SMASK						0xFE00000ull
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC0_TC2_SHIFT						14
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC0_TC2_MASK						0x7Full
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC0_TC2_SMASK						0x1FC000ull
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC0_TC1_SHIFT						7
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC0_TC1_MASK						0x7Full
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC0_TC1_SMASK						0x3F80ull
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC0_TC0_SHIFT						0
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC0_TC0_MASK						0x7Full
#define FXR_TXOTR_PKT_CFG_PKTID_1_RSVD_MC0_TC0_SMASK						0x7Full
/*
* Table #7 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_PKTID_2
* This CSR contains the configuration parameters necessary to set the total 
* shared Packet Identifiers that can be allocated simultaneously.
*/
#define FXR_TXOTR_PKT_CFG_PKTID_2								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000040)
#define FXR_TXOTR_PKT_CFG_PKTID_2_RESETCSR							0x0000000000002E00ull
#define FXR_TXOTR_PKT_CFG_PKTID_2_RESERVED_63_14_SHIFT						14
#define FXR_TXOTR_PKT_CFG_PKTID_2_RESERVED_63_14_MASK						0x3FFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_PKTID_2_RESERVED_63_14_SMASK						0xFFFFFFFFFFFFC000ull
#define FXR_TXOTR_PKT_CFG_PKTID_2_SHARED_SHIFT							0
#define FXR_TXOTR_PKT_CFG_PKTID_2_SHARED_MASK							0x3FFFull
#define FXR_TXOTR_PKT_CFG_PKTID_2_SHARED_SMASK							0x3FFFull
/*
* Table #8 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_OPB_FIFO_GEN_ARB
* This CSR contains the configuration parameters necessary to configure the OPB 
* Arbitration. The arbitration scheme by default is a leaky bucket 
* scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_GEN_ARB							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000048)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_GEN_ARB_RESETCSR						0x0000000000000003ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_GEN_ARB_RESERVED_63_2_SHIFT					2
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_GEN_ARB_RESERVED_63_2_MASK					0x3FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_GEN_ARB_RESERVED_63_2_SMASK					0xFFFFFFFFFFFFFFFCull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_GEN_ARB_PENDING_ACK_PRIORITY_SHIFT				1
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_GEN_ARB_PENDING_ACK_PRIORITY_MASK				0x1ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_GEN_ARB_PENDING_ACK_PRIORITY_SMASK				0x2ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_GEN_ARB_RETRANSMIT_PRIORITY_SHIFT				0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_GEN_ARB_RETRANSMIT_PRIORITY_MASK				0x1ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_GEN_ARB_RETRANSMIT_PRIORITY_SMASK				0x1ull
/*
* Table #9 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_PKT_DONE_CRDTS
* This CSR contains the configuration parameters necessary to configure the OPB 
* packet Done Credit value.
*/
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000050)
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_RESETCSR						0x0C0C0C0C0C0C0C0Cull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_RESERVED_63_60_SHIFT					60
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_RESERVED_63_60_MASK					0xFull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_RESERVED_63_60_SMASK					0xF000000000000000ull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_MC1TC3_SHIFT						56
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_MC1TC3_MASK						0xFull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_MC1TC3_SMASK						0xF00000000000000ull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_RESERVED_55_52_SHIFT					52
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_RESERVED_55_52_MASK					0xFull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_RESERVED_55_52_SMASK					0xF0000000000000ull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_MC1TC2_SHIFT						48
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_MC1TC2_MASK						0xFull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_MC1TC2_SMASK						0xF000000000000ull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_RESERVED_47_44_SHIFT					44
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_RESERVED_47_44_MASK					0xFull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_RESERVED_47_44_SMASK					0xF00000000000ull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_MC1TC1_SHIFT						40
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_MC1TC1_MASK						0xFull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_MC1TC1_SMASK						0xF0000000000ull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_RESERVED_39_36_SHIFT					36
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_RESERVED_39_36_MASK					0xFull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_RESERVED_39_36_SMASK					0xF000000000ull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_MC1TC0_SHIFT						32
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_MC1TC0_MASK						0xFull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_MC1TC0_SMASK						0xF00000000ull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_RESERVED_31_28_SHIFT					28
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_RESERVED_31_28_MASK					0xFull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_RESERVED_31_28_SMASK					0xF0000000ull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_MC0TC3_SHIFT						24
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_MC0TC3_MASK						0xFull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_MC0TC3_SMASK						0xF000000ull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_RESERVED_23_20_SHIFT					20
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_RESERVED_23_20_MASK					0xFull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_RESERVED_23_20_SMASK					0xF00000ull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_MC0TC2_SHIFT						16
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_MC0TC2_MASK						0xFull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_MC0TC2_SMASK						0xF0000ull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_RESERVED_15_12_SHIFT					12
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_RESERVED_15_12_MASK					0xFull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_RESERVED_15_12_SMASK					0xF000ull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_MC0TC1_SHIFT						8
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_MC0TC1_MASK						0xFull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_MC0TC1_SMASK						0xF00ull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_RESERVED_7_4_SHIFT					4
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_RESERVED_7_4_MASK					0xFull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_RESERVED_7_4_SMASK					0xF0ull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_MC0TC0_SHIFT						0
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_MC0TC0_MASK						0xFull
#define FXR_TXOTR_PKT_CFG_PKT_DONE_CRDTS_MC0TC0_SMASK						0xFull
/*
* Table #10 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC0
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC0/TC0 Fast Path Queue. The arbitration 
* scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC0						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000058)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC0_RESETCSR					0x000000000700FFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC0_RESERVED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC0_RESERVED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC0_RESERVED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC0_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC0_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC0_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC0_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC0_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC0_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC0_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC0_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC0_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #11 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC1
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC0/TC1 Fast Path Queue. The arbitration 
* scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC1						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000060)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC1_RESETCSR					0x000000000700FFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC1_RESERVED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC1_RESERVED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC1_RESERVED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC1_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC1_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC1_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC1_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC1_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC1_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC1_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC1_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC1_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #12 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC2
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC0/TC2 Fast Path Queue. The arbitration 
* scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC2						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000068)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC2_RESETCSR					0x000000000700FFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC2_RESERVED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC2_RESERVED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC2_RESERVED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC2_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC2_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC2_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC2_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC2_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC2_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC2_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC2_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC2_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #13 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC3
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC0/TC3 Fast Path Queue. The arbitration 
* scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC3						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000070)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC3_RESETCSR					0x000000000700FFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC3_RESERVED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC3_RESERVED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC3_RESERVED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC3_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC3_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC3_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC3_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC3_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC3_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC3_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC3_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC0TC3_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #14 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC0
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC1/TC0 Fast Path Queue. The arbitration 
* scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC0						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000078)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC0_RESETCSR					0x000000000700FFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC0_RESERVED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC0_RESERVED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC0_RESERVED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC0_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC0_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC0_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC0_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC0_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC0_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC0_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC0_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC0_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #15 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC1
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC1/TC1 Fast Path Queue. The arbitration 
* scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC1						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000080)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC1_RESETCSR					0x000000000700FFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC1_RESERVED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC1_RESERVED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC1_RESERVED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC1_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC1_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC1_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC1_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC1_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC1_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC1_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC1_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC1_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #16 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC2
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC1/TC2 Fast Path Queue. The arbitration 
* scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC2						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000088)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC2_RESETCSR					0x000000000700FFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC2_RESERVED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC2_RESERVED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC2_RESERVED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC2_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC2_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC2_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC2_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC2_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC2_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC2_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC2_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC2_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #17 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC3
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC1/TC3 Fast Path Queue. The arbitration 
* scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC3						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000090)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC3_RESETCSR					0x000000000700FFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC3_RESERVED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC3_RESERVED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC3_RESERVED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC3_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC3_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC3_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC3_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC3_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC3_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC3_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC3_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_FP_MC1TC3_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #18 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC0
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC0/TC0 Post Fragmentation Queue. The 
* arbitration scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC0						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000098)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC0_RESETCSR					0x000000000700FFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC0_RESERVED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC0_RESERVED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC0_RESERVED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC0_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC0_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC0_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC0_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC0_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC0_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC0_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC0_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC0_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #19 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC1
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC0/TC1 Post Fragmentation Queue. The 
* arbitration scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC1						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000000A0)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC1_RESETCSR					0x000000000700FFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC1_RESERVED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC1_RESERVED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC1_RESERVED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC1_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC1_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC1_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC1_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC1_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC1_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC1_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC1_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC1_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #20 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC2
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC0/TC2 Post Fragmentation Queue. The 
* arbitration scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC2						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000000A8)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC2_RESETCSR					0x000000000700FFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC2_RESERVED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC2_RESERVED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC2_RESERVED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC2_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC2_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC2_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC2_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC2_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC2_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC2_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC2_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC2_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #21 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC3
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC0/TC3 Post Fragmentation Queue. The 
* arbitration scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC3						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000000B0)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC3_RESETCSR					0x000000000700FFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC3_RESERVED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC3_RESERVED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC3_RESERVED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC3_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC3_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC3_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC3_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC3_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC3_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC3_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC3_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC0TC3_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #22 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC0
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC1/TC0 Post Fragmentation Queue. The 
* arbitration scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC0						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000000B8)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC0_RESETCSR					0x000000000700FFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC0_RESERVED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC0_RESERVED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC0_RESERVED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC0_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC0_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC0_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC0_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC0_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC0_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC0_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC0_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC0_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #23 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC1
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC1/TC1 Post Fragmentation Queue. The 
* arbitration scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC1						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000000C0)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC1_RESETCSR					0x000000000700FFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC1_RESERVED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC1_RESERVED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC1_RESERVED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC1_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC1_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC1_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC1_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC1_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC1_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC1_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC1_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC1_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #24 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC2
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC1/TC2 Post Fragmentation Queue. The 
* arbitration scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC2						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000000C8)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC2_RESETCSR					0x000000000700FFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC2_RESERVED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC2_RESERVED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC2_RESERVED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC2_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC2_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC2_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC2_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC2_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC2_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC2_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC2_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC2_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #25 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC3
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC1/TC3 Post Fragmentation Queue. The 
* arbitration scheme by default is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC3						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000000D0)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC3_RESETCSR					0x000000000700FFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC3_RESERVED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC3_RESERVED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC3_RESERVED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC3_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC3_LEAK_INTEGER_MASK				0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC3_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC3_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC3_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC3_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC3_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC3_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_PF_MC1TC3_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #26 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC0
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC0/TC0. The arbitration scheme by default 
* is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC0							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000000D8)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC0_RESETCSR						0x000000000700FFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC0_RESERVED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC0_RESERVED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC0_RESERVED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC0_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC0_LEAK_INTEGER_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC0_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC0_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC0_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC0_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC0_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC0_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC0_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #27 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC1
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC0/TC1. The arbitration scheme by default 
* is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC1							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000000E0)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC1_RESETCSR						0x000000000700FFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC1_RESERVED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC1_RESERVED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC1_RESERVED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC1_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC1_LEAK_INTEGER_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC1_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC1_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC1_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC1_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC1_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC1_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC1_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #28 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC2
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC0/TC2. The arbitration scheme by default 
* is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC2							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000000E8)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC2_RESETCSR						0x000000000700FFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC2_RESERVED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC2_RESERVED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC2_RESERVED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC2_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC2_LEAK_INTEGER_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC2_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC2_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC2_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC2_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC2_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC2_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC2_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #29 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC3
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC0/TC3. The arbitration scheme by default 
* is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC3							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000000F0)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC3_RESETCSR						0x000000000700FFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC3_RESERVED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC3_RESERVED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC3_RESERVED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC3_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC3_LEAK_INTEGER_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC3_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC3_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC3_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC3_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC3_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC3_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC0TC3_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #30 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC0
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC1/TC0. The arbitration scheme by default 
* is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC0							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000000F8)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC0_RESETCSR						0x000000000700FFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC0_RESERVED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC0_RESERVED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC0_RESERVED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC0_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC0_LEAK_INTEGER_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC0_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC0_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC0_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC0_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC0_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC0_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC0_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #31 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC1
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC1/TC1. The arbitration scheme by default 
* is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC1							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000100)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC1_RESETCSR						0x000000000700FFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC1_RESERVED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC1_RESERVED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC1_RESERVED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC1_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC1_LEAK_INTEGER_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC1_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC1_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC1_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC1_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC1_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC1_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC1_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #32 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC2
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC1/TC2. The arbitration scheme by default 
* is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC2							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000108)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC2_RESETCSR						0x000000000700FFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC2_RESERVED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC2_RESERVED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC2_RESERVED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC2_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC2_LEAK_INTEGER_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC2_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC2_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC2_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC2_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC2_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC2_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC2_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #33 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC3
* This CSR contains the configuration parameters necessary to configure the OPB 
* Queue Leaky Bucket Arbitration for MC1/TC3. The arbitration scheme by default 
* is a leaky bucket scheme.
*/
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC3							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000110)
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC3_RESETCSR						0x000000000700FFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC3_RESERVED_63_27_SHIFT				27
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC3_RESERVED_63_27_MASK				0x1FFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC3_RESERVED_63_27_SMASK				0xFFFFFFFFF8000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC3_LEAK_INTEGER_SHIFT				24
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC3_LEAK_INTEGER_MASK					0x7ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC3_LEAK_INTEGER_SMASK				0x7000000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC3_LEAK_FRACTION_SHIFT				16
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC3_LEAK_FRACTION_MASK				0xFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC3_LEAK_FRACTION_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC3_BW_LIMIT_SHIFT					0
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC3_BW_LIMIT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_OPB_FIFO_ARB_MC1TC3_BW_LIMIT_SMASK					0xFFFFull
/*
* Table #34 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_MAX_SEQ_DIST
* This CSR contains the configuration parameters necessary to configure the 
* checking of Maximum Sequence Distance violations. 
*/
#define FXR_TXOTR_PKT_CFG_MAX_SEQ_DIST								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000120)
#define FXR_TXOTR_PKT_CFG_MAX_SEQ_DIST_RESETCSR							0x0000000000600400ull
#define FXR_TXOTR_PKT_CFG_MAX_SEQ_DIST_RESERVED_63_24_SHIFT					24
#define FXR_TXOTR_PKT_CFG_MAX_SEQ_DIST_RESERVED_63_24_MASK					0xFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_MAX_SEQ_DIST_RESERVED_63_24_SMASK					0xFFFFFFFFFF000000ull
#define FXR_TXOTR_PKT_CFG_MAX_SEQ_DIST_SKID_DISTANCE_SHIFT					16
#define FXR_TXOTR_PKT_CFG_MAX_SEQ_DIST_SKID_DISTANCE_MASK					0xFFull
#define FXR_TXOTR_PKT_CFG_MAX_SEQ_DIST_SKID_DISTANCE_SMASK					0xFF0000ull
#define FXR_TXOTR_PKT_CFG_MAX_SEQ_DIST_THRESHOLD_DISTANCE_SHIFT					0
#define FXR_TXOTR_PKT_CFG_MAX_SEQ_DIST_THRESHOLD_DISTANCE_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_MAX_SEQ_DIST_THRESHOLD_DISTANCE_SMASK					0xFFFFull
/*
* Table #35 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_FORCE_RETRANS_PENDING
* This CSR contains the configuration parameters necessary to force BPE to mark 
* entries in a Local Sequence as PENDING (as BPE walks a Local Sequence for an 
* Out-of-Sequence NACK-based retransmit) even if credits exist to immediately 
* retransmit the packet. 
*/
#define FXR_TXOTR_PKT_CFG_FORCE_RETRANS_PENDING							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000128)
#define FXR_TXOTR_PKT_CFG_FORCE_RETRANS_PENDING_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_FORCE_RETRANS_PENDING_LOCAL_SEQUENCE_SHIFT				0
#define FXR_TXOTR_PKT_CFG_FORCE_RETRANS_PENDING_LOCAL_SEQUENCE_MASK				0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_FORCE_RETRANS_PENDING_LOCAL_SEQUENCE_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #36 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_MC1P_RC
* This CSR is used to configure the Routing Control (RC) bits for Rendezvous 
* Put, Atomic, and Get packets generated from a Rendezvous transaction. This CSR 
* cannot be changed while commands and packets are in flight.
*/
#define FXR_TXOTR_PKT_CFG_MC1P_RC								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000130)
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RESETCSR							0x0000000044444444ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RESERVED_63_31_SHIFT						31
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RESERVED_63_31_MASK						0x1FFFFFFFFull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RESERVED_63_31_SMASK						0xFFFFFFFF80000000ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_MC1P_TC3_SHIFT						28
#define FXR_TXOTR_PKT_CFG_MC1P_RC_MC1P_TC3_MASK							0x7ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_MC1P_TC3_SMASK						0x70000000ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RESERVED_27_SHIFT						27
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RESERVED_27_MASK						0x1ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RESERVED_27_SMASK						0x8000000ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_MC1P_TC2_SHIFT						24
#define FXR_TXOTR_PKT_CFG_MC1P_RC_MC1P_TC2_MASK							0x7ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_MC1P_TC2_SMASK						0x7000000ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RESERVED_23_SHIFT						23
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RESERVED_23_MASK						0x1ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RESERVED_23_SMASK						0x800000ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_MC1P_TC1_SHIFT						20
#define FXR_TXOTR_PKT_CFG_MC1P_RC_MC1P_TC1_MASK							0x7ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_MC1P_TC1_SMASK						0x700000ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RESERVED_19_SHIFT						19
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RESERVED_19_MASK						0x1ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RESERVED_19_SMASK						0x80000ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_MC1P_TC0_SHIFT						16
#define FXR_TXOTR_PKT_CFG_MC1P_RC_MC1P_TC0_MASK							0x7ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_MC1P_TC0_SMASK						0x70000ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RESERVED_15_SHIFT						15
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RESERVED_15_MASK						0x1ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RESERVED_15_SMASK						0x8000ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RENDZ_TC3_SHIFT						12
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RENDZ_TC3_MASK						0x7ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RENDZ_TC3_SMASK						0x7000ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RESERVED_11_SHIFT						11
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RESERVED_11_MASK						0x1ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RESERVED_11_SMASK						0x800ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RENDZ_TC2_SHIFT						8
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RENDZ_TC2_MASK						0x7ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RENDZ_TC2_SMASK						0x700ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RESERVED_7_SHIFT						7
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RESERVED_7_MASK						0x1ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RESERVED_7_SMASK						0x80ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RENDZ_TC1_SHIFT						4
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RENDZ_TC1_MASK						0x7ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RENDZ_TC1_SMASK						0x70ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RESERVED_3_SHIFT						3
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RESERVED_3_MASK						0x1ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RESERVED_3_SMASK						0x8ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RENDZ_TC0_SHIFT						0
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RENDZ_TC0_MASK						0x7ull
#define FXR_TXOTR_PKT_CFG_MC1P_RC_RENDZ_TC0_SMASK						0x7ull
/*
* Table #37 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_TIMEOUT
* This CSR contains the configuration parameters necessary to set the length of 
* the timeout interval used to retransmit outstanding packets. The 
* #%%#timeout#%%# value must exactly match time #%%#TIMEOUT#%%# value in 
* #%%#TXOTR_MSG_CFG_TIMEOUT#%%#.
*/
#define FXR_TXOTR_PKT_CFG_TIMEOUT								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000140)
#define FXR_TXOTR_PKT_CFG_TIMEOUT_RESETCSR							0x0020800E00000400ull
#define FXR_TXOTR_PKT_CFG_TIMEOUT_RESERVED_63_56_SHIFT						56
#define FXR_TXOTR_PKT_CFG_TIMEOUT_RESERVED_63_56_MASK						0xFFull
#define FXR_TXOTR_PKT_CFG_TIMEOUT_RESERVED_63_56_SMASK						0xFF00000000000000ull
#define FXR_TXOTR_PKT_CFG_TIMEOUT_ABOUT_TO_TIMEOUT_SHIFT					49
#define FXR_TXOTR_PKT_CFG_TIMEOUT_ABOUT_TO_TIMEOUT_MASK						0x7Full
#define FXR_TXOTR_PKT_CFG_TIMEOUT_ABOUT_TO_TIMEOUT_SMASK					0xFE000000000000ull
#define FXR_TXOTR_PKT_CFG_TIMEOUT_DISABLE_RETRANS_LIMIT_UNCONNECTED_SHIFT			48
#define FXR_TXOTR_PKT_CFG_TIMEOUT_DISABLE_RETRANS_LIMIT_UNCONNECTED_MASK			0x1ull
#define FXR_TXOTR_PKT_CFG_TIMEOUT_DISABLE_RETRANS_LIMIT_UNCONNECTED_SMASK			0x1000000000000ull
#define FXR_TXOTR_PKT_CFG_TIMEOUT_TIMEOUT_SHIFT							36
#define FXR_TXOTR_PKT_CFG_TIMEOUT_TIMEOUT_MASK							0xFFFull
#define FXR_TXOTR_PKT_CFG_TIMEOUT_TIMEOUT_SMASK							0xFFF000000000ull
#define FXR_TXOTR_PKT_CFG_TIMEOUT_MAX_RETRIES_SHIFT						32
#define FXR_TXOTR_PKT_CFG_TIMEOUT_MAX_RETRIES_MASK						0xFull
#define FXR_TXOTR_PKT_CFG_TIMEOUT_MAX_RETRIES_SMASK						0xF00000000ull
#define FXR_TXOTR_PKT_CFG_TIMEOUT_SCALER_SHIFT							0
#define FXR_TXOTR_PKT_CFG_TIMEOUT_SCALER_MASK							0xFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_TIMEOUT_SCALER_SMASK							0xFFFFFFFFull
/*
* Table #38 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_SLID_PT0
* This CSR contains the configuration parameters necessary to configure the 
* Source Local Identifier (SLID) for Port 0. The SLID in a packet is configured 
* based on the fields in this CSR as well as the SLID[1:0] or SLID[2:0] (based 
* on the command type) contained in the command. The SLID which gets inserted 
* into a packet is determined using the following formula: SLID = (BASE & 
* ~(2N-1)) | (SLID_LOW & (2N-1)) where SLID_LOW is a 24-bit field derived by 
* zero-extending SLID[1:0] or SLID[2:0] contained in the corresponding command 
* and N is the lmc contained in #%%#Section 30.7.3.36, 'LID Mask Control 
* Configuration CSR'#%%#.
*/
#define FXR_TXOTR_PKT_CFG_SLID_PT0								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000148)
#define FXR_TXOTR_PKT_CFG_SLID_PT0_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_SLID_PT0_RESERVED_63_24_SHIFT						24
#define FXR_TXOTR_PKT_CFG_SLID_PT0_RESERVED_63_24_MASK						0xFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_SLID_PT0_RESERVED_63_24_SMASK						0xFFFFFFFFFF000000ull
#define FXR_TXOTR_PKT_CFG_SLID_PT0_BASE_SHIFT							0
#define FXR_TXOTR_PKT_CFG_SLID_PT0_BASE_MASK							0xFFFFFFull
#define FXR_TXOTR_PKT_CFG_SLID_PT0_BASE_SMASK							0xFFFFFFull
/*
* Table #39 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_LMC
* This CSR contains the configuration parameters necessary to configure the LID 
* Mask Control Bits (LMC) for both ports. The LMC is used in OTR to calculate 
* the SLID which gets inserted into a packet as well as the address used in the 
* PSN Cache for evicts and fills. The maximum value of lmc is two. A value of 
* three is interpreted as two.
*/
#define FXR_TXOTR_PKT_CFG_LMC									(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000158)
#define FXR_TXOTR_PKT_CFG_LMC_RESETCSR								0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_LMC_RESERVED_63_2_SHIFT						2
#define FXR_TXOTR_PKT_CFG_LMC_RESERVED_63_2_MASK						0x3FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_LMC_RESERVED_63_2_SMASK						0xFFFFFFFFFFFFFFFCull
#define FXR_TXOTR_PKT_CFG_LMC_LMC_P0_SHIFT							0
#define FXR_TXOTR_PKT_CFG_LMC_LMC_P0_MASK							0x3ull
#define FXR_TXOTR_PKT_CFG_LMC_LMC_P0_SMASK							0x3ull
/*
* Table #40 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_FRAG_ENG
* This CSR contains the configuration parameters necessary to configure the 
* Fragmentation Engine in the Fragmentation Programmable Engine 
* (FPE).
*/
#define FXR_TXOTR_PKT_CFG_FRAG_ENG								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000178)
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_RESETCSR							0x0000002000FF0000ull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_RESERVED_63_38_SHIFT						38
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_RESERVED_63_38_MASK						0x3FFFFFFull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_RESERVED_63_38_SMASK						0xFFFFFFC000000000ull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_PD_RST_MASK_SHIFT						37
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_PD_RST_MASK_MASK						0x1ull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_PD_RST_MASK_SMASK						0x2000000000ull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_AUTHENTICATION_SUCCESSFUL_SHIFT				36
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_AUTHENTICATION_SUCCESSFUL_MASK				0x1ull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_AUTHENTICATION_SUCCESSFUL_SMASK				0x1000000000ull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_AUTHENTICATION_COMPLETE_SHIFT				35
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_AUTHENTICATION_COMPLETE_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_AUTHENTICATION_COMPLETE_SMASK				0x800000000ull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_START_AUTHENTICATION_SHIFT					34
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_START_AUTHENTICATION_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_START_AUTHENTICATION_SMASK					0x400000000ull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_POST_FRAG_PRIO_SHIFT						33
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_POST_FRAG_PRIO_MASK						0x1ull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_POST_FRAG_PRIO_SMASK						0x200000000ull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_MSG_ORDERING_OFF_SHIFT					32
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_MSG_ORDERING_OFF_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_MSG_ORDERING_OFF_SMASK					0x100000000ull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_MAX_DMA_PREFETCH_SHIFT					16
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_MAX_DMA_PREFETCH_MASK					0xFFFFull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_MAX_DMA_PREFETCH_SMASK					0xFFFF0000ull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_RESERVED_15_0_SHIFT						0
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_RESERVED_15_0_MASK						0xFFFFull
#define FXR_TXOTR_PKT_CFG_FRAG_ENG_RESERVED_15_0_SMASK						0xFFFFull
/*
* Table #41 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_VALID_TC_DLID
* Describes max dlid per port, valid TC's per port.
*/
#define FXR_TXOTR_PKT_CFG_VALID_TC_DLID								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000180)
#define FXR_TXOTR_PKT_CFG_VALID_TC_DLID_RESETCSR						0x000000000FFFFFFFull
#define FXR_TXOTR_PKT_CFG_VALID_TC_DLID_RESERVED_63_28_SHIFT					28
#define FXR_TXOTR_PKT_CFG_VALID_TC_DLID_RESERVED_63_28_MASK					0xFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_VALID_TC_DLID_RESERVED_63_28_SMASK					0xFFFFFFFFF0000000ull
#define FXR_TXOTR_PKT_CFG_VALID_TC_DLID_TC_VALID_P0_SHIFT					24
#define FXR_TXOTR_PKT_CFG_VALID_TC_DLID_TC_VALID_P0_MASK					0xFull
#define FXR_TXOTR_PKT_CFG_VALID_TC_DLID_TC_VALID_P0_SMASK					0xF000000ull
#define FXR_TXOTR_PKT_CFG_VALID_TC_DLID_MAX_DLID_P0_SHIFT					0
#define FXR_TXOTR_PKT_CFG_VALID_TC_DLID_MAX_DLID_P0_MASK					0xFFFFFFull
#define FXR_TXOTR_PKT_CFG_VALID_TC_DLID_MAX_DLID_P0_SMASK					0xFFFFFFull
/*
* Table #42 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_PSN_CACHE_CLIENT_DISABLE
* This CSR contains the disable bit for client psn cache requests. A one value 
* will hold off any client requests. This has no effect on csr psn cache 
* requests. 
*/
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_CLIENT_DISABLE						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000188)
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_CLIENT_DISABLE_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_CLIENT_DISABLE_RESERVED_63_1_SHIFT				1
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_CLIENT_DISABLE_RESERVED_63_1_MASK				0x7FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_CLIENT_DISABLE_RESERVED_63_1_SMASK				0xFFFFFFFFFFFFFFFEull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_CLIENT_DISABLE_CLIENT_PSN_CACHE_REQUEST_DISABLE_SHIFT	0
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_CLIENT_DISABLE_CLIENT_PSN_CACHE_REQUEST_DISABLE_MASK	0x1ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_CLIENT_DISABLE_CLIENT_PSN_CACHE_REQUEST_DISABLE_SMASK	0x1ull
/*
* Table #43 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_PSN_CACHE_HASH_SELECT
* This CSR is used to select an address hash function for the PSN Cache from a 
* set of 4 pre-defined hash functions optimized for different traffic 
* patterns.
*/
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_HASH_SELECT							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000190)
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_HASH_SELECT_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_HASH_SELECT_RESERVED_63_2_SHIFT				2
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_HASH_SELECT_RESERVED_63_2_MASK				0x3FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_HASH_SELECT_RESERVED_63_2_SMASK				0xFFFFFFFFFFFFFFFCull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_HASH_SELECT_HASH_SELECT_SHIFT				0
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_HASH_SELECT_HASH_SELECT_MASK				0x3ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_HASH_SELECT_HASH_SELECT_SMASK				0x3ull
/*
* Table #44 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL
* The PSN Cache access control can be used to write or read, PSN cache data and 
* tag memories as well as invalidate tag entries and flush cache data to host 
* memory. For reads, if the requested address is not in cache, a fill request is 
* sent to hiarb with possibly an evict request. For writes, if the requested 
* address is not in cache, an evict request is sent to hiarb (assuming no 
* invalid entries in tag line) and then the PSN Cache Data is written.
*/
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000198)
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_RESETCSR						0x0000006000000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_RESERVED_63_40_SHIFT				40
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_RESERVED_63_40_MASK				0xFFFFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_RESERVED_63_40_SMASK				0xFFFFFF0000000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_BAD_ADDR_SHIFT					39
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_BAD_ADDR_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_BAD_ADDR_SMASK					0x8000000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_BUSY_SHIFT					38
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_BUSY_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_BUSY_SMASK					0x4000000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_CMD_SHIFT					34
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_CMD_MASK						0xFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_CMD_SMASK					0x3C00000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_ADDRESS_SHIFT					0
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_ADDRESS_MASK					0x3FFFFFFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL_ADDRESS_SMASK					0x3FFFFFFFFull
/*
* Table #45 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_PSN_CACHE_TAG_SEARCH_MASK
* This csr holds the address mask used for flushing/invalidating cache entries. 
* This csr must be written before writing a flush or invalidate command into 
* #%%#TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL#%%#.
*/
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_TAG_SEARCH_MASK						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000001A0)
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_TAG_SEARCH_MASK_RESETCSR					0x00000003FFFFFFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_TAG_SEARCH_MASK_RESERVED_63_34_SHIFT			34
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_TAG_SEARCH_MASK_RESERVED_63_34_MASK				0x3FFFFFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_TAG_SEARCH_MASK_RESERVED_63_34_SMASK			0xFFFFFFFC00000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_TAG_SEARCH_MASK_MASK_ADDRESS_SHIFT				0
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_TAG_SEARCH_MASK_MASK_ADDRESS_MASK				0x3FFFFFFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_TAG_SEARCH_MASK_MASK_ADDRESS_SMASK				0x3FFFFFFFFull
/*
* Table #46 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA
* This csr along with #%%#TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL#%%# is used to 
* read, write (warmup/teardown) the PSN Cache. See  #%%#TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL#%%# 
* for proper technique. .
*/
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000001A8)
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_CTRL_SHIFT					60
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_CTRL_MASK					0xFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_CTRL_SMASK					0xF000000000000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_MAX_SEQ_DIST_SHIFT				48
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_MAX_SEQ_DIST_MASK				0xFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_MAX_SEQ_DIST_SMASK				0xFFF000000000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_OLDEST_UNORDERED_SHIFT				32
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_OLDEST_UNORDERED_MASK				0xFFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_OLDEST_UNORDERED_SMASK				0xFFFF00000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_NEXT_SEQ_UNORDERED_SHIFT			16
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_NEXT_SEQ_UNORDERED_MASK				0xFFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_NEXT_SEQ_UNORDERED_SMASK			0xFFFF0000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_NEXT_SEQ_ORDERED_SHIFT				0
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_NEXT_SEQ_ORDERED_MASK				0xFFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_NEXT_SEQ_ORDERED_SMASK				0xFFFFull
/*
* Table #47 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE
* This CSR is used for masked bit writes to the PSN Cache. This CSR is only used 
* with CACHE_CMD_WR. If this CSR is all 1's, no read or fill is necessary. If 
* this CSR is not all 1's, a read-modify-write is required which may require a 
* fill from host memory. See  #%%#TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL#%%# for 
* proper technique.
*/
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE					(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000001B0)
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_RESETCSR				0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_CTRL_SHIFT				60
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_CTRL_MASK				0xFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_CTRL_SMASK				0xF000000000000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_MAX_SEQ_DIST_SHIFT			48
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_MAX_SEQ_DIST_MASK			0xFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_MAX_SEQ_DIST_SMASK			0xFFF000000000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_OLDEST_UNORDERED_SHIFT		32
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_OLDEST_UNORDERED_MASK		0xFFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_OLDEST_UNORDERED_SMASK		0xFFFF00000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_NEXT_SEQ_UNORDERED_SHIFT		16
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_NEXT_SEQ_UNORDERED_MASK		0xFFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_NEXT_SEQ_UNORDERED_SMASK		0xFFFF0000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_NEXT_SEQ_ORDERED_SHIFT		0
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_NEXT_SEQ_ORDERED_MASK		0xFFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_DATA_BIT_ENABLE_NEXT_SEQ_ORDERED_SMASK		0xFFFFull
/*
* Table #48 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG
* This is the psn cache tag data csr. This csr along with   is used to read, 
* write the PSN Cache Tag. See  #%%#TXOTR_PKT_CFG_PSN_CACHE_ACCESS_CTL#%%# for 
* proper technique. This layout is for one way. There are 16 of these regs for a 
* total of 16 ways.
*/
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000001B8)
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG_RESERVED_63_35_SHIFT				35
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG_RESERVED_63_35_MASK				0x1FFFFFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG_RESERVED_63_35_SMASK				0xFFFFFFF800000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG_TAG_WAY_VALID_SHIFT				34
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG_TAG_WAY_VALID_MASK				0x1ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG_TAG_WAY_VALID_SMASK				0x400000000ull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG_TAG_WAY_ADDR_SHIFT				0
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG_TAG_WAY_ADDR_MASK				0x3FFFFFFFFull
#define FXR_TXOTR_PKT_CFG_PSN_CACHE_ACCESS_TAG_TAG_WAY_ADDR_SMASK				0x3FFFFFFFFull
/*
* Table #49 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_RC_ORDERED_MAP
* This CSR contains the mapping of the packet Routing Control (rc[2:0]) field to 
* ordered needed for Packet Sequence Number (PSN) checking. This configuration 
* of this CSR must be identical to the configuration of #%%#Section 30.8.3.22, 
* 'Routing Control Ordered Mapping Configuration CSR'#%%# in the message CSRs. 
* 
*/
#define FXR_TXOTR_PKT_CFG_RC_ORDERED_MAP							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000240)
#define FXR_TXOTR_PKT_CFG_RC_ORDERED_MAP_RESETCSR						0x000000000000000Full
#define FXR_TXOTR_PKT_CFG_RC_ORDERED_MAP_RESERVED_63_8_SHIFT					8
#define FXR_TXOTR_PKT_CFG_RC_ORDERED_MAP_RESERVED_63_8_MASK					0xFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_RC_ORDERED_MAP_RESERVED_63_8_SMASK					0xFFFFFFFFFFFFFF00ull
#define FXR_TXOTR_PKT_CFG_RC_ORDERED_MAP_ORDERED_SHIFT						0
#define FXR_TXOTR_PKT_CFG_RC_ORDERED_MAP_ORDERED_MASK						0xFFull
#define FXR_TXOTR_PKT_CFG_RC_ORDERED_MAP_ORDERED_SMASK						0xFFull
/*
* Table #50 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_NACK_RETRAS_DISABLE
* This CSR disables NACK-based retransmission. 
*/
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000248)
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_RESETCSR						0x000000000000000Full
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_RESERVED_63_8_SHIFT				8
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_RESERVED_63_8_MASK				0xFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_RESERVED_63_8_SMASK				0xFFFFFFFFFFFFFF00ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_RESOURCE_TC3_SHIFT				7
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_RESOURCE_TC3_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_RESOURCE_TC3_SMASK				0x80ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_RESOURCE_TC2_SHIFT				6
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_RESOURCE_TC2_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_RESOURCE_TC2_SMASK				0x40ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_RESOURCE_TC1_SHIFT				5
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_RESOURCE_TC1_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_RESOURCE_TC1_SMASK				0x20ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_RESOURCE_TC0_SHIFT				4
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_RESOURCE_TC0_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_RESOURCE_TC0_SMASK				0x10ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_OOS_TC3_SHIFT					3
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_OOS_TC3_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_OOS_TC3_SMASK					0x8ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_OOS_TC2_SHIFT					2
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_OOS_TC2_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_OOS_TC2_SMASK					0x4ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_OOS_TC1_SHIFT					1
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_OOS_TC1_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_OOS_TC1_SMASK					0x2ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_OOS_TC0_SHIFT					0
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_OOS_TC0_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_NACK_RETRAS_DISABLE_OOS_TC0_SMASK					0x1ull
/*
* Table #51 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_LPSN_MAX_DIST
* This CSR contains the configuration parameters necessary to configure the 
* maximum distance between the oldest Local Packet Sequence Number and the 
* current Local Packet Sequence Number. When the distance between the oldest 
* LPSN and the current LPSN reaches #%%#max_dist#%%#, the MCTC corresponding to 
* the packet which detected the violation is stalled until the oldest LPSN is 
* updated and the distance is no longer violated.
*/
#define FXR_TXOTR_PKT_CFG_LPSN_MAX_DIST								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000258)
#define FXR_TXOTR_PKT_CFG_LPSN_MAX_DIST_RESETCSR						0x0000000000007F9Cull
#define FXR_TXOTR_PKT_CFG_LPSN_MAX_DIST_RESERVED_63_16_SHIFT					16
#define FXR_TXOTR_PKT_CFG_LPSN_MAX_DIST_RESERVED_63_16_MASK					0xFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_LPSN_MAX_DIST_RESERVED_63_16_SMASK					0xFFFFFFFFFFFF0000ull
#define FXR_TXOTR_PKT_CFG_LPSN_MAX_DIST_MAX_DIST_SHIFT						0
#define FXR_TXOTR_PKT_CFG_LPSN_MAX_DIST_MAX_DIST_MASK						0xFFFFull
#define FXR_TXOTR_PKT_CFG_LPSN_MAX_DIST_MAX_DIST_SMASK						0xFFFFull
/*
* Table #52 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_FORCE_MSG_TO_FPE
* This CSR is used to force Fast Path messages to the Fragmentation Programmable 
* Engine. This CSR must be configured identically to #%%#Section 30.8.3.15, 
* 'Force Message to Fragmentation Programmable Engine Configuration 
* CSR'#%%#.
*/
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000260)
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_RESERVED_63_15_SHIFT					15
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_RESERVED_63_15_MASK					0x1FFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_RESERVED_63_15_SMASK					0xFFFFFFFFFFFF8000ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_E2E_CTRL_SHIFT					14
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_E2E_CTRL_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_E2E_CTRL_SMASK					0x4000ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_CTS_SHIFT						13
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_CTS_MASK						0x1ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_CTS_SMASK						0x2000ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_BASIC_ACK_SHIFT					12
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_BASIC_ACK_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_BASIC_ACK_SMASK					0x1000ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_DMA_REPLY_SHIFT					11
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_DMA_REPLY_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_DMA_REPLY_SMASK					0x800ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_BUFF_REPLY_SHIFT					10
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_BUFF_REPLY_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_BUFF_REPLY_SMASK					0x400ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_STANDARD_ACK_SHIFT					9
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_STANDARD_ACK_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_STANDARD_ACK_SMASK					0x200ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_DMA_TWOOP_SHIFT					8
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_DMA_TWOOP_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_DMA_TWOOP_SMASK					0x100ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_DMA_FATOMIC_SHIFT					7
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_DMA_FATOMIC_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_DMA_FATOMIC_SMASK					0x80ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_BUFF_TWOOP_SHIFT					6
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_BUFF_TWOOP_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_BUFF_TWOOP_SMASK					0x40ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_BUFF_FATOMIC_SHIFT					5
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_BUFF_FATOMIC_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_BUFF_FATOMIC_SMASK					0x20ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_DMA_GET_SHIFT					4
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_DMA_GET_MASK						0x1ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_DMA_GET_SMASK					0x10ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_BUFF_PA_SHIFT					3
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_BUFF_PA_MASK						0x1ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_BUFF_PA_SMASK					0x8ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_DMA_PA_SHIFT						2
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_DMA_PA_MASK						0x1ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_DMA_PA_SMASK						0x4ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_RDV_EVENT_SHIFT					1
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_RDV_EVENT_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_RDV_EVENT_SMASK					0x2ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_RTS_SHIFT						0
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_RTS_MASK						0x1ull
#define FXR_TXOTR_PKT_CFG_FORCE_MSG_TO_FPE_RTS_SMASK						0x1ull
/*
* Table #53 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_ENTROPY
* This CSR is used to configure the entropy field inserted into packets 
* generated by OTR on a per TC basis.
*/
#define FXR_TXOTR_PKT_CFG_ENTROPY								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000268)
#define FXR_TXOTR_PKT_CFG_ENTROPY_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_ENTROPY_TC3_SHIFT							48
#define FXR_TXOTR_PKT_CFG_ENTROPY_TC3_MASK							0xFFFFull
#define FXR_TXOTR_PKT_CFG_ENTROPY_TC3_SMASK							0xFFFF000000000000ull
#define FXR_TXOTR_PKT_CFG_ENTROPY_TC2_SHIFT							32
#define FXR_TXOTR_PKT_CFG_ENTROPY_TC2_MASK							0xFFFFull
#define FXR_TXOTR_PKT_CFG_ENTROPY_TC2_SMASK							0xFFFF00000000ull
#define FXR_TXOTR_PKT_CFG_ENTROPY_TC1_SHIFT							16
#define FXR_TXOTR_PKT_CFG_ENTROPY_TC1_MASK							0xFFFFull
#define FXR_TXOTR_PKT_CFG_ENTROPY_TC1_SMASK							0xFFFF0000ull
#define FXR_TXOTR_PKT_CFG_ENTROPY_TC0_SHIFT							0
#define FXR_TXOTR_PKT_CFG_ENTROPY_TC0_MASK							0xFFFFull
#define FXR_TXOTR_PKT_CFG_ENTROPY_TC0_SMASK							0xFFFFull
/*
* Table #54 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_TC0
* This CSR is used to enable TC0 and configure the maximum number of bytes 
* allowed to be outstanding on this traffic class.
*/
#define FXR_TXOTR_PKT_CFG_TC0									(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000270)
#define FXR_TXOTR_PKT_CFG_TC0_RESETCSR								0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_TC0_ENABLE_SHIFT							63
#define FXR_TXOTR_PKT_CFG_TC0_ENABLE_MASK							0x1ull
#define FXR_TXOTR_PKT_CFG_TC0_ENABLE_SMASK							0x8000000000000000ull
#define FXR_TXOTR_PKT_CFG_TC0_MAX_BYTES_SHIFT							0
#define FXR_TXOTR_PKT_CFG_TC0_MAX_BYTES_MASK							0x7FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_TC0_MAX_BYTES_SMASK							0x7FFFFFFFFFFFFFFFull
/*
* Table #55 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_TC1
* This CSR is used to enable TC1 and configure the maximum number of bytes 
* allowed to be outstanding on this traffic class.
*/
#define FXR_TXOTR_PKT_CFG_TC1									(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000278)
#define FXR_TXOTR_PKT_CFG_TC1_RESETCSR								0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_TC1_ENABLE_SHIFT							63
#define FXR_TXOTR_PKT_CFG_TC1_ENABLE_MASK							0x1ull
#define FXR_TXOTR_PKT_CFG_TC1_ENABLE_SMASK							0x8000000000000000ull
#define FXR_TXOTR_PKT_CFG_TC1_MAX_BYTES_SHIFT							0
#define FXR_TXOTR_PKT_CFG_TC1_MAX_BYTES_MASK							0x7FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_TC1_MAX_BYTES_SMASK							0x7FFFFFFFFFFFFFFFull
/*
* Table #56 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_TC2
* This CSR is used to enable TC2 and configure the maximum number of bytes 
* allowed to be outstanding on this traffic class.
*/
#define FXR_TXOTR_PKT_CFG_TC2									(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000280)
#define FXR_TXOTR_PKT_CFG_TC2_RESETCSR								0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_TC2_ENABLE_SHIFT							63
#define FXR_TXOTR_PKT_CFG_TC2_ENABLE_MASK							0x1ull
#define FXR_TXOTR_PKT_CFG_TC2_ENABLE_SMASK							0x8000000000000000ull
#define FXR_TXOTR_PKT_CFG_TC2_MAX_BYTES_SHIFT							0
#define FXR_TXOTR_PKT_CFG_TC2_MAX_BYTES_MASK							0x7FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_TC2_MAX_BYTES_SMASK							0x7FFFFFFFFFFFFFFFull
/*
* Table #57 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_TC3
* This CSR is used to enable TC3 and configure the maximum number of bytes 
* allowed to be outstanding on this traffic class.
*/
#define FXR_TXOTR_PKT_CFG_TC3									(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000288)
#define FXR_TXOTR_PKT_CFG_TC3_RESETCSR								0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_TC3_ENABLE_SHIFT							63
#define FXR_TXOTR_PKT_CFG_TC3_ENABLE_MASK							0x1ull
#define FXR_TXOTR_PKT_CFG_TC3_ENABLE_SMASK							0x8000000000000000ull
#define FXR_TXOTR_PKT_CFG_TC3_MAX_BYTES_SHIFT							0
#define FXR_TXOTR_PKT_CFG_TC3_MAX_BYTES_MASK							0x7FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_TC3_MAX_BYTES_SMASK							0x7FFFFFFFFFFFFFFFull
/*
* Table #58 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_MLID_MASK
* This CSR contains the configuration values for MLID Mask.
*/
#define FXR_TXOTR_PKT_CFG_MLID_MASK								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000290)
#define FXR_TXOTR_PKT_CFG_MLID_MASK_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_MLID_MASK_RESERVED_63_7_SHIFT						7
#define FXR_TXOTR_PKT_CFG_MLID_MASK_RESERVED_63_7_MASK						0x1FFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_MLID_MASK_RESERVED_63_7_SMASK						0xFFFFFFFFFFFFFF80ull
#define FXR_TXOTR_PKT_CFG_MLID_MASK_MLID_MASK_16B_SHIFT						0
#define FXR_TXOTR_PKT_CFG_MLID_MASK_MLID_MASK_16B_MASK						0x7Full
#define FXR_TXOTR_PKT_CFG_MLID_MASK_MLID_MASK_16B_SMASK						0x7Full
/*
* Table #59 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_PKEY_8B
* This CSR contains the configuration PKEY value for 8B Headers
*/
#define FXR_TXOTR_PKT_CFG_PKEY_8B								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000298)
#define FXR_TXOTR_PKT_CFG_PKEY_8B_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_PKEY_8B_RESERVED_63_16_SHIFT						16
#define FXR_TXOTR_PKT_CFG_PKEY_8B_RESERVED_63_16_MASK						0xFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_PKEY_8B_RESERVED_63_16_SMASK						0xFFFFFFFFFFFF0000ull
#define FXR_TXOTR_PKT_CFG_PKEY_8B_MEMBERSHIP_SHIFT						15
#define FXR_TXOTR_PKT_CFG_PKEY_8B_MEMBERSHIP_MASK						0x1ull
#define FXR_TXOTR_PKT_CFG_PKEY_8B_MEMBERSHIP_SMASK						0x8000ull
#define FXR_TXOTR_PKT_CFG_PKEY_8B_PKEY_SHIFT							0
#define FXR_TXOTR_PKT_CFG_PKEY_8B_PKEY_MASK							0x7FFFull
#define FXR_TXOTR_PKT_CFG_PKEY_8B_PKEY_SMASK							0x7FFFull
/*
* Table #60 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_MTU
* This CSR contains the configuration MTU value for the packet Partition. Values 
* in this CSR should be configured to be greater than or equal to the RFS (on a 
* per MC0/TC basis), as configured in #%%#Section 30.8.3.17, 'Rendezvous 
* Fragment Size Configuration CSR'#%%#.
*/
#define FXR_TXOTR_PKT_CFG_MTU									(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000002A0)
#define FXR_TXOTR_PKT_CFG_MTU_RESETCSR								0x0000000000006666ull
#define FXR_TXOTR_PKT_CFG_MTU_RESERVED_63_15_SHIFT						15
#define FXR_TXOTR_PKT_CFG_MTU_RESERVED_63_15_MASK						0x1FFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_MTU_RESERVED_63_15_SMASK						0xFFFFFFFFFFFF8000ull
#define FXR_TXOTR_PKT_CFG_MTU_TC3_SHIFT								12
#define FXR_TXOTR_PKT_CFG_MTU_TC3_MASK								0x7ull
#define FXR_TXOTR_PKT_CFG_MTU_TC3_SMASK								0x7000ull
#define FXR_TXOTR_PKT_CFG_MTU_RESERVED_11_SHIFT							11
#define FXR_TXOTR_PKT_CFG_MTU_RESERVED_11_MASK							0x1ull
#define FXR_TXOTR_PKT_CFG_MTU_RESERVED_11_SMASK							0x800ull
#define FXR_TXOTR_PKT_CFG_MTU_TC2_SHIFT								8
#define FXR_TXOTR_PKT_CFG_MTU_TC2_MASK								0x7ull
#define FXR_TXOTR_PKT_CFG_MTU_TC2_SMASK								0x700ull
#define FXR_TXOTR_PKT_CFG_MTU_RESERVED_7_SHIFT							7
#define FXR_TXOTR_PKT_CFG_MTU_RESERVED_7_MASK							0x1ull
#define FXR_TXOTR_PKT_CFG_MTU_RESERVED_7_SMASK							0x80ull
#define FXR_TXOTR_PKT_CFG_MTU_TC1_SHIFT								4
#define FXR_TXOTR_PKT_CFG_MTU_TC1_MASK								0x7ull
#define FXR_TXOTR_PKT_CFG_MTU_TC1_SMASK								0x70ull
#define FXR_TXOTR_PKT_CFG_MTU_RESERVED_3_SHIFT							3
#define FXR_TXOTR_PKT_CFG_MTU_RESERVED_3_MASK							0x1ull
#define FXR_TXOTR_PKT_CFG_MTU_RESERVED_3_SMASK							0x8ull
#define FXR_TXOTR_PKT_CFG_MTU_TC0_SHIFT								0
#define FXR_TXOTR_PKT_CFG_MTU_TC0_MASK								0x7ull
#define FXR_TXOTR_PKT_CFG_MTU_TC0_SMASK								0x7ull
/*
* Table #61 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_PKEY_CHECK_DISABLE
* This Configuration CSR can be used to disable the PKEY check.
*/
#define FXR_TXOTR_PKT_PKEY_CHECK_DISABLE							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000002A8)
#define FXR_TXOTR_PKT_PKEY_CHECK_DISABLE_RESETCSR						0x0000000000000001ull
#define FXR_TXOTR_PKT_PKEY_CHECK_DISABLE_RESERVED_63_1_SHIFT					1
#define FXR_TXOTR_PKT_PKEY_CHECK_DISABLE_RESERVED_63_1_MASK					0x7FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_PKEY_CHECK_DISABLE_RESERVED_63_1_SMASK					0xFFFFFFFFFFFFFFFEull
#define FXR_TXOTR_PKT_PKEY_CHECK_DISABLE_PKEY_CHECK_DISABLE_SHIFT				0
#define FXR_TXOTR_PKT_PKEY_CHECK_DISABLE_PKEY_CHECK_DISABLE_MASK				0x1ull
#define FXR_TXOTR_PKT_PKEY_CHECK_DISABLE_PKEY_CHECK_DISABLE_SMASK				0x1ull
/*
* Table #62 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_PTL_PKEY_TABLE
* This CSR contains the configuration PKEY value
*/
#define FXR_TXOTR_PKT_CFG_PTL_PKEY_TABLE							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000300)
#define FXR_TXOTR_PKT_CFG_PTL_PKEY_TABLE_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_PTL_PKEY_TABLE_RESERVED_63_16_SHIFT					16
#define FXR_TXOTR_PKT_CFG_PTL_PKEY_TABLE_RESERVED_63_16_MASK					0xFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_PTL_PKEY_TABLE_RESERVED_63_16_SMASK					0xFFFFFFFFFFFF0000ull
#define FXR_TXOTR_PKT_CFG_PTL_PKEY_TABLE_MEMBERSHIP_SHIFT					15
#define FXR_TXOTR_PKT_CFG_PTL_PKEY_TABLE_MEMBERSHIP_MASK					0x1ull
#define FXR_TXOTR_PKT_CFG_PTL_PKEY_TABLE_MEMBERSHIP_SMASK					0x8000ull
#define FXR_TXOTR_PKT_CFG_PTL_PKEY_TABLE_PKEY_SHIFT						0
#define FXR_TXOTR_PKT_CFG_PTL_PKEY_TABLE_PKEY_MASK						0x7FFFull
#define FXR_TXOTR_PKT_CFG_PTL_PKEY_TABLE_PKEY_SMASK						0x7FFFull
/*
* Table #63 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_CFG_PSN_BASE_ADDR_P0_TC
* Host memory base addresses of psn state (both RX and TX) per tc/ptl_pkey_idx. 
* For a given tc/ptl_pkey_idx pair, the corresponding register address is 8 * (4 
* * ptl_pkey_idx + tc).
*/
#define FXR_TXOTR_PKT_CFG_PSN_BASE_ADDR_P0_TC							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000000800)
#define FXR_TXOTR_PKT_CFG_PSN_BASE_ADDR_P0_TC_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_CFG_PSN_BASE_ADDR_P0_TC_RESERVED_63_57_SHIFT				57
#define FXR_TXOTR_PKT_CFG_PSN_BASE_ADDR_P0_TC_RESERVED_63_57_MASK				0x7Full
#define FXR_TXOTR_PKT_CFG_PSN_BASE_ADDR_P0_TC_RESERVED_63_57_SMASK				0xFE00000000000000ull
#define FXR_TXOTR_PKT_CFG_PSN_BASE_ADDR_P0_TC_ADDRESS_SHIFT					12
#define FXR_TXOTR_PKT_CFG_PSN_BASE_ADDR_P0_TC_ADDRESS_MASK					0x1FFFFFFFFFFFull
#define FXR_TXOTR_PKT_CFG_PSN_BASE_ADDR_P0_TC_ADDRESS_SMASK					0x1FFFFFFFFFFF000ull
#define FXR_TXOTR_PKT_CFG_PSN_BASE_ADDR_P0_TC_RESERVED_11_0_SHIFT				0
#define FXR_TXOTR_PKT_CFG_PSN_BASE_ADDR_P0_TC_RESERVED_11_0_MASK				0xFFFull
#define FXR_TXOTR_PKT_CFG_PSN_BASE_ADDR_P0_TC_RESERVED_11_0_SMASK				0xFFFull
/*
* Table #64 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_STS_0
* This is the Error Status CSR. Bits are set by hardware or by writing to the 
* #%%#TXOTR_PKT_ERR_FRC_0#%%# CSR. Bits are cleared by writing to the 
* #%%#TXOTR_PKT_ERR_CLR_0#%%# CSR.
*/
#define FXR_TXOTR_PKT_ERR_STS_0									(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002000)
#define FXR_TXOTR_PKT_ERR_STS_0_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_RESERVED_63_62_SHIFT						62
#define FXR_TXOTR_PKT_ERR_STS_0_RESERVED_63_62_MASK						0x3ull
#define FXR_TXOTR_PKT_ERR_STS_0_RESERVED_63_62_SMASK						0xC000000000000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_HASH_TABLE_MBE_SHIFT						61
#define FXR_TXOTR_PKT_ERR_STS_0_HASH_TABLE_MBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_HASH_TABLE_MBE_SMASK						0x2000000000000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_RX_UPDATE_FIFO_OVERFLOW_SHIFT					60
#define FXR_TXOTR_PKT_ERR_STS_0_RX_UPDATE_FIFO_OVERFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_RX_UPDATE_FIFO_OVERFLOW_SMASK					0x1000000000000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_RX_UPDATE_FIFO_UNDFLOW_SHIFT					59
#define FXR_TXOTR_PKT_ERR_STS_0_RX_UPDATE_FIFO_UNDFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_RX_UPDATE_FIFO_UNDFLOW_SMASK					0x800000000000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_TX_NEW_LS_TAIL_WEN_FIFO_OVERFLOW_SHIFT				58
#define FXR_TXOTR_PKT_ERR_STS_0_TX_NEW_LS_TAIL_WEN_FIFO_OVERFLOW_MASK				0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_TX_NEW_LS_TAIL_WEN_FIFO_OVERFLOW_SMASK				0x400000000000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_TX_NEW_LS_TAIL_WEN_FIFO_UNDFLOW_SHIFT				57
#define FXR_TXOTR_PKT_ERR_STS_0_TX_NEW_LS_TAIL_WEN_FIFO_UNDFLOW_MASK				0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_TX_NEW_LS_TAIL_WEN_FIFO_UNDFLOW_SMASK				0x200000000000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_PKTID_LIST_SBE_SHIFT						56
#define FXR_TXOTR_PKT_ERR_STS_0_PKTID_LIST_SBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_PKTID_LIST_SBE_SMASK						0x100000000000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_PKTID_LIST_MBE_SHIFT						55
#define FXR_TXOTR_PKT_ERR_STS_0_PKTID_LIST_MBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_PKTID_LIST_MBE_SMASK						0x80000000000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_OPB_SBE_SHIFT							54
#define FXR_TXOTR_PKT_ERR_STS_0_OPB_SBE_MASK							0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_OPB_SBE_SMASK							0x40000000000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_OPB_MBE_SHIFT							53
#define FXR_TXOTR_PKT_ERR_STS_0_OPB_MBE_MASK							0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_OPB_MBE_SMASK							0x20000000000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_OTM_SBE_SHIFT							52
#define FXR_TXOTR_PKT_ERR_STS_0_OTM_SBE_MASK							0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_OTM_SBE_SMASK							0x10000000000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_OTM_MBE_SHIFT							51
#define FXR_TXOTR_PKT_ERR_STS_0_OTM_MBE_MASK							0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_OTM_MBE_SMASK							0x8000000000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_IOVEC_BUFF_SBE_SHIFT						50
#define FXR_TXOTR_PKT_ERR_STS_0_IOVEC_BUFF_SBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_IOVEC_BUFF_SBE_SMASK						0x4000000000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_IOVEC_BUFF_MBE_SHIFT						49
#define FXR_TXOTR_PKT_ERR_STS_0_IOVEC_BUFF_MBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_IOVEC_BUFF_MBE_SMASK						0x2000000000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_PSN_HI_RD_REQ_OVERFLOW_SHIFT					48
#define FXR_TXOTR_PKT_ERR_STS_0_PSN_HI_RD_REQ_OVERFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_PSN_HI_RD_REQ_OVERFLOW_SMASK					0x1000000000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_PSN_HI_RD_REQ_UNDFLOW_SHIFT					47
#define FXR_TXOTR_PKT_ERR_STS_0_PSN_HI_RD_REQ_UNDFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_PSN_HI_RD_REQ_UNDFLOW_SMASK					0x800000000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_FPE_HI_RD_REQ_OVERFLOW_SHIFT					46
#define FXR_TXOTR_PKT_ERR_STS_0_FPE_HI_RD_REQ_OVERFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_FPE_HI_RD_REQ_OVERFLOW_SMASK					0x400000000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_FPE_HI_RD_REQ_UNDFLOW_SHIFT					45
#define FXR_TXOTR_PKT_ERR_STS_0_FPE_HI_RD_REQ_UNDFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_FPE_HI_RD_REQ_UNDFLOW_SMASK					0x200000000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_RX_PSN_FIFO_OVERFLOW_SHIFT					44
#define FXR_TXOTR_PKT_ERR_STS_0_RX_PSN_FIFO_OVERFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_RX_PSN_FIFO_OVERFLOW_SMASK					0x100000000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_RX_PSN_FIFO_UNDFLOW_SHIFT					43
#define FXR_TXOTR_PKT_ERR_STS_0_RX_PSN_FIFO_UNDFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_RX_PSN_FIFO_UNDFLOW_SMASK					0x80000000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_TX_PSN_FIFO_OVRFLOW_SHIFT					42
#define FXR_TXOTR_PKT_ERR_STS_0_TX_PSN_FIFO_OVRFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_TX_PSN_FIFO_OVRFLOW_SMASK					0x40000000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_TX_PSN_FIFO_UNDFLOW_SHIFT					41
#define FXR_TXOTR_PKT_ERR_STS_0_TX_PSN_FIFO_UNDFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_TX_PSN_FIFO_UNDFLOW_SMASK					0x20000000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_TX_PSN_FIFO_SBE_SHIFT						40
#define FXR_TXOTR_PKT_ERR_STS_0_TX_PSN_FIFO_SBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_TX_PSN_FIFO_SBE_SMASK						0x10000000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_TX_PSN_FIFO_MBE_SHIFT						39
#define FXR_TXOTR_PKT_ERR_STS_0_TX_PSN_FIFO_MBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_TX_PSN_FIFO_MBE_SMASK						0x8000000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_PSN_WORK_FIFO_OVERFLOW_SHIFT					38
#define FXR_TXOTR_PKT_ERR_STS_0_PSN_WORK_FIFO_OVERFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_PSN_WORK_FIFO_OVERFLOW_SMASK					0x4000000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_PSN_WORK_FIFO_UNDFLOW_SHIFT					37
#define FXR_TXOTR_PKT_ERR_STS_0_PSN_WORK_FIFO_UNDFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_PSN_WORK_FIFO_UNDFLOW_SMASK					0x2000000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_RX_PSN_HOLD_FIFO_OVERFLOW_SHIFT					36
#define FXR_TXOTR_PKT_ERR_STS_0_RX_PSN_HOLD_FIFO_OVERFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_RX_PSN_HOLD_FIFO_OVERFLOW_SMASK					0x1000000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_RX_PSN_HOLD_FIFO_UNDFLOW_SHIFT					35
#define FXR_TXOTR_PKT_ERR_STS_0_RX_PSN_HOLD_FIFO_UNDFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_RX_PSN_HOLD_FIFO_UNDFLOW_SMASK					0x800000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_TX_PSN_HOLD_FIFO_OVERFLOW_SHIFT					34
#define FXR_TXOTR_PKT_ERR_STS_0_TX_PSN_HOLD_FIFO_OVERFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_TX_PSN_HOLD_FIFO_OVERFLOW_SMASK					0x400000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_TX_PSN_HOLD_FIFO_UNDFLOW_SHIFT					33
#define FXR_TXOTR_PKT_ERR_STS_0_TX_PSN_HOLD_FIFO_UNDFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_TX_PSN_HOLD_FIFO_UNDFLOW_SMASK					0x200000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_MC1P_PKTID_LIST_FIFO_OVERFLOW_SHIFT				32
#define FXR_TXOTR_PKT_ERR_STS_0_MC1P_PKTID_LIST_FIFO_OVERFLOW_MASK				0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_MC1P_PKTID_LIST_FIFO_OVERFLOW_SMASK				0x100000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_MC1P_PKTID_LIST_FIFO_UNDFLOW_SHIFT				31
#define FXR_TXOTR_PKT_ERR_STS_0_MC1P_PKTID_LIST_FIFO_UNDFLOW_MASK				0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_MC1P_PKTID_LIST_FIFO_UNDFLOW_SMASK				0x80000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_PKT_DONE_OVERFLOW_SHIFT						30
#define FXR_TXOTR_PKT_ERR_STS_0_PKT_DONE_OVERFLOW_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_PKT_DONE_OVERFLOW_SMASK						0x40000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_PKT_DONE_UNDFLOW_SHIFT						29
#define FXR_TXOTR_PKT_ERR_STS_0_PKT_DONE_UNDFLOW_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_PKT_DONE_UNDFLOW_SMASK						0x20000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_OPB_PKT_STS_FIFO_OVERFLOW_SHIFT					28
#define FXR_TXOTR_PKT_ERR_STS_0_OPB_PKT_STS_FIFO_OVERFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_OPB_PKT_STS_FIFO_OVERFLOW_SMASK					0x10000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_OPB_PKT_STS_FIFO_UNDFLOW_SHIFT					27
#define FXR_TXOTR_PKT_ERR_STS_0_OPB_PKT_STS_FIFO_UNDFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_OPB_PKT_STS_FIFO_UNDFLOW_SMASK					0x8000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_OPB_HANDLE_FIFO_OVERFLOW_SHIFT					26
#define FXR_TXOTR_PKT_ERR_STS_0_OPB_HANDLE_FIFO_OVERFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_OPB_HANDLE_FIFO_OVERFLOW_SMASK					0x4000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_OPB_HANDLE_FIFO_UNDFLOW_SHIFT					25
#define FXR_TXOTR_PKT_ERR_STS_0_OPB_HANDLE_FIFO_UNDFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_OPB_HANDLE_FIFO_UNDFLOW_SMASK					0x2000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_OPB_STATE_FIFO_OVERFLOW_SHIFT					24
#define FXR_TXOTR_PKT_ERR_STS_0_OPB_STATE_FIFO_OVERFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_OPB_STATE_FIFO_OVERFLOW_SMASK					0x1000000ull
#define FXR_TXOTR_PKT_ERR_STS_0_OPB_STATE_FIFO_UNDFLOW_SHIFT					23
#define FXR_TXOTR_PKT_ERR_STS_0_OPB_STATE_FIFO_UNDFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_OPB_STATE_FIFO_UNDFLOW_SMASK					0x800000ull
#define FXR_TXOTR_PKT_ERR_STS_0_RX_RSP_FIFO_OVERFLOW_SHIFT					22
#define FXR_TXOTR_PKT_ERR_STS_0_RX_RSP_FIFO_OVERFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_RX_RSP_FIFO_OVERFLOW_SMASK					0x400000ull
#define FXR_TXOTR_PKT_ERR_STS_0_RX_RSP_FIFO_UNDFLOW_SHIFT					21
#define FXR_TXOTR_PKT_ERR_STS_0_RX_RSP_FIFO_UNDFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_RX_RSP_FIFO_UNDFLOW_SMASK					0x200000ull
#define FXR_TXOTR_PKT_ERR_STS_0_RX_RSP_FIFO_SBE_SHIFT						20
#define FXR_TXOTR_PKT_ERR_STS_0_RX_RSP_FIFO_SBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_RX_RSP_FIFO_SBE_SMASK						0x100000ull
#define FXR_TXOTR_PKT_ERR_STS_0_RX_RSP_FIFO_MBE_SHIFT						19
#define FXR_TXOTR_PKT_ERR_STS_0_RX_RSP_FIFO_MBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_RX_RSP_FIFO_MBE_SMASK						0x80000ull
#define FXR_TXOTR_PKT_ERR_STS_0_POST_FRAG_FIFO_OVRFLOW_SHIFT					18
#define FXR_TXOTR_PKT_ERR_STS_0_POST_FRAG_FIFO_OVRFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_POST_FRAG_FIFO_OVRFLOW_SMASK					0x40000ull
#define FXR_TXOTR_PKT_ERR_STS_0_POST_FRAG_FIFO_UNDFLOW_SHIFT					17
#define FXR_TXOTR_PKT_ERR_STS_0_POST_FRAG_FIFO_UNDFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_POST_FRAG_FIFO_UNDFLOW_SMASK					0x20000ull
#define FXR_TXOTR_PKT_ERR_STS_0_POST_FRAG_FIFO_SBE_SHIFT					16
#define FXR_TXOTR_PKT_ERR_STS_0_POST_FRAG_FIFO_SBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_POST_FRAG_FIFO_SBE_SMASK					0x10000ull
#define FXR_TXOTR_PKT_ERR_STS_0_POST_FRAG_FIFO_MBE_SHIFT					15
#define FXR_TXOTR_PKT_ERR_STS_0_POST_FRAG_FIFO_MBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_POST_FRAG_FIFO_MBE_SMASK					0x8000ull
#define FXR_TXOTR_PKT_ERR_STS_0_PRE_FRAG_FIFO_OVRFLOW_SHIFT					14
#define FXR_TXOTR_PKT_ERR_STS_0_PRE_FRAG_FIFO_OVRFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_PRE_FRAG_FIFO_OVRFLOW_SMASK					0x4000ull
#define FXR_TXOTR_PKT_ERR_STS_0_PRE_FRAG_FIFO_UNDFLOW_SHIFT					13
#define FXR_TXOTR_PKT_ERR_STS_0_PRE_FRAG_FIFO_UNDFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_PRE_FRAG_FIFO_UNDFLOW_SMASK					0x2000ull
#define FXR_TXOTR_PKT_ERR_STS_0_PRE_FRAG_FIFO_SBE_SHIFT						12
#define FXR_TXOTR_PKT_ERR_STS_0_PRE_FRAG_FIFO_SBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_PRE_FRAG_FIFO_SBE_SMASK						0x1000ull
#define FXR_TXOTR_PKT_ERR_STS_0_PRE_FRAG_FIFO_MBE_SHIFT						11
#define FXR_TXOTR_PKT_ERR_STS_0_PRE_FRAG_FIFO_MBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_PRE_FRAG_FIFO_MBE_SMASK						0x800ull
#define FXR_TXOTR_PKT_ERR_STS_0_RETRANS_FIFO_OVRFLOW_SHIFT					10
#define FXR_TXOTR_PKT_ERR_STS_0_RETRANS_FIFO_OVRFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_RETRANS_FIFO_OVRFLOW_SMASK					0x400ull
#define FXR_TXOTR_PKT_ERR_STS_0_RETRANS_FIFO_UNDFLOW_SHIFT					9
#define FXR_TXOTR_PKT_ERR_STS_0_RETRANS_FIFO_UNDFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_RETRANS_FIFO_UNDFLOW_SMASK					0x200ull
#define FXR_TXOTR_PKT_ERR_STS_0_RETRANS_FIFO_SBE_SHIFT						8
#define FXR_TXOTR_PKT_ERR_STS_0_RETRANS_FIFO_SBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_RETRANS_FIFO_SBE_SMASK						0x100ull
#define FXR_TXOTR_PKT_ERR_STS_0_RETRANS_FIFO_MBE_SHIFT						7
#define FXR_TXOTR_PKT_ERR_STS_0_RETRANS_FIFO_MBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_RETRANS_FIFO_MBE_SMASK						0x80ull
#define FXR_TXOTR_PKT_ERR_STS_0_FP_FIFO_OVRFLOW_SHIFT						6
#define FXR_TXOTR_PKT_ERR_STS_0_FP_FIFO_OVRFLOW_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_FP_FIFO_OVRFLOW_SMASK						0x40ull
#define FXR_TXOTR_PKT_ERR_STS_0_FP_FIFO_UNDFLOW_SHIFT						5
#define FXR_TXOTR_PKT_ERR_STS_0_FP_FIFO_UNDFLOW_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_FP_FIFO_UNDFLOW_SMASK						0x20ull
#define FXR_TXOTR_PKT_ERR_STS_0_FP_FIFO_SBE_SHIFT						4
#define FXR_TXOTR_PKT_ERR_STS_0_FP_FIFO_SBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_FP_FIFO_SBE_SMASK						0x10ull
#define FXR_TXOTR_PKT_ERR_STS_0_FP_FIFO_MBE_SHIFT						3
#define FXR_TXOTR_PKT_ERR_STS_0_FP_FIFO_MBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_FP_FIFO_MBE_SMASK						0x8ull
#define FXR_TXOTR_PKT_ERR_STS_0_CMD_LEN_ERR_SHIFT						2
#define FXR_TXOTR_PKT_ERR_STS_0_CMD_LEN_ERR_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_CMD_LEN_ERR_SMASK						0x4ull
#define FXR_TXOTR_PKT_ERR_STS_0_INVALID_MSG_LEN_ERR_SHIFT					1
#define FXR_TXOTR_PKT_ERR_STS_0_INVALID_MSG_LEN_ERR_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_INVALID_MSG_LEN_ERR_SMASK					0x2ull
#define FXR_TXOTR_PKT_ERR_STS_0_DLID_CHECK_ERR_SHIFT						0
#define FXR_TXOTR_PKT_ERR_STS_0_DLID_CHECK_ERR_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_0_DLID_CHECK_ERR_SMASK						0x1ull
/*
* Table #65 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_CLR_0
* This is the Error Clear CSR. Writing a 1 to a valid bit will clear the 
* corresponding bit in the #%%#TXOTR_PKT_ERR_STS_0#%%# CSR.
*/
#define FXR_TXOTR_PKT_ERR_CLR_0									(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002008)
#define FXR_TXOTR_PKT_ERR_CLR_0_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_CLR_0_RESERVED_63_62_SHIFT						62
#define FXR_TXOTR_PKT_ERR_CLR_0_RESERVED_63_62_MASK						0x3ull
#define FXR_TXOTR_PKT_ERR_CLR_0_RESERVED_63_62_SMASK						0xC000000000000000ull
#define FXR_TXOTR_PKT_ERR_CLR_0_EVENTS_SHIFT							0
#define FXR_TXOTR_PKT_ERR_CLR_0_EVENTS_MASK							0x3FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_CLR_0_EVENTS_SMASK							0x3FFFFFFFFFFFFFFFull
/*
* Table #66 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_FRC_0
* This is the Error Force CSR. Writing a 1 to a valid bit will set the 
* corresponding bit in the #%%#TXOTR_PKT_ERR_STS_0#%%# CSR.
*/
#define FXR_TXOTR_PKT_ERR_FRC_0									(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002010)
#define FXR_TXOTR_PKT_ERR_FRC_0_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_FRC_0_RESERVED_63_62_SHIFT						62
#define FXR_TXOTR_PKT_ERR_FRC_0_RESERVED_63_62_MASK						0x3ull
#define FXR_TXOTR_PKT_ERR_FRC_0_RESERVED_63_62_SMASK						0xC000000000000000ull
#define FXR_TXOTR_PKT_ERR_FRC_0_EVENTS_SHIFT							0
#define FXR_TXOTR_PKT_ERR_FRC_0_EVENTS_MASK							0x3FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_FRC_0_EVENTS_SMASK							0x3FFFFFFFFFFFFFFFull
/*
* Table #67 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_EN_HOST_0
* This is the Error Enable CSR for the Host Interrupt. If a bit is set, the 
* corresponding error bit in #%%#TXOTR_PKT_ERR_STS_0#%%# CSR causes an interrupt 
* on the HOST interrupt signal.
*/
#define FXR_TXOTR_PKT_ERR_EN_HOST_0								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002018)
#define FXR_TXOTR_PKT_ERR_EN_HOST_0_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_EN_HOST_0_RESERVED_63_62_SHIFT					62
#define FXR_TXOTR_PKT_ERR_EN_HOST_0_RESERVED_63_62_MASK						0x3ull
#define FXR_TXOTR_PKT_ERR_EN_HOST_0_RESERVED_63_62_SMASK					0xC000000000000000ull
#define FXR_TXOTR_PKT_ERR_EN_HOST_0_EVENTS_SHIFT						0
#define FXR_TXOTR_PKT_ERR_EN_HOST_0_EVENTS_MASK							0x3FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_EN_HOST_0_EVENTS_SMASK						0x3FFFFFFFFFFFFFFFull
/*
* Table #68 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_FIRST_HOST_0
* This is the First Error CSR for the Host Interrupt. When this CSR is clear, it 
* captures the next #%%#TXOTR_PKT_ERR_STS_0#%%# CSR value when a new HOST 
* interrupt occurs.
*/
#define FXR_TXOTR_PKT_ERR_FIRST_HOST_0								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002020)
#define FXR_TXOTR_PKT_ERR_FIRST_HOST_0_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_FIRST_HOST_0_RESERVED_63_62_SHIFT					62
#define FXR_TXOTR_PKT_ERR_FIRST_HOST_0_RESERVED_63_62_MASK					0x3ull
#define FXR_TXOTR_PKT_ERR_FIRST_HOST_0_RESERVED_63_62_SMASK					0xC000000000000000ull
#define FXR_TXOTR_PKT_ERR_FIRST_HOST_0_EVENTS_SHIFT						0
#define FXR_TXOTR_PKT_ERR_FIRST_HOST_0_EVENTS_MASK						0x3FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_FIRST_HOST_0_EVENTS_SMASK						0x3FFFFFFFFFFFFFFFull
/*
* Table #69 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_EN_BMC_0
* This is the Error Enable CSR for the Quarantine Interrupt. If a bit is set, 
* the corresponding error bit in #%%#TXOTR_PKT_ERR_STS_0#%%# CSR causes an 
* interrupt on the QUAR interrupt signal.
*/
#define FXR_TXOTR_PKT_ERR_EN_BMC_0								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002028)
#define FXR_TXOTR_PKT_ERR_EN_BMC_0_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_EN_BMC_0_RESERVED_63_62_SHIFT						62
#define FXR_TXOTR_PKT_ERR_EN_BMC_0_RESERVED_63_62_MASK						0x3ull
#define FXR_TXOTR_PKT_ERR_EN_BMC_0_RESERVED_63_62_SMASK						0xC000000000000000ull
#define FXR_TXOTR_PKT_ERR_EN_BMC_0_EVENTS_SHIFT							0
#define FXR_TXOTR_PKT_ERR_EN_BMC_0_EVENTS_MASK							0x3FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_EN_BMC_0_EVENTS_SMASK							0x3FFFFFFFFFFFFFFFull
/*
* Table #70 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_FIRST_BMC_0
* This is the First Error CSR for the BMC Interrupt. When this CSR is clear, it 
* captures the next #%%#TXOTR_PKT_ERR_STS_0#%%# CSR value when a new BMC 
* interrupt occurs.
*/
#define FXR_TXOTR_PKT_ERR_FIRST_BMC_0								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002030)
#define FXR_TXOTR_PKT_ERR_FIRST_BMC_0_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_FIRST_BMC_0_RESERVED_63_62_SHIFT					62
#define FXR_TXOTR_PKT_ERR_FIRST_BMC_0_RESERVED_63_62_MASK					0x3ull
#define FXR_TXOTR_PKT_ERR_FIRST_BMC_0_RESERVED_63_62_SMASK					0xC000000000000000ull
#define FXR_TXOTR_PKT_ERR_FIRST_BMC_0_EVENTS_SHIFT						0
#define FXR_TXOTR_PKT_ERR_FIRST_BMC_0_EVENTS_MASK						0x3FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_FIRST_BMC_0_EVENTS_SMASK						0x3FFFFFFFFFFFFFFFull
/*
* Table #71 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_EN_QUAR_0
* This is the Error Enable CSR for the BMC Interrupt. If a bit is set, the 
* corresponding error bit in #%%#TXOTR_PKT_ERR_STS_0#%%# CSR causes an interrupt 
* on the BMC interrupt signal.
*/
#define FXR_TXOTR_PKT_ERR_EN_QUAR_0								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002038)
#define FXR_TXOTR_PKT_ERR_EN_QUAR_0_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_EN_QUAR_0_RESERVED_63_62_SHIFT					62
#define FXR_TXOTR_PKT_ERR_EN_QUAR_0_RESERVED_63_62_MASK						0x3ull
#define FXR_TXOTR_PKT_ERR_EN_QUAR_0_RESERVED_63_62_SMASK					0xC000000000000000ull
#define FXR_TXOTR_PKT_ERR_EN_QUAR_0_EVENTS_SHIFT						0
#define FXR_TXOTR_PKT_ERR_EN_QUAR_0_EVENTS_MASK							0x3FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_EN_QUAR_0_EVENTS_SMASK						0x3FFFFFFFFFFFFFFFull
/*
* Table #72 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_FIRST_QUAR_0
* This is the First Error CSR for the Quarantine Interrupt. When this CSR is 
* clear, it captures the next #%%#TXOTR_PKT_ERR_STS_0#%%# CSR value when a new 
* QUAR interrupt occurs.
*/
#define FXR_TXOTR_PKT_ERR_FIRST_QUAR_0								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002040)
#define FXR_TXOTR_PKT_ERR_FIRST_QUAR_0_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_FIRST_QUAR_0_RESERVED_63_62_SHIFT					62
#define FXR_TXOTR_PKT_ERR_FIRST_QUAR_0_RESERVED_63_62_MASK					0x3ull
#define FXR_TXOTR_PKT_ERR_FIRST_QUAR_0_RESERVED_63_62_SMASK					0xC000000000000000ull
#define FXR_TXOTR_PKT_ERR_FIRST_QUAR_0_EVENTS_SHIFT						0
#define FXR_TXOTR_PKT_ERR_FIRST_QUAR_0_EVENTS_MASK						0x3FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_FIRST_QUAR_0_EVENTS_SMASK						0x3FFFFFFFFFFFFFFFull
/*
* Table #73 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_STS_1
* This is the Error Status CSR. Bits are set by hardware or by writing to the 
* #%%#TXOTR_PKT_ERR_STS_1#%%# CSR. Bits are cleared by writing to the 
* #%%#TXOTR_PKT_ERR_CLR_1#%%# CSR.
*/
#define FXR_TXOTR_PKT_ERR_STS_1									(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002100)
#define FXR_TXOTR_PKT_ERR_STS_1_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_RESERVED_63_44_SHIFT						44
#define FXR_TXOTR_PKT_ERR_STS_1_RESERVED_63_44_MASK						0xFFFFFull
#define FXR_TXOTR_PKT_ERR_STS_1_RESERVED_63_44_SMASK						0xFFFFF00000000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_ABOUT_TO_TIMEOUT_SHIFT						43
#define FXR_TXOTR_PKT_ERR_STS_1_ABOUT_TO_TIMEOUT_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_ABOUT_TO_TIMEOUT_SMASK						0x80000000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_RX_PKT_STATUS_SHIFT						42
#define FXR_TXOTR_PKT_ERR_STS_1_RX_PKT_STATUS_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_RX_PKT_STATUS_SMASK						0x40000000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_MAX_MTU_VIO_SHIFT						41
#define FXR_TXOTR_PKT_ERR_STS_1_MAX_MTU_VIO_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_MAX_MTU_VIO_SMASK						0x20000000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_STATE_FIFO_OVERFLOW_SHIFT					40
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_STATE_FIFO_OVERFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_STATE_FIFO_OVERFLOW_SMASK					0x10000000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_STATE_FIFO_UNDFLOW_SHIFT					39
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_STATE_FIFO_UNDFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_STATE_FIFO_UNDFLOW_SMASK					0x8000000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_PKTID_LIST_REN_FIFO_OVERFLOW_SHIFT				38
#define FXR_TXOTR_PKT_ERR_STS_1_PKTID_LIST_REN_FIFO_OVERFLOW_MASK				0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_PKTID_LIST_REN_FIFO_OVERFLOW_SMASK				0x4000000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_PKTID_LIST_REN_FIFO_UNDFLOW_SHIFT				37
#define FXR_TXOTR_PKT_ERR_STS_1_PKTID_LIST_REN_FIFO_UNDFLOW_MASK				0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_PKTID_LIST_REN_FIFO_UNDFLOW_SMASK				0x2000000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_RX_HASH_TABLE_FIFO_OVERFLOW_SHIFT				36
#define FXR_TXOTR_PKT_ERR_STS_1_RX_HASH_TABLE_FIFO_OVERFLOW_MASK				0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_RX_HASH_TABLE_FIFO_OVERFLOW_SMASK				0x1000000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_RX_HASH_TABLE_FIFO_UNDFLOW_SHIFT				35
#define FXR_TXOTR_PKT_ERR_STS_1_RX_HASH_TABLE_FIFO_UNDFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_RX_HASH_TABLE_FIFO_UNDFLOW_SMASK				0x800000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_HI_DATA_SBE_SHIFT						34
#define FXR_TXOTR_PKT_ERR_STS_1_HI_DATA_SBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_HI_DATA_SBE_SMASK						0x400000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_HI_DATA_MBE_SHIFT						33
#define FXR_TXOTR_PKT_ERR_STS_1_HI_DATA_MBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_HI_DATA_MBE_SMASK						0x200000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_HI_HDR_SBE_SHIFT						32
#define FXR_TXOTR_PKT_ERR_STS_1_HI_HDR_SBE_MASK							0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_HI_HDR_SBE_SMASK						0x100000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_HI_HDR_MBE_SHIFT						31
#define FXR_TXOTR_PKT_ERR_STS_1_HI_HDR_MBE_MASK							0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_HI_HDR_MBE_SMASK						0x80000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_AUTHEN_ERR_SHIFT						30
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_AUTHEN_ERR_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_AUTHEN_ERR_SMASK						0x40000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_FIRMWARE_SHIFT						29
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_FIRMWARE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_FIRMWARE_SMASK						0x20000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_PROG_MEM_SBE_SHIFT						28
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_PROG_MEM_SBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_PROG_MEM_SBE_SMASK						0x10000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_PROG_MEM_MBE_SHIFT						27
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_PROG_MEM_MBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_PROG_MEM_MBE_SMASK						0x8000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_DATA_MEM_SBE_SHIFT						26
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_DATA_MEM_SBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_DATA_MEM_SBE_SMASK						0x4000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_DATA_MEM_MBE_SHIFT						25
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_DATA_MEM_MBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_FPE_DATA_MEM_MBE_SMASK						0x2000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_TUPLE_MISMATCH_OPPTMISTIC_SHIFT					24
#define FXR_TXOTR_PKT_ERR_STS_1_TUPLE_MISMATCH_OPPTMISTIC_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_TUPLE_MISMATCH_OPPTMISTIC_SMASK					0x1000000ull
#define FXR_TXOTR_PKT_ERR_STS_1_TUPLE_MISMATCH_SHIFT						23
#define FXR_TXOTR_PKT_ERR_STS_1_TUPLE_MISMATCH_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_TUPLE_MISMATCH_SMASK						0x800000ull
#define FXR_TXOTR_PKT_ERR_STS_1_NON_RETRANSMT_NACK_RCVD_SHIFT					22
#define FXR_TXOTR_PKT_ERR_STS_1_NON_RETRANSMT_NACK_RCVD_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_NON_RETRANSMT_NACK_RCVD_SMASK					0x400000ull
#define FXR_TXOTR_PKT_ERR_STS_1_RESOURCE_NACK_RCVD_SHIFT					21
#define FXR_TXOTR_PKT_ERR_STS_1_RESOURCE_NACK_RCVD_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_RESOURCE_NACK_RCVD_SMASK					0x200000ull
#define FXR_TXOTR_PKT_ERR_STS_1_OOS_NACK_RCVD_SHIFT						20
#define FXR_TXOTR_PKT_ERR_STS_1_OOS_NACK_RCVD_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_OOS_NACK_RCVD_SMASK						0x100000ull
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_MAX_DIST_VIO_ERR_SHIFT					19
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_MAX_DIST_VIO_ERR_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_MAX_DIST_VIO_ERR_SMASK					0x80000ull
#define FXR_TXOTR_PKT_ERR_STS_1_UNKNOWN_E2E_CMD_RCVD_SHIFT					18
#define FXR_TXOTR_PKT_ERR_STS_1_UNKNOWN_E2E_CMD_RCVD_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_UNKNOWN_E2E_CMD_RCVD_SMASK					0x40000ull
#define FXR_TXOTR_PKT_ERR_STS_1_HASH_TIMEOUT_SHIFT						17
#define FXR_TXOTR_PKT_ERR_STS_1_HASH_TIMEOUT_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_HASH_TIMEOUT_SMASK						0x20000ull
#define FXR_TXOTR_PKT_ERR_STS_1_PKT_DONE_ITF_SHIFT						16
#define FXR_TXOTR_PKT_ERR_STS_1_PKT_DONE_ITF_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_PKT_DONE_ITF_SMASK						0x10000ull
#define FXR_TXOTR_PKT_ERR_STS_1_UNCONNECTED_DLID_SHIFT						15
#define FXR_TXOTR_PKT_ERR_STS_1_UNCONNECTED_DLID_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_UNCONNECTED_DLID_SMASK						0x8000ull
#define FXR_TXOTR_PKT_ERR_STS_1_HI_RSP_ERR_SHIFT						14
#define FXR_TXOTR_PKT_ERR_STS_1_HI_RSP_ERR_MASK							0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_HI_RSP_ERR_SMASK						0x4000ull
#define FXR_TXOTR_PKT_ERR_STS_1_AT_RSP_ERR_SHIFT						13
#define FXR_TXOTR_PKT_ERR_STS_1_AT_RSP_ERR_MASK							0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_AT_RSP_ERR_SMASK						0x2000ull
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_CACHE_CLIENT_FIFO_OVERFLOW_SHIFT				12
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_CACHE_CLIENT_FIFO_OVERFLOW_MASK				0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_CACHE_CLIENT_FIFO_OVERFLOW_SMASK				0x1000ull
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_CACHE_CLIENT_FIFO_UNDFLOW_SHIFT				11
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_CACHE_CLIENT_FIFO_UNDFLOW_MASK				0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_CACHE_CLIENT_FIFO_UNDFLOW_SMASK				0x800ull
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_CACHE_DATA_SBE_SHIFT					10
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_CACHE_DATA_SBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_CACHE_DATA_SBE_SMASK					0x400ull
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_CACHE_DATA_MBE_SHIFT					9
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_CACHE_DATA_MBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_CACHE_DATA_MBE_SMASK					0x200ull
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_CACHE_TAG_SBE_SHIFT						8
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_CACHE_TAG_SBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_CACHE_TAG_SBE_SMASK						0x100ull
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_CACHE_TAG_MBE_SHIFT						7
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_CACHE_TAG_MBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_PSN_CACHE_TAG_MBE_SMASK						0x80ull
#define FXR_TXOTR_PKT_ERR_STS_1_TX_LOCAL_SEQUENCE_FIFO_UNDFLOW_SHIFT				6
#define FXR_TXOTR_PKT_ERR_STS_1_TX_LOCAL_SEQUENCE_FIFO_UNDFLOW_MASK				0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_TX_LOCAL_SEQUENCE_FIFO_UNDFLOW_SMASK				0x40ull
#define FXR_TXOTR_PKT_ERR_STS_1_TX_LOCAL_SEQUENCE_FIFO_OVERFLOW_SHIFT				5
#define FXR_TXOTR_PKT_ERR_STS_1_TX_LOCAL_SEQUENCE_FIFO_OVERFLOW_MASK				0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_TX_LOCAL_SEQUENCE_FIFO_OVERFLOW_SMASK				0x20ull
#define FXR_TXOTR_PKT_ERR_STS_1_TX_FREE_HEAD_FIFO_OVERFLOW_SHIFT				4
#define FXR_TXOTR_PKT_ERR_STS_1_TX_FREE_HEAD_FIFO_OVERFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_TX_FREE_HEAD_FIFO_OVERFLOW_SMASK				0x10ull
#define FXR_TXOTR_PKT_ERR_STS_1_TX_FREE_HEAD_FIFO_UNDFLOW_SHIFT					3
#define FXR_TXOTR_PKT_ERR_STS_1_TX_FREE_HEAD_FIFO_UNDFLOW_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_TX_FREE_HEAD_FIFO_UNDFLOW_SMASK					0x8ull
#define FXR_TXOTR_PKT_ERR_STS_1_TX_OLD_LS_TAIL_WEN_FIFO_OVERFLOW_SHIFT				2
#define FXR_TXOTR_PKT_ERR_STS_1_TX_OLD_LS_TAIL_WEN_FIFO_OVERFLOW_MASK				0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_TX_OLD_LS_TAIL_WEN_FIFO_OVERFLOW_SMASK				0x4ull
#define FXR_TXOTR_PKT_ERR_STS_1_TX_OLD_LS_TAIL_WEN_FIFO_UNDFLOW_SHIFT				1
#define FXR_TXOTR_PKT_ERR_STS_1_TX_OLD_LS_TAIL_WEN_FIFO_UNDFLOW_MASK				0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_TX_OLD_LS_TAIL_WEN_FIFO_UNDFLOW_SMASK				0x2ull
#define FXR_TXOTR_PKT_ERR_STS_1_HASH_TABLE_SBE_SHIFT						0
#define FXR_TXOTR_PKT_ERR_STS_1_HASH_TABLE_SBE_MASK						0x1ull
#define FXR_TXOTR_PKT_ERR_STS_1_HASH_TABLE_SBE_SMASK						0x1ull
/*
* Table #74 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_CLR_1
* This is the Error Clear CSR. Writing a 1 to a valid bit will clear the 
* corresponding bit in the #%%#TXOTR_PKT_ERR_STS_1#%%# CSR.
*/
#define FXR_TXOTR_PKT_ERR_CLR_1									(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002108)
#define FXR_TXOTR_PKT_ERR_CLR_1_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_CLR_1_RESERVED_63_44_SHIFT						44
#define FXR_TXOTR_PKT_ERR_CLR_1_RESERVED_63_44_MASK						0xFFFFFull
#define FXR_TXOTR_PKT_ERR_CLR_1_RESERVED_63_44_SMASK						0xFFFFF00000000000ull
#define FXR_TXOTR_PKT_ERR_CLR_1_EVENTS_SHIFT							0
#define FXR_TXOTR_PKT_ERR_CLR_1_EVENTS_MASK							0xFFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_CLR_1_EVENTS_SMASK							0xFFFFFFFFFFFull
/*
* Table #75 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_FRC_1
* This is the Error Force CSR. Writing a 1 to a valid bit will set the 
* corresponding bit in the #%%#TXOTR_PKT_ERR_STS_1#%%# CSR.
*/
#define FXR_TXOTR_PKT_ERR_FRC_1									(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002110)
#define FXR_TXOTR_PKT_ERR_FRC_1_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_FRC_1_RESERVED_63_44_SHIFT						44
#define FXR_TXOTR_PKT_ERR_FRC_1_RESERVED_63_44_MASK						0xFFFFFull
#define FXR_TXOTR_PKT_ERR_FRC_1_RESERVED_63_44_SMASK						0xFFFFF00000000000ull
#define FXR_TXOTR_PKT_ERR_FRC_1_EVENTS_SHIFT							0
#define FXR_TXOTR_PKT_ERR_FRC_1_EVENTS_MASK							0xFFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_FRC_1_EVENTS_SMASK							0xFFFFFFFFFFFull
/*
* Table #76 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_EN_HOST_1
* This is the Error Enable CSR for the Host Interrupt. If a bit is set, the 
* corresponding error bit in #%%#TXOTR_PKT_ERR_STS_1#%%# CSR causes an interrupt 
* on the HOST interrupt signal.
*/
#define FXR_TXOTR_PKT_ERR_EN_HOST_1								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002118)
#define FXR_TXOTR_PKT_ERR_EN_HOST_1_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_EN_HOST_1_RESERVED_63_44_SHIFT					44
#define FXR_TXOTR_PKT_ERR_EN_HOST_1_RESERVED_63_44_MASK						0xFFFFFull
#define FXR_TXOTR_PKT_ERR_EN_HOST_1_RESERVED_63_44_SMASK					0xFFFFF00000000000ull
#define FXR_TXOTR_PKT_ERR_EN_HOST_1_EVENTS_SHIFT						0
#define FXR_TXOTR_PKT_ERR_EN_HOST_1_EVENTS_MASK							0xFFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_EN_HOST_1_EVENTS_SMASK						0xFFFFFFFFFFFull
/*
* Table #77 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_FIRST_HOST_1
* This is the First Error CSR for the Host Interrupt. When this CSR is clear, it 
* captures the next #%%#TXOTR_PKT_ERR_STS_1#%%# CSR value when a new HOST 
* interrupt occurs.
*/
#define FXR_TXOTR_PKT_ERR_FIRST_HOST_1								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002120)
#define FXR_TXOTR_PKT_ERR_FIRST_HOST_1_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_FIRST_HOST_1_RESERVED_63_44_SHIFT					44
#define FXR_TXOTR_PKT_ERR_FIRST_HOST_1_RESERVED_63_44_MASK					0xFFFFFull
#define FXR_TXOTR_PKT_ERR_FIRST_HOST_1_RESERVED_63_44_SMASK					0xFFFFF00000000000ull
#define FXR_TXOTR_PKT_ERR_FIRST_HOST_1_EVENTS_SHIFT						0
#define FXR_TXOTR_PKT_ERR_FIRST_HOST_1_EVENTS_MASK						0xFFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_FIRST_HOST_1_EVENTS_SMASK						0xFFFFFFFFFFFull
/*
* Table #78 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_EN_BMC_1
* This is the Error Enable CSR for the Quarantine Interrupt. If a bit is set, 
* the corresponding error bit in #%%#TXOTR_PKT_ERR_STS_1#%%# CSR causes an 
* interrupt on the QUAR interrupt signal.
*/
#define FXR_TXOTR_PKT_ERR_EN_BMC_1								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002128)
#define FXR_TXOTR_PKT_ERR_EN_BMC_1_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_EN_BMC_1_RESERVED_63_44_SHIFT						44
#define FXR_TXOTR_PKT_ERR_EN_BMC_1_RESERVED_63_44_MASK						0xFFFFFull
#define FXR_TXOTR_PKT_ERR_EN_BMC_1_RESERVED_63_44_SMASK						0xFFFFF00000000000ull
#define FXR_TXOTR_PKT_ERR_EN_BMC_1_EVENTS_SHIFT							0
#define FXR_TXOTR_PKT_ERR_EN_BMC_1_EVENTS_MASK							0xFFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_EN_BMC_1_EVENTS_SMASK							0xFFFFFFFFFFFull
/*
* Table #79 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_FIRST_BMC_1
* This is the First Error CSR for the BMC Interrupt. When this CSR is clear, it 
* captures the next #%%#TXOTR_PKT_ERR_STS_1#%%# CSR value when a new BMC 
* interrupt occurs.
*/
#define FXR_TXOTR_PKT_ERR_FIRST_BMC_1								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002130)
#define FXR_TXOTR_PKT_ERR_FIRST_BMC_1_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_FIRST_BMC_1_RESERVED_63_44_SHIFT					44
#define FXR_TXOTR_PKT_ERR_FIRST_BMC_1_RESERVED_63_44_MASK					0xFFFFFull
#define FXR_TXOTR_PKT_ERR_FIRST_BMC_1_RESERVED_63_44_SMASK					0xFFFFF00000000000ull
#define FXR_TXOTR_PKT_ERR_FIRST_BMC_1_EVENTS_SHIFT						0
#define FXR_TXOTR_PKT_ERR_FIRST_BMC_1_EVENTS_MASK						0xFFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_FIRST_BMC_1_EVENTS_SMASK						0xFFFFFFFFFFFull
/*
* Table #80 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_EN_QUAR_1
* This is the Error Enable CSR for the BMC Interrupt. If a bit is set, the 
* corresponding error bit in #%%#TXOTR_PKT_ERR_STS_1#%%# CSR causes an interrupt 
* on the BMC interrupt signal.
*/
#define FXR_TXOTR_PKT_ERR_EN_QUAR_1								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002138)
#define FXR_TXOTR_PKT_ERR_EN_QUAR_1_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_EN_QUAR_1_RESERVED_63_44_SHIFT					44
#define FXR_TXOTR_PKT_ERR_EN_QUAR_1_RESERVED_63_44_MASK						0xFFFFFull
#define FXR_TXOTR_PKT_ERR_EN_QUAR_1_RESERVED_63_44_SMASK					0xFFFFF00000000000ull
#define FXR_TXOTR_PKT_ERR_EN_QUAR_1_EVENTS_SHIFT						0
#define FXR_TXOTR_PKT_ERR_EN_QUAR_1_EVENTS_MASK							0xFFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_EN_QUAR_1_EVENTS_SMASK						0xFFFFFFFFFFFull
/*
* Table #81 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_FIRST_QUAR_1
* This is the First Error CSR for the Quarantine Interrupt. When this CSR is 
* clear, it captures the next #%%#TXOTR_PKT_ERR_STS_1#%%# CSR value when a new 
* QUAR interrupt occurs.
*/
#define FXR_TXOTR_PKT_ERR_FIRST_QUAR_1								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002140)
#define FXR_TXOTR_PKT_ERR_FIRST_QUAR_1_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_FIRST_QUAR_1_RESERVED_63_44_SHIFT					44
#define FXR_TXOTR_PKT_ERR_FIRST_QUAR_1_RESERVED_63_44_MASK					0xFFFFFull
#define FXR_TXOTR_PKT_ERR_FIRST_QUAR_1_RESERVED_63_44_SMASK					0xFFFFF00000000000ull
#define FXR_TXOTR_PKT_ERR_FIRST_QUAR_1_EVENTS_SHIFT						0
#define FXR_TXOTR_PKT_ERR_FIRST_QUAR_1_EVENTS_MASK						0xFFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_FIRST_QUAR_1_EVENTS_SMASK						0xFFFFFFFFFFFull
/*
* Table #82 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_DLID_CHECK
* This is the error information CSR for an DLID check failure. State in this CSR 
* is updated when dlid_check_err error flag is set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_DLID_CHECK							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002290)
#define FXR_TXOTR_PKT_ERR_INFO_DLID_CHECK_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_DLID_CHECK_RESERVED_63_7_SHIFT					7
#define FXR_TXOTR_PKT_ERR_INFO_DLID_CHECK_RESERVED_63_7_MASK					0x1FFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_DLID_CHECK_RESERVED_63_7_SMASK					0xFFFFFFFFFFFFFF80ull
#define FXR_TXOTR_PKT_ERR_INFO_DLID_CHECK_ENCODING_SHIFT					4
#define FXR_TXOTR_PKT_ERR_INFO_DLID_CHECK_ENCODING_MASK						0x7ull
#define FXR_TXOTR_PKT_ERR_INFO_DLID_CHECK_ENCODING_SMASK					0x70ull
#define FXR_TXOTR_PKT_ERR_INFO_DLID_CHECK_MCTC_SHIFT						0
#define FXR_TXOTR_PKT_ERR_INFO_DLID_CHECK_MCTC_MASK						0xFull
#define FXR_TXOTR_PKT_ERR_INFO_DLID_CHECK_MCTC_SMASK						0xFull
/*
* Table #83 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_LENGTH_CHECK
* This is the error information CSR for an length check failure. State in this 
* CSR is updated when invalid_msg_len_err or cmd_len_err error flag are 
* set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_LENGTH_CHECK							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002298)
#define FXR_TXOTR_PKT_ERR_INFO_LENGTH_CHECK_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_LENGTH_CHECK_RESERVED_63_36_SHIFT				36
#define FXR_TXOTR_PKT_ERR_INFO_LENGTH_CHECK_RESERVED_63_36_MASK					0xFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_LENGTH_CHECK_RESERVED_63_36_SMASK				0xFFFFFFF000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_LENGTH_CHECK_MCTC_CMD_LEN_SHIFT					32
#define FXR_TXOTR_PKT_ERR_INFO_LENGTH_CHECK_MCTC_CMD_LEN_MASK					0xFull
#define FXR_TXOTR_PKT_ERR_INFO_LENGTH_CHECK_MCTC_CMD_LEN_SMASK					0xF00000000ull
#define FXR_TXOTR_PKT_ERR_INFO_LENGTH_CHECK_RESERVED_31_4_SHIFT					4
#define FXR_TXOTR_PKT_ERR_INFO_LENGTH_CHECK_RESERVED_31_4_MASK					0xFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_LENGTH_CHECK_RESERVED_31_4_SMASK					0xFFFFFFF0ull
#define FXR_TXOTR_PKT_ERR_INFO_LENGTH_CHECK_MCTC_INVALID_MSG_LEN_SHIFT				0
#define FXR_TXOTR_PKT_ERR_INFO_LENGTH_CHECK_MCTC_INVALID_MSG_LEN_MASK				0xFull
#define FXR_TXOTR_PKT_ERR_INFO_LENGTH_CHECK_MCTC_INVALID_MSG_LEN_SMASK				0xFull
/*
* Table #84 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_FP_FIFO_0
* This is the error information CSR for fast path fifo related errors. State in 
* this CSR is updated when fp_fifo_sbe or fp_fifo_mbe error flag is 
* set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_0							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000022A8)
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_0_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_0_SYNDROME_MBE_3_SHIFT					56
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_0_SYNDROME_MBE_3_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_0_SYNDROME_MBE_3_SMASK					0xFF00000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_0_SYNDROME_MBE_2_SHIFT					48
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_0_SYNDROME_MBE_2_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_0_SYNDROME_MBE_2_SMASK					0xFF000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_0_SYNDROME_MBE_1_SHIFT					40
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_0_SYNDROME_MBE_1_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_0_SYNDROME_MBE_1_SMASK					0xFF0000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_0_SYNDROME_MBE_0_SHIFT					32
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_0_SYNDROME_MBE_0_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_0_SYNDROME_MBE_0_SMASK					0xFF00000000ull
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_0_SYNDROME_SBE_3_SHIFT					24
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_0_SYNDROME_SBE_3_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_0_SYNDROME_SBE_3_SMASK					0xFF000000ull
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_0_SYNDROME_SBE_2_SHIFT					16
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_0_SYNDROME_SBE_2_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_0_SYNDROME_SBE_2_SMASK					0xFF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_0_SYNDROME_SBE_1_SHIFT					8
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_0_SYNDROME_SBE_1_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_0_SYNDROME_SBE_1_SMASK					0xFF00ull
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_0_SYNDROME_SBE_0_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_0_SYNDROME_SBE_0_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_0_SYNDROME_SBE_0_SMASK					0xFFull
/*
* Table #85 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_FP_FIFO_1
* This is the error information CSR for fast path fifo related errors. State in 
* this CSR is updated when fp_fifo_sbe or fp_fifo_mbe or fp_fifo_undflow or 
* fp_fifo_overflow error flag is set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_1							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000022B0)
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_1_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_1_RESERVED_63_24_SHIFT					24
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_1_RESERVED_63_24_MASK					0xFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_1_RESERVED_63_24_SMASK					0xFFFFFFFFFF000000ull
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_1_DOMAIN_UNDERFLOW_SHIFT					20
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_1_DOMAIN_UNDERFLOW_MASK					0xFull
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_1_DOMAIN_UNDERFLOW_SMASK					0xF00000ull
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_1_DOMAIN_OVERFLOW_SHIFT					16
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_1_DOMAIN_OVERFLOW_MASK					0xFull
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_1_DOMAIN_OVERFLOW_SMASK					0xF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_1_MCTC_MBE_SHIFT						12
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_1_MCTC_MBE_MASK						0xFull
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_1_MCTC_MBE_SMASK						0xF000ull
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_1_MCTC_SBE_SHIFT						8
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_1_MCTC_SBE_MASK						0xFull
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_1_MCTC_SBE_SMASK						0xF00ull
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_1_DOMAIN_MBE_SHIFT					4
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_1_DOMAIN_MBE_MASK					0xFull
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_1_DOMAIN_MBE_SMASK					0xF0ull
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_1_DOMAIN_SBE_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_1_DOMAIN_SBE_MASK					0xFull
#define FXR_TXOTR_PKT_ERR_INFO_FP_FIFO_1_DOMAIN_SBE_SMASK					0xFull
/*
* Table #86 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_RETRANS_FIFO_0
* This is the error information CSR for Retransmit fifo related errors. State in 
* this CSR is updated when retrans_fifo_sbe or retrans_fifo_mbe error flag is 
* set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_0							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000022B8)
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_0_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_0_SYNDROME_MBE_3_SHIFT				56
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_0_SYNDROME_MBE_3_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_0_SYNDROME_MBE_3_SMASK				0xFF00000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_0_SYNDROME_MBE_2_SHIFT				48
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_0_SYNDROME_MBE_2_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_0_SYNDROME_MBE_2_SMASK				0xFF000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_0_SYNDROME_MBE_1_SHIFT				40
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_0_SYNDROME_MBE_1_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_0_SYNDROME_MBE_1_SMASK				0xFF0000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_0_SYNDROME_MBE_0_SHIFT				32
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_0_SYNDROME_MBE_0_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_0_SYNDROME_MBE_0_SMASK				0xFF00000000ull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_0_SYNDROME_SBE_3_SHIFT				24
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_0_SYNDROME_SBE_3_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_0_SYNDROME_SBE_3_SMASK				0xFF000000ull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_0_SYNDROME_SBE_2_SHIFT				16
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_0_SYNDROME_SBE_2_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_0_SYNDROME_SBE_2_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_0_SYNDROME_SBE_1_SHIFT				8
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_0_SYNDROME_SBE_1_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_0_SYNDROME_SBE_1_SMASK				0xFF00ull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_0_SYNDROME_SBE_0_SHIFT				0
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_0_SYNDROME_SBE_0_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_0_SYNDROME_SBE_0_SMASK				0xFFull
/*
* Table #87 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_RETRANS_FIFO_1
* This is the error information CSR for Retransmit fifo related errors. State in 
* this CSR is updated when retrans_fifo_sbe or retrans_fifo_mbe or 
* retrans_fifo_undflow or retrans_fifo_overflow error flag is set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_1							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000022C0)
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_1_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_1_RESERVED_63_22_SHIFT				22
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_1_RESERVED_63_22_MASK				0x3FFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_1_RESERVED_63_22_SMASK				0xFFFFFFFFFFC00000ull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_1_DOMAIN_UNDERFLOW_SHIFT				18
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_1_DOMAIN_UNDERFLOW_MASK				0xFull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_1_DOMAIN_UNDERFLOW_SMASK				0x3C0000ull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_1_DOMAIN_OVERFLOW_SHIFT				14
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_1_DOMAIN_OVERFLOW_MASK				0xFull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_1_DOMAIN_OVERFLOW_SMASK				0x3C000ull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_1_MCTC_MBE_SHIFT					11
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_1_MCTC_MBE_MASK					0x7ull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_1_MCTC_MBE_SMASK					0x3800ull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_1_MCTC_SBE_SHIFT					8
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_1_MCTC_SBE_MASK					0x7ull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_1_MCTC_SBE_SMASK					0x700ull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_1_DOMAIN_MBE_SHIFT					4
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_1_DOMAIN_MBE_MASK					0xFull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_1_DOMAIN_MBE_SMASK					0xF0ull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_1_DOMAIN_SBE_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_1_DOMAIN_SBE_MASK					0xFull
#define FXR_TXOTR_PKT_ERR_INFO_RETRANS_FIFO_1_DOMAIN_SBE_SMASK					0xFull
/*
* Table #88 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_0
* This is the error information CSR for Pre frag fifo related errors. State in 
* this CSR is updated when pre_frag_fifo_sbe or pre_frag_fifo_mbe error flag is 
* set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_0							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000022C8)
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_0_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_0_SYNDROME_MBE_3_SHIFT				56
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_0_SYNDROME_MBE_3_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_0_SYNDROME_MBE_3_SMASK				0xFF00000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_0_SYNDROME_MBE_2_SHIFT				48
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_0_SYNDROME_MBE_2_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_0_SYNDROME_MBE_2_SMASK				0xFF000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_0_SYNDROME_MBE_1_SHIFT				40
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_0_SYNDROME_MBE_1_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_0_SYNDROME_MBE_1_SMASK				0xFF0000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_0_SYNDROME_MBE_0_SHIFT				32
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_0_SYNDROME_MBE_0_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_0_SYNDROME_MBE_0_SMASK				0xFF00000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_0_SYNDROME_SBE_3_SHIFT				24
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_0_SYNDROME_SBE_3_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_0_SYNDROME_SBE_3_SMASK				0xFF000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_0_SYNDROME_SBE_2_SHIFT				16
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_0_SYNDROME_SBE_2_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_0_SYNDROME_SBE_2_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_0_SYNDROME_SBE_1_SHIFT				8
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_0_SYNDROME_SBE_1_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_0_SYNDROME_SBE_1_SMASK				0xFF00ull
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_0_SYNDROME_SBE_0_SHIFT				0
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_0_SYNDROME_SBE_0_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_0_SYNDROME_SBE_0_SMASK				0xFFull
/*
* Table #89 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_1
* This is the error information CSR for Pre-frag fifo related errors. State in 
* this CSR is updated when pre_frag_fifo_sbe or pre_frag_fifo_mbe or 
* pre_frag_fifo_undflow or pre_frag_fifo_overflow error flag is 
* set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_1							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000022D0)
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_1_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_1_RESERVED_63_22_SHIFT				22
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_1_RESERVED_63_22_MASK				0x3FFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_1_RESERVED_63_22_SMASK				0xFFFFFFFFFFC00000ull
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_1_DOMAIN_UNDERFLOW_SHIFT				18
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_1_DOMAIN_UNDERFLOW_MASK				0xFull
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_1_DOMAIN_UNDERFLOW_SMASK				0x3C0000ull
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_1_DOMAIN_OVERFLOW_SHIFT				14
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_1_DOMAIN_OVERFLOW_MASK				0xFull
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_1_DOMAIN_OVERFLOW_SMASK				0x3C000ull
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_1_MCTC_MBE_SHIFT					11
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_1_MCTC_MBE_MASK					0x7ull
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_1_MCTC_MBE_SMASK					0x3800ull
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_1_MCTC_SBE_SHIFT					8
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_1_MCTC_SBE_MASK					0x7ull
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_1_MCTC_SBE_SMASK					0x700ull
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_1_DOMAIN_MBE_SHIFT					4
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_1_DOMAIN_MBE_MASK					0xFull
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_1_DOMAIN_MBE_SMASK					0xF0ull
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_1_DOMAIN_SBE_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_1_DOMAIN_SBE_MASK					0xFull
#define FXR_TXOTR_PKT_ERR_INFO_PREFRAG_FIFO_1_DOMAIN_SBE_SMASK					0xFull
/*
* Table #90 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_0
* This is the error information CSR for post-frag fifo related errors. State in 
* this CSR is updated when post_frag_fifo_sbe or post_frag_fifo_mbe error flag 
* is set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_0							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000022D8)
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_0_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_0_SYNDROME_MBE_3_SHIFT				56
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_0_SYNDROME_MBE_3_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_0_SYNDROME_MBE_3_SMASK				0xFF00000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_0_SYNDROME_MBE_2_SHIFT				48
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_0_SYNDROME_MBE_2_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_0_SYNDROME_MBE_2_SMASK				0xFF000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_0_SYNDROME_MBE_1_SHIFT				40
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_0_SYNDROME_MBE_1_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_0_SYNDROME_MBE_1_SMASK				0xFF0000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_0_SYNDROME_MBE_0_SHIFT				32
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_0_SYNDROME_MBE_0_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_0_SYNDROME_MBE_0_SMASK				0xFF00000000ull
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_0_SYNDROME_SBE_3_SHIFT				24
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_0_SYNDROME_SBE_3_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_0_SYNDROME_SBE_3_SMASK				0xFF000000ull
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_0_SYNDROME_SBE_2_SHIFT				16
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_0_SYNDROME_SBE_2_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_0_SYNDROME_SBE_2_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_0_SYNDROME_SBE_1_SHIFT				8
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_0_SYNDROME_SBE_1_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_0_SYNDROME_SBE_1_SMASK				0xFF00ull
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_0_SYNDROME_SBE_0_SHIFT				0
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_0_SYNDROME_SBE_0_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_0_SYNDROME_SBE_0_SMASK				0xFFull
/*
* Table #91 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_1
* This is the error information CSR for Post-frag fifo related errors. State in 
* this CSR is updated when post_frag_fifo_sbe or post_frag_fifo_mbe or 
* post_frag_fifo_undflow or post_frag_fifo_overflow error flag is 
* set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_1							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000022E0)
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_1_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_1_RESERVED_63_24_SHIFT				24
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_1_RESERVED_63_24_MASK				0xFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_1_RESERVED_63_24_SMASK				0xFFFFFFFFFF000000ull
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_1_DOMAIN_UNDERFLOW_SHIFT				20
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_1_DOMAIN_UNDERFLOW_MASK				0xFull
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_1_DOMAIN_UNDERFLOW_SMASK				0xF00000ull
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_1_DOMAIN_OVERFLOW_SHIFT				16
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_1_DOMAIN_OVERFLOW_MASK				0xFull
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_1_DOMAIN_OVERFLOW_SMASK				0xF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_1_MCTC_MBE_SHIFT					12
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_1_MCTC_MBE_MASK					0xFull
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_1_MCTC_MBE_SMASK					0xF000ull
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_1_MCTC_SBE_SHIFT					8
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_1_MCTC_SBE_MASK					0xFull
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_1_MCTC_SBE_SMASK					0xF00ull
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_1_DOMAIN_MBE_SHIFT					4
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_1_DOMAIN_MBE_MASK					0xFull
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_1_DOMAIN_MBE_SMASK					0xF0ull
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_1_DOMAIN_SBE_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_1_DOMAIN_SBE_MASK					0xFull
#define FXR_TXOTR_PKT_ERR_INFO_POSTFRAG_FIFO_1_DOMAIN_SBE_SMASK					0xFull
/*
* Table #92 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_0
* This is the error information CSR for rx response fifo related errors. State 
* in this CSR is updated when rx_rsp_fifo_sbe or rx_rsp_fifo_mbe error flag is 
* set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_0							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000022E8)
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_0_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_0_SYNDROME_MBE_3_SHIFT				56
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_0_SYNDROME_MBE_3_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_0_SYNDROME_MBE_3_SMASK				0xFF00000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_0_SYNDROME_MBE_2_SHIFT				48
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_0_SYNDROME_MBE_2_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_0_SYNDROME_MBE_2_SMASK				0xFF000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_0_SYNDROME_MBE_1_SHIFT				40
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_0_SYNDROME_MBE_1_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_0_SYNDROME_MBE_1_SMASK				0xFF0000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_0_SYNDROME_MBE_0_SHIFT				32
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_0_SYNDROME_MBE_0_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_0_SYNDROME_MBE_0_SMASK				0xFF00000000ull
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_0_SYNDROME_SBE_3_SHIFT				24
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_0_SYNDROME_SBE_3_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_0_SYNDROME_SBE_3_SMASK				0xFF000000ull
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_0_SYNDROME_SBE_2_SHIFT				16
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_0_SYNDROME_SBE_2_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_0_SYNDROME_SBE_2_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_0_SYNDROME_SBE_1_SHIFT				8
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_0_SYNDROME_SBE_1_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_0_SYNDROME_SBE_1_SMASK				0xFF00ull
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_0_SYNDROME_SBE_0_SHIFT				0
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_0_SYNDROME_SBE_0_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_0_SYNDROME_SBE_0_SMASK				0xFFull
/*
* Table #93 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_1
* This is the error information CSR for RX response fifo related errors. State 
* in this CSR is updated when rx_rsp_fifo_sbe or rx_rsp_fifo_mbe or 
* rx_rsp_fifo_undflow or rx_rsp_fifo_overflow error flag is set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_1							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000022F0)
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_1_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_1_RESERVED_63_16_SHIFT				16
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_1_RESERVED_63_16_MASK				0xFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_1_RESERVED_63_16_SMASK				0xFFFFFFFFFFFF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_1_DOMAIN_UNDERFLOW_SHIFT				14
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_1_DOMAIN_UNDERFLOW_MASK				0x3ull
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_1_DOMAIN_UNDERFLOW_SMASK				0xC000ull
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_1_DOMAIN_OVERFLOW_SHIFT				12
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_1_DOMAIN_OVERFLOW_MASK				0x3ull
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_1_DOMAIN_OVERFLOW_SMASK				0x3000ull
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_1_TC_MBE_SHIFT					10
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_1_TC_MBE_MASK					0x3ull
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_1_TC_MBE_SMASK					0xC00ull
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_1_TC_SBE_SHIFT					8
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_1_TC_SBE_MASK					0x3ull
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_1_TC_SBE_SMASK					0x300ull
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_1_DOMAIN_MBE_SHIFT					4
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_1_DOMAIN_MBE_MASK					0xFull
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_1_DOMAIN_MBE_SMASK					0xF0ull
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_1_DOMAIN_SBE_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_1_DOMAIN_SBE_MASK					0xFull
#define FXR_TXOTR_PKT_ERR_INFO_RX_RSP_FIFO_1_DOMAIN_SBE_SMASK					0xFull
/*
* Table #94 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_OPB_FIFO
* This is the error information CSR for OPB fifo underflow/overflow related 
* errors. 
*/
#define FXR_TXOTR_PKT_ERR_INFO_OPB_FIFO								(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000022F8)
#define FXR_TXOTR_PKT_ERR_INFO_OPB_FIFO_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_FIFO_RESERVED_63_40_SHIFT					40
#define FXR_TXOTR_PKT_ERR_INFO_OPB_FIFO_RESERVED_63_40_MASK					0xFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_FIFO_RESERVED_63_40_SMASK					0xFFFFFF0000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_FIFO_OPB_STATE_OVERFLOW_SHIFT				36
#define FXR_TXOTR_PKT_ERR_INFO_OPB_FIFO_OPB_STATE_OVERFLOW_MASK					0xFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_FIFO_OPB_STATE_OVERFLOW_SMASK				0xF000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_FIFO_OPB_STATE_UNDERFLOW_SHIFT				32
#define FXR_TXOTR_PKT_ERR_INFO_OPB_FIFO_OPB_STATE_UNDERFLOW_MASK				0xFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_FIFO_OPB_STATE_UNDERFLOW_SMASK				0xF00000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_FIFO_OPB_HANDLE_OVERFLOW_SHIFT				28
#define FXR_TXOTR_PKT_ERR_INFO_OPB_FIFO_OPB_HANDLE_OVERFLOW_MASK				0xFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_FIFO_OPB_HANDLE_OVERFLOW_SMASK				0xF0000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_FIFO_OPB_HANDLE_UNDERFLOW_SHIFT				24
#define FXR_TXOTR_PKT_ERR_INFO_OPB_FIFO_OPB_HANDLE_UNDERFLOW_MASK				0xFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_FIFO_OPB_HANDLE_UNDERFLOW_SMASK				0xF000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_FIFO_OPB_PKT_STS_OVERFLOW_SHIFT				20
#define FXR_TXOTR_PKT_ERR_INFO_OPB_FIFO_OPB_PKT_STS_OVERFLOW_MASK				0xFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_FIFO_OPB_PKT_STS_OVERFLOW_SMASK				0xF00000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_FIFO_OPB_PKT_STS_UNDERFLOW_SHIFT				16
#define FXR_TXOTR_PKT_ERR_INFO_OPB_FIFO_OPB_PKT_STS_UNDERFLOW_MASK				0xFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_FIFO_OPB_PKT_STS_UNDERFLOW_SMASK				0xF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_FIFO_PKT_DONE_OVERFLOW_SHIFT					8
#define FXR_TXOTR_PKT_ERR_INFO_OPB_FIFO_PKT_DONE_OVERFLOW_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_FIFO_PKT_DONE_OVERFLOW_SMASK					0xFF00ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_FIFO_PKT_DONE_UNDERFLOW_SHIFT				0
#define FXR_TXOTR_PKT_ERR_INFO_OPB_FIFO_PKT_DONE_UNDERFLOW_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_FIFO_PKT_DONE_UNDERFLOW_SMASK				0xFFull
/*
* Table #95 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_0
* This is the error information CSR for tx psn fifo related errors. State in 
* this CSR is updated when tx_psn_fifo_sbe or tx_psn_fifo_mbe error flag is 
* set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_0							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002300)
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_0_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_0_SYNDROME_MBE_3_SHIFT				56
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_0_SYNDROME_MBE_3_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_0_SYNDROME_MBE_3_SMASK				0xFF00000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_0_SYNDROME_MBE_2_SHIFT				48
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_0_SYNDROME_MBE_2_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_0_SYNDROME_MBE_2_SMASK				0xFF000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_0_SYNDROME_MBE_1_SHIFT				40
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_0_SYNDROME_MBE_1_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_0_SYNDROME_MBE_1_SMASK				0xFF0000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_0_SYNDROME_MBE_0_SHIFT				32
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_0_SYNDROME_MBE_0_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_0_SYNDROME_MBE_0_SMASK				0xFF00000000ull
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_0_SYNDROME_SBE_3_SHIFT				24
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_0_SYNDROME_SBE_3_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_0_SYNDROME_SBE_3_SMASK				0xFF000000ull
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_0_SYNDROME_SBE_2_SHIFT				16
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_0_SYNDROME_SBE_2_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_0_SYNDROME_SBE_2_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_0_SYNDROME_SBE_1_SHIFT				8
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_0_SYNDROME_SBE_1_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_0_SYNDROME_SBE_1_SMASK				0xFF00ull
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_0_SYNDROME_SBE_0_SHIFT				0
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_0_SYNDROME_SBE_0_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_0_SYNDROME_SBE_0_SMASK				0xFFull
/*
* Table #96 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_1
* This is the error information CSR for TX PSN fifo related errors. State in 
* this CSR is updated when tx_psn_fifo_sbe or tx_psn_fifo_mbe error flag is 
* set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_1							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002308)
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_1_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_1_RESERVED_63_8_SHIFT				8
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_1_RESERVED_63_8_MASK					0xFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_1_RESERVED_63_8_SMASK				0xFFFFFFFFFFFFFF00ull
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_1_DOMAIN_MBE_SHIFT					4
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_1_DOMAIN_MBE_MASK					0xFull
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_1_DOMAIN_MBE_SMASK					0xF0ull
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_1_DOMAIN_SBE_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_1_DOMAIN_SBE_MASK					0xFull
#define FXR_TXOTR_PKT_ERR_INFO_TX_PSN_FIFO_1_DOMAIN_SBE_SMASK					0xFull
/*
* Table #97 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_0
* This is the error information CSR for a bit error occurring in the IOVEC 
* Buffer Space. State in this CSR is updated when #%%#iovec_buff_sbe#%%# error 
* flags are set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_0							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002310)
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_0_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_0_SYNDROME_SBE_7_SHIFT				56
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_0_SYNDROME_SBE_7_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_0_SYNDROME_SBE_7_SMASK				0xFF00000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_0_SYNDROME_SBE_6_SHIFT				48
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_0_SYNDROME_SBE_6_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_0_SYNDROME_SBE_6_SMASK				0xFF000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_0_SYNDROME_SBE_5_SHIFT				40
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_0_SYNDROME_SBE_5_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_0_SYNDROME_SBE_5_SMASK				0xFF0000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_0_SYNDROME_SBE_4_SHIFT				32
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_0_SYNDROME_SBE_4_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_0_SYNDROME_SBE_4_SMASK				0xFF00000000ull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_0_SYNDROME_SBE_3_SHIFT				24
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_0_SYNDROME_SBE_3_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_0_SYNDROME_SBE_3_SMASK				0xFF000000ull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_0_SYNDROME_SBE_2_SHIFT				16
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_0_SYNDROME_SBE_2_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_0_SYNDROME_SBE_2_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_0_SYNDROME_SBE_1_SHIFT				8
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_0_SYNDROME_SBE_1_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_0_SYNDROME_SBE_1_SMASK				0xFF00ull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_0_SYNDROME_SBE_0_SHIFT				0
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_0_SYNDROME_SBE_0_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_0_SYNDROME_SBE_0_SMASK				0xFFull
/*
* Table #98 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_1
* This is the error information CSR for a bit error occurring in the IOVEC 
* Buffer Space. State in this CSR is updated when #%%#iovec_buff_mbe#%%# error 
* flags are set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_1							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002318)
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_1_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_1_SYNDROME_MBE_7_SHIFT				56
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_1_SYNDROME_MBE_7_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_1_SYNDROME_MBE_7_SMASK				0xFF00000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_1_SYNDROME_MBE_6_SHIFT				48
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_1_SYNDROME_MBE_6_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_1_SYNDROME_MBE_6_SMASK				0xFF000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_1_SYNDROME_MBE_5_SHIFT				40
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_1_SYNDROME_MBE_5_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_1_SYNDROME_MBE_5_SMASK				0xFF0000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_1_SYNDROME_MBE_4_SHIFT				32
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_1_SYNDROME_MBE_4_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_1_SYNDROME_MBE_4_SMASK				0xFF00000000ull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_1_SYNDROME_MBE_3_SHIFT				24
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_1_SYNDROME_MBE_3_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_1_SYNDROME_MBE_3_SMASK				0xFF000000ull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_1_SYNDROME_MBE_2_SHIFT				16
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_1_SYNDROME_MBE_2_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_1_SYNDROME_MBE_2_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_1_SYNDROME_MBE_1_SHIFT				8
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_1_SYNDROME_MBE_1_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_1_SYNDROME_MBE_1_SMASK				0xFF00ull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_1_SYNDROME_MBE_0_SHIFT				0
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_1_SYNDROME_MBE_0_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_1_SYNDROME_MBE_0_SMASK				0xFFull
/*
* Table #99 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_2
* This is the error information CSR for a bit error occurring in the IOVEC 
* Buffer Space. State in this CSR is updated when #%%#iovec_buff_mbe#%%# or 
* #%%#iovec_buff_sbe#%%# error flags are set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_2							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002320)
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_2_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_2_RESERVED_63_26_SHIFT				26
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_2_RESERVED_63_26_MASK				0x3FFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_2_RESERVED_63_26_SMASK				0xFFFFFFFFFC000000ull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_2_ADDR_MBE_SHIFT					21
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_2_ADDR_MBE_MASK					0x1Full
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_2_ADDR_MBE_SMASK					0x3E00000ull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_2_ADDR_SBE_SHIFT					16
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_2_ADDR_SBE_MASK					0x1Full
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_2_ADDR_SBE_SMASK					0x1F0000ull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_2_DOMAIN_MBE_SHIFT					8
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_2_DOMAIN_MBE_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_2_DOMAIN_MBE_SMASK					0xFF00ull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_2_DOMAIN_SBE_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_2_DOMAIN_SBE_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_IOVEC_BUFF_BE_2_DOMAIN_SBE_SMASK					0xFFull
/*
* Table #100 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_OTM_BE
* This is the error information CSR for a bit error occurring in the OTM. State 
* in this CSR is updated when #%%#otm_mbe#%%# or #%%#otm_sbe#%%# error flags are 
* set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002328)
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_RESERVED_63_34_SHIFT					34
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_RESERVED_63_34_MASK					0x3FFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_RESERVED_63_34_SMASK					0xFFFFFFFC00000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_SYNDROME_MBE_SHIFT					25
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_SYNDROME_MBE_MASK						0x1FFull
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_SYNDROME_MBE_SMASK					0x3FE000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_SYNDROME_SBE_SHIFT					16
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_SYNDROME_SBE_MASK						0x1FFull
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_SYNDROME_SBE_SMASK					0x1FF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_RESERVED_15_14_SHIFT					14
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_RESERVED_15_14_MASK					0x3ull
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_RESERVED_15_14_SMASK					0xC000ull
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_ADDRESS_MBE_SHIFT						7
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_ADDRESS_MBE_MASK						0x7Full
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_ADDRESS_MBE_SMASK						0x3F80ull
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_ADDRESS_SBE_SHIFT						0
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_ADDRESS_SBE_MASK						0x7Full
#define FXR_TXOTR_PKT_ERR_INFO_OTM_BE_ADDRESS_SBE_SMASK						0x7Full
/*
* Table #101 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_OPB_BE_0
* This is the error information CSR for a bit error occurring in the OPB. State 
* in this CSR is updated when #%%#opb_mbe#%%# or #%%#opb_sbe#%%# error flags are 
* set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_0								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002330)
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_0_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_0_RESERVED_63_40_SHIFT					40
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_0_RESERVED_63_40_MASK					0xFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_0_RESERVED_63_40_SMASK					0xFFFFFF0000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_0_SYNDROME_MBE_4_SHIFT					32
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_0_SYNDROME_MBE_4_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_0_SYNDROME_MBE_4_SMASK					0xFF00000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_0_SYNDROME_MBE_3_SHIFT					24
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_0_SYNDROME_MBE_3_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_0_SYNDROME_MBE_3_SMASK					0xFF000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_0_SYNDROME_MBE_2_SHIFT					16
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_0_SYNDROME_MBE_2_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_0_SYNDROME_MBE_2_SMASK					0xFF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_0_SYNDROME_MBE_1_SHIFT					8
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_0_SYNDROME_MBE_1_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_0_SYNDROME_MBE_1_SMASK					0xFF00ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_0_SYNDROME_MBE_0_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_0_SYNDROME_MBE_0_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_0_SYNDROME_MBE_0_SMASK					0xFFull
/*
* Table #102 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_OPB_BE_1
* This is the error information CSR for a bit error occurring in the OPB. State 
* in this CSR is updated when #%%#opb_mbe#%%# or #%%#opb_sbe#%%# error flags are 
* set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_1								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002338)
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_1_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_1_RESERVED_63_40_SHIFT					40
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_1_RESERVED_63_40_MASK					0xFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_1_RESERVED_63_40_SMASK					0xFFFFFF0000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_1_SYNDROME_SBE_4_SHIFT					32
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_1_SYNDROME_SBE_4_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_1_SYNDROME_SBE_4_SMASK					0xFF00000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_1_SYNDROME_SBE_3_SHIFT					24
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_1_SYNDROME_SBE_3_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_1_SYNDROME_SBE_3_SMASK					0xFF000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_1_SYNDROME_SBE_2_SHIFT					16
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_1_SYNDROME_SBE_2_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_1_SYNDROME_SBE_2_SMASK					0xFF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_1_SYNDROME_SBE_1_SHIFT					8
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_1_SYNDROME_SBE_1_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_1_SYNDROME_SBE_1_SMASK					0xFF00ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_1_SYNDROME_SBE_0_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_1_SYNDROME_SBE_0_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_1_SYNDROME_SBE_0_SMASK					0xFFull
/*
* Table #103 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_OPB_BE_2
* This is the error information CSR for a bit error occurring in the OPB. State 
* in this CSR is updated when #%%#opb_mbe#%%# or #%%#opb_sbe#%%# error flags are 
* set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_2								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002340)
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_2_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_2_RESERVED_63_40_SHIFT					40
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_2_RESERVED_63_40_MASK					0xFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_2_RESERVED_63_40_SMASK					0xFFFFFF0000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_2_DOMAIN_MBE_SHIFT					20
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_2_DOMAIN_MBE_MASK						0xFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_2_DOMAIN_MBE_SMASK					0xFFFFF00000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_2_DOMAIN_SBE_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_2_DOMAIN_SBE_MASK						0xFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_2_DOMAIN_SBE_SMASK					0xFFFFFull
/*
* Table #104 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_OPB_BE_3
* This is the error information CSR for a bit error occurring in the OPB. State 
* in this CSR is updated when #%%#opb_mbe#%%# or #%%#opb_sbe#%%# error flags are 
* set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_3								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002348)
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_3_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_3_RESERVED_63_56_SHIFT					56
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_3_RESERVED_63_56_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_3_RESERVED_63_56_SMASK					0xFF00000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_3_INFO_SBE_3_SHIFT					42
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_3_INFO_SBE_3_MASK						0x3FFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_3_INFO_SBE_3_SMASK					0xFFFC0000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_3_INFO_SBE_2_SHIFT					28
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_3_INFO_SBE_2_MASK						0x3FFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_3_INFO_SBE_2_SMASK					0x3FFF0000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_3_INFO_SBE_1_SHIFT					14
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_3_INFO_SBE_1_MASK						0x3FFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_3_INFO_SBE_1_SMASK					0xFFFC000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_3_INFO_SBE_0_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_3_INFO_SBE_0_MASK						0x3FFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_3_INFO_SBE_0_SMASK					0x3FFFull
/*
* Table #105 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_OPB_BE_4
* This is the error information CSR for a bit error occurring in the OPB. State 
* in this CSR is updated when #%%#opb_mbe#%%# or #%%#opb_sbe#%%# error flags are 
* set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_4								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002350)
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_4_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_4_RESERVED_63_56_SHIFT					56
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_4_RESERVED_63_56_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_4_RESERVED_63_56_SMASK					0xFF00000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_4_INFO_MBE_3_SHIFT					42
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_4_INFO_MBE_3_MASK						0x3FFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_4_INFO_MBE_3_SMASK					0xFFFC0000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_4_INFO_MBE_2_SHIFT					28
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_4_INFO_MBE_2_MASK						0x3FFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_4_INFO_MBE_2_SMASK					0x3FFF0000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_4_INFO_MBE_1_SHIFT					14
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_4_INFO_MBE_1_MASK						0x3FFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_4_INFO_MBE_1_SMASK					0xFFFC000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_4_INFO_MBE_0_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_4_INFO_MBE_0_MASK						0x3FFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_4_INFO_MBE_0_SMASK					0x3FFFull
/*
* Table #106 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_OPB_BE_5
* This is the error information CSR for a bit error occurring in the OPB. State 
* in this CSR is updated when #%%#opb_mbe#%%# or #%%#opb_sbe#%%# error flags are 
* set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_5								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002358)
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_5_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_5_MSGID_SBE_3_SHIFT					48
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_5_MSGID_SBE_3_MASK					0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_5_MSGID_SBE_3_SMASK					0xFFFF000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_5_MSGID_SBE_2_SHIFT					32
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_5_MSGID_SBE_2_MASK					0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_5_MSGID_SBE_2_SMASK					0xFFFF00000000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_5_MSGID_SBE_1_SHIFT					16
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_5_MSGID_SBE_1_MASK					0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_5_MSGID_SBE_1_SMASK					0xFFFF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_5_MSGID_SBE_0_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_5_MSGID_SBE_0_MASK					0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_OPB_BE_5_MSGID_SBE_0_SMASK					0xFFFFull
/*
* Table #107 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_0
* This is the error information CSR for a bit error occurring in the Packet ID 
* Linked List. State in this CSR is updated when #%%#pktid_list_mbe#%%# or 
* #%%#pktid_list_sbe#%%# error flags are set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_0							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002370)
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_0_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_0_RESERVED_63_48_SHIFT				48
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_0_RESERVED_63_48_MASK				0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_0_RESERVED_63_48_SMASK				0xFFFF000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_0_SYNDROME_SBE_7_SHIFT				42
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_0_SYNDROME_SBE_7_MASK				0x3Full
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_0_SYNDROME_SBE_7_SMASK				0xFC0000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_0_SYNDROME_SBE_6_SHIFT				36
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_0_SYNDROME_SBE_6_MASK				0x3Full
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_0_SYNDROME_SBE_6_SMASK				0x3F000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_0_SYNDROME_SBE_5_SHIFT				30
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_0_SYNDROME_SBE_5_MASK				0x3Full
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_0_SYNDROME_SBE_5_SMASK				0xFC0000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_0_SYNDROME_SBE_4_SHIFT				24
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_0_SYNDROME_SBE_4_MASK				0x3Full
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_0_SYNDROME_SBE_4_SMASK				0x3F000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_0_SYNDROME_SBE_3_SHIFT				18
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_0_SYNDROME_SBE_3_MASK				0x3Full
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_0_SYNDROME_SBE_3_SMASK				0xFC0000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_0_SYNDROME_SBE_2_SHIFT				12
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_0_SYNDROME_SBE_2_MASK				0x3Full
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_0_SYNDROME_SBE_2_SMASK				0x3F000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_0_SYNDROME_SBE_1_SHIFT				6
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_0_SYNDROME_SBE_1_MASK				0x3Full
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_0_SYNDROME_SBE_1_SMASK				0xFC0ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_0_SYNDROME_SBE_0_SHIFT				0
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_0_SYNDROME_SBE_0_MASK				0x3Full
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_0_SYNDROME_SBE_0_SMASK				0x3Full
/*
* Table #108 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_1
* This is the error information CSR for a bit error occurring in the Packet ID 
* Linked List. State in this CSR is updated when #%%#pktid_list_mbe#%%# or 
* #%%#pktid_list_sbe#%%# error flags are set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_1							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002378)
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_1_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_1_RESERVED_63_48_SHIFT				48
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_1_RESERVED_63_48_MASK				0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_1_RESERVED_63_48_SMASK				0xFFFF000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_1_SYNDROME_MBE_7_SHIFT				42
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_1_SYNDROME_MBE_7_MASK				0x3Full
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_1_SYNDROME_MBE_7_SMASK				0xFC0000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_1_SYNDROME_MBE_6_SHIFT				36
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_1_SYNDROME_MBE_6_MASK				0x3Full
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_1_SYNDROME_MBE_6_SMASK				0x3F000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_1_SYNDROME_MBE_5_SHIFT				30
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_1_SYNDROME_MBE_5_MASK				0x3Full
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_1_SYNDROME_MBE_5_SMASK				0xFC0000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_1_SYNDROME_MBE_4_SHIFT				24
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_1_SYNDROME_MBE_4_MASK				0x3Full
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_1_SYNDROME_MBE_4_SMASK				0x3F000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_1_SYNDROME_MBE_3_SHIFT				18
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_1_SYNDROME_MBE_3_MASK				0x3Full
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_1_SYNDROME_MBE_3_SMASK				0xFC0000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_1_SYNDROME_MBE_2_SHIFT				12
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_1_SYNDROME_MBE_2_MASK				0x3Full
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_1_SYNDROME_MBE_2_SMASK				0x3F000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_1_SYNDROME_MBE_1_SHIFT				6
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_1_SYNDROME_MBE_1_MASK				0x3Full
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_1_SYNDROME_MBE_1_SMASK				0xFC0ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_1_SYNDROME_MBE_0_SHIFT				0
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_1_SYNDROME_MBE_0_MASK				0x3Full
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_1_SYNDROME_MBE_0_SMASK				0x3Full
/*
* Table #109 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_2
* This is the error information CSR for a bit error occurring in the Packet ID 
* Linked List. State in this CSR is updated when #%%#pktid_list_mbe#%%# or 
* #%%#pktid_list_sbe#%%# error flags are set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_2							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002380)
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_2_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_2_RESERVED_63_16_SHIFT				16
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_2_RESERVED_63_16_MASK				0xFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_2_RESERVED_63_16_SMASK				0xFFFFFFFFFFFF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_2_DOMAIN_MBE_SHIFT					8
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_2_DOMAIN_MBE_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_2_DOMAIN_MBE_SMASK					0xFF00ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_2_DOMAIN_SBE_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_2_DOMAIN_SBE_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_2_DOMAIN_SBE_SMASK					0xFFull
/*
* Table #110 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_3
* This is the error information CSR for a bit error occurring in the Packet ID 
* Linked List. State in this CSR is updated when #%%#pktid_list_mbe#%%# or 
* #%%#pktid_list_sbe#%%# error flags are set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_3							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002388)
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_3_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_3_RESERVED_63_56_SHIFT				56
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_3_RESERVED_63_56_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_3_RESERVED_63_56_SMASK				0xFF00000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_3_ADDRESS_SBE_3_SHIFT				42
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_3_ADDRESS_SBE_3_MASK				0x3FFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_3_ADDRESS_SBE_3_SMASK				0xFFFC0000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_3_ADDRESS_SBE_2_SHIFT				28
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_3_ADDRESS_SBE_2_MASK				0x3FFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_3_ADDRESS_SBE_2_SMASK				0x3FFF0000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_3_ADDRESS_SBE_1_SHIFT				14
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_3_ADDRESS_SBE_1_MASK				0x3FFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_3_ADDRESS_SBE_1_SMASK				0xFFFC000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_3_ADDRESS_SBE_0_SHIFT				0
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_3_ADDRESS_SBE_0_MASK				0x3FFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_3_ADDRESS_SBE_0_SMASK				0x3FFFull
/*
* Table #111 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_4
* This is the error information CSR for a bit error occurring in the Packet ID 
* Linked List. State in this CSR is updated when #%%#pktid_list_mbe#%%# or 
* #%%#pktid_list_sbe#%%# error flags are set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_4							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002390)
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_4_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_4_RESERVED_63_56_SHIFT				56
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_4_RESERVED_63_56_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_4_RESERVED_63_56_SMASK				0xFF00000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_4_ADDRESS_SBE_7_SHIFT				42
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_4_ADDRESS_SBE_7_MASK				0x3FFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_4_ADDRESS_SBE_7_SMASK				0xFFFC0000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_4_ADDRESS_SBE_6_SHIFT				28
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_4_ADDRESS_SBE_6_MASK				0x3FFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_4_ADDRESS_SBE_6_SMASK				0x3FFF0000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_4_ADDRESS_SBE_5_SHIFT				14
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_4_ADDRESS_SBE_5_MASK				0x3FFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_4_ADDRESS_SBE_5_SMASK				0xFFFC000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_4_ADDRESS_SBE_4_SHIFT				0
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_4_ADDRESS_SBE_4_MASK				0x3FFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_4_ADDRESS_SBE_4_SMASK				0x3FFFull
/*
* Table #112 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_5
* This is the error information CSR for a bit error occurring in the Packet ID 
* Linked List. State in this CSR is updated when #%%#pktid_list_mbe#%%# or 
* #%%#pktid_list_sbe#%%# error flags are set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_5							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002398)
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_5_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_5_RESERVED_63_56_SHIFT				56
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_5_RESERVED_63_56_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_5_RESERVED_63_56_SMASK				0xFF00000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_5_ADDRESS_MBE_3_SHIFT				42
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_5_ADDRESS_MBE_3_MASK				0x3FFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_5_ADDRESS_MBE_3_SMASK				0xFFFC0000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_5_ADDRESS_MBE_2_SHIFT				28
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_5_ADDRESS_MBE_2_MASK				0x3FFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_5_ADDRESS_MBE_2_SMASK				0x3FFF0000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_5_ADDRESS_MBE_1_SHIFT				14
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_5_ADDRESS_MBE_1_MASK				0x3FFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_5_ADDRESS_MBE_1_SMASK				0xFFFC000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_5_ADDRESS_MBE_0_SHIFT				0
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_5_ADDRESS_MBE_0_MASK				0x3FFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_5_ADDRESS_MBE_0_SMASK				0x3FFFull
/*
* Table #113 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_6
* This is the error information CSR for a bit error occurring in the Packet ID 
* Linked List. State in this CSR is updated when #%%#pktid_list_mbe#%%# or 
* #%%#pktid_list_sbe#%%# error flags are set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_6							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000023A0)
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_6_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_6_RESERVED_63_56_SHIFT				56
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_6_RESERVED_63_56_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_6_RESERVED_63_56_SMASK				0xFF00000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_6_ADDRESS_MBE_7_SHIFT				42
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_6_ADDRESS_MBE_7_MASK				0x3FFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_6_ADDRESS_MBE_7_SMASK				0xFFFC0000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_6_ADDRESS_MBE_6_SHIFT				28
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_6_ADDRESS_MBE_6_MASK				0x3FFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_6_ADDRESS_MBE_6_SMASK				0x3FFF0000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_6_ADDRESS_MBE_5_SHIFT				14
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_6_ADDRESS_MBE_5_MASK				0x3FFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_6_ADDRESS_MBE_5_SMASK				0xFFFC000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_6_ADDRESS_MBE_4_SHIFT				0
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_6_ADDRESS_MBE_4_MASK				0x3FFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKTID_LIST_BE_6_ADDRESS_MBE_4_SMASK				0x3FFFull
/*
* Table #114 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_HASH_TABLE_BE
* This is the error information CSR for a bit error occurring in the Hash Table. 
* State in this CSR is updated when #%%#hash_table_mbe#%%# or #%%#hash_table_sbe#%%# 
* error flags are set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000023A8)
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_RESERVED_63_32_SHIFT				32
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_RESERVED_63_32_MASK				0xFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_RESERVED_63_32_SMASK				0xFFFFFFFF00000000ull
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_SYNDROME_MBE_SHIFT					24
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_SYNDROME_MBE_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_SYNDROME_MBE_SMASK					0xFF000000ull
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_SYNDROME_SBE_SHIFT					16
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_SYNDROME_SBE_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_SYNDROME_SBE_SMASK					0xFF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_ADDRESS_MBE_SHIFT					8
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_ADDRESS_MBE_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_ADDRESS_MBE_SMASK					0xFF00ull
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_ADDRESS_SBE_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_ADDRESS_SBE_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TABLE_BE_ADDRESS_SBE_SMASK					0xFFull
/*
* Table #115 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE
* Error Info for the PSN Cache tag #%%#psn_cache_tag_mbe#%%# events. There are 8 
* ecc domains each domain covers two tag ways. tag_mem[543:0] = 
* {tag_ecc[7:0][7:0],tag_way_data[7:0][1:0][29:0]}
*/
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000023B0)
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_RESERVED_63_34_SHIFT				34
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_RESERVED_63_34_MASK				0x3FFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_RESERVED_63_34_SMASK				0xFFFFFFFC00000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_MBE_LAST_ADDRESS_SHIFT				23
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_MBE_LAST_ADDRESS_MASK				0x7FFull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_MBE_LAST_ADDRESS_SMASK				0x3FF800000ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_MBE_COUNT_SHIFT				19
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_MBE_COUNT_MASK					0xFull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_MBE_COUNT_SMASK				0x780000ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_MBE_SHIFT					11
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_MBE_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_MBE_SMASK					0x7F800ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_MBE_LAST_DOMAIN_SHIFT				8
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_MBE_LAST_DOMAIN_MASK				0x7ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_MBE_LAST_DOMAIN_SMASK				0x700ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_MBE_LAST_SYNDROME_SHIFT			0
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_MBE_LAST_SYNDROME_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_MBE_MBE_LAST_SYNDROME_SMASK			0xFFull
/*
* Table #116 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE
* Error Info for the PSN Cache tag #%%#psn_cache_tag_sbe#%%# events. There are 8 
* ecc domains each domain covers two tag ways. tag_mem[543:0] = 
* {tag_ecc[7:0][7:0],tag_way_data[7:0][1:0][29:0]}
*/
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000023B8)
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_RESERVED_63_42_SHIFT				42
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_RESERVED_63_42_MASK				0x3FFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_RESERVED_63_42_SMASK				0xFFFFFC0000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_SBE_LAST_ADDRESS_SHIFT				31
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_SBE_LAST_ADDRESS_MASK				0x7FFull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_SBE_LAST_ADDRESS_SMASK				0x3FF80000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_SBE_COUNT_SHIFT				19
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_SBE_COUNT_MASK					0xFFFull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_SBE_COUNT_SMASK				0x7FF80000ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_SBE_SHIFT					11
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_SBE_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_SBE_SMASK					0x7F800ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_SBE_LAST_DOMAIN_SHIFT				8
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_SBE_LAST_DOMAIN_MASK				0x7ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_SBE_LAST_DOMAIN_SMASK				0x700ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_SBE_LAST_SYNDROME_SHIFT			0
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_SBE_LAST_SYNDROME_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_TAG_SBE_SBE_LAST_SYNDROME_SMASK			0xFFull
/*
* Table #117 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE
* Error Info for the PSN Cache Data #%%#psn_cache_data_mbe#%%# and 
* #%%#psn_cache_data_sbe#%%# events. There is no address associated with these. 
* 
*/
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000023C0)
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE_RESERVED_63_32_SHIFT			32
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE_RESERVED_63_32_MASK			0xFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE_RESERVED_63_32_SMASK			0xFFFFFFFF00000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE_SBE_COUNT_SHIFT				20
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE_SBE_COUNT_MASK				0xFFFull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE_SBE_COUNT_SMASK				0xFFF00000ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE_SBE_LAST_SYNDROME_SHIFT			12
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE_SBE_LAST_SYNDROME_MASK			0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE_SBE_LAST_SYNDROME_SMASK			0xFF000ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE_MBE_COUNT_SHIFT				8
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE_MBE_COUNT_MASK				0xFull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE_MBE_COUNT_SMASK				0xF00ull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE_MBE_LAST_SYNDROME_SHIFT			0
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE_MBE_LAST_SYNDROME_MASK			0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_PSN_CACHE_DATA_SBE_MBE_MBE_LAST_SYNDROME_SMASK			0xFFull
/*
* Table #118 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_AT_RSP
* This is the error information CSR for a error detected in the AT response 
* Interface. 
*/
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP								(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000023C8)
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_RESERVED_63_14_SHIFT					14
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_RESERVED_63_14_MASK					0x3FFFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_RESERVED_63_14_SMASK					0xFFFFFFFFFFFFC000ull
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_TID_SHIFT							4
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_TID_MASK							0x3FFull
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_TID_SMASK							0x3FF0ull
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_ENCODING_SHIFT						0
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_ENCODING_MASK						0xFull
#define FXR_TXOTR_PKT_ERR_INFO_AT_RSP_ENCODING_SMASK						0xFull
/*
* Table #119 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_HI_RSP
* This is the error information CSR for a error detected in the HI response 
* Interface. 
*/
#define FXR_TXOTR_PKT_ERR_INFO_HI_RSP								(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000023D0)
#define FXR_TXOTR_PKT_ERR_INFO_HI_RSP_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_HI_RSP_RESERVED_63_16_SHIFT					16
#define FXR_TXOTR_PKT_ERR_INFO_HI_RSP_RESERVED_63_16_MASK					0xFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_HI_RSP_RESERVED_63_16_SMASK					0xFFFFFFFFFFFF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_HI_RSP_TID_SHIFT							4
#define FXR_TXOTR_PKT_ERR_INFO_HI_RSP_TID_MASK							0xFFFull
#define FXR_TXOTR_PKT_ERR_INFO_HI_RSP_TID_SMASK							0xFFF0ull
#define FXR_TXOTR_PKT_ERR_INFO_HI_RSP_ENCODING_SHIFT						0
#define FXR_TXOTR_PKT_ERR_INFO_HI_RSP_ENCODING_MASK						0xFull
#define FXR_TXOTR_PKT_ERR_INFO_HI_RSP_ENCODING_SMASK						0xFull
/*
* Table #120 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_UNCONNECTED_DLID
* This is the error information CSR for error related to unconnected DLID 
* checks. 
*/
#define FXR_TXOTR_PKT_ERR_INFO_UNCONNECTED_DLID							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000023D8)
#define FXR_TXOTR_PKT_ERR_INFO_UNCONNECTED_DLID_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_UNCONNECTED_DLID_RESERVED_63_28_SHIFT				28
#define FXR_TXOTR_PKT_ERR_INFO_UNCONNECTED_DLID_RESERVED_63_28_MASK				0xFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_UNCONNECTED_DLID_RESERVED_63_28_SMASK				0xFFFFFFFFF0000000ull
#define FXR_TXOTR_PKT_ERR_INFO_UNCONNECTED_DLID_DLID_SHIFT					4
#define FXR_TXOTR_PKT_ERR_INFO_UNCONNECTED_DLID_DLID_MASK					0xFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_UNCONNECTED_DLID_DLID_SMASK					0xFFFFFF0ull
#define FXR_TXOTR_PKT_ERR_INFO_UNCONNECTED_DLID_MCTC_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_UNCONNECTED_DLID_MCTC_MASK					0xFull
#define FXR_TXOTR_PKT_ERR_INFO_UNCONNECTED_DLID_MCTC_SMASK					0xFull
/*
* Table #121 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_PKT_DONE
* This is the error information CSR for error related to Packet done interface. 
* 
*/
#define FXR_TXOTR_PKT_ERR_INFO_PKT_DONE								(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000023E0)
#define FXR_TXOTR_PKT_ERR_INFO_PKT_DONE_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKT_DONE_RESERVED_63_23_SHIFT					23
#define FXR_TXOTR_PKT_ERR_INFO_PKT_DONE_RESERVED_63_23_MASK					0x1FFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKT_DONE_RESERVED_63_23_SMASK					0xFFFFFFFFFF800000ull
#define FXR_TXOTR_PKT_ERR_INFO_PKT_DONE_PKTID_SHIFT						7
#define FXR_TXOTR_PKT_ERR_INFO_PKT_DONE_PKTID_MASK						0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_PKT_DONE_PKTID_SMASK						0x7FFF80ull
#define FXR_TXOTR_PKT_ERR_INFO_PKT_DONE_ENCODING_SHIFT						3
#define FXR_TXOTR_PKT_ERR_INFO_PKT_DONE_ENCODING_MASK						0xFull
#define FXR_TXOTR_PKT_ERR_INFO_PKT_DONE_ENCODING_SMASK						0x78ull
#define FXR_TXOTR_PKT_ERR_INFO_PKT_DONE_MCTC_SHIFT						0
#define FXR_TXOTR_PKT_ERR_INFO_PKT_DONE_MCTC_MASK						0x7ull
#define FXR_TXOTR_PKT_ERR_INFO_PKT_DONE_MCTC_SMASK						0x7ull
/*
* Table #122 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_HASH_TIMEOUT
* This is the error information CSR for an entry in the Hash Table which has 
* experienced a timeout. State in this CSR is updated when #%%#hash_timeout#%%# 
* error flag is set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TIMEOUT							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000023E8)
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TIMEOUT_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TIMEOUT_RESERVED_63_24_SHIFT				24
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TIMEOUT_RESERVED_63_24_MASK					0xFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TIMEOUT_RESERVED_63_24_SMASK				0xFFFFFFFFFF000000ull
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TIMEOUT_PKTID_SHIFT						8
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TIMEOUT_PKTID_MASK						0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TIMEOUT_PKTID_SMASK						0xFFFF00ull
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TIMEOUT_ADDR_SHIFT						0
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TIMEOUT_ADDR_MASK						0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_HASH_TIMEOUT_ADDR_SMASK						0xFFull
/*
* Table #123 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE
* This is the error information CSR for capturing the Message Class, Traffic 
* class & packet ID values related to unknown_e2e_cmd_rcvd, psn_max_dist_vio_err, 
* oos_nack_rcvd, resource_nack_rcvd & non_retransmt_nack_rcvd errors.
*/
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000023F0)
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_RESERVED_63_SHIFT				63
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_RESERVED_63_MASK				0x1ull
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_RESERVED_63_SMASK				0x8000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_PKTID_LIST_REN_FIFO_OVERFLOW_TC_SHIFT		61
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_PKTID_LIST_REN_FIFO_OVERFLOW_TC_MASK		0x3ull
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_PKTID_LIST_REN_FIFO_OVERFLOW_TC_SMASK		0x6000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_PKTID_LIST_REN_FIFO_UNDFLOW_TC_SHIFT		59
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_PKTID_LIST_REN_FIFO_UNDFLOW_TC_MASK		0x3ull
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_PKTID_LIST_REN_FIFO_UNDFLOW_TC_SMASK		0x1800000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_UNKNOWN_E2E_CMD_TC_SHIFT			57
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_UNKNOWN_E2E_CMD_TC_MASK				0x3ull
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_UNKNOWN_E2E_CMD_TC_SMASK			0x600000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_PSN_MAX_DIST_VIO_TC_SHIFT			55
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_PSN_MAX_DIST_VIO_TC_MASK			0x3ull
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_PSN_MAX_DIST_VIO_TC_SMASK			0x180000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_OOS_NACK_RCVD_TC_SHIFT				53
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_OOS_NACK_RCVD_TC_MASK				0x3ull
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_OOS_NACK_RCVD_TC_SMASK				0x60000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_OOS_NACK_RCVD_PKTID_SHIFT			37
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_OOS_NACK_RCVD_PKTID_MASK			0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_OOS_NACK_RCVD_PKTID_SMASK			0x1FFFE000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_RESOURCE_NACK_RCVD_TC_SHIFT			35
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_RESOURCE_NACK_RCVD_TC_MASK			0x3ull
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_RESOURCE_NACK_RCVD_TC_SMASK			0x1800000000ull
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_RESOURCE_NACK_RCVD_PKTID_SHIFT			19
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_RESOURCE_NACK_RCVD_PKTID_MASK			0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_RESOURCE_NACK_RCVD_PKTID_SMASK			0x7FFF80000ull
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_NON_RETRANS_NACK_RCVD_MCTC_SHIFT		16
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_NON_RETRANS_NACK_RCVD_MCTC_MASK			0x7ull
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_NON_RETRANS_NACK_RCVD_MCTC_SMASK		0x70000ull
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_NON_RETRANS_NACK_RCVD_PKTID_SHIFT		0
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_NON_RETRANS_NACK_RCVD_PKTID_MASK		0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_TC_PKTID_CAPTURE_NON_RETRANS_NACK_RCVD_PKTID_SMASK		0xFFFFull
/*
* Table #124 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_TUPPLE_MISMATCH
* This is the error information CSR for capturing the MCTC & packet ID values 
* related to tuple mismatch & tuple mismatch opportunistic checks.
*/
#define FXR_TXOTR_PKT_ERR_INFO_TUPPLE_MISMATCH							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000023F8)
#define FXR_TXOTR_PKT_ERR_INFO_TUPPLE_MISMATCH_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_TUPPLE_MISMATCH_RESERVED_63_38_SHIFT				38
#define FXR_TXOTR_PKT_ERR_INFO_TUPPLE_MISMATCH_RESERVED_63_38_MASK				0x3FFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_TUPPLE_MISMATCH_RESERVED_63_38_SMASK				0xFFFFFFC000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_TUPPLE_MISMATCH_TUPLE_MISMATCH_MCTC_SHIFT			35
#define FXR_TXOTR_PKT_ERR_INFO_TUPPLE_MISMATCH_TUPLE_MISMATCH_MCTC_MASK				0x7ull
#define FXR_TXOTR_PKT_ERR_INFO_TUPPLE_MISMATCH_TUPLE_MISMATCH_MCTC_SMASK			0x3800000000ull
#define FXR_TXOTR_PKT_ERR_INFO_TUPPLE_MISMATCH_TUPLE_MISMATCH_PKTID_SHIFT			19
#define FXR_TXOTR_PKT_ERR_INFO_TUPPLE_MISMATCH_TUPLE_MISMATCH_PKTID_MASK			0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_TUPPLE_MISMATCH_TUPLE_MISMATCH_PKTID_SMASK			0x7FFF80000ull
#define FXR_TXOTR_PKT_ERR_INFO_TUPPLE_MISMATCH_TUPLE_MISMATCH_OPP_MCTC_SHIFT			16
#define FXR_TXOTR_PKT_ERR_INFO_TUPPLE_MISMATCH_TUPLE_MISMATCH_OPP_MCTC_MASK			0x7ull
#define FXR_TXOTR_PKT_ERR_INFO_TUPPLE_MISMATCH_TUPLE_MISMATCH_OPP_MCTC_SMASK			0x70000ull
#define FXR_TXOTR_PKT_ERR_INFO_TUPPLE_MISMATCH_TUPLE_MISMATCH_OPP_PKTID_SHIFT			0
#define FXR_TXOTR_PKT_ERR_INFO_TUPPLE_MISMATCH_TUPLE_MISMATCH_OPP_PKTID_MASK			0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_TUPPLE_MISMATCH_TUPLE_MISMATCH_OPP_PKTID_SMASK			0xFFFFull
/*
* Table #125 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE
* This is the error information CSR for a bit error occurring in the FPE Data 
* Memory. State in this CSR is updated when #%%#fpe_data_mem_mbe#%%# or 
* #%%#fpe_data_mem_sbe#%%# error flags are set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002400)
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_RESERVED_63_36_SHIFT				36
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_RESERVED_63_36_MASK				0xFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_RESERVED_63_36_SMASK				0xFFFFFFF000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_SYNDROME_MBE_SHIFT				28
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_SYNDROME_MBE_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_SYNDROME_MBE_SMASK				0xFF0000000ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_SYNDROME_SBE_SHIFT				20
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_SYNDROME_SBE_MASK				0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_SYNDROME_SBE_SMASK				0xFF00000ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_ADDRESS_MBE_SHIFT				10
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_ADDRESS_MBE_MASK					0x3FFull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_ADDRESS_MBE_SMASK				0xFFC00ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_ADDRESS_SBE_SHIFT				0
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_ADDRESS_SBE_MASK					0x3FFull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_DATA_MEM_BE_ADDRESS_SBE_SMASK				0x3FFull
/*
* Table #126 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE
* This is the error information CSR for a bit error occurring in the FPE Program 
* Memory. State in this CSR is updated when #%%#fpe_prog_mem_mbe#%%# or 
* #%%#fpe_prog_mem_sbe#%%# error flags are set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002408)
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_RESERVED_63_40_SHIFT				40
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_RESERVED_63_40_MASK				0xFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_RESERVED_63_40_SMASK				0xFFFFFF0000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_SYNDROME_MBE_SHIFT				33
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_SYNDROME_MBE_MASK				0x7Full
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_SYNDROME_MBE_SMASK				0xFE00000000ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_SYNDROME_SBE_SHIFT				26
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_SYNDROME_SBE_MASK				0x7Full
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_SYNDROME_SBE_SMASK				0x1FC000000ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_ADDRESS_MBE_SHIFT				13
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_ADDRESS_MBE_MASK					0x1FFFull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_ADDRESS_MBE_SMASK				0x3FFE000ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_ADDRESS_SBE_SHIFT				0
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_ADDRESS_SBE_MASK					0x1FFFull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_PROG_MEM_BE_ADDRESS_SBE_SMASK				0x1FFFull
/*
* Table #127 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_FPE_FIRMWARE
* This is the error information CSR for an error occurring in the firmware of 
* the Fragmentation Programmable Engine. State in this CSR is updated when 
* #%%#fpe_firmware#%%# error flag is set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002418)
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_FIRMWARE_ERR_SHIFT					63
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_FIRMWARE_ERR_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_FIRMWARE_ERR_SMASK					0x8000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_RESERVED_62_32_SHIFT				32
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_RESERVED_62_32_MASK					0x7FFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_RESERVED_62_32_SMASK				0x7FFFFFFF00000000ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_MSG_ID_SHIFT					16
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_MSG_ID_MASK						0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_MSG_ID_SMASK					0xFFFF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_RESERVED_15_13_SHIFT				13
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_RESERVED_15_13_MASK					0x7ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_RESERVED_15_13_SMASK				0xE000ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_CTXT_SHIFT						8
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_CTXT_MASK						0x1Full
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_CTXT_SMASK						0x1F00ull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_ENCODING_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_ENCODING_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_FPE_FIRMWARE_ENCODING_SMASK					0xFFull
/*
* Table #128 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_HI_HDR_BE
* This is the error information CSR for a bit error occurring in a Host 
* Interface response. State in this CSR is updated when #%%#hi_hdr_mbe#%%# or 
* #%%#hi_hdr_sbe#%%# error flags are set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_HI_HDR_BE							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002420)
#define FXR_TXOTR_PKT_ERR_INFO_HI_HDR_BE_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_HI_HDR_BE_RESERVED_63_28_SHIFT					28
#define FXR_TXOTR_PKT_ERR_INFO_HI_HDR_BE_RESERVED_63_28_MASK					0xFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_HI_HDR_BE_RESERVED_63_28_SMASK					0xFFFFFFFFF0000000ull
#define FXR_TXOTR_PKT_ERR_INFO_HI_HDR_BE_SYNDROME_MBE_SHIFT					20
#define FXR_TXOTR_PKT_ERR_INFO_HI_HDR_BE_SYNDROME_MBE_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_HI_HDR_BE_SYNDROME_MBE_SMASK					0xFF00000ull
#define FXR_TXOTR_PKT_ERR_INFO_HI_HDR_BE_SYNDROME_SBE_SHIFT					12
#define FXR_TXOTR_PKT_ERR_INFO_HI_HDR_BE_SYNDROME_SBE_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_HI_HDR_BE_SYNDROME_SBE_SMASK					0xFF000ull
#define FXR_TXOTR_PKT_ERR_INFO_HI_HDR_BE_TID_SBE_SHIFT						0
#define FXR_TXOTR_PKT_ERR_INFO_HI_HDR_BE_TID_SBE_MASK						0xFFFull
#define FXR_TXOTR_PKT_ERR_INFO_HI_HDR_BE_TID_SBE_SMASK						0xFFFull
/*
* Table #129 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_HI_DATA_BE_0
* This is the error information CSR for a bit error occurring in a Host 
* Interface response. State in this CSR is updated when #%%#hi_data_mbe#%%# or 
* #%%#hi_data_sbe#%%# error flags are set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_0							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002428)
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_0_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_0_SYNDROME_MBE_3_SHIFT				56
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_0_SYNDROME_MBE_3_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_0_SYNDROME_MBE_3_SMASK				0xFF00000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_0_SYNDROME_MBE_2_SHIFT				48
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_0_SYNDROME_MBE_2_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_0_SYNDROME_MBE_2_SMASK				0xFF000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_0_SYNDROME_MBE_1_SHIFT				40
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_0_SYNDROME_MBE_1_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_0_SYNDROME_MBE_1_SMASK				0xFF0000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_0_SYNDROME_MBE_0_SHIFT				32
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_0_SYNDROME_MBE_0_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_0_SYNDROME_MBE_0_SMASK				0xFF00000000ull
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_0_SYNDROME_SBE_3_SHIFT				24
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_0_SYNDROME_SBE_3_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_0_SYNDROME_SBE_3_SMASK				0xFF000000ull
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_0_SYNDROME_SBE_2_SHIFT				16
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_0_SYNDROME_SBE_2_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_0_SYNDROME_SBE_2_SMASK				0xFF0000ull
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_0_SYNDROME_SBE_1_SHIFT				8
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_0_SYNDROME_SBE_1_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_0_SYNDROME_SBE_1_SMASK				0xFF00ull
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_0_SYNDROME_SBE_0_SHIFT				0
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_0_SYNDROME_SBE_0_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_0_SYNDROME_SBE_0_SMASK				0xFFull
/*
* Table #130 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_HI_DATA_BE_1
* This is the error information CSR for a bit error occurring in a Host 
* Interface response. State in this CSR is updated when #%%#hi_data_mbe#%%# or 
* #%%#hi_data_sbe#%%# error flags are set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_1							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002430)
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_1_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_1_RESERVED_63_8_SHIFT					8
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_1_RESERVED_63_8_MASK					0xFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_1_RESERVED_63_8_SMASK					0xFFFFFFFFFFFFFF00ull
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_1_DOMAIN_MBE_SHIFT					4
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_1_DOMAIN_MBE_MASK					0xFull
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_1_DOMAIN_MBE_SMASK					0xF0ull
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_1_DOMAIN_SBE_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_1_DOMAIN_SBE_MASK					0xFull
#define FXR_TXOTR_PKT_ERR_INFO_HI_DATA_BE_1_DOMAIN_SBE_SMASK					0xFull
/*
* Table #131 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE
* Error Injection for the various sbe/mbe fields. Setting a single bit will 
* cause an sbe in the ecc field and cause that bit to be flipped, no data bits 
* will be flipped. Setting 2 bits will cause an mbe. An even number of bits > 2 
* may or may not cause an mbe. Setting an odd number of bits that is a legal 
* syndrome for that data width will cause an sbe and the corresponding data bit 
* to be flipped. See shrtl_ecc_correct.sv for legal syndromes for each data 
* width.
*/
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002438)
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_RESERVED_63_21_SHIFT				21
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_RESERVED_63_21_MASK				0x7FFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_RESERVED_63_21_SMASK				0xFFFFFFFFFFE00000ull
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_PSN_CACHE_DATA_ERR_INJ_ENABLE_SHIFT		20
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_PSN_CACHE_DATA_ERR_INJ_ENABLE_MASK		0x1ull
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_PSN_CACHE_DATA_ERR_INJ_ENABLE_SMASK		0x100000ull
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_PSN_CACHE_DATA_ERR_INJ_MASK_SHIFT		12
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_PSN_CACHE_DATA_ERR_INJ_MASK_MASK		0xFFull
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_PSN_CACHE_DATA_ERR_INJ_MASK_SMASK		0xFF000ull
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_PSN_CACHE_TAG_ERR_INJ_ENABLE_SHIFT		11
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_PSN_CACHE_TAG_ERR_INJ_ENABLE_MASK		0x1ull
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_PSN_CACHE_TAG_ERR_INJ_ENABLE_SMASK		0x800ull
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_PSN_CACHE_TAG_ERR_INJ_DOMAIN_SHIFT		8
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_PSN_CACHE_TAG_ERR_INJ_DOMAIN_MASK		0x7ull
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_PSN_CACHE_TAG_ERR_INJ_DOMAIN_SMASK		0x700ull
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_PSN_CACHE_TAG_ERR_INJ_MASK_SHIFT		0
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_PSN_CACHE_TAG_ERR_INJ_MASK_MASK		0xFFull
#define FXR_TXOTR_PKT_ERR_INJECT_PSN_CACHE_SBE_MBE_PSN_CACHE_TAG_ERR_INJ_MASK_SMASK		0xFFull
/*
* Table #132 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_MAX_MTU
* This is the error information CSR for a Maximum MTU violation error occurring 
* in the Packet Partition. State in this CSR is updated when max_mtu_vio error 
* flags is set.
*/
#define FXR_TXOTR_PKT_ERR_INFO_MAX_MTU								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002440)
#define FXR_TXOTR_PKT_ERR_INFO_MAX_MTU_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_MAX_MTU_RESERVED_63_38_SHIFT					38
#define FXR_TXOTR_PKT_ERR_INFO_MAX_MTU_RESERVED_63_38_MASK					0x3FFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_MAX_MTU_RESERVED_63_38_SMASK					0xFFFFFFC000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_MAX_MTU_DLID_SHIFT						14
#define FXR_TXOTR_PKT_ERR_INFO_MAX_MTU_DLID_MASK						0xFFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_MAX_MTU_DLID_SMASK						0x3FFFFFC000ull
#define FXR_TXOTR_PKT_ERR_INFO_MAX_MTU_PACKET_LENGTH_SHIFT					2
#define FXR_TXOTR_PKT_ERR_INFO_MAX_MTU_PACKET_LENGTH_MASK					0xFFFull
#define FXR_TXOTR_PKT_ERR_INFO_MAX_MTU_PACKET_LENGTH_SMASK					0x3FFCull
#define FXR_TXOTR_PKT_ERR_INFO_MAX_MTU_TC_SHIFT							0
#define FXR_TXOTR_PKT_ERR_INFO_MAX_MTU_TC_MASK							0x3ull
#define FXR_TXOTR_PKT_ERR_INFO_MAX_MTU_TC_SMASK							0x3ull
/*
* Table #133 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INFO_RXE2E_STATUS_TO_TIMEOUT
* This is the error information CSR for capturing the MCTC & packet ID values 
* related to RxE2E received Error status and about to timeout checks.
*/
#define FXR_TXOTR_PKT_ERR_INFO_RXE2E_STATUS_TO_TIMEOUT						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002448)
#define FXR_TXOTR_PKT_ERR_INFO_RXE2E_STATUS_TO_TIMEOUT_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_RXE2E_STATUS_TO_TIMEOUT_RESERVED_63_38_SHIFT			38
#define FXR_TXOTR_PKT_ERR_INFO_RXE2E_STATUS_TO_TIMEOUT_RESERVED_63_38_MASK			0x3FFFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_RXE2E_STATUS_TO_TIMEOUT_RESERVED_63_38_SMASK			0xFFFFFFC000000000ull
#define FXR_TXOTR_PKT_ERR_INFO_RXE2E_STATUS_TO_TIMEOUT_ABOUT_TO_TIMEOUT_MCTC_SHIFT		35
#define FXR_TXOTR_PKT_ERR_INFO_RXE2E_STATUS_TO_TIMEOUT_ABOUT_TO_TIMEOUT_MCTC_MASK		0x7ull
#define FXR_TXOTR_PKT_ERR_INFO_RXE2E_STATUS_TO_TIMEOUT_ABOUT_TO_TIMEOUT_MCTC_SMASK		0x3800000000ull
#define FXR_TXOTR_PKT_ERR_INFO_RXE2E_STATUS_TO_TIMEOUT_ABOUT_TO_TIMEOUT_PKTID_SHIFT		19
#define FXR_TXOTR_PKT_ERR_INFO_RXE2E_STATUS_TO_TIMEOUT_ABOUT_TO_TIMEOUT_PKTID_MASK		0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_RXE2E_STATUS_TO_TIMEOUT_ABOUT_TO_TIMEOUT_PKTID_SMASK		0x7FFF80000ull
#define FXR_TXOTR_PKT_ERR_INFO_RXE2E_STATUS_TO_TIMEOUT_RX_STATUS_RXE2E_MCTC_SHIFT		16
#define FXR_TXOTR_PKT_ERR_INFO_RXE2E_STATUS_TO_TIMEOUT_RX_STATUS_RXE2E_MCTC_MASK		0x7ull
#define FXR_TXOTR_PKT_ERR_INFO_RXE2E_STATUS_TO_TIMEOUT_RX_STATUS_RXE2E_MCTC_SMASK		0x70000ull
#define FXR_TXOTR_PKT_ERR_INFO_RXE2E_STATUS_TO_TIMEOUT_RX_STATUS_RXE2E_PKTID_SHIFT		0
#define FXR_TXOTR_PKT_ERR_INFO_RXE2E_STATUS_TO_TIMEOUT_RX_STATUS_RXE2E_PKTID_MASK		0xFFFFull
#define FXR_TXOTR_PKT_ERR_INFO_RXE2E_STATUS_TO_TIMEOUT_RX_STATUS_RXE2E_PKTID_SMASK		0xFFFFull
/*
* Table #134 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INJECT_0
* Error Injection for the various sbe/mbe fields. Setting a single bit will 
* cause an sbe in the ecc field and cause that bit to be flipped, no data bits 
* will be flipped. Setting 2 bits will cause an mbe. An even number of bits > 2 
* may or may not cause an mbe. Setting an odd number of bits that is a legal 
* syndrome for that data width will cause an sbe and the corresponding data bit 
* to be flipped. See shrtl_ecc_correct.sv for legal syndromes for each data 
* width.
*/
#define FXR_TXOTR_PKT_ERR_INJECT_0								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002500)
#define FXR_TXOTR_PKT_ERR_INJECT_0_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_0_RESERVED_63_36_SHIFT						36
#define FXR_TXOTR_PKT_ERR_INJECT_0_RESERVED_63_36_MASK						0xFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INJECT_0_RESERVED_63_36_SMASK						0xFFFFFFF000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_0_FP_FIFO_INJECT_EN_SHIFT					32
#define FXR_TXOTR_PKT_ERR_INJECT_0_FP_FIFO_INJECT_EN_MASK					0xFull
#define FXR_TXOTR_PKT_ERR_INJECT_0_FP_FIFO_INJECT_EN_SMASK					0xF00000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_0_FP_FIFO_INJECT_MASK_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INJECT_0_FP_FIFO_INJECT_MASK_MASK					0xFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INJECT_0_FP_FIFO_INJECT_MASK_SMASK					0xFFFFFFFFull
/*
* Table #135 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INJECT_1
* Error Injection for the various sbe/mbe fields. Setting a single bit will 
* cause an sbe in the ecc field and cause that bit to be flipped, no data bits 
* will be flipped. Setting 2 bits will cause an mbe. An even number of bits > 2 
* may or may not cause an mbe. Setting an odd number of bits that is a legal 
* syndrome for that data width will cause an sbe and the corresponding data bit 
* to be flipped. See shrtl_ecc_correct.sv for legal syndromes for each data 
* width.
*/
#define FXR_TXOTR_PKT_ERR_INJECT_1								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002508)
#define FXR_TXOTR_PKT_ERR_INJECT_1_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_1_RESERVED_63_36_SHIFT						36
#define FXR_TXOTR_PKT_ERR_INJECT_1_RESERVED_63_36_MASK						0xFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INJECT_1_RESERVED_63_36_SMASK						0xFFFFFFF000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_1_PRE_FRAG_FIFO_INJECT_EN_SHIFT				32
#define FXR_TXOTR_PKT_ERR_INJECT_1_PRE_FRAG_FIFO_INJECT_EN_MASK					0xFull
#define FXR_TXOTR_PKT_ERR_INJECT_1_PRE_FRAG_FIFO_INJECT_EN_SMASK				0xF00000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_1_PRE_FRAG_FIFO_INJECT_MASK_SHIFT				0
#define FXR_TXOTR_PKT_ERR_INJECT_1_PRE_FRAG_FIFO_INJECT_MASK_MASK				0xFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INJECT_1_PRE_FRAG_FIFO_INJECT_MASK_SMASK				0xFFFFFFFFull
/*
* Table #136 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INJECT_2
* Error Injection for the various sbe/mbe fields. Setting a single bit will 
* cause an sbe in the ecc field and cause that bit to be flipped, no data bits 
* will be flipped. Setting 2 bits will cause an mbe. An even number of bits > 2 
* may or may not cause an mbe. Setting an odd number of bits that is a legal 
* syndrome for that data width will cause an sbe and the corresponding data bit 
* to be flipped. See shrtl_ecc_correct.sv for legal syndromes for each data 
* width.
*/
#define FXR_TXOTR_PKT_ERR_INJECT_2								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002510)
#define FXR_TXOTR_PKT_ERR_INJECT_2_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_2_RESERVED_63_36_SHIFT						36
#define FXR_TXOTR_PKT_ERR_INJECT_2_RESERVED_63_36_MASK						0xFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INJECT_2_RESERVED_63_36_SMASK						0xFFFFFFF000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_2_POST_FRAG_FIFO_INJECT_EN_SHIFT				32
#define FXR_TXOTR_PKT_ERR_INJECT_2_POST_FRAG_FIFO_INJECT_EN_MASK				0xFull
#define FXR_TXOTR_PKT_ERR_INJECT_2_POST_FRAG_FIFO_INJECT_EN_SMASK				0xF00000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_2_POST_FRAG_FIFO_INJECT_MASK_SHIFT				0
#define FXR_TXOTR_PKT_ERR_INJECT_2_POST_FRAG_FIFO_INJECT_MASK_MASK				0xFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INJECT_2_POST_FRAG_FIFO_INJECT_MASK_SMASK				0xFFFFFFFFull
/*
* Table #137 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INJECT_3
* Error Injection for the various sbe/mbe fields. Setting a single bit will 
* cause an sbe in the ecc field and cause that bit to be flipped, no data bits 
* will be flipped. Setting 2 bits will cause an mbe. An even number of bits > 2 
* may or may not cause an mbe. Setting an odd number of bits that is a legal 
* syndrome for that data width will cause an sbe and the corresponding data bit 
* to be flipped. See shrtl_ecc_correct.sv for legal syndromes for each data 
* width.
*/
#define FXR_TXOTR_PKT_ERR_INJECT_3								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002518)
#define FXR_TXOTR_PKT_ERR_INJECT_3_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_3_RESERVED_63_25_SHIFT						25
#define FXR_TXOTR_PKT_ERR_INJECT_3_RESERVED_63_25_MASK						0x7FFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INJECT_3_RESERVED_63_25_SMASK						0xFFFFFFFFFE000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_3_FPE_DATA_INJECT_EN_SHIFT					24
#define FXR_TXOTR_PKT_ERR_INJECT_3_FPE_DATA_INJECT_EN_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_INJECT_3_FPE_DATA_INJECT_EN_SMASK					0x1000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_3_FPE_DATA_INJECT_MASK_SHIFT					16
#define FXR_TXOTR_PKT_ERR_INJECT_3_FPE_DATA_INJECT_MASK_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INJECT_3_FPE_DATA_INJECT_MASK_SMASK					0xFF0000ull
#define FXR_TXOTR_PKT_ERR_INJECT_3_FPE_PROG_INJECT_EN_SHIFT					15
#define FXR_TXOTR_PKT_ERR_INJECT_3_FPE_PROG_INJECT_EN_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_INJECT_3_FPE_PROG_INJECT_EN_SMASK					0x8000ull
#define FXR_TXOTR_PKT_ERR_INJECT_3_FPE_PROG_INJECT_MASK_SHIFT					8
#define FXR_TXOTR_PKT_ERR_INJECT_3_FPE_PROG_INJECT_MASK_MASK					0x7Full
#define FXR_TXOTR_PKT_ERR_INJECT_3_FPE_PROG_INJECT_MASK_SMASK					0x7F00ull
#define FXR_TXOTR_PKT_ERR_INJECT_3_RESERVED_7_0_SHIFT						0
#define FXR_TXOTR_PKT_ERR_INJECT_3_RESERVED_7_0_MASK						0xFFull
#define FXR_TXOTR_PKT_ERR_INJECT_3_RESERVED_7_0_SMASK						0xFFull
/*
* Table #138 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INJECT_4
* Error Injection for the various sbe/mbe fields. Setting a single bit will 
* cause an sbe in the ecc field and cause that bit to be flipped, no data bits 
* will be flipped. Setting 2 bits will cause an mbe. An even number of bits > 2 
* may or may not cause an mbe. Setting an odd number of bits that is a legal 
* syndrome for that data width will cause an sbe and the corresponding data bit 
* to be flipped. See shrtl_ecc_correct.sv for legal syndromes for each data 
* width.
*/
#define FXR_TXOTR_PKT_ERR_INJECT_4								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002520)
#define FXR_TXOTR_PKT_ERR_INJECT_4_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_4_RESERVED_63_36_SHIFT						36
#define FXR_TXOTR_PKT_ERR_INJECT_4_RESERVED_63_36_MASK						0xFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INJECT_4_RESERVED_63_36_SMASK						0xFFFFFFF000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_4_RETRANS_FIFO_INJECT_EN_SHIFT					32
#define FXR_TXOTR_PKT_ERR_INJECT_4_RETRANS_FIFO_INJECT_EN_MASK					0xFull
#define FXR_TXOTR_PKT_ERR_INJECT_4_RETRANS_FIFO_INJECT_EN_SMASK					0xF00000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_4_RETRANS_FIFO_INJECT_MASK_SHIFT				0
#define FXR_TXOTR_PKT_ERR_INJECT_4_RETRANS_FIFO_INJECT_MASK_MASK				0xFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INJECT_4_RETRANS_FIFO_INJECT_MASK_SMASK				0xFFFFFFFFull
/*
* Table #139 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INJECT_5
* Error Injection for the various sbe/mbe fields. Setting a single bit will 
* cause an sbe in the ecc field and cause that bit to be flipped, no data bits 
* will be flipped. Setting 2 bits will cause an mbe. An even number of bits > 2 
* may or may not cause an mbe. Setting an odd number of bits that is a legal 
* syndrome for that data width will cause an sbe and the corresponding data bit 
* to be flipped. See shrtl_ecc_correct.sv for legal syndromes for each data 
* width.
*/
#define FXR_TXOTR_PKT_ERR_INJECT_5								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002528)
#define FXR_TXOTR_PKT_ERR_INJECT_5_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_5_RESERVED_63_45_SHIFT						45
#define FXR_TXOTR_PKT_ERR_INJECT_5_RESERVED_63_45_MASK						0x7FFFFull
#define FXR_TXOTR_PKT_ERR_INJECT_5_RESERVED_63_45_SMASK						0xFFFFE00000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_5_HASH_TABLE_INJECT_EN_SHIFT					44
#define FXR_TXOTR_PKT_ERR_INJECT_5_HASH_TABLE_INJECT_EN_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_INJECT_5_HASH_TABLE_INJECT_EN_SMASK					0x100000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_5_HASH_TABLE_INJECT_MASK_SHIFT					36
#define FXR_TXOTR_PKT_ERR_INJECT_5_HASH_TABLE_INJECT_MASK_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INJECT_5_HASH_TABLE_INJECT_MASK_SMASK					0xFF000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_5_TX_PSN_FIFO_INJECT_EN_SHIFT					32
#define FXR_TXOTR_PKT_ERR_INJECT_5_TX_PSN_FIFO_INJECT_EN_MASK					0xFull
#define FXR_TXOTR_PKT_ERR_INJECT_5_TX_PSN_FIFO_INJECT_EN_SMASK					0xF00000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_5_TX_PSN_FIFO_INJECT_MASK_SHIFT				0
#define FXR_TXOTR_PKT_ERR_INJECT_5_TX_PSN_FIFO_INJECT_MASK_MASK					0xFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INJECT_5_TX_PSN_FIFO_INJECT_MASK_SMASK				0xFFFFFFFFull
/*
* Table #140 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INJECT_6
* Error Injection for the various sbe/mbe fields. Setting a single bit will 
* cause an sbe in the ecc field and cause that bit to be flipped, no data bits 
* will be flipped. Setting 2 bits will cause an mbe. An even number of bits > 2 
* may or may not cause an mbe. Setting an odd number of bits that is a legal 
* syndrome for that data width will cause an sbe and the corresponding data bit 
* to be flipped. See shrtl_ecc_correct.sv for legal syndromes for each data 
* width.
*/
#define FXR_TXOTR_PKT_ERR_INJECT_6								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002530)
#define FXR_TXOTR_PKT_ERR_INJECT_6_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_6_RESERVED_63_56_SHIFT						56
#define FXR_TXOTR_PKT_ERR_INJECT_6_RESERVED_63_56_MASK						0xFFull
#define FXR_TXOTR_PKT_ERR_INJECT_6_RESERVED_63_56_SMASK						0xFF00000000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_6_PKTID_LIST_INJECT_EN_SHIFT					48
#define FXR_TXOTR_PKT_ERR_INJECT_6_PKTID_LIST_INJECT_EN_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INJECT_6_PKTID_LIST_INJECT_EN_SMASK					0xFF000000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_6_PKTID_LIST_INJECT_MASK_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INJECT_6_PKTID_LIST_INJECT_MASK_MASK					0xFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INJECT_6_PKTID_LIST_INJECT_MASK_SMASK					0xFFFFFFFFFFFFull
/*
* Table #141 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INJECT_9
* Error Injection for the various sbe/mbe fields. Setting a single bit will 
* cause an sbe in the ecc field and cause that bit to be flipped, no data bits 
* will be flipped. Setting 2 bits will cause an mbe. An even number of bits > 2 
* may or may not cause an mbe. Setting an odd number of bits that is a legal 
* syndrome for that data width will cause an sbe and the corresponding data bit 
* to be flipped. See shrtl_ecc_correct.sv for legal syndromes for each data 
* width.
*/
#define FXR_TXOTR_PKT_ERR_INJECT_9								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002548)
#define FXR_TXOTR_PKT_ERR_INJECT_9_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_9_RESERVED_63_45_SHIFT						45
#define FXR_TXOTR_PKT_ERR_INJECT_9_RESERVED_63_45_MASK						0x7FFFFull
#define FXR_TXOTR_PKT_ERR_INJECT_9_RESERVED_63_45_SMASK						0xFFFFE00000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_9_HI_HDR_INJECT_EN_SHIFT					44
#define FXR_TXOTR_PKT_ERR_INJECT_9_HI_HDR_INJECT_EN_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_INJECT_9_HI_HDR_INJECT_EN_SMASK					0x100000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_9_HI_HDR_INJECT_MASK_SHIFT					36
#define FXR_TXOTR_PKT_ERR_INJECT_9_HI_HDR_INJECT_MASK_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INJECT_9_HI_HDR_INJECT_MASK_SMASK					0xFF000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_9_RSP_FIFO_INJECT_EN_SHIFT					32
#define FXR_TXOTR_PKT_ERR_INJECT_9_RSP_FIFO_INJECT_EN_MASK					0xFull
#define FXR_TXOTR_PKT_ERR_INJECT_9_RSP_FIFO_INJECT_EN_SMASK					0xF00000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_9_RSP_FIFO_INJECT_MASK_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INJECT_9_RSP_FIFO_INJECT_MASK_MASK					0xFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INJECT_9_RSP_FIFO_INJECT_MASK_SMASK					0xFFFFFFFFull
/*
* Table #142 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INJECT_10
* Error Injection for the various sbe/mbe fields. Setting a single bit will 
* cause an sbe in the ecc field and cause that bit to be flipped, no data bits 
* will be flipped. Setting 2 bits will cause an mbe. An even number of bits > 2 
* may or may not cause an mbe. Setting an odd number of bits that is a legal 
* syndrome for that data width will cause an sbe and the corresponding data bit 
* to be flipped. See shrtl_ecc_correct.sv for legal syndromes for each data 
* width.
*/
#define FXR_TXOTR_PKT_ERR_INJECT_10								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002550)
#define FXR_TXOTR_PKT_ERR_INJECT_10_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_10_RESERVED_63_36_SHIFT					36
#define FXR_TXOTR_PKT_ERR_INJECT_10_RESERVED_63_36_MASK						0xFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INJECT_10_RESERVED_63_36_SMASK					0xFFFFFFF000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_10_HI_DATA_INJECT_EN_SHIFT					32
#define FXR_TXOTR_PKT_ERR_INJECT_10_HI_DATA_INJECT_EN_MASK					0xFull
#define FXR_TXOTR_PKT_ERR_INJECT_10_HI_DATA_INJECT_EN_SMASK					0xF00000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_10_HI_DATA_INJECT_MASK_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INJECT_10_HI_DATA_INJECT_MASK_MASK					0xFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INJECT_10_HI_DATA_INJECT_MASK_SMASK					0xFFFFFFFFull
/*
* Table #143 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INJECT_11
* Error Injection for the various sbe/mbe fields. Setting a single bit will 
* cause an sbe in the ecc field and cause that bit to be flipped, no data bits 
* will be flipped. Setting 2 bits will cause an mbe. An even number of bits > 2 
* may or may not cause an mbe. Setting an odd number of bits that is a legal 
* syndrome for that data width will cause an sbe and the corresponding data bit 
* to be flipped. See shrtl_ecc_correct.sv for legal syndromes for each data 
* width.
*/
#define FXR_TXOTR_PKT_ERR_INJECT_11								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002558)
#define FXR_TXOTR_PKT_ERR_INJECT_11_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_11_RESERVED_63_18_SHIFT					18
#define FXR_TXOTR_PKT_ERR_INJECT_11_RESERVED_63_18_MASK						0x3FFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INJECT_11_RESERVED_63_18_SMASK					0xFFFFFFFFFFFC0000ull
#define FXR_TXOTR_PKT_ERR_INJECT_11_OPB_OTM_INJECT_EN_SHIFT					17
#define FXR_TXOTR_PKT_ERR_INJECT_11_OPB_OTM_INJECT_EN_MASK					0x1ull
#define FXR_TXOTR_PKT_ERR_INJECT_11_OPB_OTM_INJECT_EN_SMASK					0x20000ull
#define FXR_TXOTR_PKT_ERR_INJECT_11_OPB_OTM_INJECT_MASK_SHIFT					8
#define FXR_TXOTR_PKT_ERR_INJECT_11_OPB_OTM_INJECT_MASK_MASK					0x1FFull
#define FXR_TXOTR_PKT_ERR_INJECT_11_OPB_OTM_INJECT_MASK_SMASK					0x1FF00ull
#define FXR_TXOTR_PKT_ERR_INJECT_11_IOVEC_BUFF_INJECT_EN_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INJECT_11_IOVEC_BUFF_INJECT_EN_MASK					0xFFull
#define FXR_TXOTR_PKT_ERR_INJECT_11_IOVEC_BUFF_INJECT_EN_SMASK					0xFFull
/*
* Table #144 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INJECT_12
* Error Injection for the various sbe/mbe fields. Setting a single bit will 
* cause an sbe in the ecc field and cause that bit to be flipped, no data bits 
* will be flipped. Setting 2 bits will cause an mbe. An even number of bits > 2 
* may or may not cause an mbe. Setting an odd number of bits that is a legal 
* syndrome for that data width will cause an sbe and the corresponding data bit 
* to be flipped. See shrtl_ecc_correct.sv for legal syndromes for each data 
* width.
*/
#define FXR_TXOTR_PKT_ERR_INJECT_12								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002560)
#define FXR_TXOTR_PKT_ERR_INJECT_12_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_12_IOVEC_BUFF_INJECT_MASK_SHIFT				0
#define FXR_TXOTR_PKT_ERR_INJECT_12_IOVEC_BUFF_INJECT_MASK_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INJECT_12_IOVEC_BUFF_INJECT_MASK_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #145 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INJECT_13
* Error Injection for the various sbe/mbe fields. Setting a single bit will 
* cause an sbe in the ecc field and cause that bit to be flipped, no data bits 
* will be flipped. Setting 2 bits will cause an mbe. An even number of bits > 2 
* may or may not cause an mbe. Setting an odd number of bits that is a legal 
* syndrome for that data width will cause an sbe and the corresponding data bit 
* to be flipped. See shrtl_ecc_correct.sv for legal syndromes for each data 
* width.
*/
#define FXR_TXOTR_PKT_ERR_INJECT_13								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002568)
#define FXR_TXOTR_PKT_ERR_INJECT_13_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_13_RESERVED_63_45_SHIFT					45
#define FXR_TXOTR_PKT_ERR_INJECT_13_RESERVED_63_45_MASK						0x7FFFFull
#define FXR_TXOTR_PKT_ERR_INJECT_13_RESERVED_63_45_SMASK					0xFFFFE00000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_13_OPB_INJECT_EN_SHIFT						40
#define FXR_TXOTR_PKT_ERR_INJECT_13_OPB_INJECT_EN_MASK						0x1Full
#define FXR_TXOTR_PKT_ERR_INJECT_13_OPB_INJECT_EN_SMASK						0x1F0000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_13_OPB_INJECT_MASK_39_0_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INJECT_13_OPB_INJECT_MASK_39_0_MASK					0xFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INJECT_13_OPB_INJECT_MASK_39_0_SMASK					0xFFFFFFFFFFull
/*
* Table #146 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INJECT_14
* Error Injection for the various sbe/mbe fields. Setting a single bit will 
* cause an sbe in the ecc field and cause that bit to be flipped, no data bits 
* will be flipped. Setting 2 bits will cause an mbe. An even number of bits > 2 
* may or may not cause an mbe. Setting an odd number of bits that is a legal 
* syndrome for that data width will cause an sbe and the corresponding data bit 
* to be flipped. See shrtl_ecc_correct.sv for legal syndromes for each data 
* width.
*/
#define FXR_TXOTR_PKT_ERR_INJECT_14								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002570)
#define FXR_TXOTR_PKT_ERR_INJECT_14_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_14_RESERVED_63_45_SHIFT					45
#define FXR_TXOTR_PKT_ERR_INJECT_14_RESERVED_63_45_MASK						0x7FFFFull
#define FXR_TXOTR_PKT_ERR_INJECT_14_RESERVED_63_45_SMASK					0xFFFFE00000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_14_OPB_INJECT_EN_SHIFT						40
#define FXR_TXOTR_PKT_ERR_INJECT_14_OPB_INJECT_EN_MASK						0x1Full
#define FXR_TXOTR_PKT_ERR_INJECT_14_OPB_INJECT_EN_SMASK						0x1F0000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_14_OPB_INJECT_MASK_39_0_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INJECT_14_OPB_INJECT_MASK_39_0_MASK					0xFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INJECT_14_OPB_INJECT_MASK_39_0_SMASK					0xFFFFFFFFFFull
/*
* Table #147 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INJECT_15
* Error Injection for the various sbe/mbe fields. Setting a single bit will 
* cause an sbe in the ecc field and cause that bit to be flipped, no data bits 
* will be flipped. Setting 2 bits will cause an mbe. An even number of bits > 2 
* may or may not cause an mbe. Setting an odd number of bits that is a legal 
* syndrome for that data width will cause an sbe and the corresponding data bit 
* to be flipped. See shrtl_ecc_correct.sv for legal syndromes for each data 
* width.
*/
#define FXR_TXOTR_PKT_ERR_INJECT_15								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002578)
#define FXR_TXOTR_PKT_ERR_INJECT_15_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_15_RESERVED_63_45_SHIFT					45
#define FXR_TXOTR_PKT_ERR_INJECT_15_RESERVED_63_45_MASK						0x7FFFFull
#define FXR_TXOTR_PKT_ERR_INJECT_15_RESERVED_63_45_SMASK					0xFFFFE00000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_15_OPB_INJECT_EN_SHIFT						40
#define FXR_TXOTR_PKT_ERR_INJECT_15_OPB_INJECT_EN_MASK						0x1Full
#define FXR_TXOTR_PKT_ERR_INJECT_15_OPB_INJECT_EN_SMASK						0x1F0000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_15_OPB_INJECT_MASK_39_0_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INJECT_15_OPB_INJECT_MASK_39_0_MASK					0xFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INJECT_15_OPB_INJECT_MASK_39_0_SMASK					0xFFFFFFFFFFull
/*
* Table #148 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_INJECT_16
* Error Injection for the various sbe/mbe fields. Setting a single bit will 
* cause an sbe in the ecc field and cause that bit to be flipped, no data bits 
* will be flipped. Setting 2 bits will cause an mbe. An even number of bits > 2 
* may or may not cause an mbe. Setting an odd number of bits that is a legal 
* syndrome for that data width will cause an sbe and the corresponding data bit 
* to be flipped. See shrtl_ecc_correct.sv for legal syndromes for each data 
* width.
*/
#define FXR_TXOTR_PKT_ERR_INJECT_16								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002580)
#define FXR_TXOTR_PKT_ERR_INJECT_16_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_16_RESERVED_63_45_SHIFT					45
#define FXR_TXOTR_PKT_ERR_INJECT_16_RESERVED_63_45_MASK						0x7FFFFull
#define FXR_TXOTR_PKT_ERR_INJECT_16_RESERVED_63_45_SMASK					0xFFFFE00000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_16_OPB_INJECT_EN_SHIFT						40
#define FXR_TXOTR_PKT_ERR_INJECT_16_OPB_INJECT_EN_MASK						0x1Full
#define FXR_TXOTR_PKT_ERR_INJECT_16_OPB_INJECT_EN_SMASK						0x1F0000000000ull
#define FXR_TXOTR_PKT_ERR_INJECT_16_OPB_INJECT_MASK_39_0_SHIFT					0
#define FXR_TXOTR_PKT_ERR_INJECT_16_OPB_INJECT_MASK_39_0_MASK					0xFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_INJECT_16_OPB_INJECT_MASK_39_0_SMASK					0xFFFFFFFFFFull
/*
* Table #149 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_ERR_MBE_SAT_COUNT
* This CSR keeps a track of the MBE errors detected in the Packet 
* partition.
*/
#define FXR_TXOTR_PKT_ERR_MBE_SAT_COUNT								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000002700)
#define FXR_TXOTR_PKT_ERR_MBE_SAT_COUNT_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_ERR_MBE_SAT_COUNT_RESERVED_63_16_SHIFT					16
#define FXR_TXOTR_PKT_ERR_MBE_SAT_COUNT_RESERVED_63_16_MASK					0xFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_ERR_MBE_SAT_COUNT_RESERVED_63_16_SMASK					0xFFFFFFFFFFFF0000ull
#define FXR_TXOTR_PKT_ERR_MBE_SAT_COUNT_MBE_SAT_COUNT_SHIFT					0
#define FXR_TXOTR_PKT_ERR_MBE_SAT_COUNT_MBE_SAT_COUNT_MASK					0xFFFFull
#define FXR_TXOTR_PKT_ERR_MBE_SAT_COUNT_MBE_SAT_COUNT_SMASK					0xFFFFull
/*
* Table #150 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_PSN_CACHE_TAG_WAY_ENABLE
* These bits enable the 16 PSN Cache Tag Ways for filling and evicting. Set bits 
* to 0 to remove them from
*/
#define FXR_TXOTR_PKT_DBG_PSN_CACHE_TAG_WAY_ENABLE						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006000)
#define FXR_TXOTR_PKT_DBG_PSN_CACHE_TAG_WAY_ENABLE_RESETCSR					0x000000000000FFFFull
#define FXR_TXOTR_PKT_DBG_PSN_CACHE_TAG_WAY_ENABLE_RESERVED_63_16_SHIFT				16
#define FXR_TXOTR_PKT_DBG_PSN_CACHE_TAG_WAY_ENABLE_RESERVED_63_16_MASK				0xFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_PSN_CACHE_TAG_WAY_ENABLE_RESERVED_63_16_SMASK				0xFFFFFFFFFFFF0000ull
#define FXR_TXOTR_PKT_DBG_PSN_CACHE_TAG_WAY_ENABLE_WAY_ENABLE_SHIFT				0
#define FXR_TXOTR_PKT_DBG_PSN_CACHE_TAG_WAY_ENABLE_WAY_ENABLE_MASK				0xFFFFull
#define FXR_TXOTR_PKT_DBG_PSN_CACHE_TAG_WAY_ENABLE_WAY_ENABLE_SMASK				0xFFFFull
/*
* Table #151 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_OPB_ACCESS
* This CSR grants read access to the Outstanding Packet Buffer 
* (OPB).
*/
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006008)
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_RESETCSR							0x0050000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_VALID_SHIFT						63
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_VALID_MASK							0x1ull
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_VALID_SMASK						0x8000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_RESERVED_62_SHIFT						62
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_RESERVED_62_MASK						0x1ull
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_RESERVED_62_SMASK						0x4000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_ECC_SHIFT							61
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_ECC_MASK							0x1ull
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_ECC_SMASK							0x2000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_RESERVED_60_SHIFT						60
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_RESERVED_60_MASK						0x1ull
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_RESERVED_60_SMASK						0x1000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_PAYLOAD_REGS_SHIFT						52
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_PAYLOAD_REGS_MASK						0xFFull
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_PAYLOAD_REGS_SMASK						0xFF0000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_RESERVED_51_16_SHIFT					16
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_RESERVED_51_16_MASK					0xFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_RESERVED_51_16_SMASK					0xFFFFFFFFF0000ull
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_ADDRESS_SHIFT						0
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_ADDRESS_MASK						0xFFFFull
#define FXR_TXOTR_PKT_DBG_OPB_ACCESS_ADDRESS_SMASK						0xFFFFull
/*
* Table #152 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_OPB_PAYLOAD0
* This CSR is the payload register related to #%%#Section 30.7.7.2, 'Outstanding 
* Packet Buffer Access Debug CSR'#%%# for bits 63:0 of the buffer 
* entry.
*/
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD0								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006010)
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD0_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD0_DATA_SHIFT						0
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD0_DATA_MASK						0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD0_DATA_SMASK						0xFFFFFFFFFFFFFFFFull
/*
* Table #153 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_OPB_PAYLOAD1
* This CSR is the payload register related to #%%#Section 30.7.7.2, 'Outstanding 
* Packet Buffer Access Debug CSR'#%%# for bits 127:64 of the buffer 
* entry.
*/
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD1								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006018)
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD1_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD1_DATA_SHIFT						0
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD1_DATA_MASK						0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD1_DATA_SMASK						0xFFFFFFFFFFFFFFFFull
/*
* Table #154 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_OPB_PAYLOAD2
* This CSR is the payload register related to #%%#Section 30.7.7.2, 'Outstanding 
* Packet Buffer Access Debug CSR'#%%# for bits 191:128 of the buffer 
* entry.
*/
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD2								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006020)
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD2_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD2_DATA_SHIFT						0
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD2_DATA_MASK						0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD2_DATA_SMASK						0xFFFFFFFFFFFFFFFFull
/*
* Table #155 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_OPB_PAYLOAD3
* This CSR is the payload register related to #%%#Section 30.7.7.2, 'Outstanding 
* Packet Buffer Access Debug CSR'#%%# for bits 255:192 of the buffer 
* entry.
*/
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD3								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006028)
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD3_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD3_DATA_SHIFT						0
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD3_DATA_MASK						0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD3_DATA_SMASK						0xFFFFFFFFFFFFFFFFull
/*
* Table #156 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_OPB_PAYLOAD4
* This CSR is the payload register related to #%%#Section 30.7.7.2, 'Outstanding 
* Packet Buffer Access Debug CSR'#%%# for bits 319:256 of the buffer 
* entry.
*/
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD4								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006030)
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD4_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD4_DATA_SHIFT						0
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD4_DATA_MASK						0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_OPB_PAYLOAD4_DATA_SMASK						0xFFFFFFFFFFFFFFFFull
/*
* Table #157 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_PKTID_LIST_ACCESS
* This CSR grants read access to the Packet Identifier List.
*/
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006038)
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_RESETCSR						0x0010000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_VALID1_SHIFT					63
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_VALID1_MASK						0x1ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_VALID1_SMASK					0x8000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_VALID0_SHIFT					62
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_VALID0_MASK						0x1ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_VALID0_SMASK					0x4000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_ECC_SHIFT						61
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_ECC_MASK						0x1ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_ECC_SMASK						0x2000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_RESERVED_60_SHIFT					60
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_RESERVED_60_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_RESERVED_60_SMASK					0x1000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_PAYLOAD_REGS_SHIFT					52
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_PAYLOAD_REGS_MASK					0xFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_PAYLOAD_REGS_SMASK					0xFF0000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_RESERVED_51_16_SHIFT				16
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_RESERVED_51_16_MASK					0xFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_RESERVED_51_16_SMASK				0xFFFFFFFFF0000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_ADDRESS_SHIFT					0
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_ADDRESS_MASK					0xFFFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_ACCESS_ADDRESS_SMASK					0xFFFFull
/*
* Table #158 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_PKTID_LIST_PAYLOAD
* This CSR is the payload register used in conjunction with #%%#TXOTR_PKT_DBG_PKTID_LIST_ACCESS#%%# 
* CSR to read and write the OTR Packet Identifier List.
*/
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PAYLOAD							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006040)
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PAYLOAD_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PAYLOAD_RESERVED_63_28_SHIFT				28
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PAYLOAD_RESERVED_63_28_MASK				0xFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PAYLOAD_RESERVED_63_28_SMASK				0xFFFFFFFFF0000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PAYLOAD_DATA1_SHIFT					14
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PAYLOAD_DATA1_MASK						0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PAYLOAD_DATA1_SMASK					0xFFFC000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PAYLOAD_DATA0_SHIFT					0
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PAYLOAD_DATA0_MASK						0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PAYLOAD_DATA0_SMASK					0x3FFFull
/*
* Table #159 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_HASH_TABLE_ACCESS
* This CSR grants read access to the Hash Table.
*/
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006048)
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_RESETCSR						0x0020000000000000ull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_VALID_SHIFT						63
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_VALID_MASK						0x1ull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_VALID_SMASK						0x8000000000000000ull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_RESERVED_62_SHIFT					62
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_RESERVED_62_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_RESERVED_62_SMASK					0x4000000000000000ull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_ECC_SHIFT						61
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_ECC_MASK						0x1ull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_ECC_SMASK						0x2000000000000000ull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_RESERVED_60_SHIFT					60
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_RESERVED_60_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_RESERVED_60_SMASK					0x1000000000000000ull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_PAYLOAD_REGS_SHIFT					52
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_PAYLOAD_REGS_MASK					0xFFull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_PAYLOAD_REGS_SMASK					0xFF0000000000000ull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_RESERVED_51_6_SHIFT					6
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_RESERVED_51_6_MASK					0x3FFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_RESERVED_51_6_SMASK					0xFFFFFFFFFFFC0ull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_ADDRESS_SHIFT					0
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_ADDRESS_MASK					0x3Full
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_ACCESS_ADDRESS_SMASK					0x3Full
/*
* Table #160 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_HASH_TABLE_PAYLOAD0
* This CSR is the payload register used in conjunction with #%%#TXOTR_PKT_DBG_HASH_TABLE_ACCESS#%%# 
* CSR to read the OTR Hash Table bits 63:0.
*/
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_PAYLOAD0							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006050)
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_PAYLOAD0_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_PAYLOAD0_DATA_SHIFT					0
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_PAYLOAD0_DATA_MASK						0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_PAYLOAD0_DATA_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #161 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_HASH_TABLE_PAYLOAD1
* This CSR is the payload register used in conjunction with #%%#TXOTR_PKT_DBG_HASH_TABLE_ACCESS#%%# 
* CSR to read the OTR Hash Table bits 75:64.
*/
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_PAYLOAD1							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006058)
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_PAYLOAD1_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_PAYLOAD1_RESERVED_63_12_SHIFT				12
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_PAYLOAD1_RESERVED_63_12_MASK				0xFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_PAYLOAD1_RESERVED_63_12_SMASK				0xFFFFFFFFFFFFF000ull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_PAYLOAD1_DATA_SHIFT					0
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_PAYLOAD1_DATA_MASK						0xFFFull
#define FXR_TXOTR_PKT_DBG_HASH_TABLE_PAYLOAD1_DATA_SMASK					0xFFFull
/*
* Table #162 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_OTM_ACCESS
* This CSR grants read access to the Outstanding Translation Memory 
* (OTM).
*/
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006060)
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_RESETCSR							0x0020000000000000ull
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_VALID_SHIFT						63
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_VALID_MASK							0x1ull
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_VALID_SMASK						0x8000000000000000ull
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_RESERVED_62_SHIFT						62
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_RESERVED_62_MASK						0x1ull
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_RESERVED_62_SMASK						0x4000000000000000ull
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_ECC_SHIFT							61
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_ECC_MASK							0x1ull
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_ECC_SMASK							0x2000000000000000ull
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_RESERVED_60_SHIFT						60
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_RESERVED_60_MASK						0x1ull
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_RESERVED_60_SMASK						0x1000000000000000ull
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_PAYLOAD_REGS_SHIFT						52
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_PAYLOAD_REGS_MASK						0xFFull
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_PAYLOAD_REGS_SMASK						0xFF0000000000000ull
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_RESERVED_51_7_SHIFT					7
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_RESERVED_51_7_MASK						0x1FFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_RESERVED_51_7_SMASK					0xFFFFFFFFFFF80ull
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_ADDRESS_SHIFT						0
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_ADDRESS_MASK						0x7Full
#define FXR_TXOTR_PKT_DBG_OTM_ACCESS_ADDRESS_SMASK						0x7Full
/*
* Table #163 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_OTM_PAYLOAD0
* This CSR is the payload register used in conjunction with #%%#TXOTR_PKT_DBG_OTM_ACCESS#%%# 
* CSR to read the OTR Outstanding Translation Memory bits 63:0.
*/
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD0								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006068)
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD0_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD0_DATA_SHIFT						0
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD0_DATA_MASK						0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD0_DATA_SMASK						0xFFFFFFFFFFFFFFFFull
/*
* Table #164 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_OTM_PAYLOAD1
* This CSR is the payload register used in conjunction with #%%#TXOTR_PKT_DBG_OTM_ACCESS#%%# 
* CSR to read the OTR Outstanding Translation Memory bits 127:64.
*/
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD1								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006070)
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD1_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD1_DATA_SHIFT						0
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD1_DATA_MASK						0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD1_DATA_SMASK						0xFFFFFFFFFFFFFFFFull
/*
* Table #165 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_OTM_PAYLOAD2
* This CSR is the payload register used in conjunction with #%%#TXOTR_PKT_DBG_OTM_ACCESS#%%# 
* CSR to read the OTR Outstanding Translation Memory bits 136:128.
*/
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD2								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006078)
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD2_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD2_RESERVED_63_11_SHIFT					11
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD2_RESERVED_63_11_MASK					0x1FFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD2_RESERVED_63_11_SMASK					0xFFFFFFFFFFFFF800ull
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD2_DATA_SHIFT						0
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD2_DATA_MASK						0x7FFull
#define FXR_TXOTR_PKT_DBG_OTM_PAYLOAD2_DATA_SMASK						0x7FFull
/*
* Table #166 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS
* This CSR grants read access to the IOVEC Buffer Space.
*/
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006080)
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_RESETCSR					0x0080000000000000ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_VALID_SHIFT					63
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_VALID_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_VALID_SMASK					0x8000000000000000ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_RESERVED_62_SHIFT				62
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_RESERVED_62_MASK				0x1ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_RESERVED_62_SMASK				0x4000000000000000ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_ECC_SHIFT					61
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_ECC_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_ECC_SMASK					0x2000000000000000ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_RESERVED_60_SHIFT				60
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_RESERVED_60_MASK				0x1ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_RESERVED_60_SMASK				0x1000000000000000ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_PAYLOAD_REGS_SHIFT				52
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_PAYLOAD_REGS_MASK				0xFFull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_PAYLOAD_REGS_SMASK				0xFF0000000000000ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_RESERVED_51_5_SHIFT				5
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_RESERVED_51_5_MASK				0x7FFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_RESERVED_51_5_SMASK				0xFFFFFFFFFFFE0ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_ADDRESS_SHIFT				0
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_ADDRESS_MASK				0x1Full
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_ACCESS_ADDRESS_SMASK				0x1Full
/*
* Table #167 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD0
* This CSR is the payload register related to #%%#Section 30.7.7.17, 'IOVEC 
* Buffer Space Access Debug CSR'#%%# for bits 63:0 of the buffer 
* entry.
*/
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD0						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006088)
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD0_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD0_DATA_SHIFT				0
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD0_DATA_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD0_DATA_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #168 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD1
* This CSR is the payload register related to #%%#Section 30.7.7.17, 'IOVEC 
* Buffer Space Access Debug CSR'#%%# for bits 127:64 of the buffer 
* entry.
*/
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD1						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006090)
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD1_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD1_DATA_SHIFT				0
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD1_DATA_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD1_DATA_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #169 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD2
* This CSR is the payload register related to #%%#Section 30.7.7.17, 'IOVEC 
* Buffer Space Access Debug CSR'#%%# for bits 191:128 of the buffer 
* entry.
*/
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD2						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006098)
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD2_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD2_DATA_SHIFT				0
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD2_DATA_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD2_DATA_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #170 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD3
* This CSR is the payload register related to #%%#Section 30.7.7.17, 'IOVEC 
* Buffer Space Access Debug CSR'#%%# for bits 255:192 of the buffer 
* entry.
*/
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD3						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000060A0)
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD3_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD3_DATA_SHIFT				0
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD3_DATA_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD3_DATA_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #171 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD4
* This CSR is the payload register related to #%%#Section 30.7.7.17, 'IOVEC 
* Buffer Space Access Debug CSR'#%%# for bits 319:256 of the buffer 
* entry.
*/
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD4						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000060A8)
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD4_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD4_DATA_SHIFT				0
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD4_DATA_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD4_DATA_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #172 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD5
* This CSR is the payload register related to #%%#Section 30.7.7.17, 'IOVEC 
* Buffer Space Access Debug CSR'#%%# for bits 383:320 of the buffer 
* entry.
*/
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD5						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000060B0)
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD5_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD5_DATA_SHIFT				0
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD5_DATA_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD5_DATA_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #173 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD6
* This CSR is the payload register related to #%%#Section 30.7.7.17, 'IOVEC 
* Buffer Space Access Debug CSR'#%%# for bits 447:384 of the buffer 
* entry.
*/
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD6						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000060B8)
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD6_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD6_DATA_SHIFT				0
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD6_DATA_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD6_DATA_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #174 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD7
* This CSR is the payload register related to #%%#Section 30.7.7.17, 'IOVEC 
* Buffer Space Access Debug CSR'#%%# for bits 511:448 of the buffer 
* entry.
*/
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD7						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000060C0)
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD7_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD7_DATA_SHIFT				0
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD7_DATA_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_IOVEC_BUFFER_SPACE_PAYLOAD7_DATA_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #175 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS
* This CSR grants write access to the FPE Program Memory.
*/
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000060C8)
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_RESETCSR						0x0010000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_VALID_SHIFT					63
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_VALID_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_VALID_SMASK					0x8000000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_RESERVED_62_60_SHIFT				60
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_RESERVED_62_60_MASK				0x7ull
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_RESERVED_62_60_SMASK				0x7000000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_PAYLOAD_REGS_SHIFT				52
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_PAYLOAD_REGS_MASK					0xFFull
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_PAYLOAD_REGS_SMASK				0xFF0000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_RESERVED_51_13_SHIFT				13
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_RESERVED_51_13_MASK				0x7FFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_RESERVED_51_13_SMASK				0xFFFFFFFFFE000ull
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_ADDRESS_SHIFT					0
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_ADDRESS_MASK					0x1FFFull
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_ACCESS_ADDRESS_SMASK					0x1FFFull
/*
* Table #176 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_FPE_PROG_MEM_PAYLOAD0
* This CSR is the payload register related to #%%#Section 30.7.7.26, 'FPE 
* Program Memory Access Debug CSR'#%%# for bits 31:0 of the buffer 
* entry.
*/
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_PAYLOAD0							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000060D0)
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_PAYLOAD0_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_PAYLOAD0_RESERVED_63_32_SHIFT				32
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_PAYLOAD0_RESERVED_63_32_MASK				0xFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_PAYLOAD0_RESERVED_63_32_SMASK				0xFFFFFFFF00000000ull
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_PAYLOAD0_DATA_SHIFT					0
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_PAYLOAD0_DATA_MASK					0xFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_FPE_PROG_MEM_PAYLOAD0_DATA_SMASK					0xFFFFFFFFull
/*
* Table #177 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS
* This CSR grants write access to the FPE Data Memory.
*/
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000060D8)
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_RESETCSR						0x0010000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_VALID_SHIFT					63
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_VALID_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_VALID_SMASK					0x8000000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_RESERVED_62_60_SHIFT				60
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_RESERVED_62_60_MASK				0x7ull
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_RESERVED_62_60_SMASK				0x7000000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_PAYLOAD_REGS_SHIFT				52
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_PAYLOAD_REGS_MASK					0xFFull
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_PAYLOAD_REGS_SMASK				0xFF0000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_RESERVED_51_10_SHIFT				10
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_RESERVED_51_10_MASK				0x3FFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_RESERVED_51_10_SMASK				0xFFFFFFFFFFC00ull
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_ADDRESS_SHIFT					0
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_ADDRESS_MASK					0x3FFull
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_ACCESS_ADDRESS_SMASK					0x3FFull
/*
* Table #178 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_FPE_DATA_MEM_PAYLOAD0
* This CSR is the payload register related to #%%#Section 30.7.7.28, 'FPE Data 
* Memory Access Debug CSR'#%%# for bits 63:0 of the buffer entry.
*/
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_PAYLOAD0							(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000060E0)
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_PAYLOAD0_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_PAYLOAD0_DATA_SHIFT					0
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_PAYLOAD0_DATA_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_FPE_DATA_MEM_PAYLOAD0_DATA_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #179 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY
* This CSR reads the full and empty bits for the Fast-Path and Pre-Fragmentation 
* Queues. 
*/
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000060E8)
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_RESERVED_63_48_SHIFT				48
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_RESERVED_63_48_MASK				0xFFFFull
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_RESERVED_63_48_SMASK				0xFFFF000000000000ull
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_PRE_FULL_SHIFT					40
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_PRE_FULL_MASK					0xFFull
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_PRE_FULL_SMASK					0xFF0000000000ull
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_PRE_EMPTY_SHIFT				32
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_PRE_EMPTY_MASK					0xFFull
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_PRE_EMPTY_SMASK				0xFF00000000ull
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_RESERVED_31_24_SHIFT				24
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_RESERVED_31_24_MASK				0xFFull
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_RESERVED_31_24_SMASK				0xFF000000ull
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_FAST_FULL_SHIFT				12
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_FAST_FULL_MASK					0xFFFull
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_FAST_FULL_SMASK				0xFFF000ull
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_FAST_EMPTY_SHIFT				0
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_FAST_EMPTY_MASK				0xFFFull
#define FXR_TXOTR_PKT_DBG_FP_PRE_FRAG_FULL_EMPTY_FAST_EMPTY_SMASK				0xFFFull
/*
* Table #180 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY
* This CSR reads the full and empty bits for the Post-Fragmentation and 
* Post-Fragmentaiton Retransmission Queues. 
*/
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000060F0)
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_RESERVED_63_48_SHIFT				48
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_RESERVED_63_48_MASK				0xFFFFull
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_RESERVED_63_48_SMASK				0xFFFF000000000000ull
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_POST_RET_FULL_SHIFT				40
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_POST_RET_FULL_MASK				0xFFull
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_POST_RET_FULL_SMASK				0xFF0000000000ull
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_POST_RET_EMPTY_SHIFT				32
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_POST_RET_EMPTY_MASK				0xFFull
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_POST_RET_EMPTY_SMASK				0xFF00000000ull
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_RESERVED_31_16_SHIFT				16
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_RESERVED_31_16_MASK				0xFFFFull
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_RESERVED_31_16_SMASK				0xFFFF0000ull
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_POST_FULL_SHIFT				8
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_POST_FULL_MASK				0xFFull
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_POST_FULL_SMASK				0xFF00ull
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_POST_EMPTY_SHIFT				0
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_POST_EMPTY_MASK				0xFFull
#define FXR_TXOTR_PKT_DBG_POST_FRAG_RET_FULL_EMPTY_POST_EMPTY_SMASK				0xFFull
/*
* Table #181 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_FPE_CONTEXT_AVAILABLE_REG
* This CSR reads the context-available registers of the FPE. 
*/
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_AVAILABLE_REG						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000060F8)
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_AVAILABLE_REG_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_AVAILABLE_REG_RESERVED_63_32_SHIFT			32
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_AVAILABLE_REG_RESERVED_63_32_MASK				0xFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_AVAILABLE_REG_RESERVED_63_32_SMASK			0xFFFFFFFF00000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_AVAILABLE_REG_FPE_SHIFT					0
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_AVAILABLE_REG_FPE_MASK					0xFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_AVAILABLE_REG_FPE_SMASK					0xFFFFFFFFull
/*
* Table #182 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_OPB_FP_MSG_COUNT
* This CSR tracks the number of messages received in the OPB fast path input 
* queues from the message-level partition. 
*/
#define FXR_TXOTR_PKT_DBG_OPB_FP_MSG_COUNT							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006100)
#define FXR_TXOTR_PKT_DBG_OPB_FP_MSG_COUNT_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_FP_MSG_COUNT_COUNT_SHIFT						0
#define FXR_TXOTR_PKT_DBG_OPB_FP_MSG_COUNT_COUNT_MASK						0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_OPB_FP_MSG_COUNT_COUNT_SMASK						0xFFFFFFFFFFFFFFFFull
/*
* Table #183 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_OPB_PRE_FRAG_MSG_COUNT
* This CSR tracks the number of messages received in the OPB pre-fragmentation 
* input queues from the message-level partition. 
*/
#define FXR_TXOTR_PKT_DBG_OPB_PRE_FRAG_MSG_COUNT						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006160)
#define FXR_TXOTR_PKT_DBG_OPB_PRE_FRAG_MSG_COUNT_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_PRE_FRAG_MSG_COUNT_COUNT_SHIFT					0
#define FXR_TXOTR_PKT_DBG_OPB_PRE_FRAG_MSG_COUNT_COUNT_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_OPB_PRE_FRAG_MSG_COUNT_COUNT_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #184 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_OPB_RETRANS_PRE_FRAG_MSG_COUNT
* This CSR tracks the number of messages received in the OPB pre-fragmentation 
* retransmission input queues from BPE. 
*/
#define FXR_TXOTR_PKT_DBG_OPB_RETRANS_PRE_FRAG_MSG_COUNT					(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000061A0)
#define FXR_TXOTR_PKT_DBG_OPB_RETRANS_PRE_FRAG_MSG_COUNT_RESETCSR				0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_RETRANS_PRE_FRAG_MSG_COUNT_COUNT_SHIFT				0
#define FXR_TXOTR_PKT_DBG_OPB_RETRANS_PRE_FRAG_MSG_COUNT_COUNT_MASK				0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_OPB_RETRANS_PRE_FRAG_MSG_COUNT_COUNT_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #185 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_OPB_RETRANS_POST_FRAG_MSG_COUNT
* This CSR tracks the number of messages received in the OPB post-fragmentation 
* retransmission input queues from FPE. 
*/
#define FXR_TXOTR_PKT_DBG_OPB_RETRANS_POST_FRAG_MSG_COUNT					(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000061E0)
#define FXR_TXOTR_PKT_DBG_OPB_RETRANS_POST_FRAG_MSG_COUNT_RESETCSR				0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_RETRANS_POST_FRAG_MSG_COUNT_COUNT_SHIFT				0
#define FXR_TXOTR_PKT_DBG_OPB_RETRANS_POST_FRAG_MSG_COUNT_COUNT_MASK				0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_OPB_RETRANS_POST_FRAG_MSG_COUNT_COUNT_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #186 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_OPB_POST_FRAG_PKT_COUNT
* This CSR tracks the number of messages received in the OPB post-fragmentation 
* input queues from FPE. 
*/
#define FXR_TXOTR_PKT_DBG_OPB_POST_FRAG_PKT_COUNT						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006220)
#define FXR_TXOTR_PKT_DBG_OPB_POST_FRAG_PKT_COUNT_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_POST_FRAG_PKT_COUNT_COUNT_SHIFT					0
#define FXR_TXOTR_PKT_DBG_OPB_POST_FRAG_PKT_COUNT_COUNT_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_OPB_POST_FRAG_PKT_COUNT_COUNT_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #187 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_OPB_PKT_COUNT
* This CSR counts the total number of packets sent through the packet-level 
* partition. 
*/
#define FXR_TXOTR_PKT_DBG_OPB_PKT_COUNT								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006260)
#define FXR_TXOTR_PKT_DBG_OPB_PKT_COUNT_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_PKT_COUNT_COUNT_SHIFT						0
#define FXR_TXOTR_PKT_DBG_OPB_PKT_COUNT_COUNT_MASK						0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_OPB_PKT_COUNT_COUNT_SMASK						0xFFFFFFFFFFFFFFFFull
/*
* Table #188 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_OPB_REPLY_PKT_COUNT
* This CSR counts the total number of reply packets received from 
* RXE2E.
*/
#define FXR_TXOTR_PKT_DBG_OPB_REPLY_PKT_COUNT							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006268)
#define FXR_TXOTR_PKT_DBG_OPB_REPLY_PKT_COUNT_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_OPB_REPLY_PKT_COUNT_COUNT_SHIFT					0
#define FXR_TXOTR_PKT_DBG_OPB_REPLY_PKT_COUNT_COUNT_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_OPB_REPLY_PKT_COUNT_COUNT_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #189 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS
* This CSR shows the current values of the Packet Identifier List shared 
* pointers.
*/
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000062A8)
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_RESERVED_63_62_SHIFT			62
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_RESERVED_63_62_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_RESERVED_63_62_SMASK			0xC000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_TAIL_1_SHIFT				48
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_TAIL_1_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_TAIL_1_SMASK				0x3FFF000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_RESERVED_47_46_SHIFT			46
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_RESERVED_47_46_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_RESERVED_47_46_SMASK			0xC00000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_HEAD_1_SHIFT				32
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_HEAD_1_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_HEAD_1_SMASK				0x3FFF00000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_RESERVED_31_30_SHIFT			30
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_RESERVED_31_30_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_RESERVED_31_30_SMASK			0xC0000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_TAIL_0_SHIFT				16
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_TAIL_0_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_TAIL_0_SMASK				0x3FFF0000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_RESERVED_15_14_SHIFT			14
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_RESERVED_15_14_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_RESERVED_15_14_SMASK			0xC000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_HEAD_0_SHIFT				0
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_HEAD_0_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_SHARED_POINTERS_HEAD_0_SMASK				0x3FFFull
/*
* Table #190 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS00
* This CSR shows the current values of the Packet Identifier List reserved 
* pointers for TC0.
*/
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS00						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000062B0)
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS00_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS00_RESERVED_63_62_SHIFT			62
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS00_RESERVED_63_62_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS00_RESERVED_63_62_SMASK			0xC000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS00_MC1_TAIL_SHIFT				48
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS00_MC1_TAIL_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS00_MC1_TAIL_SMASK				0x3FFF000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS00_RESERVED_47_46_SHIFT			46
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS00_RESERVED_47_46_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS00_RESERVED_47_46_SMASK			0xC00000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS00_MC1_HEAD_SHIFT				32
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS00_MC1_HEAD_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS00_MC1_HEAD_SMASK				0x3FFF00000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS00_RESERVED_31_30_SHIFT			30
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS00_RESERVED_31_30_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS00_RESERVED_31_30_SMASK			0xC0000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS00_MC0_TAIL_SHIFT				16
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS00_MC0_TAIL_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS00_MC0_TAIL_SMASK				0x3FFF0000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS00_RESERVED_15_14_SHIFT			14
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS00_RESERVED_15_14_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS00_RESERVED_15_14_SMASK			0xC000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS00_MC0_HEAD_SHIFT				0
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS00_MC0_HEAD_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS00_MC0_HEAD_SMASK				0x3FFFull
/*
* Table #191 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS01
* This CSR shows the current values of the Packet Identifier List reserved 
* pointers for TC0.
*/
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS01						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000062B8)
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS01_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS01_RESERVED_63_62_SHIFT			62
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS01_RESERVED_63_62_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS01_RESERVED_63_62_SMASK			0xC000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS01_MC1_TAIL_SHIFT				48
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS01_MC1_TAIL_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS01_MC1_TAIL_SMASK				0x3FFF000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS01_RESERVED_47_46_SHIFT			46
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS01_RESERVED_47_46_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS01_RESERVED_47_46_SMASK			0xC00000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS01_MC1_HEAD_SHIFT				32
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS01_MC1_HEAD_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS01_MC1_HEAD_SMASK				0x3FFF00000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS01_RESERVED_31_30_SHIFT			30
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS01_RESERVED_31_30_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS01_RESERVED_31_30_SMASK			0xC0000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS01_MC0_TAIL_SHIFT				16
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS01_MC0_TAIL_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS01_MC0_TAIL_SMASK				0x3FFF0000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS01_RESERVED_15_14_SHIFT			14
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS01_RESERVED_15_14_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS01_RESERVED_15_14_SMASK			0xC000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS01_MC0_HEAD_SHIFT				0
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS01_MC0_HEAD_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS01_MC0_HEAD_SMASK				0x3FFFull
/*
* Table #192 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS10
* This CSR shows the current values of the Packet Identifier List reserved 
* pointers for TC1.
*/
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS10						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000062C0)
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS10_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS10_RESERVED_63_62_SHIFT			62
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS10_RESERVED_63_62_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS10_RESERVED_63_62_SMASK			0xC000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS10_MC1_TAIL_SHIFT				48
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS10_MC1_TAIL_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS10_MC1_TAIL_SMASK				0x3FFF000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS10_RESERVED_47_46_SHIFT			46
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS10_RESERVED_47_46_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS10_RESERVED_47_46_SMASK			0xC00000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS10_MC1_HEAD_SHIFT				32
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS10_MC1_HEAD_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS10_MC1_HEAD_SMASK				0x3FFF00000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS10_RESERVED_31_30_SHIFT			30
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS10_RESERVED_31_30_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS10_RESERVED_31_30_SMASK			0xC0000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS10_MC0_TAIL_SHIFT				16
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS10_MC0_TAIL_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS10_MC0_TAIL_SMASK				0x3FFF0000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS10_RESERVED_15_14_SHIFT			14
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS10_RESERVED_15_14_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS10_RESERVED_15_14_SMASK			0xC000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS10_MC0_HEAD_SHIFT				0
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS10_MC0_HEAD_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS10_MC0_HEAD_SMASK				0x3FFFull
/*
* Table #193 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS11
* This CSR shows the current values of the Packet Identifier List reserved 
* pointers for TC1.
*/
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS11						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000062C8)
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS11_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS11_RESERVED_63_62_SHIFT			62
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS11_RESERVED_63_62_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS11_RESERVED_63_62_SMASK			0xC000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS11_MC1_TAIL_SHIFT				48
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS11_MC1_TAIL_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS11_MC1_TAIL_SMASK				0x3FFF000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS11_RESERVED_47_46_SHIFT			46
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS11_RESERVED_47_46_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS11_RESERVED_47_46_SMASK			0xC00000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS11_MC1_HEAD_SHIFT				32
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS11_MC1_HEAD_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS11_MC1_HEAD_SMASK				0x3FFF00000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS11_RESERVED_31_30_SHIFT			30
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS11_RESERVED_31_30_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS11_RESERVED_31_30_SMASK			0xC0000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS11_MC0_TAIL_SHIFT				16
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS11_MC0_TAIL_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS11_MC0_TAIL_SMASK				0x3FFF0000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS11_RESERVED_15_14_SHIFT			14
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS11_RESERVED_15_14_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS11_RESERVED_15_14_SMASK			0xC000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS11_MC0_HEAD_SHIFT				0
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS11_MC0_HEAD_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS11_MC0_HEAD_SMASK				0x3FFFull
/*
* Table #194 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS20
* This CSR shows the current values of the Packet Identifier List reserved 
* pointers for TC2.
*/
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS20						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000062D0)
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS20_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS20_RESERVED_63_62_SHIFT			62
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS20_RESERVED_63_62_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS20_RESERVED_63_62_SMASK			0xC000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS20_MC1_TAIL_SHIFT				48
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS20_MC1_TAIL_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS20_MC1_TAIL_SMASK				0x3FFF000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS20_RESERVED_47_46_SHIFT			46
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS20_RESERVED_47_46_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS20_RESERVED_47_46_SMASK			0xC00000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS20_MC1_HEAD_SHIFT				32
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS20_MC1_HEAD_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS20_MC1_HEAD_SMASK				0x3FFF00000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS20_RESERVED_31_30_SHIFT			30
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS20_RESERVED_31_30_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS20_RESERVED_31_30_SMASK			0xC0000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS20_MC0_TAIL_SHIFT				16
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS20_MC0_TAIL_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS20_MC0_TAIL_SMASK				0x3FFF0000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS20_RESERVED_15_14_SHIFT			14
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS20_RESERVED_15_14_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS20_RESERVED_15_14_SMASK			0xC000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS20_MC0_HEAD_SHIFT				0
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS20_MC0_HEAD_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS20_MC0_HEAD_SMASK				0x3FFFull
/*
* Table #195 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS21
* This CSR shows the current values of the Packet Identifier List reserved 
* pointers for TC2.
*/
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS21						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000062D8)
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS21_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS21_RESERVED_63_62_SHIFT			62
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS21_RESERVED_63_62_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS21_RESERVED_63_62_SMASK			0xC000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS21_MC1_TAIL_SHIFT				48
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS21_MC1_TAIL_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS21_MC1_TAIL_SMASK				0x3FFF000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS21_RESERVED_47_46_SHIFT			46
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS21_RESERVED_47_46_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS21_RESERVED_47_46_SMASK			0xC00000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS21_MC1_HEAD_SHIFT				32
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS21_MC1_HEAD_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS21_MC1_HEAD_SMASK				0x3FFF00000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS21_RESERVED_31_30_SHIFT			30
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS21_RESERVED_31_30_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS21_RESERVED_31_30_SMASK			0xC0000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS21_MC0_TAIL_SHIFT				16
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS21_MC0_TAIL_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS21_MC0_TAIL_SMASK				0x3FFF0000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS21_RESERVED_15_14_SHIFT			14
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS21_RESERVED_15_14_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS21_RESERVED_15_14_SMASK			0xC000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS21_MC0_HEAD_SHIFT				0
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS21_MC0_HEAD_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS21_MC0_HEAD_SMASK				0x3FFFull
/*
* Table #196 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS30
* This CSR shows the current values of the Packet Identifier List reserved 
* pointers for TC3.
*/
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS30						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000062E0)
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS30_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS30_RESERVED_63_62_SHIFT			62
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS30_RESERVED_63_62_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS30_RESERVED_63_62_SMASK			0xC000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS30_MC1_TAIL_SHIFT				48
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS30_MC1_TAIL_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS30_MC1_TAIL_SMASK				0x3FFF000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS30_RESERVED_47_46_SHIFT			46
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS30_RESERVED_47_46_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS30_RESERVED_47_46_SMASK			0xC00000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS30_MC1_HEAD_SHIFT				32
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS30_MC1_HEAD_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS30_MC1_HEAD_SMASK				0x3FFF00000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS30_RESERVED_31_30_SHIFT			30
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS30_RESERVED_31_30_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS30_RESERVED_31_30_SMASK			0xC0000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS30_MC0_TAIL_SHIFT				16
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS30_MC0_TAIL_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS30_MC0_TAIL_SMASK				0x3FFF0000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS30_RESERVED_15_14_SHIFT			14
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS30_RESERVED_15_14_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS30_RESERVED_15_14_SMASK			0xC000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS30_MC0_HEAD_SHIFT				0
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS30_MC0_HEAD_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS30_MC0_HEAD_SMASK				0x3FFFull
/*
* Table #197 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS31
* This CSR shows the current values of the Packet Identifier List reserved 
* pointers for TC3.
*/
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS31						(FXR_TX_OTR_PKT_TOP_CSRS + 0x0000000062E8)
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS31_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS31_RESERVED_63_62_SHIFT			62
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS31_RESERVED_63_62_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS31_RESERVED_63_62_SMASK			0xC000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS31_MC1_TAIL_SHIFT				48
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS31_MC1_TAIL_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS31_MC1_TAIL_SMASK				0x3FFF000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS31_RESERVED_47_46_SHIFT			46
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS31_RESERVED_47_46_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS31_RESERVED_47_46_SMASK			0xC00000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS31_MC1_HEAD_SHIFT				32
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS31_MC1_HEAD_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS31_MC1_HEAD_SMASK				0x3FFF00000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS31_RESERVED_31_30_SHIFT			30
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS31_RESERVED_31_30_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS31_RESERVED_31_30_SMASK			0xC0000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS31_MC0_TAIL_SHIFT				16
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS31_MC0_TAIL_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS31_MC0_TAIL_SMASK				0x3FFF0000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS31_RESERVED_15_14_SHIFT			14
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS31_RESERVED_15_14_MASK			0x3ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS31_RESERVED_15_14_SMASK			0xC000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS31_MC0_HEAD_SHIFT				0
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS31_MC0_HEAD_MASK				0x3FFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_RSVD_POINTERS31_MC0_HEAD_SMASK				0x3FFFull
/*
* Table #198 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0
* This CSR shows the current values of the Packet Identifier List Pending ACK 
* pointers for TC0 and TC1.
*/
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006300)
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_TC1_TAIL_SHIFT				48
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_TC1_TAIL_MASK				0xFFFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_TC1_TAIL_SMASK				0xFFFF000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_TC1_HEAD_SHIFT				32
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_TC1_HEAD_MASK				0xFFFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_TC1_HEAD_SMASK				0xFFFF00000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_TC0_TAIL_SHIFT				16
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_TC0_TAIL_MASK				0xFFFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_TC0_TAIL_SMASK				0xFFFF0000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_TC0_HEAD_SHIFT				0
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_TC0_HEAD_MASK				0xFFFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS0_TC0_HEAD_SMASK				0xFFFFull
/*
* Table #199 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1
* This CSR shows the current values of the Packet Identifier List Pending ACK 
* pointers for TC2 and TC3.
*/
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006308)
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_TC3_TAIL_SHIFT				48
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_TC3_TAIL_MASK				0xFFFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_TC3_TAIL_SMASK				0xFFFF000000000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_TC3_HEAD_SHIFT				32
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_TC3_HEAD_MASK				0xFFFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_TC3_HEAD_SMASK				0xFFFF00000000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_TC2_TAIL_SHIFT				16
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_TC2_TAIL_MASK				0xFFFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_TC2_TAIL_SMASK				0xFFFF0000ull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_TC2_HEAD_SHIFT				0
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_TC2_HEAD_MASK				0xFFFFull
#define FXR_TXOTR_PKT_DBG_PKTID_LIST_PENDING_POINTERS1_TC2_HEAD_SMASK				0xFFFFull
/*
* Table #200 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE
* This CSR enables access to specific context within the fragmentation engine 
* (FPE). 
*/
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006310)
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_RESETCSR						0x0000000000FFFFFFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_RESERVED_63_24_SHIFT				24
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_RESERVED_63_24_MASK				0xFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_RESERVED_63_24_SMASK				0xFFFFFFFFFF000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC3_RSVD_SHIFT					23
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC3_RSVD_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC3_RSVD_SMASK					0x800000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC2_RSVD_SHIFT					22
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC2_RSVD_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC2_RSVD_SMASK					0x400000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC1_RSVD_SHIFT					21
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC1_RSVD_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC1_RSVD_SMASK					0x200000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC0_RSVD_SHIFT					20
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC0_RSVD_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC0_RSVD_SMASK					0x100000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC3_RSVD_SHIFT					19
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC3_RSVD_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC3_RSVD_SMASK					0x80000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC2_RSVD_SHIFT					18
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC2_RSVD_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC2_RSVD_SMASK					0x40000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC1_RSVD_SHIFT					17
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC1_RSVD_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC1_RSVD_SMASK					0x20000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC0_RSVD_SHIFT					16
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC0_RSVD_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC0_RSVD_SMASK					0x10000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED7_SHIFT					15
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED7_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED7_SMASK					0x8000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED6_SHIFT					14
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED6_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED6_SMASK					0x4000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED5_SHIFT					13
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED5_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED5_SMASK					0x2000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED4_SHIFT					12
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED4_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED4_SMASK					0x1000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED3_SHIFT					11
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED3_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED3_SMASK					0x800ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED2_SHIFT					10
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED2_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED2_SMASK					0x400ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED1_SHIFT					9
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED1_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED1_SMASK					0x200ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED0_SHIFT					8
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED0_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_SHARED0_SMASK					0x100ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC3_SHIFT					7
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC3_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC3_SMASK					0x80ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC2_SHIFT					6
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC2_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC2_SMASK					0x40ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC1_SHIFT					5
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC1_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC1_SMASK					0x20ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC0_SHIFT					4
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC0_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC1TC0_SMASK					0x10ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC3_SHIFT					3
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC3_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC3_SMASK					0x8ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC2_SHIFT					2
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC2_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC2_SMASK					0x4ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC1_SHIFT					1
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC1_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC1_SMASK					0x2ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC0_SHIFT					0
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC0_MASK					0x1ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_ENABLE_MC0TC0_SMASK					0x1ull
/*
* Table #201 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0
* This CSR indicates which MCTC is occupying a specific FPE context. 
* 
*/
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006318)
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_RESETCSR					0xFFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED7_SHIFT					60
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED7_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED7_SMASK					0xF000000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED6_SHIFT					56
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED6_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED6_SMASK					0xF00000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED5_SHIFT					52
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED5_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED5_SMASK					0xF0000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED4_SHIFT					48
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED4_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED4_SMASK					0xF000000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED3_SHIFT					44
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED3_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED3_SMASK					0xF00000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED2_SHIFT					40
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED2_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED2_SMASK					0xF0000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED1_SHIFT					36
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED1_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED1_SMASK					0xF000000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED0_SHIFT					32
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED0_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_SHARED0_SMASK					0xF00000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC1TC3_SHIFT					28
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC1TC3_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC1TC3_SMASK					0xF0000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC1TC2_SHIFT					24
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC1TC2_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC1TC2_SMASK					0xF000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC1TC1_SHIFT					20
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC1TC1_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC1TC1_SMASK					0xF00000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC1TC0_SHIFT					16
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC1TC0_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC1TC0_SMASK					0xF0000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC0TC3_SHIFT					12
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC0TC3_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC0TC3_SMASK					0xF000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC0TC2_SHIFT					8
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC0TC2_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC0TC2_SMASK					0xF00ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC0TC1_SHIFT					4
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC0TC1_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC0TC1_SMASK					0xF0ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC0TC0_SHIFT					0
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC0TC0_MASK					0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP0_MC0TC0_SMASK					0xFull
/*
* Table #202 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1
* This CSR indicates which MCTC is occupying a specific FPE context. 
* 
*/
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006320)
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_RESETCSR					0x00000000FFFFFFFFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_RESERVED_63_32_SHIFT				32
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_RESERVED_63_32_MASK				0xFFFFFFFFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_RESERVED_63_32_SMASK				0xFFFFFFFF00000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC1TC3_RSVD_SHIFT				28
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC1TC3_RSVD_MASK				0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC1TC3_RSVD_SMASK				0xF0000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC1TC2_RSVD_SHIFT				24
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC1TC2_RSVD_MASK				0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC1TC2_RSVD_SMASK				0xF000000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC1TC1_RSVD_SHIFT				20
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC1TC1_RSVD_MASK				0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC1TC1_RSVD_SMASK				0xF00000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC1TC0_RSVD_SHIFT				16
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC1TC0_RSVD_MASK				0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC1TC0_RSVD_SMASK				0xF0000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC0TC3_RSVD_SHIFT				12
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC0TC3_RSVD_MASK				0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC0TC3_RSVD_SMASK				0xF000ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC0TC2_RSVD_SHIFT				8
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC0TC2_RSVD_MASK				0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC0TC2_RSVD_SMASK				0xF00ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC0TC1_RSVD_SHIFT				4
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC0TC1_RSVD_MASK				0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC0TC1_RSVD_SMASK				0xF0ull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC0TC0_RSVD_SHIFT				0
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC0TC0_RSVD_MASK				0xFull
#define FXR_TXOTR_PKT_DBG_FPE_CONTEXT_MCTC_MAP1_MC0TC0_RSVD_SMASK				0xFull
/*
* Table #203 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKG_DBG_MC0_OUTSTANDING_PKT_CNT
* This CSR keeps a count of the number of outstanding packets for MC0. 
* 
*/
#define FXR_TXOTR_PKG_DBG_MC0_OUTSTANDING_PKT_CNT						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006328)
#define FXR_TXOTR_PKG_DBG_MC0_OUTSTANDING_PKT_CNT_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKG_DBG_MC0_OUTSTANDING_PKT_CNT_TC3_SHIFT					48
#define FXR_TXOTR_PKG_DBG_MC0_OUTSTANDING_PKT_CNT_TC3_MASK					0xFFFFull
#define FXR_TXOTR_PKG_DBG_MC0_OUTSTANDING_PKT_CNT_TC3_SMASK					0xFFFF000000000000ull
#define FXR_TXOTR_PKG_DBG_MC0_OUTSTANDING_PKT_CNT_TC2_SHIFT					32
#define FXR_TXOTR_PKG_DBG_MC0_OUTSTANDING_PKT_CNT_TC2_MASK					0xFFFFull
#define FXR_TXOTR_PKG_DBG_MC0_OUTSTANDING_PKT_CNT_TC2_SMASK					0xFFFF00000000ull
#define FXR_TXOTR_PKG_DBG_MC0_OUTSTANDING_PKT_CNT_TC1_SHIFT					16
#define FXR_TXOTR_PKG_DBG_MC0_OUTSTANDING_PKT_CNT_TC1_MASK					0xFFFFull
#define FXR_TXOTR_PKG_DBG_MC0_OUTSTANDING_PKT_CNT_TC1_SMASK					0xFFFF0000ull
#define FXR_TXOTR_PKG_DBG_MC0_OUTSTANDING_PKT_CNT_TC0_SHIFT					0
#define FXR_TXOTR_PKG_DBG_MC0_OUTSTANDING_PKT_CNT_TC0_MASK					0xFFFFull
#define FXR_TXOTR_PKG_DBG_MC0_OUTSTANDING_PKT_CNT_TC0_SMASK					0xFFFFull
/*
* Table #204 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKG_DBG_MC1_OUTSTANDING_PKT_CNT
* This CSR keeps a count of the number of outstanding packets for MC1. 
* 
*/
#define FXR_TXOTR_PKG_DBG_MC1_OUTSTANDING_PKT_CNT						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006330)
#define FXR_TXOTR_PKG_DBG_MC1_OUTSTANDING_PKT_CNT_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKG_DBG_MC1_OUTSTANDING_PKT_CNT_TC3_SHIFT					48
#define FXR_TXOTR_PKG_DBG_MC1_OUTSTANDING_PKT_CNT_TC3_MASK					0xFFFFull
#define FXR_TXOTR_PKG_DBG_MC1_OUTSTANDING_PKT_CNT_TC3_SMASK					0xFFFF000000000000ull
#define FXR_TXOTR_PKG_DBG_MC1_OUTSTANDING_PKT_CNT_TC2_SHIFT					32
#define FXR_TXOTR_PKG_DBG_MC1_OUTSTANDING_PKT_CNT_TC2_MASK					0xFFFFull
#define FXR_TXOTR_PKG_DBG_MC1_OUTSTANDING_PKT_CNT_TC2_SMASK					0xFFFF00000000ull
#define FXR_TXOTR_PKG_DBG_MC1_OUTSTANDING_PKT_CNT_TC1_SHIFT					16
#define FXR_TXOTR_PKG_DBG_MC1_OUTSTANDING_PKT_CNT_TC1_MASK					0xFFFFull
#define FXR_TXOTR_PKG_DBG_MC1_OUTSTANDING_PKT_CNT_TC1_SMASK					0xFFFF0000ull
#define FXR_TXOTR_PKG_DBG_MC1_OUTSTANDING_PKT_CNT_TC0_SHIFT					0
#define FXR_TXOTR_PKG_DBG_MC1_OUTSTANDING_PKT_CNT_TC0_MASK					0xFFFFull
#define FXR_TXOTR_PKG_DBG_MC1_OUTSTANDING_PKT_CNT_TC0_SMASK					0xFFFFull
/*
* Table #205 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKG_DBG_TO_NACK_MASK
* This CSR can be used to clear a bit in the Timeout NACK Mask. Hardware detects 
* a write of one to the #%%#enable#%%# bit and sets the corresponding bit in the 
* mask (as indicated by #%%#index#%%#) to zero. 
*/
#define FXR_TXOTR_PKG_DBG_TO_NACK_MASK								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006338)
#define FXR_TXOTR_PKG_DBG_TO_NACK_MASK_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKG_DBG_TO_NACK_MASK_RESERVED_63_9_SHIFT					9
#define FXR_TXOTR_PKG_DBG_TO_NACK_MASK_RESERVED_63_9_MASK					0x7FFFFFFFFFFFFFull
#define FXR_TXOTR_PKG_DBG_TO_NACK_MASK_RESERVED_63_9_SMASK					0xFFFFFFFFFFFFFE00ull
#define FXR_TXOTR_PKG_DBG_TO_NACK_MASK_ENABLE_SHIFT						8
#define FXR_TXOTR_PKG_DBG_TO_NACK_MASK_ENABLE_MASK						0x1ull
#define FXR_TXOTR_PKG_DBG_TO_NACK_MASK_ENABLE_SMASK						0x100ull
#define FXR_TXOTR_PKG_DBG_TO_NACK_MASK_INDEX_SHIFT						0
#define FXR_TXOTR_PKG_DBG_TO_NACK_MASK_INDEX_MASK						0xFFull
#define FXR_TXOTR_PKG_DBG_TO_NACK_MASK_INDEX_SMASK						0xFFull
/*
* Table #206 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKG_DBG_PENDING_RETRANSMIT
* This CSR can be used to clear a bit in the Pending Retransmit Sidecar. 
* Hardware detects a write of one to the #%%#enable#%%# bit and sets the 
* corresponding bit in the mask (as indicated by #%%#index#%%#) to zero. 
* 
*/
#define FXR_TXOTR_PKG_DBG_PENDING_RETRANSMIT							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006340)
#define FXR_TXOTR_PKG_DBG_PENDING_RETRANSMIT_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKG_DBG_PENDING_RETRANSMIT_RESERVED_63_7_SHIFT				7
#define FXR_TXOTR_PKG_DBG_PENDING_RETRANSMIT_RESERVED_63_7_MASK					0x1FFFFFFFFFFFFFFull
#define FXR_TXOTR_PKG_DBG_PENDING_RETRANSMIT_RESERVED_63_7_SMASK				0xFFFFFFFFFFFFFF80ull
#define FXR_TXOTR_PKG_DBG_PENDING_RETRANSMIT_ENABLE_SHIFT					6
#define FXR_TXOTR_PKG_DBG_PENDING_RETRANSMIT_ENABLE_MASK					0x1ull
#define FXR_TXOTR_PKG_DBG_PENDING_RETRANSMIT_ENABLE_SMASK					0x40ull
#define FXR_TXOTR_PKG_DBG_PENDING_RETRANSMIT_INDEX_SHIFT					0
#define FXR_TXOTR_PKG_DBG_PENDING_RETRANSMIT_INDEX_MASK						0x3Full
#define FXR_TXOTR_PKG_DBG_PENDING_RETRANSMIT_INDEX_SMASK					0x3Full
/*
* Table #207 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKG_DBG_OOS_NACK_MASK
* This CSR can be used to clear a bit in the Out-of-Sequence NACK Mask. Hardware 
* detects a write of one to the #%%#enable#%%# bit and sets the corresponding 
* bit in the mask (as indicated by #%%#index#%%#) to zero. 
*/
#define FXR_TXOTR_PKG_DBG_OOS_NACK_MASK								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006348)
#define FXR_TXOTR_PKG_DBG_OOS_NACK_MASK_RESETCSR						0x0000000000000000ull
#define FXR_TXOTR_PKG_DBG_OOS_NACK_MASK_RESERVED_63_7_SHIFT					7
#define FXR_TXOTR_PKG_DBG_OOS_NACK_MASK_RESERVED_63_7_MASK					0x1FFFFFFFFFFFFFFull
#define FXR_TXOTR_PKG_DBG_OOS_NACK_MASK_RESERVED_63_7_SMASK					0xFFFFFFFFFFFFFF80ull
#define FXR_TXOTR_PKG_DBG_OOS_NACK_MASK_ENABLE_SHIFT						6
#define FXR_TXOTR_PKG_DBG_OOS_NACK_MASK_ENABLE_MASK						0x1ull
#define FXR_TXOTR_PKG_DBG_OOS_NACK_MASK_ENABLE_SMASK						0x40ull
#define FXR_TXOTR_PKG_DBG_OOS_NACK_MASK_INDEX_SHIFT						0
#define FXR_TXOTR_PKG_DBG_OOS_NACK_MASK_INDEX_MASK						0x3Full
#define FXR_TXOTR_PKG_DBG_OOS_NACK_MASK_INDEX_SMASK						0x3Full
/*
* Table #208 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKG_DBG_HEAD_PENDING
* This CSR can be used to clear a bit in the Head Pending Sidecar. Hardware 
* detects a write of one to the #%%#enable#%%# bit and sets the corresponding 
* bit in the mask (as indicated by #%%#index#%%#) to zero. 
*/
#define FXR_TXOTR_PKG_DBG_HEAD_PENDING								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000006350)
#define FXR_TXOTR_PKG_DBG_HEAD_PENDING_RESETCSR							0x0000000000000000ull
#define FXR_TXOTR_PKG_DBG_HEAD_PENDING_RESERVED_63_9_SHIFT					9
#define FXR_TXOTR_PKG_DBG_HEAD_PENDING_RESERVED_63_9_MASK					0x7FFFFFFFFFFFFFull
#define FXR_TXOTR_PKG_DBG_HEAD_PENDING_RESERVED_63_9_SMASK					0xFFFFFFFFFFFFFE00ull
#define FXR_TXOTR_PKG_DBG_HEAD_PENDING_ENABLE_SHIFT						8
#define FXR_TXOTR_PKG_DBG_HEAD_PENDING_ENABLE_MASK						0x1ull
#define FXR_TXOTR_PKG_DBG_HEAD_PENDING_ENABLE_SMASK						0x100ull
#define FXR_TXOTR_PKG_DBG_HEAD_PENDING_INDEX_SHIFT						0
#define FXR_TXOTR_PKG_DBG_HEAD_PENDING_INDEX_MASK						0xFFull
#define FXR_TXOTR_PKG_DBG_HEAD_PENDING_INDEX_SMASK						0xFFull
/*
* Table #209 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_PRF_STALL_OPB_ENTRIES_X
* This CSR configures the performance registers used to track stalling due to a 
* lack of OPB entries. See more details in Performance Counters Specification, 
* page #%%#524#%%#.
*/
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_X							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000008000)
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_X_RESETCSR						0x0000000000000008ull
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_X_RESERVED_63_4_SHIFT				4
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_X_RESERVED_63_4_MASK				0xFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_X_RESERVED_63_4_SMASK				0xFFFFFFFFFFFFFFF0ull
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_X_MCTC_SHIFT					0
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_X_MCTC_MASK						0xFull
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_X_MCTC_SMASK					0xFull
/*
* Table #210 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_PRF_STALL_OPB_ENTRIES_Y
* This CSR configures the performance registers used to track stalling due to a 
* lack of OPB entries. See more details in Performance Counters Specification, 
* page #%%#524#%%#.
*/
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_Y							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000008008)
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_Y_RESETCSR						0x000000000000000Aull
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_Y_RESERVED_63_4_SHIFT				4
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_Y_RESERVED_63_4_MASK				0xFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_Y_RESERVED_63_4_SMASK				0xFFFFFFFFFFFFFFF0ull
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_Y_MCTC_SHIFT					0
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_Y_MCTC_MASK						0xFull
#define FXR_TXOTR_PKT_PRF_STALL_OPB_ENTRIES_Y_MCTC_SMASK					0xFull
/*
* Table #211 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_X
* This CSR configures the performance registers used to track stalling due to a 
* lack of TXDMA credits. See more details in Performance Counters Specification, 
* page #%%#524#%%#.
*/
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_X							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000008010)
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_X_RESETCSR					0x0000000000000008ull
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_X_RESERVED_63_4_SHIFT				4
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_X_RESERVED_63_4_MASK				0xFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_X_RESERVED_63_4_SMASK				0xFFFFFFFFFFFFFFF0ull
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_X_MCTC_SHIFT					0
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_X_MCTC_MASK					0xFull
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_X_MCTC_SMASK					0xFull
/*
* Table #212 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_Y
* This CSR configures the performance registers used to track stalling due to a 
* lack of TXDMA credits. See more details in Performance Counters Specification, 
* page #%%#524#%%#.
*/
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_Y							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000008018)
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_Y_RESETCSR					0x000000000000000Aull
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_Y_RESERVED_63_4_SHIFT				4
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_Y_RESERVED_63_4_MASK				0xFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_Y_RESERVED_63_4_SMASK				0xFFFFFFFFFFFFFFF0ull
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_Y_MCTC_SHIFT					0
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_Y_MCTC_MASK					0xFull
#define FXR_TXOTR_PKT_PRF_STALL_TXDMA_CREDITS_Y_MCTC_SMASK					0xFull
/*
* Table #213 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_X
* This CSR configures the performance registers used to track stalling due to a 
* lack of Packet Partition to Message Partition credits. See more details in 
* Performance Counters Specification, page #%%#525#%%#.
*/
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_X						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000008020)
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_X_RESETCSR					0x0000000000000004ull
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_X_RESERVED_63_3_SHIFT				3
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_X_RESERVED_63_3_MASK				0x1FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_X_RESERVED_63_3_SMASK				0xFFFFFFFFFFFFFFF8ull
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_X_MCTC_SHIFT					0
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_X_MCTC_MASK					0x7ull
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_X_MCTC_SMASK					0x7ull
/*
* Table #214 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_Y
* This CSR configures the performance registers used to track stalling due to a 
* lack of Packet Partition to Message Partition credits. See more details in 
* Performance Counters Specification, page #%%#525#%%#.
*/
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_Y						(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000008028)
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_Y_RESETCSR					0x0000000000000000ull
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_Y_RESERVED_63_3_SHIFT				3
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_Y_RESERVED_63_3_MASK				0x1FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_Y_RESERVED_63_3_SMASK				0xFFFFFFFFFFFFFFF8ull
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_Y_MCTC_SHIFT					0
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_Y_MCTC_MASK					0x7ull
#define FXR_TXOTR_PKT_PRF_STALL_P_TO_M_CREDITS_Y_MCTC_SMASK					0x7ull
/*
* Table #215 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_PRF_LATENCY
* This CSR configures the latency buckets for responses from the network. There 
* are five buckets into which response latencies can be binned: A, B, C, D, and 
* E. See more details in Performance Counters Specification, page 
* #%%#526#%%#.
*/
#define FXR_TXOTR_PKT_PRF_LATENCY								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000008030)
#define FXR_TXOTR_PKT_PRF_LATENCY_RESETCSR							0x0000CCC999666333ull
#define FXR_TXOTR_PKT_PRF_LATENCY_RESERVED_63_48_SHIFT						48
#define FXR_TXOTR_PKT_PRF_LATENCY_RESERVED_63_48_MASK						0xFFFFull
#define FXR_TXOTR_PKT_PRF_LATENCY_RESERVED_63_48_SMASK						0xFFFF000000000000ull
#define FXR_TXOTR_PKT_PRF_LATENCY_D_MAX_SHIFT							36
#define FXR_TXOTR_PKT_PRF_LATENCY_D_MAX_MASK							0xFFFull
#define FXR_TXOTR_PKT_PRF_LATENCY_D_MAX_SMASK							0xFFF000000000ull
#define FXR_TXOTR_PKT_PRF_LATENCY_C_MAX_SHIFT							24
#define FXR_TXOTR_PKT_PRF_LATENCY_C_MAX_MASK							0xFFFull
#define FXR_TXOTR_PKT_PRF_LATENCY_C_MAX_SMASK							0xFFF000000ull
#define FXR_TXOTR_PKT_PRF_LATENCY_B_MAX_SHIFT							12
#define FXR_TXOTR_PKT_PRF_LATENCY_B_MAX_MASK							0xFFFull
#define FXR_TXOTR_PKT_PRF_LATENCY_B_MAX_SMASK							0xFFF000ull
#define FXR_TXOTR_PKT_PRF_LATENCY_A_MAX_SHIFT							0
#define FXR_TXOTR_PKT_PRF_LATENCY_A_MAX_MASK							0xFFFull
#define FXR_TXOTR_PKT_PRF_LATENCY_A_MAX_SMASK							0xFFFull
/*
* Table #216 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_PRF_PKTS_OPENED_X
* This CSR configures the performance registers used to track the number of 
* packets generated by TXOTR. See more details in Performance Counters 
* Specification, page #%%#526#%%#.
*/
#define FXR_TXOTR_PKT_PRF_PKTS_OPENED_X								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000008038)
#define FXR_TXOTR_PKT_PRF_PKTS_OPENED_X_RESETCSR						0x0000000000000008ull
#define FXR_TXOTR_PKT_PRF_PKTS_OPENED_X_RESERVED_63_4_SHIFT					4
#define FXR_TXOTR_PKT_PRF_PKTS_OPENED_X_RESERVED_63_4_MASK					0xFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_PRF_PKTS_OPENED_X_RESERVED_63_4_SMASK					0xFFFFFFFFFFFFFFF0ull
#define FXR_TXOTR_PKT_PRF_PKTS_OPENED_X_MCTC_SHIFT						0
#define FXR_TXOTR_PKT_PRF_PKTS_OPENED_X_MCTC_MASK						0xFull
#define FXR_TXOTR_PKT_PRF_PKTS_OPENED_X_MCTC_SMASK						0xFull
/*
* Table #217 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_PRF_PKTS_CLOSED_X
* This CSR configures the performance registers used to track the number of 
* packets completed by TXOTR. See more details in Performance Counters 
* Specification, page #%%#526#%%#.
*/
#define FXR_TXOTR_PKT_PRF_PKTS_CLOSED_X								(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000008040)
#define FXR_TXOTR_PKT_PRF_PKTS_CLOSED_X_RESETCSR						0x0000000000000008ull
#define FXR_TXOTR_PKT_PRF_PKTS_CLOSED_X_RESERVED_63_4_SHIFT					4
#define FXR_TXOTR_PKT_PRF_PKTS_CLOSED_X_RESERVED_63_4_MASK					0xFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_PRF_PKTS_CLOSED_X_RESERVED_63_4_SMASK					0xFFFFFFFFFFFFFFF0ull
#define FXR_TXOTR_PKT_PRF_PKTS_CLOSED_X_MCTC_SHIFT						0
#define FXR_TXOTR_PKT_PRF_PKTS_CLOSED_X_MCTC_MASK						0xFull
#define FXR_TXOTR_PKT_PRF_PKTS_CLOSED_X_MCTC_SMASK						0xFull
/*
* Table #218 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_PRF_RETRANS_LIMIT_RCHD_X
* This CSR configures the performance registers used to detect the 
* retransmission limit reached condition. See more details in Performance 
* Counters Specification, page #%%#526#%%#.
*/
#define FXR_TXOTR_PKT_PRF_RETRANS_LIMIT_RCHD_X							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000008048)
#define FXR_TXOTR_PKT_PRF_RETRANS_LIMIT_RCHD_X_RESETCSR						0x0000000000000004ull
#define FXR_TXOTR_PKT_PRF_RETRANS_LIMIT_RCHD_X_RESERVED_63_3_SHIFT				3
#define FXR_TXOTR_PKT_PRF_RETRANS_LIMIT_RCHD_X_RESERVED_63_3_MASK				0x1FFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_PRF_RETRANS_LIMIT_RCHD_X_RESERVED_63_3_SMASK				0xFFFFFFFFFFFFFFF8ull
#define FXR_TXOTR_PKT_PRF_RETRANS_LIMIT_RCHD_X_TC_SHIFT						0
#define FXR_TXOTR_PKT_PRF_RETRANS_LIMIT_RCHD_X_TC_MASK						0x7ull
#define FXR_TXOTR_PKT_PRF_RETRANS_LIMIT_RCHD_X_TC_SMASK						0x7ull
/*
* Table #219 of fxr_tx_otr_pkt_top_csrs - TXOTR_PKT_PRF_LOCAL_SEQ_STALL_X
* This CSR configures the performance registers used to detect the local 
* sequence stall condition. See more details in Performance Counters 
* Specification, page #%%#526#%%#.
*/
#define FXR_TXOTR_PKT_PRF_LOCAL_SEQ_STALL_X							(FXR_TX_OTR_PKT_TOP_CSRS + 0x000000008050)
#define FXR_TXOTR_PKT_PRF_LOCAL_SEQ_STALL_X_RESETCSR						0x0000000000000008ull
#define FXR_TXOTR_PKT_PRF_LOCAL_SEQ_STALL_X_RESERVED_63_4_SHIFT					4
#define FXR_TXOTR_PKT_PRF_LOCAL_SEQ_STALL_X_RESERVED_63_4_MASK					0xFFFFFFFFFFFFFFFull
#define FXR_TXOTR_PKT_PRF_LOCAL_SEQ_STALL_X_RESERVED_63_4_SMASK					0xFFFFFFFFFFFFFFF0ull
#define FXR_TXOTR_PKT_PRF_LOCAL_SEQ_STALL_X_MCTC_SHIFT						0
#define FXR_TXOTR_PKT_PRF_LOCAL_SEQ_STALL_X_MCTC_MASK						0xFull
#define FXR_TXOTR_PKT_PRF_LOCAL_SEQ_STALL_X_MCTC_SMASK						0xFull

#endif 		/* DEF_FXR_TX_OTR_PKT_TOP_CSRS_SW_DEF */

/*
*------------------------------------------------------------------------------
*                                                                              
*  INTEL CONFIDENTIAL                                                          
*                                                                              
*  Copyright 2016 Intel Corporation All Rights Reserved.                 
*                                                                              
*  The source code contained or described herein and all documents related     
*  to the source code ("Material") are owned by Intel Corporation or its    
*  suppliers or licensors. Title to the Material remains with Intel            
*  Corporation or its suppliers and licensors. The Material contains trade     
*  secrets and proprietary and confidential information of Intel or its        
*  suppliers and licensors. The Material is protected by worldwide copyright   
*  and trade secret laws and treaty provisions. No part of the Material may    
*  be used, copied, reproduced, modified, published, uploaded, posted,         
*  transmitted, distributed, or disclosed in any way without Intel's prior     
*  express written permission.                                                 
*                                                                              
*  No license under any patent, copyright, trade secret or other intellectual  
*  property right is granted to or conferred upon you by disclosure or         
*  delivery of the Materials, either expressly, by implication, inducement,    
*  estoppel or otherwise. Any license under such intellectual property rights  
*  must be express and approved by Intel in writing.                           
*                                                                              
*------------------------------------------------------------------------------
*  Auto-generated by /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/i_csrs.pl
*  i_csrs.pl Version 1.5 last modified on Monday 12/19/16 11:42:34
*  /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/i_csrs.pl -C -RVREGS -ST fxr_pcim -o /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/fxr /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/repo_xml/300_Memory_Map.xml /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/repo_xml/344_Memory_Map_PCIM.xml
*------------------------------------------------------------------------------
*/

#ifndef DEF_FXR_PCIM_SW_DEF
#define DEF_FXR_PCIM_SW_DEF

#ifndef FXR_PCIM_CSRS
#define FXR_PCIM_CSRS					0x000000000000ULL
#endif
#define FXR_NUM_CONTEXTS				256
#define FXR_NUM_PIDS					4096
#define FXR_MAX_CONTEXT					255
#define FXR_TX_CONTEXT_ENTRIES				128
#define FXR_TX_CONTEXT_MAX				127
#define FXR_RX_CONTEXT_ENTRIES				16
#define FXR_RX_CONTEXT_MAX				15
#define FXR_NUM_SL					32
#define FXR_MAX_SL					31
#define PCIM_MAX_ITR					255
#define PCIM_MAX_INT_CSRS				4
#define PCIM_MAX_MSIX_VECTORS				319
#define PCIM_MAX_MSIX_PBA_CSRS				4
#define PCIM_CFG_BASE					0
#define PCIM_ERR_BASE					512
#define PCIM_BMC_BASE					768
#define PCIM_INT_BASE					1024
#define PCIM_MSIX_TABLE_BASE				8192
#define PCIM_MSIX_PBA_BASE				16384
/*
* Table #4 of fxr_top - PCIM_CFG
* PCIM block Configuration bits
*/
#define FXR_PCIM_CFG					(FXR_PCIM_CSRS + 0x000000000000)
#define FXR_PCIM_CFG_RESETCSR				0x000040207404AFFFull
#define FXR_PCIM_CFG_DRIVER_RESET_SHIFT			63
#define FXR_PCIM_CFG_DRIVER_RESET_MASK			0x1ull
#define FXR_PCIM_CFG_DRIVER_RESET_SMASK			0x8000000000000000ull
#define FXR_PCIM_CFG_RESERVED_62_47_SHIFT		47
#define FXR_PCIM_CFG_RESERVED_62_47_MASK		0xFFFFull
#define FXR_PCIM_CFG_RESERVED_62_47_SMASK		0x7FFF800000000000ull
#define FXR_PCIM_CFG_HIFIS_IDLE_SHIFT			46
#define FXR_PCIM_CFG_HIFIS_IDLE_MASK			0x1ull
#define FXR_PCIM_CFG_HIFIS_IDLE_SMASK			0x400000000000ull
#define FXR_PCIM_CFG_IOSFP_WAKE_SHIFT			45
#define FXR_PCIM_CFG_IOSFP_WAKE_MASK			0x1ull
#define FXR_PCIM_CFG_IOSFP_WAKE_SMASK			0x200000000000ull
#define FXR_PCIM_CFG_GPSB_WAKE_SHIFT			44
#define FXR_PCIM_CFG_GPSB_WAKE_MASK			0x1ull
#define FXR_PCIM_CFG_GPSB_WAKE_SMASK			0x100000000000ull
#define FXR_PCIM_CFG_RESERVED_43_42_SHIFT		42
#define FXR_PCIM_CFG_RESERVED_43_42_MASK		0x3ull
#define FXR_PCIM_CFG_RESERVED_43_42_SMASK		0xC0000000000ull
#define FXR_PCIM_CFG_MIN_FLR_PERIOD_SHIFT		32
#define FXR_PCIM_CFG_MIN_FLR_PERIOD_MASK		0x3FFull
#define FXR_PCIM_CFG_MIN_FLR_PERIOD_SMASK		0x3FF00000000ull
#define FXR_PCIM_CFG_RESERVED_31_SHIFT			31
#define FXR_PCIM_CFG_RESERVED_31_MASK			0x1ull
#define FXR_PCIM_CFG_RESERVED_31_SMASK			0x80000000ull
#define FXR_PCIM_CFG_ENA_PCIERROR_CMPL_SHIFT		30
#define FXR_PCIM_CFG_ENA_PCIERROR_CMPL_MASK		0x1ull
#define FXR_PCIM_CFG_ENA_PCIERROR_CMPL_SMASK		0x40000000ull
#define FXR_PCIM_CFG_ENA_PCIERROR_UR_SHIFT		29
#define FXR_PCIM_CFG_ENA_PCIERROR_UR_MASK		0x1ull
#define FXR_PCIM_CFG_ENA_PCIERROR_UR_SMASK		0x20000000ull
#define FXR_PCIM_CFG_ENA_PCIERROR_CA_SHIFT		28
#define FXR_PCIM_CFG_ENA_PCIERROR_CA_MASK		0x1ull
#define FXR_PCIM_CFG_ENA_PCIERROR_CA_SMASK		0x10000000ull
#define FXR_PCIM_CFG_RESERVED_27_SHIFT			27
#define FXR_PCIM_CFG_RESERVED_27_MASK			0x1ull
#define FXR_PCIM_CFG_RESERVED_27_SMASK			0x8000000ull
#define FXR_PCIM_CFG_REMAP_REQ_THRESH_SHIFT		24
#define FXR_PCIM_CFG_REMAP_REQ_THRESH_MASK		0x7ull
#define FXR_PCIM_CFG_REMAP_REQ_THRESH_SMASK		0x7000000ull
#define FXR_PCIM_CFG_RESERVED_23_19_SHIFT		19
#define FXR_PCIM_CFG_RESERVED_23_19_MASK		0x1Full
#define FXR_PCIM_CFG_RESERVED_23_19_SMASK		0xF80000ull
#define FXR_PCIM_CFG_ITR_PERIOD_SHIFT			8
#define FXR_PCIM_CFG_ITR_PERIOD_MASK			0x7FFull
#define FXR_PCIM_CFG_ITR_PERIOD_SMASK			0x7FF00ull
#define FXR_PCIM_CFG_ITR_ECOUNT_SHIFT			0
#define FXR_PCIM_CFG_ITR_ECOUNT_MASK			0xFFull
#define FXR_PCIM_CFG_ITR_ECOUNT_SMASK			0xFFull
/*
* Table #5 of fxr_top - PCIM_CFG_TARB
* TARB block Configuration bits
*/
#define FXR_PCIM_CFG_TARB				(FXR_PCIM_CSRS + 0x000000000008)
#define FXR_PCIM_CFG_TARB_RESETCSR			0x0000000018010418ull
#define FXR_PCIM_CFG_TARB_RESERVED_63_32_SHIFT		32
#define FXR_PCIM_CFG_TARB_RESERVED_63_32_MASK		0xFFFFFFFFull
#define FXR_PCIM_CFG_TARB_RESERVED_63_32_SMASK		0xFFFFFFFF00000000ull
#define FXR_PCIM_CFG_TARB_TOTAL_CREDITS_SHIFT		24
#define FXR_PCIM_CFG_TARB_TOTAL_CREDITS_MASK		0xFFull
#define FXR_PCIM_CFG_TARB_TOTAL_CREDITS_SMASK		0xFF000000ull
#define FXR_PCIM_CFG_TARB_COMPLETION_CREDITS_SHIFT	16
#define FXR_PCIM_CFG_TARB_COMPLETION_CREDITS_MASK	0xFFull
#define FXR_PCIM_CFG_TARB_COMPLETION_CREDITS_SMASK	0xFF0000ull
#define FXR_PCIM_CFG_TARB_NONPOSTED_CREDITS_SHIFT	8
#define FXR_PCIM_CFG_TARB_NONPOSTED_CREDITS_MASK	0xFFull
#define FXR_PCIM_CFG_TARB_NONPOSTED_CREDITS_SMASK	0xFF00ull
#define FXR_PCIM_CFG_TARB_POSTED_CREDITS_SHIFT		0
#define FXR_PCIM_CFG_TARB_POSTED_CREDITS_MASK		0xFFull
#define FXR_PCIM_CFG_TARB_POSTED_CREDITS_SMASK		0xFFull
/*
* Table #6 of fxr_top - PCIM_CFG_MARB0
* MARB block Configuration bits
*/
#define FXR_PCIM_CFG_MARB0				(FXR_PCIM_CSRS + 0x000000000010)
#define FXR_PCIM_CFG_MARB0_RESETCSR			0x0000080418010101ull
#define FXR_PCIM_CFG_MARB0_RESERVED_63_46_SHIFT		46
#define FXR_PCIM_CFG_MARB0_RESERVED_63_46_MASK		0x3FFFFull
#define FXR_PCIM_CFG_MARB0_RESERVED_63_46_SMASK		0xFFFFC00000000000ull
#define FXR_PCIM_CFG_MARB0_DATA_P_THRESH_SHIFT		40
#define FXR_PCIM_CFG_MARB0_DATA_P_THRESH_MASK		0x3Full
#define FXR_PCIM_CFG_MARB0_DATA_P_THRESH_SMASK		0x3F0000000000ull
#define FXR_PCIM_CFG_MARB0_RESERVED_39_38_SHIFT		38
#define FXR_PCIM_CFG_MARB0_RESERVED_39_38_MASK		0x3ull
#define FXR_PCIM_CFG_MARB0_RESERVED_39_38_SMASK		0xC000000000ull
#define FXR_PCIM_CFG_MARB0_DATA_NP_THRESH_SHIFT		32
#define FXR_PCIM_CFG_MARB0_DATA_NP_THRESH_MASK		0x3Full
#define FXR_PCIM_CFG_MARB0_DATA_NP_THRESH_SMASK		0x3F00000000ull
#define FXR_PCIM_CFG_MARB0_RESERVED_31_30_SHIFT		30
#define FXR_PCIM_CFG_MARB0_RESERVED_31_30_MASK		0x3ull
#define FXR_PCIM_CFG_MARB0_RESERVED_31_30_SMASK		0xC0000000ull
#define FXR_PCIM_CFG_MARB0_DATA_CMP_THRESH_SHIFT	24
#define FXR_PCIM_CFG_MARB0_DATA_CMP_THRESH_MASK		0x3Full
#define FXR_PCIM_CFG_MARB0_DATA_CMP_THRESH_SMASK	0x3F000000ull
#define FXR_PCIM_CFG_MARB0_RESERVED_23_22_SHIFT		22
#define FXR_PCIM_CFG_MARB0_RESERVED_23_22_MASK		0x3ull
#define FXR_PCIM_CFG_MARB0_RESERVED_23_22_SMASK		0xC00000ull
#define FXR_PCIM_CFG_MARB0_HEAD_P_THRESH_SHIFT		16
#define FXR_PCIM_CFG_MARB0_HEAD_P_THRESH_MASK		0x3Full
#define FXR_PCIM_CFG_MARB0_HEAD_P_THRESH_SMASK		0x3F0000ull
#define FXR_PCIM_CFG_MARB0_RESERVED_15_14_SHIFT		14
#define FXR_PCIM_CFG_MARB0_RESERVED_15_14_MASK		0x3ull
#define FXR_PCIM_CFG_MARB0_RESERVED_15_14_SMASK		0xC000ull
#define FXR_PCIM_CFG_MARB0_HEAD_NP_THRESH_SHIFT		8
#define FXR_PCIM_CFG_MARB0_HEAD_NP_THRESH_MASK		0x3Full
#define FXR_PCIM_CFG_MARB0_HEAD_NP_THRESH_SMASK		0x3F00ull
#define FXR_PCIM_CFG_MARB0_RESERVED_7_6_SHIFT		6
#define FXR_PCIM_CFG_MARB0_RESERVED_7_6_MASK		0x3ull
#define FXR_PCIM_CFG_MARB0_RESERVED_7_6_SMASK		0xC0ull
#define FXR_PCIM_CFG_MARB0_HEAD_CMP_THRESH_SHIFT	0
#define FXR_PCIM_CFG_MARB0_HEAD_CMP_THRESH_MASK		0x3Full
#define FXR_PCIM_CFG_MARB0_HEAD_CMP_THRESH_SMASK	0x3Full
/*
* Table #7 of fxr_top - PCIM_CFG_MARB1
* MARB block Configuration bits
*/
#define FXR_PCIM_CFG_MARB1				(FXR_PCIM_CSRS + 0x000000000018)
#define FXR_PCIM_CFG_MARB1_RESETCSR			0x0000FAC688FAC688ull
#define FXR_PCIM_CFG_MARB1_RESERVED_63_48_SHIFT		48
#define FXR_PCIM_CFG_MARB1_RESERVED_63_48_MASK		0xFFFFull
#define FXR_PCIM_CFG_MARB1_RESERVED_63_48_SMASK		0xFFFF000000000000ull
#define FXR_PCIM_CFG_MARB1_ARB_PRIORITY_SHIFT		0
#define FXR_PCIM_CFG_MARB1_ARB_PRIORITY_MASK		0xFFFFFFFFFFFFull
#define FXR_PCIM_CFG_MARB1_ARB_PRIORITY_SMASK		0xFFFFFFFFFFFFull
/*
* Table #8 of fxr_top - PCIM_CFG_HPI
* HPI block Configuration bits
*/
#define FXR_PCIM_CFG_HPI				(FXR_PCIM_CSRS + 0x000000000020)
#define FXR_PCIM_CFG_HPI_RESETCSR			0x0000000000000103ull
#define FXR_PCIM_CFG_HPI_RESERVED_63_9_SHIFT		9
#define FXR_PCIM_CFG_HPI_RESERVED_63_9_MASK		0x7FFFFFFFFFFFFFull
#define FXR_PCIM_CFG_HPI_RESERVED_63_9_SMASK		0xFFFFFFFFFFFFFE00ull
#define FXR_PCIM_CFG_HPI_HIFIS_CREDIT_ENA_SHIFT		8
#define FXR_PCIM_CFG_HPI_HIFIS_CREDIT_ENA_MASK		0x1ull
#define FXR_PCIM_CFG_HPI_HIFIS_CREDIT_ENA_SMASK		0x100ull
#define FXR_PCIM_CFG_HPI_RESERVED_7_5_SHIFT		5
#define FXR_PCIM_CFG_HPI_RESERVED_7_5_MASK		0x7ull
#define FXR_PCIM_CFG_HPI_RESERVED_7_5_SMASK		0xE0ull
#define FXR_PCIM_CFG_HPI_TARB_FC_THRESH_SHIFT		0
#define FXR_PCIM_CFG_HPI_TARB_FC_THRESH_MASK		0x1Full
#define FXR_PCIM_CFG_HPI_TARB_FC_THRESH_SMASK		0x1Full
/*
* Table #9 of fxr_top - PCIM_STS_HPI
* HPI block Status bits
*/
#define FXR_PCIM_STS_HPI				(FXR_PCIM_CSRS + 0x000000000028)
#define FXR_PCIM_STS_HPI_RESETCSR			0x0000000000000000ull
#define FXR_PCIM_STS_HPI_RESERVED_63_5_SHIFT		5
#define FXR_PCIM_STS_HPI_RESERVED_63_5_MASK		0x7FFFFFFFFFFFFFFull
#define FXR_PCIM_STS_HPI_RESERVED_63_5_SMASK		0xFFFFFFFFFFFFFFE0ull
#define FXR_PCIM_STS_HPI_HIFIS_CREDITS_SHIFT		0
#define FXR_PCIM_STS_HPI_HIFIS_CREDITS_MASK		0x1Full
#define FXR_PCIM_STS_HPI_HIFIS_CREDITS_SMASK		0x1Full
/*
* Table #10 of fxr_top - PCIM_CFG_P2SB
* P2SB block Configuration bits
*/
#define FXR_PCIM_CFG_P2SB				(FXR_PCIM_CSRS + 0x000000000030)
#define FXR_PCIM_CFG_P2SB_RESETCSR			0x0000030606070206ull
#define FXR_PCIM_CFG_P2SB_RESERVED_63_42_SHIFT		42
#define FXR_PCIM_CFG_P2SB_RESERVED_63_42_MASK		0x3FFFFFull
#define FXR_PCIM_CFG_P2SB_RESERVED_63_42_SMASK		0xFFFFFC0000000000ull
#define FXR_PCIM_CFG_P2SB_SB_SAI_ENA_SHIFT		41
#define FXR_PCIM_CFG_P2SB_SB_SAI_ENA_MASK		0x1ull
#define FXR_PCIM_CFG_P2SB_SB_SAI_ENA_SMASK		0x20000000000ull
#define FXR_PCIM_CFG_P2SB_CSR_REQ_TYPE_SHIFT		40
#define FXR_PCIM_CFG_P2SB_CSR_REQ_TYPE_MASK		0x1ull
#define FXR_PCIM_CFG_P2SB_CSR_REQ_TYPE_SMASK		0x10000000000ull
#define FXR_PCIM_CFG_P2SB_RESERVED_39_37_SHIFT		37
#define FXR_PCIM_CFG_P2SB_RESERVED_39_37_MASK		0x7ull
#define FXR_PCIM_CFG_P2SB_RESERVED_39_37_SMASK		0xE000000000ull
#define FXR_PCIM_CFG_P2SB_CMP_DATA_THRESH_SHIFT		32
#define FXR_PCIM_CFG_P2SB_CMP_DATA_THRESH_MASK		0x1Full
#define FXR_PCIM_CFG_P2SB_CMP_DATA_THRESH_SMASK		0x1F00000000ull
#define FXR_PCIM_CFG_P2SB_RESERVED_31_29_SHIFT		29
#define FXR_PCIM_CFG_P2SB_RESERVED_31_29_MASK		0x7ull
#define FXR_PCIM_CFG_P2SB_RESERVED_31_29_SMASK		0xE0000000ull
#define FXR_PCIM_CFG_P2SB_NP_DATA_THRESH_SHIFT		24
#define FXR_PCIM_CFG_P2SB_NP_DATA_THRESH_MASK		0x1Full
#define FXR_PCIM_CFG_P2SB_NP_DATA_THRESH_SMASK		0x1F000000ull
#define FXR_PCIM_CFG_P2SB_RESERVED_23_21_SHIFT		21
#define FXR_PCIM_CFG_P2SB_RESERVED_23_21_MASK		0x7ull
#define FXR_PCIM_CFG_P2SB_RESERVED_23_21_SMASK		0xE00000ull
#define FXR_PCIM_CFG_P2SB_P_DATA_THRESH_SHIFT		16
#define FXR_PCIM_CFG_P2SB_P_DATA_THRESH_MASK		0x1Full
#define FXR_PCIM_CFG_P2SB_P_DATA_THRESH_SMASK		0x1F0000ull
#define FXR_PCIM_CFG_P2SB_RESERVED_15_13_SHIFT		13
#define FXR_PCIM_CFG_P2SB_RESERVED_15_13_MASK		0x7ull
#define FXR_PCIM_CFG_P2SB_RESERVED_15_13_SMASK		0xE000ull
#define FXR_PCIM_CFG_P2SB_NP_HEADER_THRESH_SHIFT	8
#define FXR_PCIM_CFG_P2SB_NP_HEADER_THRESH_MASK		0x1Full
#define FXR_PCIM_CFG_P2SB_NP_HEADER_THRESH_SMASK	0x1F00ull
#define FXR_PCIM_CFG_P2SB_RESERVED_7_5_SHIFT		5
#define FXR_PCIM_CFG_P2SB_RESERVED_7_5_MASK		0x7ull
#define FXR_PCIM_CFG_P2SB_RESERVED_7_5_SMASK		0xE0ull
#define FXR_PCIM_CFG_P2SB_HEADER_THRESH_SHIFT		0
#define FXR_PCIM_CFG_P2SB_HEADER_THRESH_MASK		0x1Full
#define FXR_PCIM_CFG_P2SB_HEADER_THRESH_SMASK		0x1Full
/*
* Table #11 of fxr_top - PCIM_CFG_SBTO
* FXR-SB completion timeout count value. Bits [31:0] define the number of clocks 
* PCIM will wait for a completion timeout over FXR-SB. Only bits [31:8] are 
* write-able, so the programmable timeout count granularity is 256 
* clocks.
*/
#define FXR_PCIM_CFG_SBTO				(FXR_PCIM_CSRS + 0x000000000038)
#define FXR_PCIM_CFG_SBTO_RESETCSR			0x0000000000000A00ull
#define FXR_PCIM_CFG_SBTO_RESERVED_63_32_SHIFT		32
#define FXR_PCIM_CFG_SBTO_RESERVED_63_32_MASK		0xFFFFFFFFull
#define FXR_PCIM_CFG_SBTO_RESERVED_63_32_SMASK		0xFFFFFFFF00000000ull
#define FXR_PCIM_CFG_SBTO_COUNT_SHIFT			8
#define FXR_PCIM_CFG_SBTO_COUNT_MASK			0xFFFFFFull
#define FXR_PCIM_CFG_SBTO_COUNT_SMASK			0xFFFFFF00ull
#define FXR_PCIM_CFG_SBTO_RESERVED_7_0_SHIFT		0
#define FXR_PCIM_CFG_SBTO_RESERVED_7_0_MASK		0xFFull
#define FXR_PCIM_CFG_SBTO_RESERVED_7_0_SMASK		0xFFull
/*
* Table #12 of fxr_top - PCIM_STS_BDF
* Bus/Device/Function Status
*/
#define FXR_PCIM_STS_BDF				(FXR_PCIM_CSRS + 0x000000000040)
#define FXR_PCIM_STS_BDF_RESETCSR			0x0000000000000000ull
#define FXR_PCIM_STS_BDF_FXR_GPSB_PID_SHIFT		56
#define FXR_PCIM_STS_BDF_FXR_GPSB_PID_MASK		0xFFull
#define FXR_PCIM_STS_BDF_FXR_GPSB_PID_SMASK		0xFF00000000000000ull
#define FXR_PCIM_STS_BDF_PCI_ERR_DEST_PID_SHIFT		48
#define FXR_PCIM_STS_BDF_PCI_ERR_DEST_PID_MASK		0xFFull
#define FXR_PCIM_STS_BDF_PCI_ERR_DEST_PID_SMASK		0xFF000000000000ull
#define FXR_PCIM_STS_BDF_INTX_DEST_PID_SHIFT		40
#define FXR_PCIM_STS_BDF_INTX_DEST_PID_MASK		0xFFull
#define FXR_PCIM_STS_BDF_INTX_DEST_PID_SMASK		0xFF0000000000ull
#define FXR_PCIM_STS_BDF_LTR_DEST_PID_SHIFT		32
#define FXR_PCIM_STS_BDF_LTR_DEST_PID_MASK		0xFFull
#define FXR_PCIM_STS_BDF_LTR_DEST_PID_SMASK		0xFF00000000ull
#define FXR_PCIM_STS_BDF_RESERVED_31_16_SHIFT		16
#define FXR_PCIM_STS_BDF_RESERVED_31_16_MASK		0xFFFFull
#define FXR_PCIM_STS_BDF_RESERVED_31_16_SMASK		0xFFFF0000ull
#define FXR_PCIM_STS_BDF_IOSF_BUS_ID_SHIFT		8
#define FXR_PCIM_STS_BDF_IOSF_BUS_ID_MASK		0xFFull
#define FXR_PCIM_STS_BDF_IOSF_BUS_ID_SMASK		0xFF00ull
#define FXR_PCIM_STS_BDF_IOSF_DEVICE_ID_SHIFT		3
#define FXR_PCIM_STS_BDF_IOSF_DEVICE_ID_MASK		0x1Full
#define FXR_PCIM_STS_BDF_IOSF_DEVICE_ID_SMASK		0xF8ull
#define FXR_PCIM_STS_BDF_IOSF_FUNCTION_ID_SHIFT		0
#define FXR_PCIM_STS_BDF_IOSF_FUNCTION_ID_MASK		0x7ull
#define FXR_PCIM_STS_BDF_IOSF_FUNCTION_ID_SMASK		0x7ull
/*
* Table #13 of fxr_top - PCIM_CFG_WAKE
* Wake signaling configuration for ISOF-P and GPSB interfaces.
*/
#define FXR_PCIM_CFG_WAKE				(FXR_PCIM_CSRS + 0x000000000048)
#define FXR_PCIM_CFG_WAKE_RESETCSR			0x000004B0000004B0ull
#define FXR_PCIM_CFG_WAKE_IOSF_HOLD_PERIOD_SHIFT	32
#define FXR_PCIM_CFG_WAKE_IOSF_HOLD_PERIOD_MASK		0xFFFFFFFFull
#define FXR_PCIM_CFG_WAKE_IOSF_HOLD_PERIOD_SMASK	0xFFFFFFFF00000000ull
#define FXR_PCIM_CFG_WAKE_GPSB_HOLD_PERIOD_SHIFT	0
#define FXR_PCIM_CFG_WAKE_GPSB_HOLD_PERIOD_MASK		0xFFFFFFFFull
#define FXR_PCIM_CFG_WAKE_GPSB_HOLD_PERIOD_SMASK	0xFFFFFFFFull
/*
* Table #14 of fxr_top - PCIM_ERR_STS
* This is the Error Status CSR. Bits are set by hardware or by writing to the 
* PCIM_ERR_FRC CSR. Bits are cleared by writing to the PCIM_ERR_CLR CSR. Some 
* error events are dual reported in the #%%#AER Uncorrectable Error Status 
* Register#%%# or #%%#AER Correctable Error Status Register#%%# as noted in the 
* Definition column in the Table below. Also See #%%#Section 5.2.10.3, 'PCI 
* Error Support'#%%# for details.
*/
#define FXR_PCIM_ERR_STS				(FXR_PCIM_CSRS + 0x000000000200)
#define FXR_PCIM_ERR_STS_RESETCSR			0x0000000000000000ull
#define FXR_PCIM_ERR_STS_RESERVED_63_45_SHIFT		45
#define FXR_PCIM_ERR_STS_RESERVED_63_45_MASK		0x7FFFFull
#define FXR_PCIM_ERR_STS_RESERVED_63_45_SMASK		0xFFFFE00000000000ull
#define FXR_PCIM_ERR_STS_IOSFP_TIMEOUT_SHIFT		44
#define FXR_PCIM_ERR_STS_IOSFP_TIMEOUT_MASK		0x1ull
#define FXR_PCIM_ERR_STS_IOSFP_TIMEOUT_SMASK		0x100000000000ull
#define FXR_PCIM_ERR_STS_FXR_SB_TIMEOUT_SHIFT		43
#define FXR_PCIM_ERR_STS_FXR_SB_TIMEOUT_MASK		0x1ull
#define FXR_PCIM_ERR_STS_FXR_SB_TIMEOUT_SMASK		0x80000000000ull
#define FXR_PCIM_ERR_STS_INT_REMAP_RSP_UF_SHIFT		42
#define FXR_PCIM_ERR_STS_INT_REMAP_RSP_UF_MASK		0x1ull
#define FXR_PCIM_ERR_STS_INT_REMAP_RSP_UF_SMASK		0x40000000000ull
#define FXR_PCIM_ERR_STS_INT_REMAP_RSP_OF_SHIFT		41
#define FXR_PCIM_ERR_STS_INT_REMAP_RSP_OF_MASK		0x1ull
#define FXR_PCIM_ERR_STS_INT_REMAP_RSP_OF_SMASK		0x20000000000ull
#define FXR_PCIM_ERR_STS_TARB_HDR_PARITY_ERROR_SHIFT	40
#define FXR_PCIM_ERR_STS_TARB_HDR_PARITY_ERROR_MASK	0x1ull
#define FXR_PCIM_ERR_STS_TARB_HDR_PARITY_ERROR_SMASK	0x10000000000ull
#define FXR_PCIM_ERR_STS_TARB_HDR_EP_ERROR_SHIFT	39
#define FXR_PCIM_ERR_STS_TARB_HDR_EP_ERROR_MASK		0x1ull
#define FXR_PCIM_ERR_STS_TARB_HDR_EP_ERROR_SMASK	0x8000000000ull
#define FXR_PCIM_ERR_STS_SB2P_UNSUP_NP_OPC_SHIFT	38
#define FXR_PCIM_ERR_STS_SB2P_UNSUP_NP_OPC_MASK		0x1ull
#define FXR_PCIM_ERR_STS_SB2P_UNSUP_NP_OPC_SMASK	0x4000000000ull
#define FXR_PCIM_ERR_STS_SB2P_UNSUP_NP_FMT_SHIFT	37
#define FXR_PCIM_ERR_STS_SB2P_UNSUP_NP_FMT_MASK		0x1ull
#define FXR_PCIM_ERR_STS_SB2P_UNSUP_NP_FMT_SMASK	0x2000000000ull
#define FXR_PCIM_ERR_STS_SB2P_UNSUP_PC_OPC_SHIFT	36
#define FXR_PCIM_ERR_STS_SB2P_UNSUP_PC_OPC_MASK		0x1ull
#define FXR_PCIM_ERR_STS_SB2P_UNSUP_PC_OPC_SMASK	0x1000000000ull
#define FXR_PCIM_ERR_STS_SB2P_UNSUP_PC_FMT_SHIFT	35
#define FXR_PCIM_ERR_STS_SB2P_UNSUP_PC_FMT_MASK		0x1ull
#define FXR_PCIM_ERR_STS_SB2P_UNSUP_PC_FMT_SMASK	0x800000000ull
#define FXR_PCIM_ERR_STS_P2SB_DATAQ1_SBE_SHIFT		34
#define FXR_PCIM_ERR_STS_P2SB_DATAQ1_SBE_MASK		0x1ull
#define FXR_PCIM_ERR_STS_P2SB_DATAQ1_SBE_SMASK		0x400000000ull
#define FXR_PCIM_ERR_STS_P2SB_DATAQ1_MBE_SHIFT		33
#define FXR_PCIM_ERR_STS_P2SB_DATAQ1_MBE_MASK		0x1ull
#define FXR_PCIM_ERR_STS_P2SB_DATAQ1_MBE_SMASK		0x200000000ull
#define FXR_PCIM_ERR_STS_P2SB_DATAQ0_SBE_SHIFT		32
#define FXR_PCIM_ERR_STS_P2SB_DATAQ0_SBE_MASK		0x1ull
#define FXR_PCIM_ERR_STS_P2SB_DATAQ0_SBE_SMASK		0x100000000ull
#define FXR_PCIM_ERR_STS_P2SB_DATAQ0_MBE_SHIFT		31
#define FXR_PCIM_ERR_STS_P2SB_DATAQ0_MBE_MASK		0x1ull
#define FXR_PCIM_ERR_STS_P2SB_DATAQ0_MBE_SMASK		0x80000000ull
#define FXR_PCIM_ERR_STS_P2SB_NP_READ_ERR_SHIFT		30
#define FXR_PCIM_ERR_STS_P2SB_NP_READ_ERR_MASK		0x1ull
#define FXR_PCIM_ERR_STS_P2SB_NP_READ_ERR_SMASK		0x40000000ull
#define FXR_PCIM_ERR_STS_P2SB_DATA_LEN_ERR_SHIFT	29
#define FXR_PCIM_ERR_STS_P2SB_DATA_LEN_ERR_MASK		0x1ull
#define FXR_PCIM_ERR_STS_P2SB_DATA_LEN_ERR_SMASK	0x20000000ull
#define FXR_PCIM_ERR_STS_P2SB_P_ADDR_ERR_SHIFT		28
#define FXR_PCIM_ERR_STS_P2SB_P_ADDR_ERR_MASK		0x1ull
#define FXR_PCIM_ERR_STS_P2SB_P_ADDR_ERR_SMASK		0x10000000ull
#define FXR_PCIM_ERR_STS_P2SB_NP_DATA_PARITY_SHIFT	27
#define FXR_PCIM_ERR_STS_P2SB_NP_DATA_PARITY_MASK	0x1ull
#define FXR_PCIM_ERR_STS_P2SB_NP_DATA_PARITY_SMASK	0x8000000ull
#define FXR_PCIM_ERR_STS_P2SB_NP_DATA_EP_SHIFT		26
#define FXR_PCIM_ERR_STS_P2SB_NP_DATA_EP_MASK		0x1ull
#define FXR_PCIM_ERR_STS_P2SB_NP_DATA_EP_SMASK		0x4000000ull
#define FXR_PCIM_ERR_STS_P2SB_P_DATA_PARITY_SHIFT	25
#define FXR_PCIM_ERR_STS_P2SB_P_DATA_PARITY_MASK	0x1ull
#define FXR_PCIM_ERR_STS_P2SB_P_DATA_PARITY_SMASK	0x2000000ull
#define FXR_PCIM_ERR_STS_P2SB_P_DATA_EP_SHIFT		24
#define FXR_PCIM_ERR_STS_P2SB_P_DATA_EP_MASK		0x1ull
#define FXR_PCIM_ERR_STS_P2SB_P_DATA_EP_SMASK		0x1000000ull
#define FXR_PCIM_ERR_STS_P2SB_UNEXP_CMP_SHIFT		23
#define FXR_PCIM_ERR_STS_P2SB_UNEXP_CMP_MASK		0x1ull
#define FXR_PCIM_ERR_STS_P2SB_UNEXP_CMP_SMASK		0x800000ull
#define FXR_PCIM_ERR_STS_P2SB_NP_ADDR_ERR_SHIFT		22
#define FXR_PCIM_ERR_STS_P2SB_NP_ADDR_ERR_MASK		0x1ull
#define FXR_PCIM_ERR_STS_P2SB_NP_ADDR_ERR_SMASK		0x400000ull
#define FXR_PCIM_ERR_STS_P2SB_NP_UNSUP_REQ_SHIFT	21
#define FXR_PCIM_ERR_STS_P2SB_NP_UNSUP_REQ_MASK		0x1ull
#define FXR_PCIM_ERR_STS_P2SB_NP_UNSUP_REQ_SMASK	0x200000ull
#define FXR_PCIM_ERR_STS_P2SB_P_UNSUP_REQ_SHIFT		20
#define FXR_PCIM_ERR_STS_P2SB_P_UNSUP_REQ_MASK		0x1ull
#define FXR_PCIM_ERR_STS_P2SB_P_UNSUP_REQ_SMASK		0x100000ull
#define FXR_PCIM_ERR_STS_GPSB_ERROR_SHIFT		19
#define FXR_PCIM_ERR_STS_GPSB_ERROR_MASK		0x1ull
#define FXR_PCIM_ERR_STS_GPSB_ERROR_SMASK		0x80000ull
#define FXR_PCIM_ERR_STS_HPI_DATA_POISON_ERR_SHIFT	18
#define FXR_PCIM_ERR_STS_HPI_DATA_POISON_ERR_MASK	0x1ull
#define FXR_PCIM_ERR_STS_HPI_DATA_POISON_ERR_SMASK	0x40000ull
#define FXR_PCIM_ERR_STS_HPI_DATA_PARITY_ERR_SHIFT	17
#define FXR_PCIM_ERR_STS_HPI_DATA_PARITY_ERR_MASK	0x1ull
#define FXR_PCIM_ERR_STS_HPI_DATA_PARITY_ERR_SMASK	0x20000ull
#define FXR_PCIM_ERR_STS_MARB_P_DATA_OF_SHIFT		16
#define FXR_PCIM_ERR_STS_MARB_P_DATA_OF_MASK		0x1ull
#define FXR_PCIM_ERR_STS_MARB_P_DATA_OF_SMASK		0x10000ull
#define FXR_PCIM_ERR_STS_MARB_P_DATA_UF_SHIFT		15
#define FXR_PCIM_ERR_STS_MARB_P_DATA_UF_MASK		0x1ull
#define FXR_PCIM_ERR_STS_MARB_P_DATA_UF_SMASK		0x8000ull
#define FXR_PCIM_ERR_STS_MARB_NP_DATA_OF_SHIFT		14
#define FXR_PCIM_ERR_STS_MARB_NP_DATA_OF_MASK		0x1ull
#define FXR_PCIM_ERR_STS_MARB_NP_DATA_OF_SMASK		0x4000ull
#define FXR_PCIM_ERR_STS_MARB_NP_DATA_UF_SHIFT		13
#define FXR_PCIM_ERR_STS_MARB_NP_DATA_UF_MASK		0x1ull
#define FXR_PCIM_ERR_STS_MARB_NP_DATA_UF_SMASK		0x2000ull
#define FXR_PCIM_ERR_STS_MARB_CMP_DATA_OF_SHIFT		12
#define FXR_PCIM_ERR_STS_MARB_CMP_DATA_OF_MASK		0x1ull
#define FXR_PCIM_ERR_STS_MARB_CMP_DATA_OF_SMASK		0x1000ull
#define FXR_PCIM_ERR_STS_MARB_CMP_DATA_UF_SHIFT		11
#define FXR_PCIM_ERR_STS_MARB_CMP_DATA_UF_MASK		0x1ull
#define FXR_PCIM_ERR_STS_MARB_CMP_DATA_UF_SMASK		0x800ull
#define FXR_PCIM_ERR_STS_MARB_P_HDR_OF_SHIFT		10
#define FXR_PCIM_ERR_STS_MARB_P_HDR_OF_MASK		0x1ull
#define FXR_PCIM_ERR_STS_MARB_P_HDR_OF_SMASK		0x400ull
#define FXR_PCIM_ERR_STS_MARB_P_HDR_UF_SHIFT		9
#define FXR_PCIM_ERR_STS_MARB_P_HDR_UF_MASK		0x1ull
#define FXR_PCIM_ERR_STS_MARB_P_HDR_UF_SMASK		0x200ull
#define FXR_PCIM_ERR_STS_MARB_NP_HDR_OF_SHIFT		8
#define FXR_PCIM_ERR_STS_MARB_NP_HDR_OF_MASK		0x1ull
#define FXR_PCIM_ERR_STS_MARB_NP_HDR_OF_SMASK		0x100ull
#define FXR_PCIM_ERR_STS_MARB_NP_HDR_UF_SHIFT		7
#define FXR_PCIM_ERR_STS_MARB_NP_HDR_UF_MASK		0x1ull
#define FXR_PCIM_ERR_STS_MARB_NP_HDR_UF_SMASK		0x80ull
#define FXR_PCIM_ERR_STS_MARB_CMP_HDR_OF_SHIFT		6
#define FXR_PCIM_ERR_STS_MARB_CMP_HDR_OF_MASK		0x1ull
#define FXR_PCIM_ERR_STS_MARB_CMP_HDR_OF_SMASK		0x40ull
#define FXR_PCIM_ERR_STS_MARB_CMP_HDR_UF_SHIFT		5
#define FXR_PCIM_ERR_STS_MARB_CMP_HDR_UF_MASK		0x1ull
#define FXR_PCIM_ERR_STS_MARB_CMP_HDR_UF_SMASK		0x20ull
#define FXR_PCIM_ERR_STS_MSIX_DATA_SBE_SHIFT		4
#define FXR_PCIM_ERR_STS_MSIX_DATA_SBE_MASK		0x1ull
#define FXR_PCIM_ERR_STS_MSIX_DATA_SBE_SMASK		0x10ull
#define FXR_PCIM_ERR_STS_MSIX_ADDR_SBE_SHIFT		3
#define FXR_PCIM_ERR_STS_MSIX_ADDR_SBE_MASK		0x1ull
#define FXR_PCIM_ERR_STS_MSIX_ADDR_SBE_SMASK		0x8ull
#define FXR_PCIM_ERR_STS_MSIX_DATA_MBE_SHIFT		2
#define FXR_PCIM_ERR_STS_MSIX_DATA_MBE_MASK		0x1ull
#define FXR_PCIM_ERR_STS_MSIX_DATA_MBE_SMASK		0x4ull
#define FXR_PCIM_ERR_STS_MSIX_ADDR_MBE_SHIFT		1
#define FXR_PCIM_ERR_STS_MSIX_ADDR_MBE_MASK		0x1ull
#define FXR_PCIM_ERR_STS_MSIX_ADDR_MBE_SMASK		0x2ull
#define FXR_PCIM_ERR_STS_ITR_READ_PE_SHIFT		0
#define FXR_PCIM_ERR_STS_ITR_READ_PE_MASK		0x1ull
#define FXR_PCIM_ERR_STS_ITR_READ_PE_SMASK		0x1ull
/*
* Table #15 of fxr_top - PCIM_ERR_CLR
* This is the Error Clear CSR. Writing a 1 to a valid bit will clear the 
* corresponding bit in the PCIM_ERR_STS CSR.
*/
#define FXR_PCIM_ERR_CLR				(FXR_PCIM_CSRS + 0x000000000208)
#define FXR_PCIM_ERR_CLR_RESETCSR			0x0000000000000000ull
#define FXR_PCIM_ERR_CLR_RESERVED_63_45_SHIFT		45
#define FXR_PCIM_ERR_CLR_RESERVED_63_45_MASK		0x7FFFFull
#define FXR_PCIM_ERR_CLR_RESERVED_63_45_SMASK		0xFFFFE00000000000ull
#define FXR_PCIM_ERR_CLR_EVENTS_SHIFT			0
#define FXR_PCIM_ERR_CLR_EVENTS_MASK			0x1FFFFFFFFFFFull
#define FXR_PCIM_ERR_CLR_EVENTS_SMASK			0x1FFFFFFFFFFFull
/*
* Table #16 of fxr_top - PCIM_ERR_FRC
* This is the Error Force CSR. Writing a 1 to a valid bit will set the 
* corresponding bit in the PCIM_ERR_STS CSR.
*/
#define FXR_PCIM_ERR_FRC				(FXR_PCIM_CSRS + 0x000000000210)
#define FXR_PCIM_ERR_FRC_RESETCSR			0x0000000000000000ull
#define FXR_PCIM_ERR_FRC_RESERVED_63_45_SHIFT		45
#define FXR_PCIM_ERR_FRC_RESERVED_63_45_MASK		0x7FFFFull
#define FXR_PCIM_ERR_FRC_RESERVED_63_45_SMASK		0xFFFFE00000000000ull
#define FXR_PCIM_ERR_FRC_EVENTS_SHIFT			0
#define FXR_PCIM_ERR_FRC_EVENTS_MASK			0x1FFFFFFFFFFFull
#define FXR_PCIM_ERR_FRC_EVENTS_SMASK			0x1FFFFFFFFFFFull
/*
* Table #17 of fxr_top - PCIM_ERR_EN_HOST
* This is the Error Enable for the Host Interrupt. If a bit is set, the 
* corresponding error bit in PCIM_ERR_STS will cause an interrupt on the HOST 
* interrupt signal.
*/
#define FXR_PCIM_ERR_EN_HOST				(FXR_PCIM_CSRS + 0x000000000218)
#define FXR_PCIM_ERR_EN_HOST_RESETCSR			0x0000000000000000ull
#define FXR_PCIM_ERR_EN_HOST_RESERVED_63_45_SHIFT	45
#define FXR_PCIM_ERR_EN_HOST_RESERVED_63_45_MASK	0x7FFFFull
#define FXR_PCIM_ERR_EN_HOST_RESERVED_63_45_SMASK	0xFFFFE00000000000ull
#define FXR_PCIM_ERR_EN_HOST_EVENTS_SHIFT		0
#define FXR_PCIM_ERR_EN_HOST_EVENTS_MASK		0x1FFFFFFFFFFFull
#define FXR_PCIM_ERR_EN_HOST_EVENTS_SMASK		0x1FFFFFFFFFFFull
/*
* Table #18 of fxr_top - PCIM_ERR_FIRST_HOST
* This is the First Error CSR for the Host Interrupt. When this CSR is clear, it 
* will capture the next PCIM_ERR_STS value when a new HOST Interrupt 
* occurs.
*/
#define FXR_PCIM_ERR_FIRST_HOST				(FXR_PCIM_CSRS + 0x000000000220)
#define FXR_PCIM_ERR_FIRST_HOST_RESETCSR		0x0000000000000000ull
#define FXR_PCIM_ERR_FIRST_HOST_RESERVED_63_45_SHIFT	45
#define FXR_PCIM_ERR_FIRST_HOST_RESERVED_63_45_MASK	0x7FFFFull
#define FXR_PCIM_ERR_FIRST_HOST_RESERVED_63_45_SMASK	0xFFFFE00000000000ull
#define FXR_PCIM_ERR_FIRST_HOST_EVENTS_SHIFT		0
#define FXR_PCIM_ERR_FIRST_HOST_EVENTS_MASK		0x1FFFFFFFFFFFull
#define FXR_PCIM_ERR_FIRST_HOST_EVENTS_SMASK		0x1FFFFFFFFFFFull
/*
* Table #19 of fxr_top - PCIM_ERR_EN_BMC
* This is the Error Enable for the BMC Interrupt. If a bit is set, the 
* corresponding error bit in PCIM_ERR_STS will cause an interrupt on the BMC 
* interrupt signal.
*/
#define FXR_PCIM_ERR_EN_BMC				(FXR_PCIM_CSRS + 0x000000000228)
#define FXR_PCIM_ERR_EN_BMC_RESETCSR			0x0000000000000000ull
#define FXR_PCIM_ERR_EN_BMC_RESERVED_63_45_SHIFT	45
#define FXR_PCIM_ERR_EN_BMC_RESERVED_63_45_MASK		0x7FFFFull
#define FXR_PCIM_ERR_EN_BMC_RESERVED_63_45_SMASK	0xFFFFE00000000000ull
#define FXR_PCIM_ERR_EN_BMC_EVENTS_SHIFT		0
#define FXR_PCIM_ERR_EN_BMC_EVENTS_MASK			0x1FFFFFFFFFFFull
#define FXR_PCIM_ERR_EN_BMC_EVENTS_SMASK		0x1FFFFFFFFFFFull
/*
* Table #20 of fxr_top - PCIM_ERR_FIRST_BMC
* This is the First Error CSR for the BMC Interrupt. When this CSR is clear, it 
* will capture the next PCIM_ERR_STS value when a new BMC Interrupt 
* occurs.
*/
#define FXR_PCIM_ERR_FIRST_BMC				(FXR_PCIM_CSRS + 0x000000000230)
#define FXR_PCIM_ERR_FIRST_BMC_RESETCSR			0x0000000000000000ull
#define FXR_PCIM_ERR_FIRST_BMC_RESERVED_63_45_SHIFT	45
#define FXR_PCIM_ERR_FIRST_BMC_RESERVED_63_45_MASK	0x7FFFFull
#define FXR_PCIM_ERR_FIRST_BMC_RESERVED_63_45_SMASK	0xFFFFE00000000000ull
#define FXR_PCIM_ERR_FIRST_BMC_EVENTS_SHIFT		0
#define FXR_PCIM_ERR_FIRST_BMC_EVENTS_MASK		0x1FFFFFFFFFFFull
#define FXR_PCIM_ERR_FIRST_BMC_EVENTS_SMASK		0x1FFFFFFFFFFFull
/*
* Table #21 of fxr_top - PCIM_ERR_EN_QUAR
* This is the Error Enable for the Quarantine Interrupt. If a bit is set, the 
* corresponding error bit in PCIM_ERR_STS will cause an interrupt on the QUAR 
* interrupt signal.
*/
#define FXR_PCIM_ERR_EN_QUAR				(FXR_PCIM_CSRS + 0x000000000238)
#define FXR_PCIM_ERR_EN_QUAR_RESETCSR			0x0000000000000000ull
#define FXR_PCIM_ERR_EN_QUAR_RESERVED_63_45_SHIFT	45
#define FXR_PCIM_ERR_EN_QUAR_RESERVED_63_45_MASK	0x7FFFFull
#define FXR_PCIM_ERR_EN_QUAR_RESERVED_63_45_SMASK	0xFFFFE00000000000ull
#define FXR_PCIM_ERR_EN_QUAR_EVENTS_SHIFT		0
#define FXR_PCIM_ERR_EN_QUAR_EVENTS_MASK		0x1FFFFFFFFFFFull
#define FXR_PCIM_ERR_EN_QUAR_EVENTS_SMASK		0x1FFFFFFFFFFFull
/*
* Table #22 of fxr_top - PCIM_ERR_FIRST_QUAR
* This is the First Error CSR for the Quarantine Interrupt. When this CSR is 
* clear, it will capture the next PCIM_ERR_STS value when a new QUAR Interrupt 
* occurs.
*/
#define FXR_PCIM_ERR_FIRST_QUAR				(FXR_PCIM_CSRS + 0x000000000240)
#define FXR_PCIM_ERR_FIRST_QUAR_RESETCSR		0x0000000000000000ull
#define FXR_PCIM_ERR_FIRST_QUAR_RESERVED_63_45_SHIFT	45
#define FXR_PCIM_ERR_FIRST_QUAR_RESERVED_63_45_MASK	0x7FFFFull
#define FXR_PCIM_ERR_FIRST_QUAR_RESERVED_63_45_SMASK	0xFFFFE00000000000ull
#define FXR_PCIM_ERR_FIRST_QUAR_EVENTS_SHIFT		0
#define FXR_PCIM_ERR_FIRST_QUAR_EVENTS_MASK		0x1FFFFFFFFFFFull
#define FXR_PCIM_ERR_FIRST_QUAR_EVENTS_SMASK		0x1FFFFFFFFFFFull
/*
* Table #23 of fxr_top - PCIM_ERR_INFO
* Misc syndrome and info data for associated #%%#PCIM_ERR_STS#%%# events. Info 
* fields are held until the associated event is cleared via the 
* #%%#PCIM_ERR_CLR#%%# register.
*/
#define FXR_PCIM_ERR_INFO				(FXR_PCIM_CSRS + 0x000000000248)
#define FXR_PCIM_ERR_INFO_RESETCSR			0x0000000000000000ull
#define FXR_PCIM_ERR_INFO_RESERVED_63_42_SHIFT		42
#define FXR_PCIM_ERR_INFO_RESERVED_63_42_MASK		0x3FFFFFull
#define FXR_PCIM_ERR_INFO_RESERVED_63_42_SMASK		0xFFFFFC0000000000ull
#define FXR_PCIM_ERR_INFO_REMAP_RSP_TID_SHIFT		33
#define FXR_PCIM_ERR_INFO_REMAP_RSP_TID_MASK		0x1FFull
#define FXR_PCIM_ERR_INFO_REMAP_RSP_TID_SMASK		0x3FE00000000ull
#define FXR_PCIM_ERR_INFO_P2SB_SYND0_SHIFT		24
#define FXR_PCIM_ERR_INFO_P2SB_SYND0_MASK		0x1FFull
#define FXR_PCIM_ERR_INFO_P2SB_SYND0_SMASK		0x1FF000000ull
#define FXR_PCIM_ERR_INFO_RESERVED_23_SHIFT		23
#define FXR_PCIM_ERR_INFO_RESERVED_23_MASK		0x1ull
#define FXR_PCIM_ERR_INFO_RESERVED_23_SMASK		0x800000ull
#define FXR_PCIM_ERR_INFO_P2SB_SYND1_SHIFT		16
#define FXR_PCIM_ERR_INFO_P2SB_SYND1_MASK		0x7Full
#define FXR_PCIM_ERR_INFO_P2SB_SYND1_SMASK		0x7F0000ull
#define FXR_PCIM_ERR_INFO_RESERVED_15_SHIFT		15
#define FXR_PCIM_ERR_INFO_RESERVED_15_MASK		0x1ull
#define FXR_PCIM_ERR_INFO_RESERVED_15_SMASK		0x8000ull
#define FXR_PCIM_ERR_INFO_MSIX_DATA_SYND_SHIFT		8
#define FXR_PCIM_ERR_INFO_MSIX_DATA_SYND_MASK		0x7Full
#define FXR_PCIM_ERR_INFO_MSIX_DATA_SYND_SMASK		0x7F00ull
#define FXR_PCIM_ERR_INFO_MSIX_ADDR_SYND_SHIFT		0
#define FXR_PCIM_ERR_INFO_MSIX_ADDR_SYND_MASK		0xFFull
#define FXR_PCIM_ERR_INFO_MSIX_ADDR_SYND_SMASK		0xFFull
/*
* Table #24 of fxr_top - PCIM_ERR_INFO1
* HPI Header0 associated with HPI error event in #%%#PCIM_ERR_STS#%%#. Header is 
* held until the associated event is cleared via the #%%#PCIM_ERR_CLR#%%# 
* register.
*/
#define FXR_PCIM_ERR_INFO1				(FXR_PCIM_CSRS + 0x000000000250)
#define FXR_PCIM_ERR_INFO1_RESETCSR			0x0000000000000000ull
#define FXR_PCIM_ERR_INFO1_HPI_HEADER0_SHIFT		0
#define FXR_PCIM_ERR_INFO1_HPI_HEADER0_MASK		0xFFFFFFFFFFFFFFFFull
#define FXR_PCIM_ERR_INFO1_HPI_HEADER0_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #25 of fxr_top - PCIM_ERR_INFO2
* HPI Header1 associated with HPI error event in #%%#PCIM_ERR_STS#%%#. Header is 
* held until the associated event is cleared via the #%%#PCIM_ERR_CLR#%%# 
* register.
*/
#define FXR_PCIM_ERR_INFO2				(FXR_PCIM_CSRS + 0x000000000258)
#define FXR_PCIM_ERR_INFO2_RESETCSR			0x0000000000000000ull
#define FXR_PCIM_ERR_INFO2_HPI_HEADER1_SHIFT		0
#define FXR_PCIM_ERR_INFO2_HPI_HEADER1_MASK		0xFFFFFFFFFFFFFFFFull
#define FXR_PCIM_ERR_INFO2_HPI_HEADER1_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #26 of fxr_top - PCIM_ERR_INFO3
* P2SB Header0 associated with P2SB error event in #%%#PCIM_ERR_STS#%%#. Header 
* is held until the associated event is cleared via the #%%#PCIM_ERR_CLR#%%# 
* register.
*/
#define FXR_PCIM_ERR_INFO3				(FXR_PCIM_CSRS + 0x000000000260)
#define FXR_PCIM_ERR_INFO3_RESETCSR			0x0000000000000000ull
#define FXR_PCIM_ERR_INFO3_P2SB_HEADER0_SHIFT		0
#define FXR_PCIM_ERR_INFO3_P2SB_HEADER0_MASK		0xFFFFFFFFFFFFFFFFull
#define FXR_PCIM_ERR_INFO3_P2SB_HEADER0_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #27 of fxr_top - PCIM_ERR_INFO4
* P2SB Header1 associated with P2SB error event in #%%#PCIM_ERR_STS#%%#. Header 
* is held until the associated event is cleared via the #%%#PCIM_ERR_CLR#%%# 
* register.
*/
#define FXR_PCIM_ERR_INFO4				(FXR_PCIM_CSRS + 0x000000000268)
#define FXR_PCIM_ERR_INFO4_RESETCSR			0x0000000000000000ull
#define FXR_PCIM_ERR_INFO4_P2SB_HEADER1_SHIFT		0
#define FXR_PCIM_ERR_INFO4_P2SB_HEADER1_MASK		0xFFFFFFFFFFFFFFFFull
#define FXR_PCIM_ERR_INFO4_P2SB_HEADER1_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #28 of fxr_top - PCIM_ERR_INFO5
* TARB Header0 associated with TARB error event in #%%#PCIM_ERR_STS#%%#. Header 
* is held until the associated event is cleared via the #%%#PCIM_ERR_CLR#%%# 
* register.
*/
#define FXR_PCIM_ERR_INFO5				(FXR_PCIM_CSRS + 0x000000000270)
#define FXR_PCIM_ERR_INFO5_RESETCSR			0x0000000000000000ull
#define FXR_PCIM_ERR_INFO5_TARB_HEADER0_SHIFT		0
#define FXR_PCIM_ERR_INFO5_TARB_HEADER0_MASK		0xFFFFFFFFFFFFFFFFull
#define FXR_PCIM_ERR_INFO5_TARB_HEADER0_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #29 of fxr_top - PCIM_ERR_INFO6
* TARB Header1 associated with TARB error event in #%%#PCIM_ERR_STS#%%#. Header 
* is held until the associated event is cleared via the #%%#PCIM_ERR_CLR#%%# 
* register.
*/
#define FXR_PCIM_ERR_INFO6				(FXR_PCIM_CSRS + 0x000000000278)
#define FXR_PCIM_ERR_INFO6_RESETCSR			0x0000000000000000ull
#define FXR_PCIM_ERR_INFO6_TARB_HEADER1_SHIFT		0
#define FXR_PCIM_ERR_INFO6_TARB_HEADER1_MASK		0xFFFFFFFFFFFFFFFFull
#define FXR_PCIM_ERR_INFO6_TARB_HEADER1_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #30 of fxr_top - PCIM_ERR_INFO7
* TARB Header1 associated with TARB error event in #%%#PCIM_ERR_STS#%%#. Header 
* is held until the associated event is cleared via the #%%#PCIM_ERR_CLR#%%# 
* register.
*/
#define FXR_PCIM_ERR_INFO7				(FXR_PCIM_CSRS + 0x000000000280)
#define FXR_PCIM_ERR_INFO7_RESETCSR			0x0000000000000000ull
#define FXR_PCIM_ERR_INFO7_RESERVED_63_8_SHIFT		8
#define FXR_PCIM_ERR_INFO7_RESERVED_63_8_MASK		0xFFFFFFFFFFFFFFull
#define FXR_PCIM_ERR_INFO7_RESERVED_63_8_SMASK		0xFFFFFFFFFFFFFF00ull
#define FXR_PCIM_ERR_INFO7_ITR_RPE_ENTRY_SHIFT		0
#define FXR_PCIM_ERR_INFO7_ITR_RPE_ENTRY_MASK		0xFFull
#define FXR_PCIM_ERR_INFO7_ITR_RPE_ENTRY_SMASK		0xFFull
/*
* Table #31 of fxr_top - PCIM_SAI_BOOTW
* HW register for SAI_BOOT_W Policy Group. Generates WAC/RAC/CP for use by CFG 
* space controller.
*/
#define FXR_PCIM_SAI_BOOTW				(FXR_PCIM_CSRS + 0x0000000002F0)
#define FXR_PCIM_SAI_BOOTW_RESETCSR			0x0000000000000000ull
#define FXR_PCIM_SAI_BOOTW_SPARE_SHIFT			0
#define FXR_PCIM_SAI_BOOTW_SPARE_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_PCIM_SAI_BOOTW_SPARE_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #32 of fxr_top - PCIM_BMC_STS
* This is the Error Status CSR. Bits are set by hardware or by writing to the 
* #%%#PCIM_BMC_FRC#%%# CSR. Bits are cleared by writing to the 
* #%%#PCIM_BMC_CLR#%%# CSR.
*/
#define FXR_PCIM_BMC_STS				(FXR_PCIM_CSRS + 0x000000000300)
#define FXR_PCIM_BMC_STS_RESETCSR			0x0000000000000000ull
#define FXR_PCIM_BMC_STS_RESERVED_63_23_SHIFT		23
#define FXR_PCIM_BMC_STS_RESERVED_63_23_MASK		0x1FFFFFFFFFFull
#define FXR_PCIM_BMC_STS_RESERVED_63_23_SMASK		0xFFFFFFFFFF800000ull
#define FXR_PCIM_BMC_STS_PMON_CORE_ERROR_SHIFT		22
#define FXR_PCIM_BMC_STS_PMON_CORE_ERROR_MASK		0x1ull
#define FXR_PCIM_BMC_STS_PMON_CORE_ERROR_SMASK		0x400000ull
#define FXR_PCIM_BMC_STS_LM_TP_ERROR_SHIFT		21
#define FXR_PCIM_BMC_STS_LM_TP_ERROR_MASK		0x1ull
#define FXR_PCIM_BMC_STS_LM_TP_ERROR_SMASK		0x200000ull
#define FXR_PCIM_BMC_STS_LM_FPC_ERROR_SHIFT		20
#define FXR_PCIM_BMC_STS_LM_FPC_ERROR_MASK		0x1ull
#define FXR_PCIM_BMC_STS_LM_FPC_ERROR_SMASK		0x100000ull
#define FXR_PCIM_BMC_STS_RXCIC_ERROR_SHIFT		19
#define FXR_PCIM_BMC_STS_RXCIC_ERROR_MASK		0x1ull
#define FXR_PCIM_BMC_STS_RXCIC_ERROR_SMASK		0x80000ull
#define FXR_PCIM_BMC_STS_RXCID_ERROR_SHIFT		18
#define FXR_PCIM_BMC_STS_RXCID_ERROR_MASK		0x1ull
#define FXR_PCIM_BMC_STS_RXCID_ERROR_SMASK		0x40000ull
#define FXR_PCIM_BMC_STS_OPIO_ERROR_SHIFT		17
#define FXR_PCIM_BMC_STS_OPIO_ERROR_MASK		0x1ull
#define FXR_PCIM_BMC_STS_OPIO_ERROR_SMASK		0x20000ull
#define FXR_PCIM_BMC_STS_AT_ERROR_SHIFT			16
#define FXR_PCIM_BMC_STS_AT_ERROR_MASK			0x1ull
#define FXR_PCIM_BMC_STS_AT_ERROR_SMASK			0x10000ull
#define FXR_PCIM_BMC_STS_RXHIARB_ERROR_SHIFT		15
#define FXR_PCIM_BMC_STS_RXHIARB_ERROR_MASK		0x1ull
#define FXR_PCIM_BMC_STS_RXHIARB_ERROR_SMASK		0x8000ull
#define FXR_PCIM_BMC_STS_RXET_ERROR_SHIFT		14
#define FXR_PCIM_BMC_STS_RXET_ERROR_MASK		0x1ull
#define FXR_PCIM_BMC_STS_RXET_ERROR_SMASK		0x4000ull
#define FXR_PCIM_BMC_STS_RXDMA_ERROR_SHIFT		13
#define FXR_PCIM_BMC_STS_RXDMA_ERROR_MASK		0x1ull
#define FXR_PCIM_BMC_STS_RXDMA_ERROR_SMASK		0x2000ull
#define FXR_PCIM_BMC_STS_RXHP_ERROR_SHIFT		12
#define FXR_PCIM_BMC_STS_RXHP_ERROR_MASK		0x1ull
#define FXR_PCIM_BMC_STS_RXHP_ERROR_SMASK		0x1000ull
#define FXR_PCIM_BMC_STS_RXE2E_ERROR_SHIFT		11
#define FXR_PCIM_BMC_STS_RXE2E_ERROR_MASK		0x1ull
#define FXR_PCIM_BMC_STS_RXE2E_ERROR_SMASK		0x800ull
#define FXR_PCIM_BMC_STS_LM_ERROR_SHIFT			10
#define FXR_PCIM_BMC_STS_LM_ERROR_MASK			0x1ull
#define FXR_PCIM_BMC_STS_LM_ERROR_SMASK			0x400ull
#define FXR_PCIM_BMC_STS_TXDMA_ERROR_SHIFT		9
#define FXR_PCIM_BMC_STS_TXDMA_ERROR_MASK		0x1ull
#define FXR_PCIM_BMC_STS_TXDMA_ERROR_SMASK		0x200ull
#define FXR_PCIM_BMC_STS_OTR_MSG_ERROR_SHIFT		8
#define FXR_PCIM_BMC_STS_OTR_MSG_ERROR_MASK		0x1ull
#define FXR_PCIM_BMC_STS_OTR_MSG_ERROR_SMASK		0x100ull
#define FXR_PCIM_BMC_STS_TXCIC_ERROR_SHIFT		7
#define FXR_PCIM_BMC_STS_TXCIC_ERROR_MASK		0x1ull
#define FXR_PCIM_BMC_STS_TXCIC_ERROR_SMASK		0x80ull
#define FXR_PCIM_BMC_STS_TXCID_ERROR_SHIFT		6
#define FXR_PCIM_BMC_STS_TXCID_ERROR_MASK		0x1ull
#define FXR_PCIM_BMC_STS_TXCID_ERROR_SMASK		0x40ull
#define FXR_PCIM_BMC_STS_PCIM_ERROR_SHIFT		5
#define FXR_PCIM_BMC_STS_PCIM_ERROR_MASK		0x1ull
#define FXR_PCIM_BMC_STS_PCIM_ERROR_SMASK		0x20ull
#define FXR_PCIM_BMC_STS_LOCA_ERROR_SHIFT		4
#define FXR_PCIM_BMC_STS_LOCA_ERROR_MASK		0x1ull
#define FXR_PCIM_BMC_STS_LOCA_ERROR_SMASK		0x10ull
#define FXR_PCIM_BMC_STS_HIFIS_ERROR_SHIFT		3
#define FXR_PCIM_BMC_STS_HIFIS_ERROR_MASK		0x1ull
#define FXR_PCIM_BMC_STS_HIFIS_ERROR_SMASK		0x8ull
#define FXR_PCIM_BMC_STS_OTR_PKT_ERROR_SHIFT		2
#define FXR_PCIM_BMC_STS_OTR_PKT_ERROR_MASK		0x1ull
#define FXR_PCIM_BMC_STS_OTR_PKT_ERROR_SMASK		0x4ull
#define FXR_PCIM_BMC_STS_FZC_ERROR_SHIFT		1
#define FXR_PCIM_BMC_STS_FZC_ERROR_MASK			0x1ull
#define FXR_PCIM_BMC_STS_FZC_ERROR_SMASK		0x2ull
#define FXR_PCIM_BMC_STS_MNH_ERROR_SHIFT		0
#define FXR_PCIM_BMC_STS_MNH_ERROR_MASK			0x1ull
#define FXR_PCIM_BMC_STS_MNH_ERROR_SMASK		0x1ull
/*
* Table #33 of fxr_top - PCIM_BMC_CLR
* This is the BMC Clear CSR. Writing a 1 to a valid bit will clear the 
* corresponding bit in the #%%#PCIM_BMC_STS#%%# CSR.
*/
#define FXR_PCIM_BMC_CLR				(FXR_PCIM_CSRS + 0x000000000308)
#define FXR_PCIM_BMC_CLR_RESETCSR			0x0000000000000000ull
#define FXR_PCIM_BMC_CLR_RESERVED_63_23_SHIFT		23
#define FXR_PCIM_BMC_CLR_RESERVED_63_23_MASK		0x1FFFFFFFFFFull
#define FXR_PCIM_BMC_CLR_RESERVED_63_23_SMASK		0xFFFFFFFFFF800000ull
#define FXR_PCIM_BMC_CLR_EVENTS_SHIFT			0
#define FXR_PCIM_BMC_CLR_EVENTS_MASK			0x7FFFFFull
#define FXR_PCIM_BMC_CLR_EVENTS_SMASK			0x7FFFFFull
/*
* Table #34 of fxr_top - PCIM_BMC_FRC
* This is the BMC Force CSR. Writing a 1 to a valid bit will set the 
* corresponding bit in the #%%#PCIM_BMC_STS#%%# CSR.
*/
#define FXR_PCIM_BMC_FRC				(FXR_PCIM_CSRS + 0x000000000310)
#define FXR_PCIM_BMC_FRC_RESETCSR			0x0000000000000000ull
#define FXR_PCIM_BMC_FRC_RESERVED_63_23_SHIFT		23
#define FXR_PCIM_BMC_FRC_RESERVED_63_23_MASK		0x1FFFFFFFFFFull
#define FXR_PCIM_BMC_FRC_RESERVED_63_23_SMASK		0xFFFFFFFFFF800000ull
#define FXR_PCIM_BMC_FRC_EVENTS_SHIFT			0
#define FXR_PCIM_BMC_FRC_EVENTS_MASK			0x7FFFFFull
#define FXR_PCIM_BMC_FRC_EVENTS_SMASK			0x7FFFFFull
/*
* Table #35 of fxr_top - PCIM_BMC_ENA
* This is the Enable CSR for the BMC Interrupt. If a bit is set, the 
* corresponding error bit in #%%#PCIM_BMC_STS#%%# will cause an interrupt to the 
* BMC.
*/
#define FXR_PCIM_BMC_ENA				(FXR_PCIM_CSRS + 0x000000000318)
#define FXR_PCIM_BMC_ENA_RESETCSR			0x0000000000000000ull
#define FXR_PCIM_BMC_ENA_RESERVED_63_23_SHIFT		23
#define FXR_PCIM_BMC_ENA_RESERVED_63_23_MASK		0x1FFFFFFFFFFull
#define FXR_PCIM_BMC_ENA_RESERVED_63_23_SMASK		0xFFFFFFFFFF800000ull
#define FXR_PCIM_BMC_ENA_EVENTS_SHIFT			0
#define FXR_PCIM_BMC_ENA_EVENTS_MASK			0x7FFFFFull
#define FXR_PCIM_BMC_ENA_EVENTS_SMASK			0x7FFFFFull
/*
* Table #36 of fxr_top - PCIM_BMC_FIRST
* This is the First BMC CSR for the BMC Interrupt. When BMC interrupt is clear, 
* it will capture the next #%%#PCIM_BMC_STS#%%# value when a new BMC Interrupt 
* occurs.
*/
#define FXR_PCIM_BMC_FIRST				(FXR_PCIM_CSRS + 0x000000000320)
#define FXR_PCIM_BMC_FIRST_RESETCSR			0x0000000000000000ull
#define FXR_PCIM_BMC_FIRST_RESERVED_63_23_SHIFT		23
#define FXR_PCIM_BMC_FIRST_RESERVED_63_23_MASK		0x1FFFFFFFFFFull
#define FXR_PCIM_BMC_FIRST_RESERVED_63_23_SMASK		0xFFFFFFFFFF800000ull
#define FXR_PCIM_BMC_FIRST_EVENTS_SHIFT			0
#define FXR_PCIM_BMC_FIRST_EVENTS_MASK			0x7FFFFFull
#define FXR_PCIM_BMC_FIRST_EVENTS_SMASK			0x7FFFFFull
/*
* Table #37 of fxr_top - PCIM_INT_STS
* 320 Interrupt Status bits implemented in five 64-bit CSRs. Each bit represents 
* an interrupt source. A bit is set to 1 whenever the corresponding event is 
* signaled (rising edge triggered) or if the bit is explicitly set by software 
* using the INT_FRC register. A bit remains set until explicitly cleared by 
* software using the INT_CLR register.If a set condition and clear condition 
* occur simultaneously, the set condition wins. 
*/
#define FXR_PCIM_INT_STS				(FXR_PCIM_CSRS + 0x000000000400)
#define FXR_PCIM_INT_STS_RESETCSR			0x0000000000000000ull
#define FXR_PCIM_INT_STS_INT_STS_SHIFT			0
#define FXR_PCIM_INT_STS_INT_STS_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_PCIM_INT_STS_INT_STS_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #39 of fxr_top - PCIM_INT_CLR
* One for one mapping to PCIM_INT_STS registers to clear status bits and 
* associated MSIX_PBA bits. Writing a 1 clears the bit. Writing 0 has no effect. 
* Reads return 0.
*/
#define FXR_PCIM_INT_CLR				(FXR_PCIM_CSRS + 0x000000000440)
#define FXR_PCIM_INT_CLR_RESETCSR			0x0000000000000000ull
#define FXR_PCIM_INT_CLR_INT_CLR_SHIFT			0
#define FXR_PCIM_INT_CLR_INT_CLR_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_PCIM_INT_CLR_INT_CLR_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #40 of fxr_top - PCIM_INT_FRC
* One for one mapping to PCIM_INT_STS registers to set status bits and 
* associated MSIX_PBA bits. Writing a 1 sets the bit. Writing 0 has no effect. 
* Reads return 0.
*/
#define FXR_PCIM_INT_FRC				(FXR_PCIM_CSRS + 0x000000000480)
#define FXR_PCIM_INT_FRC_RESETCSR			0x0000000000000000ull
#define FXR_PCIM_INT_FRC_INT_FRC_SHIFT			0
#define FXR_PCIM_INT_FRC_INT_FRC_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_PCIM_INT_FRC_INT_FRC_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #41 of fxr_top - PCIM_INT_ITR
* ITR is used to shape (throttle) INT_STS[3:0] CSR events (IRQs and 
* LM_BECN_EVENT). Each INT_STS bit has an associated ITR to limit the max 
* signaling rate for that event. ITR can be disabled by setting the threshold 
* rate to zero. ITR state is maintained in a Register File
*/
#define FXR_PCIM_INT_ITR				(FXR_PCIM_CSRS + 0x000000000800)
#define FXR_PCIM_INT_ITR_RESETCSR			0x0000000100000000ull
#define FXR_PCIM_INT_ITR_RESERVED_63_34_SHIFT		34
#define FXR_PCIM_INT_ITR_RESERVED_63_34_MASK		0x3FFFFFFFull
#define FXR_PCIM_INT_ITR_RESERVED_63_34_SMASK		0xFFFFFFFC00000000ull
#define FXR_PCIM_INT_ITR_ITR_PAR_SHIFT			33
#define FXR_PCIM_INT_ITR_ITR_PAR_MASK			0x1ull
#define FXR_PCIM_INT_ITR_ITR_PAR_SMASK			0x200000000ull
#define FXR_PCIM_INT_ITR_ITR_ENA_SHIFT			32
#define FXR_PCIM_INT_ITR_ITR_ENA_MASK			0x1ull
#define FXR_PCIM_INT_ITR_ITR_ENA_SMASK			0x100000000ull
#define FXR_PCIM_INT_ITR_ITR_TIMER_SHIFT		16
#define FXR_PCIM_INT_ITR_ITR_TIMER_MASK			0xFFFFull
#define FXR_PCIM_INT_ITR_ITR_TIMER_SMASK		0xFFFF0000ull
#define FXR_PCIM_INT_ITR_INT_DELAY_SHIFT		0
#define FXR_PCIM_INT_ITR_INT_DELAY_MASK			0xFFFFull
#define FXR_PCIM_INT_ITR_INT_DELAY_SMASK		0xFFFFull
/*
* Table #42 of fxr_top - PCIM_MSIX_ADDR
* MSIX Table entry Message Address. 
*/
#define FXR_PCIM_MSIX_ADDR				(FXR_PCIM_CSRS + 0x000000002000)
#define FXR_PCIM_MSIX_ADDR_RESETCSR			0x0000000000000000ull
#define FXR_PCIM_MSIX_ADDR_MSG_ADDR_SHIFT		0
#define FXR_PCIM_MSIX_ADDR_MSG_ADDR_MASK		0xFFFFFFFFFFFFFFFFull
#define FXR_PCIM_MSIX_ADDR_MSG_ADDR_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #43 of fxr_top - PCIM_MSIX_DATACTL
* 320 MSIX Table entries containing MSIX Message Data and Control. Each INT_STS 
* event is direct mapped to a MSIX Table entry. INT_STS event 0 maps to MSIX 
* Table entry 0, INT_STS event 319 maps to MSIX Table entry 319
*/
#define FXR_PCIM_MSIX_DATACTL				(FXR_PCIM_CSRS + 0x000000002008)
#define FXR_PCIM_MSIX_DATACTL_RESETCSR			0x0000000100000000ull
#define FXR_PCIM_MSIX_DATACTL_RESERVED_63_33_SHIFT	33
#define FXR_PCIM_MSIX_DATACTL_RESERVED_63_33_MASK	0x7FFFFFFFull
#define FXR_PCIM_MSIX_DATACTL_RESERVED_63_33_SMASK	0xFFFFFFFE00000000ull
#define FXR_PCIM_MSIX_DATACTL_MSG_MASK_SHIFT		32
#define FXR_PCIM_MSIX_DATACTL_MSG_MASK_MASK		0x1ull
#define FXR_PCIM_MSIX_DATACTL_MSG_MASK_SMASK		0x100000000ull
#define FXR_PCIM_MSIX_DATACTL_MSG_DATA_SHIFT		0
#define FXR_PCIM_MSIX_DATACTL_MSG_DATA_MASK		0xFFFFFFFFull
#define FXR_PCIM_MSIX_DATACTL_MSG_DATA_SMASK		0xFFFFFFFFull
/*
* Table #44 of fxr_top - PCIM_MSIX_PBA
* MSIX Pending Bit Array. Five total QWARDs (0 to 4). Each QWORD contains 
* Pending Bits for 64 entries in the MSIX Table. QWORD N contains PBA bits for 
* MSIX Table entries [64N+63 : 64N] for a total of 320 PBA bits.
*/
#define FXR_PCIM_MSIX_PBA				(FXR_PCIM_CSRS + 0x000000004000)
#define FXR_PCIM_MSIX_PBA_RESETCSR			0x0000000000000000ull
#define FXR_PCIM_MSIX_PBA_MSIX_PBA_SHIFT		0
#define FXR_PCIM_MSIX_PBA_MSIX_PBA_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_PCIM_MSIX_PBA_MSIX_PBA_SMASK		0xFFFFFFFFFFFFFFFFull

#endif 		/* DEF_FXR_PCIM_SW_DEF */

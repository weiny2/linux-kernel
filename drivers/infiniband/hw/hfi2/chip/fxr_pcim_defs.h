/*
*------------------------------------------------------------------------------
*                                                                              
*  INTEL CONFIDENTIAL                                                          
*                                                                              
*  Copyright 2018 Intel Corporation All Rights Reserved.                 
*                                                                              
*  The source code contained or described herein and all documents related     
*  to the source code ("Material") are owned by Intel Corporation or its    
*  suppliers or licensors. Title to the Material remains with Intel            
*  Corporation or its suppliers and licensors. The Material contains trade     
*  secrets and proprietary and confidential information of Intel or its        
*  suppliers and licensors. The Material is protected by worldwide copyright   
*  and trade secret laws and treaty provisions. No part of the Material may    
*  be used, copied, reproduced, modified, published, uploaded, posted,         
*  transmitted, distributed, or disclosed in any way without Intel's prior     
*  express written permission.                                                 
*                                                                              
*  No license under any patent, copyright, trade secret or other intellectual  
*  property right is granted to or conferred upon you by disclosure or         
*  delivery of the Materials, either expressly, by implication, inducement,    
*  estoppel or otherwise. Any license under such intellectual property rights  
*  must be express and approved by Intel in writing.                           
*                                                                              
*------------------------------------------------------------------------------
*  Auto-generated by /p/hdk/rtl/proj_tools/sl2_tools/sl2_tools-srvr10nm-18ww32a/scripts/i_csrs/i_csrs.pl
*  i_csrs.pl Version 1.5 last modified on Wednesday 8/8/18 08:19:29
*  /p/hdk/rtl/proj_tools/sl2_tools/sl2_tools-srvr10nm-18ww32a/scripts/i_csrs/i_csrs.pl -C -RVREGS -ST fxr_pcim -o /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/fxr /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/repo_xml_33c/300_Memory_Map.xml /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/repo_xml_33c/344_Memory_Map_PCIM.xml
*------------------------------------------------------------------------------
*/

#ifndef DEF_FXR_PCIM_SW_DEF
#define DEF_FXR_PCIM_SW_DEF

#ifndef HFI_PCIM_CSRS
#define HFI_PCIM_CSRS					0x000000000000
#endif
#define FXR_NUM_CONTEXTS				256
#define FXR_NUM_PIDS					4096
#define FXR_MAX_CONTEXT					255
#define FXR_TX_CONTEXT_ENTRIES				128
#define FXR_TX_CONTEXT_MAX				127
#define FXR_RX_CONTEXT_ENTRIES				32
#define FXR_RX_CONTEXT_MAX				31
#define FXR_NUM_SL					32
#define FXR_MAX_SL					31
#define PCIM_MAX_ITR					255
#define PCIM_MAX_INT_CSRS				4
#define PCIM_MAX_MSIX_VECTORS				319
#define PCIM_MAX_MSIX_PBA_CSRS				4
#define PCIM_CFG_BASE					0
#define PCIM_ERR_BASE					512
#define PCIM_BMC_BASE					768
#define PCIM_INT_BASE					1024
#define PCIM_MSIX_TABLE_BASE				8192
#define PCIM_MSIX_PBA_BASE				16384
#define PCIM_MSIX_REMAP_BASE				24576
/*
* Table #4 of fxr_top - PCIM_CFG_CTL
* PCIM block Configuration bits
*/
#define HFI_PCIM_CFG_CTL				(HFI_PCIM_CSRS + 0x000000000000)
#define HFI_PCIM_CFG_CTL_RESETCSR			0x003030207403E7FFull
#define HFI_PCIM_CFG_CTL_DRIVER_RESET_SHIFT		63
#define HFI_PCIM_CFG_CTL_DRIVER_RESET_MASK		0x1ull
#define HFI_PCIM_CFG_CTL_DRIVER_RESET_SMASK		0x8000000000000000ull
#define HFI_PCIM_CFG_CTL_RESERVED_62_57_SHIFT		57
#define HFI_PCIM_CFG_CTL_RESERVED_62_57_MASK		0x3Full
#define HFI_PCIM_CFG_CTL_RESERVED_62_57_SMASK		0x7E00000000000000ull
#define HFI_PCIM_CFG_CTL_CMPL_STS_UPDATE_SHIFT		48
#define HFI_PCIM_CFG_CTL_CMPL_STS_UPDATE_MASK		0x1FFull
#define HFI_PCIM_CFG_CTL_CMPL_STS_UPDATE_SMASK		0x1FF000000000000ull
#define HFI_PCIM_CFG_CTL_RESERVED_47_SHIFT		47
#define HFI_PCIM_CFG_CTL_RESERVED_47_MASK		0x1ull
#define HFI_PCIM_CFG_CTL_RESERVED_47_SMASK		0x800000000000ull
#define HFI_PCIM_CFG_CTL_MAX_READ_REQ_128_SHIFT		46
#define HFI_PCIM_CFG_CTL_MAX_READ_REQ_128_MASK		0x1ull
#define HFI_PCIM_CFG_CTL_MAX_READ_REQ_128_SMASK		0x400000000000ull
#define HFI_PCIM_CFG_CTL_MAX_PAYLOAD_128_SHIFT		45
#define HFI_PCIM_CFG_CTL_MAX_PAYLOAD_128_MASK		0x1ull
#define HFI_PCIM_CFG_CTL_MAX_PAYLOAD_128_SMASK		0x200000000000ull
#define HFI_PCIM_CFG_CTL_HIFIS_IDLE_SHIFT		44
#define HFI_PCIM_CFG_CTL_HIFIS_IDLE_MASK		0x1ull
#define HFI_PCIM_CFG_CTL_HIFIS_IDLE_SMASK		0x100000000000ull
#define HFI_PCIM_CFG_CTL_RESERVED_43_42_SHIFT		42
#define HFI_PCIM_CFG_CTL_RESERVED_43_42_MASK		0x3ull
#define HFI_PCIM_CFG_CTL_RESERVED_43_42_SMASK		0xC0000000000ull
#define HFI_PCIM_CFG_CTL_MIN_FLR_PERIOD_SHIFT		32
#define HFI_PCIM_CFG_CTL_MIN_FLR_PERIOD_MASK		0x3FFull
#define HFI_PCIM_CFG_CTL_MIN_FLR_PERIOD_SMASK		0x3FF00000000ull
#define HFI_PCIM_CFG_CTL_RESERVED_31_SHIFT		31
#define HFI_PCIM_CFG_CTL_RESERVED_31_MASK		0x1ull
#define HFI_PCIM_CFG_CTL_RESERVED_31_SMASK		0x80000000ull
#define HFI_PCIM_CFG_CTL_ENA_PCIERROR_CMPL_SHIFT	30
#define HFI_PCIM_CFG_CTL_ENA_PCIERROR_CMPL_MASK		0x1ull
#define HFI_PCIM_CFG_CTL_ENA_PCIERROR_CMPL_SMASK	0x40000000ull
#define HFI_PCIM_CFG_CTL_ENA_PCIERROR_UR_SHIFT		29
#define HFI_PCIM_CFG_CTL_ENA_PCIERROR_UR_MASK		0x1ull
#define HFI_PCIM_CFG_CTL_ENA_PCIERROR_UR_SMASK		0x20000000ull
#define HFI_PCIM_CFG_CTL_ENA_PCIERROR_CA_SHIFT		28
#define HFI_PCIM_CFG_CTL_ENA_PCIERROR_CA_MASK		0x1ull
#define HFI_PCIM_CFG_CTL_ENA_PCIERROR_CA_SMASK		0x10000000ull
#define HFI_PCIM_CFG_CTL_RESERVED_27_SHIFT		27
#define HFI_PCIM_CFG_CTL_RESERVED_27_MASK		0x1ull
#define HFI_PCIM_CFG_CTL_RESERVED_27_SMASK		0x8000000ull
#define HFI_PCIM_CFG_CTL_REMAP_REQ_THRESH_SHIFT		24
#define HFI_PCIM_CFG_CTL_REMAP_REQ_THRESH_MASK		0x7ull
#define HFI_PCIM_CFG_CTL_REMAP_REQ_THRESH_SMASK		0x7000000ull
#define HFI_PCIM_CFG_CTL_RESERVED_23_19_SHIFT		19
#define HFI_PCIM_CFG_CTL_RESERVED_23_19_MASK		0x1Full
#define HFI_PCIM_CFG_CTL_RESERVED_23_19_SMASK		0xF80000ull
#define HFI_PCIM_CFG_CTL_ITR_PERIOD_SHIFT		8
#define HFI_PCIM_CFG_CTL_ITR_PERIOD_MASK		0x7FFull
#define HFI_PCIM_CFG_CTL_ITR_PERIOD_SMASK		0x7FF00ull
#define HFI_PCIM_CFG_CTL_ITR_ECOUNT_SHIFT		0
#define HFI_PCIM_CFG_CTL_ITR_ECOUNT_MASK		0xFFull
#define HFI_PCIM_CFG_CTL_ITR_ECOUNT_SMASK		0xFFull
/*
* Table #5 of fxr_top - PCIM_CFG_TARB
* TARB block Configuration bits
*/
#define HFI_PCIM_CFG_TARB				(HFI_PCIM_CSRS + 0x000000000008)
#define HFI_PCIM_CFG_TARB_RESETCSR			0x000000000C01040Bull
#define HFI_PCIM_CFG_TARB_RESERVED_63_32_SHIFT		32
#define HFI_PCIM_CFG_TARB_RESERVED_63_32_MASK		0xFFFFFFFFull
#define HFI_PCIM_CFG_TARB_RESERVED_63_32_SMASK		0xFFFFFFFF00000000ull
#define HFI_PCIM_CFG_TARB_TOTAL_CREDITS_SHIFT		24
#define HFI_PCIM_CFG_TARB_TOTAL_CREDITS_MASK		0xFFull
#define HFI_PCIM_CFG_TARB_TOTAL_CREDITS_SMASK		0xFF000000ull
#define HFI_PCIM_CFG_TARB_COMPLETION_CREDITS_SHIFT	16
#define HFI_PCIM_CFG_TARB_COMPLETION_CREDITS_MASK	0xFFull
#define HFI_PCIM_CFG_TARB_COMPLETION_CREDITS_SMASK	0xFF0000ull
#define HFI_PCIM_CFG_TARB_NONPOSTED_CREDITS_SHIFT	8
#define HFI_PCIM_CFG_TARB_NONPOSTED_CREDITS_MASK	0xFFull
#define HFI_PCIM_CFG_TARB_NONPOSTED_CREDITS_SMASK	0xFF00ull
#define HFI_PCIM_CFG_TARB_POSTED_CREDITS_SHIFT		0
#define HFI_PCIM_CFG_TARB_POSTED_CREDITS_MASK		0xFFull
#define HFI_PCIM_CFG_TARB_POSTED_CREDITS_SMASK		0xFFull
/*
* Table #6 of fxr_top - PCIM_CFG_MARB0
* MARB block Configuration bits
*/
#define HFI_PCIM_CFG_MARB0				(HFI_PCIM_CSRS + 0x000000000010)
#define HFI_PCIM_CFG_MARB0_RESETCSR			0x0000000000000001ull
#define HFI_PCIM_CFG_MARB0_RESERVED_63_3_SHIFT		3
#define HFI_PCIM_CFG_MARB0_RESERVED_63_3_MASK		0x1FFFFFFFFFFFFFFFull
#define HFI_PCIM_CFG_MARB0_RESERVED_63_3_SMASK		0xFFFFFFFFFFFFFFF8ull
#define HFI_PCIM_CFG_MARB0_HEAD_CMP_THRESH_SHIFT	0
#define HFI_PCIM_CFG_MARB0_HEAD_CMP_THRESH_MASK		0x7ull
#define HFI_PCIM_CFG_MARB0_HEAD_CMP_THRESH_SMASK	0x7ull
/*
* Table #7 of fxr_top - PCIM_CFG_MARB1
* MARB block Configuration bits
*/
#define HFI_PCIM_CFG_MARB1				(HFI_PCIM_CSRS + 0x000000000018)
#define HFI_PCIM_CFG_MARB1_RESETCSR			0x0000FAC688FAC688ull
#define HFI_PCIM_CFG_MARB1_RESERVED_63_48_SHIFT		48
#define HFI_PCIM_CFG_MARB1_RESERVED_63_48_MASK		0xFFFFull
#define HFI_PCIM_CFG_MARB1_RESERVED_63_48_SMASK		0xFFFF000000000000ull
#define HFI_PCIM_CFG_MARB1_ARB_PRIORITY_SHIFT		0
#define HFI_PCIM_CFG_MARB1_ARB_PRIORITY_MASK		0xFFFFFFFFFFFFull
#define HFI_PCIM_CFG_MARB1_ARB_PRIORITY_SMASK		0xFFFFFFFFFFFFull
/*
* Table #8 of fxr_top - PCIM_CFG_HPI
* HPI block Configuration bits
*/
#define HFI_PCIM_CFG_HPI				(HFI_PCIM_CSRS + 0x000000000020)
#define HFI_PCIM_CFG_HPI_RESETCSR			0x0000000000000104ull
#define HFI_PCIM_CFG_HPI_RESERVED_63_9_SHIFT		9
#define HFI_PCIM_CFG_HPI_RESERVED_63_9_MASK		0x7FFFFFFFFFFFFFull
#define HFI_PCIM_CFG_HPI_RESERVED_63_9_SMASK		0xFFFFFFFFFFFFFE00ull
#define HFI_PCIM_CFG_HPI_HIFIS_CREDIT_ENA_SHIFT		8
#define HFI_PCIM_CFG_HPI_HIFIS_CREDIT_ENA_MASK		0x1ull
#define HFI_PCIM_CFG_HPI_HIFIS_CREDIT_ENA_SMASK		0x100ull
#define HFI_PCIM_CFG_HPI_RESERVED_7_5_SHIFT		5
#define HFI_PCIM_CFG_HPI_RESERVED_7_5_MASK		0x7ull
#define HFI_PCIM_CFG_HPI_RESERVED_7_5_SMASK		0xE0ull
#define HFI_PCIM_CFG_HPI_TARB_FC_THRESH_SHIFT		0
#define HFI_PCIM_CFG_HPI_TARB_FC_THRESH_MASK		0x1Full
#define HFI_PCIM_CFG_HPI_TARB_FC_THRESH_SMASK		0x1Full
/*
* Table #9 of fxr_top - PCIM_STS_HPI
* HPI block Status bits
*/
#define HFI_PCIM_STS_HPI				(HFI_PCIM_CSRS + 0x000000000028)
#define HFI_PCIM_STS_HPI_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_STS_HPI_RESERVED_63_5_SHIFT		5
#define HFI_PCIM_STS_HPI_RESERVED_63_5_MASK		0x7FFFFFFFFFFFFFFull
#define HFI_PCIM_STS_HPI_RESERVED_63_5_SMASK		0xFFFFFFFFFFFFFFE0ull
#define HFI_PCIM_STS_HPI_HIFIS_CREDITS_SHIFT		0
#define HFI_PCIM_STS_HPI_HIFIS_CREDITS_MASK		0x1Full
#define HFI_PCIM_STS_HPI_HIFIS_CREDITS_SMASK		0x1Full
/*
* Table #10 of fxr_top - PCIM_CFG_L1ENTRY
* L1 Entry Control
*/
#define HFI_PCIM_CFG_L1ENTRY				(HFI_PCIM_CSRS + 0x000000000030)
#define HFI_PCIM_CFG_L1ENTRY_RESETCSR			0x0000000000100000ull
#define HFI_PCIM_CFG_L1ENTRY_RESERVED_63_32_SHIFT	32
#define HFI_PCIM_CFG_L1ENTRY_RESERVED_63_32_MASK	0xFFFFFFFFull
#define HFI_PCIM_CFG_L1ENTRY_RESERVED_63_32_SMASK	0xFFFFFFFF00000000ull
#define HFI_PCIM_CFG_L1ENTRY_L1ENTRY_THRESH_SHIFT	0
#define HFI_PCIM_CFG_L1ENTRY_L1ENTRY_THRESH_MASK	0xFFFFFFFFull
#define HFI_PCIM_CFG_L1ENTRY_L1ENTRY_THRESH_SMASK	0xFFFFFFFFull
/*
* Table #11 of fxr_top - PCIM_CFG_P2SB
* P2SB block Configuration bits
*/
#define HFI_PCIM_CFG_P2SB				(HFI_PCIM_CSRS + 0x000000000038)
#define HFI_PCIM_CFG_P2SB_RESETCSR			0x0000000606070206ull
#define HFI_PCIM_CFG_P2SB_RESERVED_63_37_SHIFT		37
#define HFI_PCIM_CFG_P2SB_RESERVED_63_37_MASK		0x7FFFFFFull
#define HFI_PCIM_CFG_P2SB_RESERVED_63_37_SMASK		0xFFFFFFE000000000ull
#define HFI_PCIM_CFG_P2SB_CMP_DATA_THRESH_SHIFT		32
#define HFI_PCIM_CFG_P2SB_CMP_DATA_THRESH_MASK		0x1Full
#define HFI_PCIM_CFG_P2SB_CMP_DATA_THRESH_SMASK		0x1F00000000ull
#define HFI_PCIM_CFG_P2SB_RESERVED_31_29_SHIFT		29
#define HFI_PCIM_CFG_P2SB_RESERVED_31_29_MASK		0x7ull
#define HFI_PCIM_CFG_P2SB_RESERVED_31_29_SMASK		0xE0000000ull
#define HFI_PCIM_CFG_P2SB_NP_DATA_THRESH_SHIFT		24
#define HFI_PCIM_CFG_P2SB_NP_DATA_THRESH_MASK		0x1Full
#define HFI_PCIM_CFG_P2SB_NP_DATA_THRESH_SMASK		0x1F000000ull
#define HFI_PCIM_CFG_P2SB_RESERVED_23_21_SHIFT		21
#define HFI_PCIM_CFG_P2SB_RESERVED_23_21_MASK		0x7ull
#define HFI_PCIM_CFG_P2SB_RESERVED_23_21_SMASK		0xE00000ull
#define HFI_PCIM_CFG_P2SB_P_DATA_THRESH_SHIFT		16
#define HFI_PCIM_CFG_P2SB_P_DATA_THRESH_MASK		0x1Full
#define HFI_PCIM_CFG_P2SB_P_DATA_THRESH_SMASK		0x1F0000ull
#define HFI_PCIM_CFG_P2SB_RESERVED_15_13_SHIFT		13
#define HFI_PCIM_CFG_P2SB_RESERVED_15_13_MASK		0x7ull
#define HFI_PCIM_CFG_P2SB_RESERVED_15_13_SMASK		0xE000ull
#define HFI_PCIM_CFG_P2SB_NP_HEADER_THRESH_SHIFT	8
#define HFI_PCIM_CFG_P2SB_NP_HEADER_THRESH_MASK		0x1Full
#define HFI_PCIM_CFG_P2SB_NP_HEADER_THRESH_SMASK	0x1F00ull
#define HFI_PCIM_CFG_P2SB_RESERVED_7_5_SHIFT		5
#define HFI_PCIM_CFG_P2SB_RESERVED_7_5_MASK		0x7ull
#define HFI_PCIM_CFG_P2SB_RESERVED_7_5_SMASK		0xE0ull
#define HFI_PCIM_CFG_P2SB_HEADER_THRESH_SHIFT		0
#define HFI_PCIM_CFG_P2SB_HEADER_THRESH_MASK		0x1Full
#define HFI_PCIM_CFG_P2SB_HEADER_THRESH_SMASK		0x1Full
/*
* Table #12 of fxr_top - PCIM_CFG_SBTO
* FXR-SB completion timeout count value. Bits [31:0] define the number of clocks 
* PCIM will wait for a completion timeout over FXR-SB. Only bits [31:8] are 
* write-able, so the programmable timeout count granularity is 256 
* clocks.
*/
#define HFI_PCIM_CFG_SBTO				(HFI_PCIM_CSRS + 0x000000000040)
#define HFI_PCIM_CFG_SBTO_RESETCSR			0x0000000000040000ull
#define HFI_PCIM_CFG_SBTO_RESERVED_63_32_SHIFT		32
#define HFI_PCIM_CFG_SBTO_RESERVED_63_32_MASK		0xFFFFFFFFull
#define HFI_PCIM_CFG_SBTO_RESERVED_63_32_SMASK		0xFFFFFFFF00000000ull
#define HFI_PCIM_CFG_SBTO_COUNT_SHIFT			8
#define HFI_PCIM_CFG_SBTO_COUNT_MASK			0xFFFFFFull
#define HFI_PCIM_CFG_SBTO_COUNT_SMASK			0xFFFFFF00ull
#define HFI_PCIM_CFG_SBTO_RESERVED_7_0_SHIFT		0
#define HFI_PCIM_CFG_SBTO_RESERVED_7_0_MASK		0xFFull
#define HFI_PCIM_CFG_SBTO_RESERVED_7_0_SMASK		0xFFull
/*
* Table #13 of fxr_top - PCIM_STS_BDF
* Bus/Device/Function Status
*/
#define HFI_PCIM_STS_BDF				(HFI_PCIM_CSRS + 0x000000000048)
#define HFI_PCIM_STS_BDF_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_STS_BDF_RESERVED_63_16_SHIFT		16
#define HFI_PCIM_STS_BDF_RESERVED_63_16_MASK		0xFFFFFFFFFFFFull
#define HFI_PCIM_STS_BDF_RESERVED_63_16_SMASK		0xFFFFFFFFFFFF0000ull
#define HFI_PCIM_STS_BDF_PCIE_BUS_ID_SHIFT		8
#define HFI_PCIM_STS_BDF_PCIE_BUS_ID_MASK		0xFFull
#define HFI_PCIM_STS_BDF_PCIE_BUS_ID_SMASK		0xFF00ull
#define HFI_PCIM_STS_BDF_PCIE_DEVICE_ID_SHIFT		3
#define HFI_PCIM_STS_BDF_PCIE_DEVICE_ID_MASK		0x1Full
#define HFI_PCIM_STS_BDF_PCIE_DEVICE_ID_SMASK		0xF8ull
#define HFI_PCIM_STS_BDF_PCIE_FUNCTION_ID_SHIFT		0
#define HFI_PCIM_STS_BDF_PCIE_FUNCTION_ID_MASK		0x7ull
#define HFI_PCIM_STS_BDF_PCIE_FUNCTION_ID_SMASK		0x7ull
/*
* Table #14 of fxr_top - PCIM_PTM_CTL
* PTM control and status register.
*/
#define HFI_PCIM_PTM_CTL				(HFI_PCIM_CSRS + 0x000000000050)
#define HFI_PCIM_PTM_CTL_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_PTM_CTL_RESERVED_63_5_SHIFT		5
#define HFI_PCIM_PTM_CTL_RESERVED_63_5_MASK		0x7FFFFFFFFFFFFFFull
#define HFI_PCIM_PTM_CTL_RESERVED_63_5_SMASK		0xFFFFFFFFFFFFFFE0ull
#define HFI_PCIM_PTM_CTL_PTM_MANUAL_UPDATE_SHIFT	4
#define HFI_PCIM_PTM_CTL_PTM_MANUAL_UPDATE_MASK		0x1ull
#define HFI_PCIM_PTM_CTL_PTM_MANUAL_UPDATE_SMASK	0x10ull
#define HFI_PCIM_PTM_CTL_PTM_AUTO_UPDATE_SHIFT		3
#define HFI_PCIM_PTM_CTL_PTM_AUTO_UPDATE_MASK		0x1ull
#define HFI_PCIM_PTM_CTL_PTM_AUTO_UPDATE_SMASK		0x8ull
#define HFI_PCIM_PTM_CTL_PTM_CLOCK_UPDATED_SHIFT	2
#define HFI_PCIM_PTM_CTL_PTM_CLOCK_UPDATED_MASK		0x1ull
#define HFI_PCIM_PTM_CTL_PTM_CLOCK_UPDATED_SMASK	0x4ull
#define HFI_PCIM_PTM_CTL_PTM_CONTEXT_VALID_SHIFT	1
#define HFI_PCIM_PTM_CTL_PTM_CONTEXT_VALID_MASK		0x1ull
#define HFI_PCIM_PTM_CTL_PTM_CONTEXT_VALID_SMASK	0x2ull
#define HFI_PCIM_PTM_CTL_SAMPLE_SHIFT			0
#define HFI_PCIM_PTM_CTL_SAMPLE_MASK			0x1ull
#define HFI_PCIM_PTM_CTL_SAMPLE_SMASK			0x1ull
/*
* Table #15 of fxr_top - PCIM_CLK_SMPL
* PCIM Clock Sample value.
*/
#define HFI_PCIM_CLK_SMPL				(HFI_PCIM_CSRS + 0x000000000058)
#define HFI_PCIM_CLK_SMPL_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_CLK_SMPL_VALUE_SHIFT			0
#define HFI_PCIM_CLK_SMPL_VALUE_MASK			0xFFFFFFFFFFFFFFFFull
#define HFI_PCIM_CLK_SMPL_VALUE_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #16 of fxr_top - PCIM_PTM_SMPL
* PTM Clock Sample value.
*/
#define HFI_PCIM_PTM_SMPL				(HFI_PCIM_CSRS + 0x000000000060)
#define HFI_PCIM_PTM_SMPL_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_PTM_SMPL_VALUE_SHIFT			0
#define HFI_PCIM_PTM_SMPL_VALUE_MASK			0xFFFFFFFFFFFFFFFFull
#define HFI_PCIM_PTM_SMPL_VALUE_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #17 of fxr_top - PCIM_ERR_STS
* This is the Error Status CSR. Bits are set by hardware or by writing to the 
* PCIM_ERR_FRC CSR. Bits are cleared by writing to the PCIM_ERR_CLR 
* CSR.
*/
#define HFI_PCIM_ERR_STS				(HFI_PCIM_CSRS + 0x000000000200)
#define HFI_PCIM_ERR_STS_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_ERR_STS_RESERVED_63_42_SHIFT		42
#define HFI_PCIM_ERR_STS_RESERVED_63_42_MASK		0x3FFFFFull
#define HFI_PCIM_ERR_STS_RESERVED_63_42_SMASK		0xFFFFFC0000000000ull
#define HFI_PCIM_ERR_STS_TQB_ARB_SBE_SHIFT		41
#define HFI_PCIM_ERR_STS_TQB_ARB_SBE_MASK		0x1ull
#define HFI_PCIM_ERR_STS_TQB_ARB_SBE_SMASK		0x20000000000ull
#define HFI_PCIM_ERR_STS_TQB_ARB_MBE_SHIFT		40
#define HFI_PCIM_ERR_STS_TQB_ARB_MBE_MASK		0x1ull
#define HFI_PCIM_ERR_STS_TQB_ARB_MBE_SMASK		0x10000000000ull
#define HFI_PCIM_ERR_STS_MSIX_REMAP_PE_SHIFT		39
#define HFI_PCIM_ERR_STS_MSIX_REMAP_PE_MASK		0x1ull
#define HFI_PCIM_ERR_STS_MSIX_REMAP_PE_SMASK		0x8000000000ull
#define HFI_PCIM_ERR_STS_FXR_SB_TIMEOUT_SHIFT		38
#define HFI_PCIM_ERR_STS_FXR_SB_TIMEOUT_MASK		0x1ull
#define HFI_PCIM_ERR_STS_FXR_SB_TIMEOUT_SMASK		0x4000000000ull
#define HFI_PCIM_ERR_STS_TARB_HDR_PARITY_ERROR_SHIFT	37
#define HFI_PCIM_ERR_STS_TARB_HDR_PARITY_ERROR_MASK	0x1ull
#define HFI_PCIM_ERR_STS_TARB_HDR_PARITY_ERROR_SMASK	0x2000000000ull
#define HFI_PCIM_ERR_STS_TARB_HDR_EP_ERROR_SHIFT	36
#define HFI_PCIM_ERR_STS_TARB_HDR_EP_ERROR_MASK		0x1ull
#define HFI_PCIM_ERR_STS_TARB_HDR_EP_ERROR_SMASK	0x1000000000ull
#define HFI_PCIM_ERR_STS_SB2P_UNSUP_NP_OPC_SHIFT	35
#define HFI_PCIM_ERR_STS_SB2P_UNSUP_NP_OPC_MASK		0x1ull
#define HFI_PCIM_ERR_STS_SB2P_UNSUP_NP_OPC_SMASK	0x800000000ull
#define HFI_PCIM_ERR_STS_SB2P_UNSUP_NP_FMT_SHIFT	34
#define HFI_PCIM_ERR_STS_SB2P_UNSUP_NP_FMT_MASK		0x1ull
#define HFI_PCIM_ERR_STS_SB2P_UNSUP_NP_FMT_SMASK	0x400000000ull
#define HFI_PCIM_ERR_STS_SB2P_UNSUP_PC_OPC_SHIFT	33
#define HFI_PCIM_ERR_STS_SB2P_UNSUP_PC_OPC_MASK		0x1ull
#define HFI_PCIM_ERR_STS_SB2P_UNSUP_PC_OPC_SMASK	0x200000000ull
#define HFI_PCIM_ERR_STS_SB2P_UNSUP_PC_FMT_SHIFT	32
#define HFI_PCIM_ERR_STS_SB2P_UNSUP_PC_FMT_MASK		0x1ull
#define HFI_PCIM_ERR_STS_SB2P_UNSUP_PC_FMT_SMASK	0x100000000ull
#define HFI_PCIM_ERR_STS_P2SB_DATAQ1_SBE_SHIFT		31
#define HFI_PCIM_ERR_STS_P2SB_DATAQ1_SBE_MASK		0x1ull
#define HFI_PCIM_ERR_STS_P2SB_DATAQ1_SBE_SMASK		0x80000000ull
#define HFI_PCIM_ERR_STS_P2SB_DATAQ1_MBE_SHIFT		30
#define HFI_PCIM_ERR_STS_P2SB_DATAQ1_MBE_MASK		0x1ull
#define HFI_PCIM_ERR_STS_P2SB_DATAQ1_MBE_SMASK		0x40000000ull
#define HFI_PCIM_ERR_STS_P2SB_DATAQ0_SBE_SHIFT		29
#define HFI_PCIM_ERR_STS_P2SB_DATAQ0_SBE_MASK		0x1ull
#define HFI_PCIM_ERR_STS_P2SB_DATAQ0_SBE_SMASK		0x20000000ull
#define HFI_PCIM_ERR_STS_P2SB_DATAQ0_MBE_SHIFT		28
#define HFI_PCIM_ERR_STS_P2SB_DATAQ0_MBE_MASK		0x1ull
#define HFI_PCIM_ERR_STS_P2SB_DATAQ0_MBE_SMASK		0x10000000ull
#define HFI_PCIM_ERR_STS_P2SB_NP_READ_ERR_SHIFT		27
#define HFI_PCIM_ERR_STS_P2SB_NP_READ_ERR_MASK		0x1ull
#define HFI_PCIM_ERR_STS_P2SB_NP_READ_ERR_SMASK		0x8000000ull
#define HFI_PCIM_ERR_STS_P2SB_DATA_LEN_ERR_SHIFT	26
#define HFI_PCIM_ERR_STS_P2SB_DATA_LEN_ERR_MASK		0x1ull
#define HFI_PCIM_ERR_STS_P2SB_DATA_LEN_ERR_SMASK	0x4000000ull
#define HFI_PCIM_ERR_STS_P2SB_P_ADDR_ERR_SHIFT		25
#define HFI_PCIM_ERR_STS_P2SB_P_ADDR_ERR_MASK		0x1ull
#define HFI_PCIM_ERR_STS_P2SB_P_ADDR_ERR_SMASK		0x2000000ull
#define HFI_PCIM_ERR_STS_P2SB_NP_DATA_PARITY_SHIFT	24
#define HFI_PCIM_ERR_STS_P2SB_NP_DATA_PARITY_MASK	0x1ull
#define HFI_PCIM_ERR_STS_P2SB_NP_DATA_PARITY_SMASK	0x1000000ull
#define HFI_PCIM_ERR_STS_P2SB_NP_DATA_EP_SHIFT		23
#define HFI_PCIM_ERR_STS_P2SB_NP_DATA_EP_MASK		0x1ull
#define HFI_PCIM_ERR_STS_P2SB_NP_DATA_EP_SMASK		0x800000ull
#define HFI_PCIM_ERR_STS_P2SB_P_DATA_PARITY_SHIFT	22
#define HFI_PCIM_ERR_STS_P2SB_P_DATA_PARITY_MASK	0x1ull
#define HFI_PCIM_ERR_STS_P2SB_P_DATA_PARITY_SMASK	0x400000ull
#define HFI_PCIM_ERR_STS_P2SB_P_DATA_EP_SHIFT		21
#define HFI_PCIM_ERR_STS_P2SB_P_DATA_EP_MASK		0x1ull
#define HFI_PCIM_ERR_STS_P2SB_P_DATA_EP_SMASK		0x200000ull
#define HFI_PCIM_ERR_STS_P2SB_UNEXP_CMP_SHIFT		20
#define HFI_PCIM_ERR_STS_P2SB_UNEXP_CMP_MASK		0x1ull
#define HFI_PCIM_ERR_STS_P2SB_UNEXP_CMP_SMASK		0x100000ull
#define HFI_PCIM_ERR_STS_P2SB_NP_ADDR_ERR_SHIFT		19
#define HFI_PCIM_ERR_STS_P2SB_NP_ADDR_ERR_MASK		0x1ull
#define HFI_PCIM_ERR_STS_P2SB_NP_ADDR_ERR_SMASK		0x80000ull
#define HFI_PCIM_ERR_STS_P2SB_NP_UNSUP_REQ_SHIFT	18
#define HFI_PCIM_ERR_STS_P2SB_NP_UNSUP_REQ_MASK		0x1ull
#define HFI_PCIM_ERR_STS_P2SB_NP_UNSUP_REQ_SMASK	0x40000ull
#define HFI_PCIM_ERR_STS_P2SB_P_UNSUP_REQ_SHIFT		17
#define HFI_PCIM_ERR_STS_P2SB_P_UNSUP_REQ_MASK		0x1ull
#define HFI_PCIM_ERR_STS_P2SB_P_UNSUP_REQ_SMASK		0x20000ull
#define HFI_PCIM_ERR_STS_HPI_DATA_POISON_ERR_SHIFT	16
#define HFI_PCIM_ERR_STS_HPI_DATA_POISON_ERR_MASK	0x1ull
#define HFI_PCIM_ERR_STS_HPI_DATA_POISON_ERR_SMASK	0x10000ull
#define HFI_PCIM_ERR_STS_HPI_DATA_PARITY_ERR_SHIFT	15
#define HFI_PCIM_ERR_STS_HPI_DATA_PARITY_ERR_MASK	0x1ull
#define HFI_PCIM_ERR_STS_HPI_DATA_PARITY_ERR_SMASK	0x8000ull
#define HFI_PCIM_ERR_STS_TQB_DATA_MBE_SHIFT		14
#define HFI_PCIM_ERR_STS_TQB_DATA_MBE_MASK		0x1ull
#define HFI_PCIM_ERR_STS_TQB_DATA_MBE_SMASK		0x4000ull
#define HFI_PCIM_ERR_STS_TQB_DATA_SBE_SHIFT		13
#define HFI_PCIM_ERR_STS_TQB_DATA_SBE_MASK		0x1ull
#define HFI_PCIM_ERR_STS_TQB_DATA_SBE_SMASK		0x2000ull
#define HFI_PCIM_ERR_STS_TQB_HDR_MBE_SHIFT		12
#define HFI_PCIM_ERR_STS_TQB_HDR_MBE_MASK		0x1ull
#define HFI_PCIM_ERR_STS_TQB_HDR_MBE_SMASK		0x1000ull
#define HFI_PCIM_ERR_STS_TQB_HDR_SBE_SHIFT		11
#define HFI_PCIM_ERR_STS_TQB_HDR_SBE_MASK		0x1ull
#define HFI_PCIM_ERR_STS_TQB_HDR_SBE_SMASK		0x800ull
#define HFI_PCIM_ERR_STS_TQB_ASYNC_BUFF_UF_SHIFT	10
#define HFI_PCIM_ERR_STS_TQB_ASYNC_BUFF_UF_MASK		0x1ull
#define HFI_PCIM_ERR_STS_TQB_ASYNC_BUFF_UF_SMASK	0x400ull
#define HFI_PCIM_ERR_STS_TQB_BUFF_OF_SHIFT		9
#define HFI_PCIM_ERR_STS_TQB_BUFF_OF_MASK		0x1ull
#define HFI_PCIM_ERR_STS_TQB_BUFF_OF_SMASK		0x200ull
#define HFI_PCIM_ERR_STS_TCB_HDR_MBE_SHIFT		8
#define HFI_PCIM_ERR_STS_TCB_HDR_MBE_MASK		0x1ull
#define HFI_PCIM_ERR_STS_TCB_HDR_MBE_SMASK		0x100ull
#define HFI_PCIM_ERR_STS_TCB_HDR_SBE_SHIFT		7
#define HFI_PCIM_ERR_STS_TCB_HDR_SBE_MASK		0x1ull
#define HFI_PCIM_ERR_STS_TCB_HDR_SBE_SMASK		0x80ull
#define HFI_PCIM_ERR_STS_TCB_BUFF_UF_SHIFT		6
#define HFI_PCIM_ERR_STS_TCB_BUFF_UF_MASK		0x1ull
#define HFI_PCIM_ERR_STS_TCB_BUFF_UF_SMASK		0x40ull
#define HFI_PCIM_ERR_STS_TCB_BUFF_OF_SHIFT		5
#define HFI_PCIM_ERR_STS_TCB_BUFF_OF_MASK		0x1ull
#define HFI_PCIM_ERR_STS_TCB_BUFF_OF_SMASK		0x20ull
#define HFI_PCIM_ERR_STS_MSIX_DATA_SBE_SHIFT		4
#define HFI_PCIM_ERR_STS_MSIX_DATA_SBE_MASK		0x1ull
#define HFI_PCIM_ERR_STS_MSIX_DATA_SBE_SMASK		0x10ull
#define HFI_PCIM_ERR_STS_MSIX_ADDR_SBE_SHIFT		3
#define HFI_PCIM_ERR_STS_MSIX_ADDR_SBE_MASK		0x1ull
#define HFI_PCIM_ERR_STS_MSIX_ADDR_SBE_SMASK		0x8ull
#define HFI_PCIM_ERR_STS_MSIX_DATA_MBE_SHIFT		2
#define HFI_PCIM_ERR_STS_MSIX_DATA_MBE_MASK		0x1ull
#define HFI_PCIM_ERR_STS_MSIX_DATA_MBE_SMASK		0x4ull
#define HFI_PCIM_ERR_STS_MSIX_ADDR_MBE_SHIFT		1
#define HFI_PCIM_ERR_STS_MSIX_ADDR_MBE_MASK		0x1ull
#define HFI_PCIM_ERR_STS_MSIX_ADDR_MBE_SMASK		0x2ull
#define HFI_PCIM_ERR_STS_ITR_READ_PE_SHIFT		0
#define HFI_PCIM_ERR_STS_ITR_READ_PE_MASK		0x1ull
#define HFI_PCIM_ERR_STS_ITR_READ_PE_SMASK		0x1ull
/*
* Table #18 of fxr_top - PCIM_ERR_CLR
* This is the Error Clear CSR. Writing a 1 to a valid bit will clear the 
* corresponding bit in the PCIM_ERR_STS CSR.
*/
#define HFI_PCIM_ERR_CLR				(HFI_PCIM_CSRS + 0x000000000208)
#define HFI_PCIM_ERR_CLR_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_ERR_CLR_RESERVED_63_42_SHIFT		42
#define HFI_PCIM_ERR_CLR_RESERVED_63_42_MASK		0x3FFFFFull
#define HFI_PCIM_ERR_CLR_RESERVED_63_42_SMASK		0xFFFFFC0000000000ull
#define HFI_PCIM_ERR_CLR_EVENTS_SHIFT			0
#define HFI_PCIM_ERR_CLR_EVENTS_MASK			0x3FFFFFFFFFFull
#define HFI_PCIM_ERR_CLR_EVENTS_SMASK			0x3FFFFFFFFFFull
/*
* Table #19 of fxr_top - PCIM_ERR_FRC
* This is the Error Force CSR. Writing a 1 to a valid bit will set the 
* corresponding bit in the PCIM_ERR_STS CSR.
*/
#define HFI_PCIM_ERR_FRC				(HFI_PCIM_CSRS + 0x000000000210)
#define HFI_PCIM_ERR_FRC_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_ERR_FRC_RESERVED_63_42_SHIFT		42
#define HFI_PCIM_ERR_FRC_RESERVED_63_42_MASK		0x3FFFFFull
#define HFI_PCIM_ERR_FRC_RESERVED_63_42_SMASK		0xFFFFFC0000000000ull
#define HFI_PCIM_ERR_FRC_EVENTS_SHIFT			0
#define HFI_PCIM_ERR_FRC_EVENTS_MASK			0x3FFFFFFFFFFull
#define HFI_PCIM_ERR_FRC_EVENTS_SMASK			0x3FFFFFFFFFFull
/*
* Table #20 of fxr_top - PCIM_ERR_EN_HOST
* This is the Error Enable for the Host Interrupt. If a bit is set, the 
* corresponding error bit in PCIM_ERR_STS will cause an interrupt on the HOST 
* interrupt signal.
*/
#define HFI_PCIM_ERR_EN_HOST				(HFI_PCIM_CSRS + 0x000000000218)
#define HFI_PCIM_ERR_EN_HOST_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_ERR_EN_HOST_RESERVED_63_42_SHIFT	42
#define HFI_PCIM_ERR_EN_HOST_RESERVED_63_42_MASK	0x3FFFFFull
#define HFI_PCIM_ERR_EN_HOST_RESERVED_63_42_SMASK	0xFFFFFC0000000000ull
#define HFI_PCIM_ERR_EN_HOST_EVENTS_SHIFT		0
#define HFI_PCIM_ERR_EN_HOST_EVENTS_MASK		0x3FFFFFFFFFFull
#define HFI_PCIM_ERR_EN_HOST_EVENTS_SMASK		0x3FFFFFFFFFFull
/*
* Table #21 of fxr_top - PCIM_ERR_FIRST_HOST
* This is the First Error CSR for the Host Interrupt. When this CSR is clear, it 
* will capture the next PCIM_ERR_STS value when a new HOST Interrupt 
* occurs.
*/
#define HFI_PCIM_ERR_FIRST_HOST				(HFI_PCIM_CSRS + 0x000000000220)
#define HFI_PCIM_ERR_FIRST_HOST_RESETCSR		0x0000000000000000ull
#define HFI_PCIM_ERR_FIRST_HOST_RESERVED_63_42_SHIFT	42
#define HFI_PCIM_ERR_FIRST_HOST_RESERVED_63_42_MASK	0x3FFFFFull
#define HFI_PCIM_ERR_FIRST_HOST_RESERVED_63_42_SMASK	0xFFFFFC0000000000ull
#define HFI_PCIM_ERR_FIRST_HOST_EVENTS_SHIFT		0
#define HFI_PCIM_ERR_FIRST_HOST_EVENTS_MASK		0x3FFFFFFFFFFull
#define HFI_PCIM_ERR_FIRST_HOST_EVENTS_SMASK		0x3FFFFFFFFFFull
/*
* Table #22 of fxr_top - PCIM_ERR_EN_BMC
* This is the Error Enable for the BMC Interrupt. If a bit is set, the 
* corresponding error bit in PCIM_ERR_STS will cause an interrupt on the BMC 
* interrupt signal.
*/
#define HFI_PCIM_ERR_EN_BMC				(HFI_PCIM_CSRS + 0x000000000228)
#define HFI_PCIM_ERR_EN_BMC_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_ERR_EN_BMC_RESERVED_63_42_SHIFT	42
#define HFI_PCIM_ERR_EN_BMC_RESERVED_63_42_MASK		0x3FFFFFull
#define HFI_PCIM_ERR_EN_BMC_RESERVED_63_42_SMASK	0xFFFFFC0000000000ull
#define HFI_PCIM_ERR_EN_BMC_EVENTS_SHIFT		0
#define HFI_PCIM_ERR_EN_BMC_EVENTS_MASK			0x3FFFFFFFFFFull
#define HFI_PCIM_ERR_EN_BMC_EVENTS_SMASK		0x3FFFFFFFFFFull
/*
* Table #23 of fxr_top - PCIM_ERR_FIRST_BMC
* This is the First Error CSR for the BMC Interrupt. When this CSR is clear, it 
* will capture the next PCIM_ERR_STS value when a new BMC Interrupt 
* occurs.
*/
#define HFI_PCIM_ERR_FIRST_BMC				(HFI_PCIM_CSRS + 0x000000000230)
#define HFI_PCIM_ERR_FIRST_BMC_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_ERR_FIRST_BMC_RESERVED_63_42_SHIFT	42
#define HFI_PCIM_ERR_FIRST_BMC_RESERVED_63_42_MASK	0x3FFFFFull
#define HFI_PCIM_ERR_FIRST_BMC_RESERVED_63_42_SMASK	0xFFFFFC0000000000ull
#define HFI_PCIM_ERR_FIRST_BMC_EVENTS_SHIFT		0
#define HFI_PCIM_ERR_FIRST_BMC_EVENTS_MASK		0x3FFFFFFFFFFull
#define HFI_PCIM_ERR_FIRST_BMC_EVENTS_SMASK		0x3FFFFFFFFFFull
/*
* Table #24 of fxr_top - PCIM_ERR_EN_QUAR
* This is the Error Enable for the Quarantine Interrupt. If a bit is set, the 
* corresponding error bit in PCIM_ERR_STS will cause an interrupt on the QUAR 
* interrupt signal.
*/
#define HFI_PCIM_ERR_EN_QUAR				(HFI_PCIM_CSRS + 0x000000000238)
#define HFI_PCIM_ERR_EN_QUAR_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_ERR_EN_QUAR_RESERVED_63_42_SHIFT	42
#define HFI_PCIM_ERR_EN_QUAR_RESERVED_63_42_MASK	0x3FFFFFull
#define HFI_PCIM_ERR_EN_QUAR_RESERVED_63_42_SMASK	0xFFFFFC0000000000ull
#define HFI_PCIM_ERR_EN_QUAR_EVENTS_SHIFT		0
#define HFI_PCIM_ERR_EN_QUAR_EVENTS_MASK		0x3FFFFFFFFFFull
#define HFI_PCIM_ERR_EN_QUAR_EVENTS_SMASK		0x3FFFFFFFFFFull
/*
* Table #25 of fxr_top - PCIM_ERR_FIRST_QUAR
* This is the First Error CSR for the Quarantine Interrupt. When this CSR is 
* clear, it will capture the next PCIM_ERR_STS value when a new QUAR Interrupt 
* occurs.
*/
#define HFI_PCIM_ERR_FIRST_QUAR				(HFI_PCIM_CSRS + 0x000000000240)
#define HFI_PCIM_ERR_FIRST_QUAR_RESETCSR		0x0000000000000000ull
#define HFI_PCIM_ERR_FIRST_QUAR_RESERVED_63_42_SHIFT	42
#define HFI_PCIM_ERR_FIRST_QUAR_RESERVED_63_42_MASK	0x3FFFFFull
#define HFI_PCIM_ERR_FIRST_QUAR_RESERVED_63_42_SMASK	0xFFFFFC0000000000ull
#define HFI_PCIM_ERR_FIRST_QUAR_EVENTS_SHIFT		0
#define HFI_PCIM_ERR_FIRST_QUAR_EVENTS_MASK		0x3FFFFFFFFFFull
#define HFI_PCIM_ERR_FIRST_QUAR_EVENTS_SMASK		0x3FFFFFFFFFFull
/*
* Table #26 of fxr_top - PCIM_ERR_INFO
* Misc syndrome and info data for associated #%%#PCIM_ERR_STS#%%# events. Info 
* fields are held until the associated event is cleared via the 
* #%%#PCIM_ERR_CLR#%%# register.
*/
#define HFI_PCIM_ERR_INFO				(HFI_PCIM_CSRS + 0x000000000248)
#define HFI_PCIM_ERR_INFO_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_ERR_INFO_RESERVED_63_52_SHIFT		52
#define HFI_PCIM_ERR_INFO_RESERVED_63_52_MASK		0xFFFull
#define HFI_PCIM_ERR_INFO_RESERVED_63_52_SMASK		0xFFF0000000000000ull
#define HFI_PCIM_ERR_INFO_TQB_SYND_SHIFT		44
#define HFI_PCIM_ERR_INFO_TQB_SYND_MASK			0xFFull
#define HFI_PCIM_ERR_INFO_TQB_SYND_SMASK		0xFF00000000000ull
#define HFI_PCIM_ERR_INFO_TCB_SYND_SHIFT		36
#define HFI_PCIM_ERR_INFO_TCB_SYND_MASK			0xFFull
#define HFI_PCIM_ERR_INFO_TCB_SYND_SMASK		0xFF000000000ull
#define HFI_PCIM_ERR_INFO_RESERVED_35_33_SHIFT		33
#define HFI_PCIM_ERR_INFO_RESERVED_35_33_MASK		0x7ull
#define HFI_PCIM_ERR_INFO_RESERVED_35_33_SMASK		0xE00000000ull
#define HFI_PCIM_ERR_INFO_P2SB_SYND0_SHIFT		24
#define HFI_PCIM_ERR_INFO_P2SB_SYND0_MASK		0x1FFull
#define HFI_PCIM_ERR_INFO_P2SB_SYND0_SMASK		0x1FF000000ull
#define HFI_PCIM_ERR_INFO_RESERVED_23_SHIFT		23
#define HFI_PCIM_ERR_INFO_RESERVED_23_MASK		0x1ull
#define HFI_PCIM_ERR_INFO_RESERVED_23_SMASK		0x800000ull
#define HFI_PCIM_ERR_INFO_P2SB_SYND1_SHIFT		16
#define HFI_PCIM_ERR_INFO_P2SB_SYND1_MASK		0x7Full
#define HFI_PCIM_ERR_INFO_P2SB_SYND1_SMASK		0x7F0000ull
#define HFI_PCIM_ERR_INFO_RESERVED_15_SHIFT		15
#define HFI_PCIM_ERR_INFO_RESERVED_15_MASK		0x1ull
#define HFI_PCIM_ERR_INFO_RESERVED_15_SMASK		0x8000ull
#define HFI_PCIM_ERR_INFO_MSIX_DATA_SYND_SHIFT		8
#define HFI_PCIM_ERR_INFO_MSIX_DATA_SYND_MASK		0x7Full
#define HFI_PCIM_ERR_INFO_MSIX_DATA_SYND_SMASK		0x7F00ull
#define HFI_PCIM_ERR_INFO_MSIX_ADDR_SYND_SHIFT		0
#define HFI_PCIM_ERR_INFO_MSIX_ADDR_SYND_MASK		0xFFull
#define HFI_PCIM_ERR_INFO_MSIX_ADDR_SYND_SMASK		0xFFull
/*
* Table #27 of fxr_top - PCIM_ERR_INFO1
* HPI Header0 associated with HPI error event in #%%#PCIM_ERR_STS#%%#. Header is 
* held until the associated event is cleared via the #%%#PCIM_ERR_CLR#%%# 
* register.
*/
#define HFI_PCIM_ERR_INFO1				(HFI_PCIM_CSRS + 0x000000000250)
#define HFI_PCIM_ERR_INFO1_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_ERR_INFO1_HPI_HEADER0_SHIFT		0
#define HFI_PCIM_ERR_INFO1_HPI_HEADER0_MASK		0xFFFFFFFFFFFFFFFFull
#define HFI_PCIM_ERR_INFO1_HPI_HEADER0_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #28 of fxr_top - PCIM_ERR_INFO2
* HPI Header1 associated with HPI error event in #%%#PCIM_ERR_STS#%%#. Header is 
* held until the associated event is cleared via the #%%#PCIM_ERR_CLR#%%# 
* register.
*/
#define HFI_PCIM_ERR_INFO2				(HFI_PCIM_CSRS + 0x000000000258)
#define HFI_PCIM_ERR_INFO2_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_ERR_INFO2_HPI_HEADER1_SHIFT		0
#define HFI_PCIM_ERR_INFO2_HPI_HEADER1_MASK		0xFFFFFFFFFFFFFFFFull
#define HFI_PCIM_ERR_INFO2_HPI_HEADER1_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #29 of fxr_top - PCIM_ERR_INFO3
* P2SB Header0 associated with P2SB error event in #%%#PCIM_ERR_STS#%%#. Header 
* is held until the associated event is cleared via the #%%#PCIM_ERR_CLR#%%# 
* register.
*/
#define HFI_PCIM_ERR_INFO3				(HFI_PCIM_CSRS + 0x000000000260)
#define HFI_PCIM_ERR_INFO3_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_ERR_INFO3_P2SB_HEADER0_SHIFT		0
#define HFI_PCIM_ERR_INFO3_P2SB_HEADER0_MASK		0xFFFFFFFFFFFFFFFFull
#define HFI_PCIM_ERR_INFO3_P2SB_HEADER0_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #30 of fxr_top - PCIM_ERR_INFO4
* P2SB Header1 associated with P2SB error event in #%%#PCIM_ERR_STS#%%#. Header 
* is held until the associated event is cleared via the #%%#PCIM_ERR_CLR#%%# 
* register.
*/
#define HFI_PCIM_ERR_INFO4				(HFI_PCIM_CSRS + 0x000000000268)
#define HFI_PCIM_ERR_INFO4_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_ERR_INFO4_P2SB_HEADER1_SHIFT		0
#define HFI_PCIM_ERR_INFO4_P2SB_HEADER1_MASK		0xFFFFFFFFFFFFFFFFull
#define HFI_PCIM_ERR_INFO4_P2SB_HEADER1_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #31 of fxr_top - PCIM_ERR_INFO5
* TARB Header0 associated with TARB error event in #%%#PCIM_ERR_STS#%%#. Header 
* is held until the associated event is cleared via the #%%#PCIM_ERR_CLR#%%# 
* register.
*/
#define HFI_PCIM_ERR_INFO5				(HFI_PCIM_CSRS + 0x000000000270)
#define HFI_PCIM_ERR_INFO5_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_ERR_INFO5_TARB_HEADER0_SHIFT		0
#define HFI_PCIM_ERR_INFO5_TARB_HEADER0_MASK		0xFFFFFFFFFFFFFFFFull
#define HFI_PCIM_ERR_INFO5_TARB_HEADER0_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #32 of fxr_top - PCIM_ERR_INFO6
* TARB Header1 associated with TARB error event in #%%#PCIM_ERR_STS#%%#. Header 
* is held until the associated event is cleared via the #%%#PCIM_ERR_CLR#%%# 
* register.
*/
#define HFI_PCIM_ERR_INFO6				(HFI_PCIM_CSRS + 0x000000000278)
#define HFI_PCIM_ERR_INFO6_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_ERR_INFO6_TARB_HEADER1_SHIFT		0
#define HFI_PCIM_ERR_INFO6_TARB_HEADER1_MASK		0xFFFFFFFFFFFFFFFFull
#define HFI_PCIM_ERR_INFO6_TARB_HEADER1_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #33 of fxr_top - PCIM_ERR_INFO7
* TARB Header1 associated with TARB error event in #%%#PCIM_ERR_STS#%%#. Header 
* is held until the associated event is cleared via the #%%#PCIM_ERR_CLR#%%# 
* register.
*/
#define HFI_PCIM_ERR_INFO7				(HFI_PCIM_CSRS + 0x000000000280)
#define HFI_PCIM_ERR_INFO7_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_ERR_INFO7_RESERVED_63_17_SHIFT		17
#define HFI_PCIM_ERR_INFO7_RESERVED_63_17_MASK		0x7FFFFFFFFFFFull
#define HFI_PCIM_ERR_INFO7_RESERVED_63_17_SMASK		0xFFFFFFFFFFFE0000ull
#define HFI_PCIM_ERR_INFO7_INT_REMAP_ID_SHIFT		8
#define HFI_PCIM_ERR_INFO7_INT_REMAP_ID_MASK		0x1FFull
#define HFI_PCIM_ERR_INFO7_INT_REMAP_ID_SMASK		0x1FF00ull
#define HFI_PCIM_ERR_INFO7_ITR_RPE_ENTRY_SHIFT		0
#define HFI_PCIM_ERR_INFO7_ITR_RPE_ENTRY_MASK		0xFFull
#define HFI_PCIM_ERR_INFO7_ITR_RPE_ENTRY_SMASK		0xFFull
/*
* Table #34 of fxr_top - PCIM_BMC_STS
* This is the Error Status CSR. Bits are set by hardware or by writing to the 
* #%%#PCIM_BMC_FRC#%%# CSR. Bits are cleared by writing to the 
* #%%#PCIM_BMC_CLR#%%# CSR.
*/
#define HFI_PCIM_BMC_STS				(HFI_PCIM_CSRS + 0x000000000300)
#define HFI_PCIM_BMC_STS_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_BMC_STS_RESERVED_63_32_SHIFT		32
#define HFI_PCIM_BMC_STS_RESERVED_63_32_MASK		0xFFFFFFFFull
#define HFI_PCIM_BMC_STS_RESERVED_63_32_SMASK		0xFFFFFFFF00000000ull
#define HFI_PCIM_BMC_STS_QSFP_ERROR_SHIFT		31
#define HFI_PCIM_BMC_STS_QSFP_ERROR_MASK		0x1ull
#define HFI_PCIM_BMC_STS_QSFP_ERROR_SMASK		0x80000000ull
#define HFI_PCIM_BMC_STS_GPIO_ERROR_SHIFT		30
#define HFI_PCIM_BMC_STS_GPIO_ERROR_MASK		0x1ull
#define HFI_PCIM_BMC_STS_GPIO_ERROR_SMASK		0x40000000ull
#define HFI_PCIM_BMC_STS_CRIT_TEMP_ERROR_SHIFT		29
#define HFI_PCIM_BMC_STS_CRIT_TEMP_ERROR_MASK		0x1ull
#define HFI_PCIM_BMC_STS_CRIT_TEMP_ERROR_SMASK		0x20000000ull
#define HFI_PCIM_BMC_STS_HIGH_TEMP_ERROR_SHIFT		28
#define HFI_PCIM_BMC_STS_HIGH_TEMP_ERROR_MASK		0x1ull
#define HFI_PCIM_BMC_STS_HIGH_TEMP_ERROR_SMASK		0x10000000ull
#define HFI_PCIM_BMC_STS_LOW_TEMP_ERROR_SHIFT		27
#define HFI_PCIM_BMC_STS_LOW_TEMP_ERROR_MASK		0x1ull
#define HFI_PCIM_BMC_STS_LOW_TEMP_ERROR_SMASK		0x8000000ull
#define HFI_PCIM_BMC_STS_AT_IOMMU_ERROR_SHIFT		26
#define HFI_PCIM_BMC_STS_AT_IOMMU_ERROR_MASK		0x1ull
#define HFI_PCIM_BMC_STS_AT_IOMMU_ERROR_SMASK		0x4000000ull
#define HFI_PCIM_BMC_STS_CRK_8051_ERROR_SHIFT		25
#define HFI_PCIM_BMC_STS_CRK_8051_ERROR_MASK		0x1ull
#define HFI_PCIM_BMC_STS_CRK_8051_ERROR_SMASK		0x2000000ull
#define HFI_PCIM_BMC_STS_CRK_SHIM_ERROR_SHIFT		24
#define HFI_PCIM_BMC_STS_CRK_SHIM_ERROR_MASK		0x1ull
#define HFI_PCIM_BMC_STS_CRK_SHIM_ERROR_SMASK		0x1000000ull
#define HFI_PCIM_BMC_STS_CRK_LCB_ERROR_SHIFT		23
#define HFI_PCIM_BMC_STS_CRK_LCB_ERROR_MASK		0x1ull
#define HFI_PCIM_BMC_STS_CRK_LCB_ERROR_SMASK		0x800000ull
#define HFI_PCIM_BMC_STS_PMON_CORE_ERROR_SHIFT		22
#define HFI_PCIM_BMC_STS_PMON_CORE_ERROR_MASK		0x1ull
#define HFI_PCIM_BMC_STS_PMON_CORE_ERROR_SMASK		0x400000ull
#define HFI_PCIM_BMC_STS_LM_TP_ERROR_SHIFT		21
#define HFI_PCIM_BMC_STS_LM_TP_ERROR_MASK		0x1ull
#define HFI_PCIM_BMC_STS_LM_TP_ERROR_SMASK		0x200000ull
#define HFI_PCIM_BMC_STS_LM_FPC_ERROR_SHIFT		20
#define HFI_PCIM_BMC_STS_LM_FPC_ERROR_MASK		0x1ull
#define HFI_PCIM_BMC_STS_LM_FPC_ERROR_SMASK		0x100000ull
#define HFI_PCIM_BMC_STS_RXCIC_ERROR_SHIFT		19
#define HFI_PCIM_BMC_STS_RXCIC_ERROR_MASK		0x1ull
#define HFI_PCIM_BMC_STS_RXCIC_ERROR_SMASK		0x80000ull
#define HFI_PCIM_BMC_STS_RXCID_ERROR_SHIFT		18
#define HFI_PCIM_BMC_STS_RXCID_ERROR_MASK		0x1ull
#define HFI_PCIM_BMC_STS_RXCID_ERROR_SMASK		0x40000ull
#define HFI_PCIM_BMC_STS_IOMMU_ERROR_SHIFT		17
#define HFI_PCIM_BMC_STS_IOMMU_ERROR_MASK		0x1ull
#define HFI_PCIM_BMC_STS_IOMMU_ERROR_SMASK		0x20000ull
#define HFI_PCIM_BMC_STS_AT_ERROR_SHIFT			16
#define HFI_PCIM_BMC_STS_AT_ERROR_MASK			0x1ull
#define HFI_PCIM_BMC_STS_AT_ERROR_SMASK			0x10000ull
#define HFI_PCIM_BMC_STS_RXHIARB_ERROR_SHIFT		15
#define HFI_PCIM_BMC_STS_RXHIARB_ERROR_MASK		0x1ull
#define HFI_PCIM_BMC_STS_RXHIARB_ERROR_SMASK		0x8000ull
#define HFI_PCIM_BMC_STS_RXET_ERROR_SHIFT		14
#define HFI_PCIM_BMC_STS_RXET_ERROR_MASK		0x1ull
#define HFI_PCIM_BMC_STS_RXET_ERROR_SMASK		0x4000ull
#define HFI_PCIM_BMC_STS_RXDMA_ERROR_SHIFT		13
#define HFI_PCIM_BMC_STS_RXDMA_ERROR_MASK		0x1ull
#define HFI_PCIM_BMC_STS_RXDMA_ERROR_SMASK		0x2000ull
#define HFI_PCIM_BMC_STS_RXHP_ERROR_SHIFT		12
#define HFI_PCIM_BMC_STS_RXHP_ERROR_MASK		0x1ull
#define HFI_PCIM_BMC_STS_RXHP_ERROR_SMASK		0x1000ull
#define HFI_PCIM_BMC_STS_RXE2E_ERROR_SHIFT		11
#define HFI_PCIM_BMC_STS_RXE2E_ERROR_MASK		0x1ull
#define HFI_PCIM_BMC_STS_RXE2E_ERROR_SMASK		0x800ull
#define HFI_PCIM_BMC_STS_LM_ERROR_SHIFT			10
#define HFI_PCIM_BMC_STS_LM_ERROR_MASK			0x1ull
#define HFI_PCIM_BMC_STS_LM_ERROR_SMASK			0x400ull
#define HFI_PCIM_BMC_STS_TXDMA_ERROR_SHIFT		9
#define HFI_PCIM_BMC_STS_TXDMA_ERROR_MASK		0x1ull
#define HFI_PCIM_BMC_STS_TXDMA_ERROR_SMASK		0x200ull
#define HFI_PCIM_BMC_STS_OTR_MSG_ERROR_SHIFT		8
#define HFI_PCIM_BMC_STS_OTR_MSG_ERROR_MASK		0x1ull
#define HFI_PCIM_BMC_STS_OTR_MSG_ERROR_SMASK		0x100ull
#define HFI_PCIM_BMC_STS_TXCIC_ERROR_SHIFT		7
#define HFI_PCIM_BMC_STS_TXCIC_ERROR_MASK		0x1ull
#define HFI_PCIM_BMC_STS_TXCIC_ERROR_SMASK		0x80ull
#define HFI_PCIM_BMC_STS_TXCID_ERROR_SHIFT		6
#define HFI_PCIM_BMC_STS_TXCID_ERROR_MASK		0x1ull
#define HFI_PCIM_BMC_STS_TXCID_ERROR_SMASK		0x40ull
#define HFI_PCIM_BMC_STS_PCIM_ERROR_SHIFT		5
#define HFI_PCIM_BMC_STS_PCIM_ERROR_MASK		0x1ull
#define HFI_PCIM_BMC_STS_PCIM_ERROR_SMASK		0x20ull
#define HFI_PCIM_BMC_STS_LOCA_ERROR_SHIFT		4
#define HFI_PCIM_BMC_STS_LOCA_ERROR_MASK		0x1ull
#define HFI_PCIM_BMC_STS_LOCA_ERROR_SMASK		0x10ull
#define HFI_PCIM_BMC_STS_HIFIS_ERROR_SHIFT		3
#define HFI_PCIM_BMC_STS_HIFIS_ERROR_MASK		0x1ull
#define HFI_PCIM_BMC_STS_HIFIS_ERROR_SMASK		0x8ull
#define HFI_PCIM_BMC_STS_OTR_PKT_ERROR_SHIFT		2
#define HFI_PCIM_BMC_STS_OTR_PKT_ERROR_MASK		0x1ull
#define HFI_PCIM_BMC_STS_OTR_PKT_ERROR_SMASK		0x4ull
#define HFI_PCIM_BMC_STS_IOMMU_QI_EVENT_SHIFT		1
#define HFI_PCIM_BMC_STS_IOMMU_QI_EVENT_MASK		0x1ull
#define HFI_PCIM_BMC_STS_IOMMU_QI_EVENT_SMASK		0x2ull
#define HFI_PCIM_BMC_STS_IOMMU_PRQ_EVENT_SHIFT		0
#define HFI_PCIM_BMC_STS_IOMMU_PRQ_EVENT_MASK		0x1ull
#define HFI_PCIM_BMC_STS_IOMMU_PRQ_EVENT_SMASK		0x1ull
/*
* Table #35 of fxr_top - PCIM_BMC_CLR
* This is the BMC Clear CSR. Writing a 1 to a valid bit will clear the 
* corresponding bit in the #%%#PCIM_BMC_STS#%%# CSR.
*/
#define HFI_PCIM_BMC_CLR				(HFI_PCIM_CSRS + 0x000000000308)
#define HFI_PCIM_BMC_CLR_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_BMC_CLR_RESERVED_63_32_SHIFT		32
#define HFI_PCIM_BMC_CLR_RESERVED_63_32_MASK		0xFFFFFFFFull
#define HFI_PCIM_BMC_CLR_RESERVED_63_32_SMASK		0xFFFFFFFF00000000ull
#define HFI_PCIM_BMC_CLR_EVENTS_SHIFT			0
#define HFI_PCIM_BMC_CLR_EVENTS_MASK			0xFFFFFFFFull
#define HFI_PCIM_BMC_CLR_EVENTS_SMASK			0xFFFFFFFFull
/*
* Table #36 of fxr_top - PCIM_BMC_FRC
* This is the BMC Force CSR. Writing a 1 to a valid bit will set the 
* corresponding bit in the #%%#PCIM_BMC_STS#%%# CSR.
*/
#define HFI_PCIM_BMC_FRC				(HFI_PCIM_CSRS + 0x000000000310)
#define HFI_PCIM_BMC_FRC_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_BMC_FRC_RESERVED_63_32_SHIFT		32
#define HFI_PCIM_BMC_FRC_RESERVED_63_32_MASK		0xFFFFFFFFull
#define HFI_PCIM_BMC_FRC_RESERVED_63_32_SMASK		0xFFFFFFFF00000000ull
#define HFI_PCIM_BMC_FRC_EVENTS_SHIFT			0
#define HFI_PCIM_BMC_FRC_EVENTS_MASK			0xFFFFFFFFull
#define HFI_PCIM_BMC_FRC_EVENTS_SMASK			0xFFFFFFFFull
/*
* Table #37 of fxr_top - PCIM_BMC_ENA
* This is the Enable CSR for the BMC Interrupt. If a bit is set, the 
* corresponding error bit in #%%#PCIM_BMC_STS#%%# will cause an interrupt to the 
* BMC.
*/
#define HFI_PCIM_BMC_ENA				(HFI_PCIM_CSRS + 0x000000000318)
#define HFI_PCIM_BMC_ENA_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_BMC_ENA_RESERVED_63_32_SHIFT		32
#define HFI_PCIM_BMC_ENA_RESERVED_63_32_MASK		0xFFFFFFFFull
#define HFI_PCIM_BMC_ENA_RESERVED_63_32_SMASK		0xFFFFFFFF00000000ull
#define HFI_PCIM_BMC_ENA_EVENTS_SHIFT			0
#define HFI_PCIM_BMC_ENA_EVENTS_MASK			0xFFFFFFFFull
#define HFI_PCIM_BMC_ENA_EVENTS_SMASK			0xFFFFFFFFull
/*
* Table #38 of fxr_top - PCIM_BMC_FIRST
* This is the First BMC CSR for the BMC Interrupt. When BMC interrupt is clear, 
* it will capture the next #%%#PCIM_BMC_STS#%%# value when a new BMC Interrupt 
* occurs.
*/
#define HFI_PCIM_BMC_FIRST				(HFI_PCIM_CSRS + 0x000000000320)
#define HFI_PCIM_BMC_FIRST_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_BMC_FIRST_RESERVED_63_32_SHIFT		32
#define HFI_PCIM_BMC_FIRST_RESERVED_63_32_MASK		0xFFFFFFFFull
#define HFI_PCIM_BMC_FIRST_RESERVED_63_32_SMASK		0xFFFFFFFF00000000ull
#define HFI_PCIM_BMC_FIRST_EVENTS_SHIFT			0
#define HFI_PCIM_BMC_FIRST_EVENTS_MASK			0xFFFFFFFFull
#define HFI_PCIM_BMC_FIRST_EVENTS_SMASK			0xFFFFFFFFull
/*
* Table #39 of fxr_top - PCIM_INT_STS
* 320 Interrupt Status bits implemented in five 64-bit CSRs. Each bit represents 
* an interrupt source. A bit is set to 1 whenever the corresponding event is 
* signaled (rising edge triggered) or if the bit is explicitly set by software 
* using the #%%#PCIM_INT_FRC#%%# register. A bit remains set until explicitly 
* cleared by software using the #%%#PCIM_INT_CLR#%%# register. If a set 
* condition and clear condition occur simultaneously, the set condition wins. 
* 
*/
#define HFI_PCIM_INT_STS				(HFI_PCIM_CSRS + 0x000000000400)
#define HFI_PCIM_INT_STS_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_INT_STS_INT_STS_SHIFT			0
#define HFI_PCIM_INT_STS_INT_STS_MASK			0xFFFFFFFFFFFFFFFFull
#define HFI_PCIM_INT_STS_INT_STS_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #41 of fxr_top - PCIM_INT_CLR
* One for one mapping to #%%#PCIM_INT_STS#%%# registers to clear status bits. 
* Writing a 1 clears the bit. Writing 0 has no effect. Reads return 
* 0.
*/
#define HFI_PCIM_INT_CLR				(HFI_PCIM_CSRS + 0x000000000440)
#define HFI_PCIM_INT_CLR_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_INT_CLR_INT_CLR_SHIFT			0
#define HFI_PCIM_INT_CLR_INT_CLR_MASK			0xFFFFFFFFFFFFFFFFull
#define HFI_PCIM_INT_CLR_INT_CLR_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #42 of fxr_top - PCIM_INT_FRC
* One for one mapping to #%%#PCIM_INT_STS#%%# registers to set status bits. 
* Writing a 1 sets the bit. Writing 0 has no effect. Reads return 
* 0.
*/
#define HFI_PCIM_INT_FRC				(HFI_PCIM_CSRS + 0x000000000480)
#define HFI_PCIM_INT_FRC_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_INT_FRC_INT_FRC_SHIFT			0
#define HFI_PCIM_INT_FRC_INT_FRC_MASK			0xFFFFFFFFFFFFFFFFull
#define HFI_PCIM_INT_FRC_INT_FRC_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #43 of fxr_top - PCIM_PBA_CLR
* One for one mapping to #%%#PCIM_MSIX_PBA#%%# registers to clear associated 
* #%%#msix_pba#%%# bits. Writing a 1 clears the bit. Writing 0 has no effect. 
* Reads return 0.
*/
#define HFI_PCIM_PBA_CLR				(HFI_PCIM_CSRS + 0x0000000004C0)
#define HFI_PCIM_PBA_CLR_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_PBA_CLR_PBA_CLR_SHIFT			0
#define HFI_PCIM_PBA_CLR_PBA_CLR_MASK			0xFFFFFFFFFFFFFFFFull
#define HFI_PCIM_PBA_CLR_PBA_CLR_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #44 of fxr_top - PCIM_PBA_FRC
* One for one mapping to #%%#PCIM_MSIX_PBA#%%# registers to set associated 
* #%%#msix_pba#%%# bits. Writing a 1 sets the bit. Writing 0 has no effect. 
* Reads return 0.
*/
#define HFI_PCIM_PBA_FRC				(HFI_PCIM_CSRS + 0x000000000500)
#define HFI_PCIM_PBA_FRC_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_PBA_FRC_PBA_FRC_SHIFT			0
#define HFI_PCIM_PBA_FRC_PBA_FRC_MASK			0xFFFFFFFFFFFFFFFFull
#define HFI_PCIM_PBA_FRC_PBA_FRC_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #45 of fxr_top - PCIM_INT_ITR
* ITR is used to shape (throttle) #%%#PCIM_MSIX_PBA#%%#[3:0] CSR events (IRQs 
* and LM_BECN_EVENT). Each #%%#PCIM_MSIX_PBA#%%# bit has an associated ITR to 
* limit the max signaling rate for that event. ITR can be disabled by setting 
* the threshold rate to zero. ITR state is maintained in a Register 
* File
*/
#define HFI_PCIM_INT_ITR				(HFI_PCIM_CSRS + 0x000000000800)
#define HFI_PCIM_INT_ITR_RESETCSR			0x0000000100000000ull
#define HFI_PCIM_INT_ITR_RESERVED_63_34_SHIFT		34
#define HFI_PCIM_INT_ITR_RESERVED_63_34_MASK		0x3FFFFFFFull
#define HFI_PCIM_INT_ITR_RESERVED_63_34_SMASK		0xFFFFFFFC00000000ull
#define HFI_PCIM_INT_ITR_ITR_PAR_SHIFT			33
#define HFI_PCIM_INT_ITR_ITR_PAR_MASK			0x1ull
#define HFI_PCIM_INT_ITR_ITR_PAR_SMASK			0x200000000ull
#define HFI_PCIM_INT_ITR_ITR_ENA_SHIFT			32
#define HFI_PCIM_INT_ITR_ITR_ENA_MASK			0x1ull
#define HFI_PCIM_INT_ITR_ITR_ENA_SMASK			0x100000000ull
#define HFI_PCIM_INT_ITR_ITR_TIMER_SHIFT		16
#define HFI_PCIM_INT_ITR_ITR_TIMER_MASK			0xFFFFull
#define HFI_PCIM_INT_ITR_ITR_TIMER_SMASK		0xFFFF0000ull
#define HFI_PCIM_INT_ITR_INT_DELAY_SHIFT		0
#define HFI_PCIM_INT_ITR_INT_DELAY_MASK			0xFFFFull
#define HFI_PCIM_INT_ITR_INT_DELAY_SMASK		0xFFFFull
/*
* Table #46 of fxr_top - PCIM_MSIX_ADDR
* 320 MSIX Table entries containing MSIX Message Address. Each 
* #%%#PCIM_MSIX_PBA#%%# event is direct mapped to a MSIX Table entry. 
* #%%#PCIM_MSIX_PBA#%%# bit event 0 maps to MSIX Table entry 0, 
* #%%#PCIM_MSIX_PBA#%%# bit event 319 maps to MSIX Table entry 319 
* 
*/
#define HFI_PCIM_MSIX_ADDR				(HFI_PCIM_CSRS + 0x000000002000)
#define HFI_PCIM_MSIX_ADDR_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_MSIX_ADDR_MSG_ADDR_SHIFT		0
#define HFI_PCIM_MSIX_ADDR_MSG_ADDR_MASK		0xFFFFFFFFFFFFFFFFull
#define HFI_PCIM_MSIX_ADDR_MSG_ADDR_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #47 of fxr_top - PCIM_MSIX_DATACTL
* 320 MSIX Table entries containing MSIX Message Data and Control. Each 
* #%%#PCIM_MSIX_PBA#%%# event is direct mapped to a MSIX Table entry. 
* #%%#PCIM_MSIX_PBA#%%# bit event 0 maps to MSIX Table entry 0, 
* #%%#PCIM_MSIX_PBA#%%# bit event 319 maps to MSIX Table entry 319. Note 
* #%%#PCIM_INT_ITR#%%# control is available only for events that get mapped to 
* the lower 255 bits in #%%#PCIM_MSIX_PBA#%%#[3:0].
*/
#define HFI_PCIM_MSIX_DATACTL				(HFI_PCIM_CSRS + 0x000000002008)
#define HFI_PCIM_MSIX_DATACTL_RESETCSR			0x0000000100000000ull
#define HFI_PCIM_MSIX_DATACTL_RESERVED_63_33_SHIFT	33
#define HFI_PCIM_MSIX_DATACTL_RESERVED_63_33_MASK	0x7FFFFFFFull
#define HFI_PCIM_MSIX_DATACTL_RESERVED_63_33_SMASK	0xFFFFFFFE00000000ull
#define HFI_PCIM_MSIX_DATACTL_MSG_MASK_SHIFT		32
#define HFI_PCIM_MSIX_DATACTL_MSG_MASK_MASK		0x1ull
#define HFI_PCIM_MSIX_DATACTL_MSG_MASK_SMASK		0x100000000ull
#define HFI_PCIM_MSIX_DATACTL_MSG_DATA_SHIFT		0
#define HFI_PCIM_MSIX_DATACTL_MSG_DATA_MASK		0xFFFFFFFFull
#define HFI_PCIM_MSIX_DATACTL_MSG_DATA_SMASK		0xFFFFFFFFull
/*
* Table #48 of fxr_top - PCIM_MSIX_PBA
* MSIX Pending Bit Array. Five total QWARDs (0 to 4). Each QWORD contains 
* Pending Bits for 64 entries in the MSIX Table. QWORD N contains PBA bits for 
* MSIX Table entries [64N+63 : 64N] for a total of 320 PBA bits. Each of the 320 
* #%%#PCIM_MSIX_PBA#%%# bits is direct mapped to an entry in the 
* #%%#PCIM_MSIX_ADDR#%%# and #%%#PCIM_MSIX_DATACTL#%%# Tables. 
* #%%#PCIM_MSIX_PBA#%%# bit event 0 maps to MSIX Table entry 0, 
* #%%#PCIM_MSIX_PBA#%%# bit event 319 maps to MSIX Table entry 319. Note  
* 
*/
#define HFI_PCIM_MSIX_PBA				(HFI_PCIM_CSRS + 0x000000004000)
#define HFI_PCIM_MSIX_PBA_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_MSIX_PBA_MSIX_PBA_SHIFT		0
#define HFI_PCIM_MSIX_PBA_MSIX_PBA_MASK			0xFFFFFFFFFFFFFFFFull
#define HFI_PCIM_MSIX_PBA_MSIX_PBA_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #49 of fxr_top - PCIM_REMAP_TBL
* 320 #%%#PCIM_REMAP_TBL#%%# entries containing an 8-bit encoding of an 
* associated bit in the #%%#PCIM_MSIX_PBA#%%#. Each #%%#PCIM_INT_STS#%%# bit 
* event is direct mapped to an entry in the #%%#PCIM_REMAP_TBL#%%#. 
* #%%#PCIM_INT_STS#%%# events can be remapped by #%%#PCIM_REMAP_TBL#%%# to set 
* the desired bit in the #%%#PCIM_MSIX_PBA#%%#. The #%%#PCIM_REMAP_TBL#%%# may 
* be programmed by SW for instances when FXR must operate with less than the 
* full 320 MSIX vectors available in the #%%#PCIM_MSIX_ADDR#%%# and 
* #%%#PCIM_MSIX_DATACTL#%%# Tables. The #%%#PCIM_REMAP_TBL#%%# is HW initialized 
* at reset with a unity mapping where the #%%#pba_id#%%# for each entry is 
* initialized with the entry's index (0-319). 
*/
#define HFI_PCIM_REMAP_TBL				(HFI_PCIM_CSRS + 0x000000006000)
#define HFI_PCIM_REMAP_TBL_RESETCSR			0x0000000000000000ull
#define HFI_PCIM_REMAP_TBL_RESERVED_63_9_SHIFT		9
#define HFI_PCIM_REMAP_TBL_RESERVED_63_9_MASK		0x7FFFFFFFFFFFFFull
#define HFI_PCIM_REMAP_TBL_RESERVED_63_9_SMASK		0xFFFFFFFFFFFFFE00ull
#define HFI_PCIM_REMAP_TBL_PBA_ID_SHIFT			0
#define HFI_PCIM_REMAP_TBL_PBA_ID_MASK			0x1FFull
#define HFI_PCIM_REMAP_TBL_PBA_ID_SMASK			0x1FFull

#endif 		/* DEF_FXR_PCIM_SW_DEF */

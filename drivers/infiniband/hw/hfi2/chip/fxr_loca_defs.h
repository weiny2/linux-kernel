/*
*------------------------------------------------------------------------------
*                                                                              
*  INTEL CONFIDENTIAL                                                          
*                                                                              
*  Copyright 2018 Intel Corporation All Rights Reserved.                 
*                                                                              
*  The source code contained or described herein and all documents related     
*  to the source code ("Material") are owned by Intel Corporation or its    
*  suppliers or licensors. Title to the Material remains with Intel            
*  Corporation or its suppliers and licensors. The Material contains trade     
*  secrets and proprietary and confidential information of Intel or its        
*  suppliers and licensors. The Material is protected by worldwide copyright   
*  and trade secret laws and treaty provisions. No part of the Material may    
*  be used, copied, reproduced, modified, published, uploaded, posted,         
*  transmitted, distributed, or disclosed in any way without Intel's prior     
*  express written permission.                                                 
*                                                                              
*  No license under any patent, copyright, trade secret or other intellectual  
*  property right is granted to or conferred upon you by disclosure or         
*  delivery of the Materials, either expressly, by implication, inducement,    
*  estoppel or otherwise. Any license under such intellectual property rights  
*  must be express and approved by Intel in writing.                           
*                                                                              
*------------------------------------------------------------------------------
*  Auto-generated by /p/hdk/rtl/proj_tools/sl2_tools/sl2_tools-srvr10nm-18ww26b/scripts/i_csrs/i_csrs.pl
*  i_csrs.pl Version 1.5 last modified on Thursday 6/28/18 12:45:58
*  /p/hdk/rtl/proj_tools/sl2_tools/sl2_tools-srvr10nm-18ww26b/scripts/i_csrs/i_csrs.pl -C -RVREGS -ST fxr_loca -o /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/fxr /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/repo_xml/300_Memory_Map.xml /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/repo_xml/342_Memory_Map_LOCA.xml
*------------------------------------------------------------------------------
*/

#ifndef DEF_FXR_LOCA_SW_DEF
#define DEF_FXR_LOCA_SW_DEF

#ifndef HFI_LOCA_CSRS
#define HFI_LOCA_CSRS						0x000000000000
#endif
#define FXR_NUM_CONTEXTS					256
#define FXR_NUM_PIDS						4096
#define FXR_MAX_CONTEXT						255
#define FXR_TX_CONTEXT_ENTRIES					128
#define FXR_TX_CONTEXT_MAX					127
#define FXR_RX_CONTEXT_ENTRIES					32
#define FXR_RX_CONTEXT_MAX					31
#define FXR_NUM_SL						32
#define FXR_MAX_SL						31
#define LOCA_CFG_BASE						0
#define LOCA_DBG_BASE						256
#define LOCA_ERR_BASE0						512
#define LOCA_ERR_BASE1						768
#define LOCA_PMON_CNTR_BASE					1024
#define LOCA_MRU_BASE						2048
#define LOCA_PCAM_ADDR_BASE					4096
#define LOCA_PCAM_DATA_BASE					8192
#define LOCA_PROQ_FID_BASE					12288
#define LOCA_PROQ_CMPLT_BASE					12800
#define LOCA_PROQ_GLOBAL_BASE					12864
#define LOCA_PROQ_CONQVAL_BASE					12928
#define LOCA_PMI_ORB0_BASE					16384
#define LOCA_PMI_ORB1_BASE					16392
#define LOCA_PMI_ORBVAL_BASE					24576
#define LOCA_CONQ_TAILVAL_BASE					24960
#define LOCA_CONQ_PSRRPL					25024
#define LOCA_CONQ_HEADER0_BASE					28672
#define LOCA_CONQ_HEADER1_BASE					28680
#define LOCA_CONQ_LINKS_BASE					32768
#define LOCA_DCD0_BASE						65536
#define LOCA_DCD1_BASE						65544
#define LOCA_GO_CPORB_BASE					98304
#define LOCA_GO_WRR_BASE					102400
#define LOCA_DCACHE_BASE					1048576
#define PMON_CNTRS						127
#define PCAM_ENTRIES						319
#define MRU_ENTRIES						127
#define GO_CPORB_ENTRIES					319
#define GO_WRR_ENTRIES						511
#define DCD_ENTRIES						1023
#define CACHE_LINE_ENTRIES					8191
/*
* Table #4 of fxr_top - LOCA_CFG_PIPE
* This register enables selected modes and operations within the various 
* Pipeline Blocks.
*/
#define HFI_LOCA_CFG_PIPE					(HFI_LOCA_CSRS + 0x000000000000)
#define HFI_LOCA_CFG_PIPE_RESETCSR				0x0000040F0881F500ull
#define HFI_LOCA_CFG_PIPE_RESERVED_63_50_SHIFT			50
#define HFI_LOCA_CFG_PIPE_RESERVED_63_50_MASK			0x3FFFull
#define HFI_LOCA_CFG_PIPE_RESERVED_63_50_SMASK			0xFFFC000000000000ull
#define HFI_LOCA_CFG_PIPE_NEWFC_BURP_THRESH_SHIFT		41
#define HFI_LOCA_CFG_PIPE_NEWFC_BURP_THRESH_MASK		0x1FFull
#define HFI_LOCA_CFG_PIPE_NEWFC_BURP_THRESH_SMASK		0x3FE0000000000ull
#define HFI_LOCA_CFG_PIPE_NEWFC_THRESH_SHIFT			32
#define HFI_LOCA_CFG_PIPE_NEWFC_THRESH_MASK			0x1FFull
#define HFI_LOCA_CFG_PIPE_NEWFC_THRESH_SMASK			0x1FF00000000ull
#define HFI_LOCA_CFG_PIPE_RESERVED_31_SHIFT			31
#define HFI_LOCA_CFG_PIPE_RESERVED_31_MASK			0x1ull
#define HFI_LOCA_CFG_PIPE_RESERVED_31_SMASK			0x80000000ull
#define HFI_LOCA_CFG_PIPE_XIN2_PLUS_THRESH_SHIFT		24
#define HFI_LOCA_CFG_PIPE_XIN2_PLUS_THRESH_MASK			0x7Full
#define HFI_LOCA_CFG_PIPE_XIN2_PLUS_THRESH_SMASK		0x7F000000ull
#define HFI_LOCA_CFG_PIPE_PMI_REQ_CREDITS_SHIFT			18
#define HFI_LOCA_CFG_PIPE_PMI_REQ_CREDITS_MASK			0x3Full
#define HFI_LOCA_CFG_PIPE_PMI_REQ_CREDITS_SMASK			0xFC0000ull
#define HFI_LOCA_CFG_PIPE_PROQ_FULL_THRESH_SHIFT		8
#define HFI_LOCA_CFG_PIPE_PROQ_FULL_THRESH_MASK			0x3FFull
#define HFI_LOCA_CFG_PIPE_PROQ_FULL_THRESH_SMASK		0x3FF00ull
#define HFI_LOCA_CFG_PIPE_RESERVED_7_SHIFT			7
#define HFI_LOCA_CFG_PIPE_RESERVED_7_MASK			0x1ull
#define HFI_LOCA_CFG_PIPE_RESERVED_7_SMASK			0x80ull
#define HFI_LOCA_CFG_PIPE_ADM_CLKGATE_DISABLE_SHIFT		6
#define HFI_LOCA_CFG_PIPE_ADM_CLKGATE_DISABLE_MASK		0x1ull
#define HFI_LOCA_CFG_PIPE_ADM_CLKGATE_DISABLE_SMASK		0x40ull
#define HFI_LOCA_CFG_PIPE_CHAIN_DISABLE_SHIFT			5
#define HFI_LOCA_CFG_PIPE_CHAIN_DISABLE_MASK			0x1ull
#define HFI_LOCA_CFG_PIPE_CHAIN_DISABLE_SMASK			0x20ull
#define HFI_LOCA_CFG_PIPE_LOCA_WAKE_SHIFT			4
#define HFI_LOCA_CFG_PIPE_LOCA_WAKE_MASK			0x1ull
#define HFI_LOCA_CFG_PIPE_LOCA_WAKE_SMASK			0x10ull
#define HFI_LOCA_CFG_PIPE_PMICAM_ENTRIES_SHIFT			2
#define HFI_LOCA_CFG_PIPE_PMICAM_ENTRIES_MASK			0x3ull
#define HFI_LOCA_CFG_PIPE_PMICAM_ENTRIES_SMASK			0xCull
#define HFI_LOCA_CFG_PIPE_DEPIPE_HALF_ENABLE_SHIFT		1
#define HFI_LOCA_CFG_PIPE_DEPIPE_HALF_ENABLE_MASK		0x1ull
#define HFI_LOCA_CFG_PIPE_DEPIPE_HALF_ENABLE_SMASK		0x2ull
#define HFI_LOCA_CFG_PIPE_DEPIPE_FULL_ENABLE_SHIFT		0
#define HFI_LOCA_CFG_PIPE_DEPIPE_FULL_ENABLE_MASK		0x1ull
#define HFI_LOCA_CFG_PIPE_DEPIPE_FULL_ENABLE_SMASK		0x1ull
/*
* Table #5 of fxr_top - LOCA_CFG_PIPE2
* This register enables selected modes and operations within the various 
* Pipeline Blocks.
*/
#define HFI_LOCA_CFG_PIPE2					(HFI_LOCA_CSRS + 0x000000000008)
#define HFI_LOCA_CFG_PIPE2_RESETCSR				0x0000000000009100ull
#define HFI_LOCA_CFG_PIPE2_RESERVED_63_49_SHIFT			49
#define HFI_LOCA_CFG_PIPE2_RESERVED_63_49_MASK			0x7FFFull
#define HFI_LOCA_CFG_PIPE2_RESERVED_63_49_SMASK			0xFFFE000000000000ull
#define HFI_LOCA_CFG_PIPE2_FRC_MRU_INIT_SHIFT			48
#define HFI_LOCA_CFG_PIPE2_FRC_MRU_INIT_MASK			0x1ull
#define HFI_LOCA_CFG_PIPE2_FRC_MRU_INIT_SMASK			0x1000000000000ull
#define HFI_LOCA_CFG_PIPE2_RESERVED_47_40_SHIFT			40
#define HFI_LOCA_CFG_PIPE2_RESERVED_47_40_MASK			0xFFull
#define HFI_LOCA_CFG_PIPE2_RESERVED_47_40_SMASK			0xFF0000000000ull
#define HFI_LOCA_CFG_PIPE2_MRU_PEND_INIT_SHIFT			32
#define HFI_LOCA_CFG_PIPE2_MRU_PEND_INIT_MASK			0xFFull
#define HFI_LOCA_CFG_PIPE2_MRU_PEND_INIT_SMASK			0xFF00000000ull
#define HFI_LOCA_CFG_PIPE2_RESERVED_31_20_SHIFT			20
#define HFI_LOCA_CFG_PIPE2_RESERVED_31_20_MASK			0xFFFull
#define HFI_LOCA_CFG_PIPE2_RESERVED_31_20_SMASK			0xFFF00000ull
#define HFI_LOCA_CFG_PIPE2_CONQ_FC_THRESH_SHIFT			12
#define HFI_LOCA_CFG_PIPE2_CONQ_FC_THRESH_MASK			0xFFull
#define HFI_LOCA_CFG_PIPE2_CONQ_FC_THRESH_SMASK			0xFF000ull
#define HFI_LOCA_CFG_PIPE2_RESERVED_11_9_SHIFT			9
#define HFI_LOCA_CFG_PIPE2_RESERVED_11_9_MASK			0x7ull
#define HFI_LOCA_CFG_PIPE2_RESERVED_11_9_SMASK			0xE00ull
#define HFI_LOCA_CFG_PIPE2_CONQ_ENTRY_LIMIT_SHIFT		0
#define HFI_LOCA_CFG_PIPE2_CONQ_ENTRY_LIMIT_MASK		0x1FFull
#define HFI_LOCA_CFG_PIPE2_CONQ_ENTRY_LIMIT_SMASK		0x1FFull
/*
* Table #6 of fxr_top - LOCA_CFG_PIPE3
* This register enables selected modes and operations within the various 
* Pipeline Blocks. 
*/
#define HFI_LOCA_CFG_PIPE3					(HFI_LOCA_CSRS + 0x000000000010)
#define HFI_LOCA_CFG_PIPE3_RESETCSR				0x00400201000000F1ull
#define HFI_LOCA_CFG_PIPE3_CLKS_AFTER_WRT_THRESH_SHIFT		44
#define HFI_LOCA_CFG_PIPE3_CLKS_AFTER_WRT_THRESH_MASK		0xFFFFFull
#define HFI_LOCA_CFG_PIPE3_CLKS_AFTER_WRT_THRESH_SMASK		0xFFFFF00000000000ull
#define HFI_LOCA_CFG_PIPE3_WRITE_NO_READ_THRESH_SHIFT		35
#define HFI_LOCA_CFG_PIPE3_WRITE_NO_READ_THRESH_MASK		0x1FFull
#define HFI_LOCA_CFG_PIPE3_WRITE_NO_READ_THRESH_SMASK		0xFF800000000ull
#define HFI_LOCA_CFG_PIPE3_RESERVED_34_SHIFT			34
#define HFI_LOCA_CFG_PIPE3_RESERVED_34_MASK			0x1ull
#define HFI_LOCA_CFG_PIPE3_RESERVED_34_SMASK			0x400000000ull
#define HFI_LOCA_CFG_PIPE3_GO_WRR_THRESH_SHIFT			28
#define HFI_LOCA_CFG_PIPE3_GO_WRR_THRESH_MASK			0x3Full
#define HFI_LOCA_CFG_PIPE3_GO_WRR_THRESH_SMASK			0x3F0000000ull
#define HFI_LOCA_CFG_PIPE3_RESERVED_27_16_SHIFT			16
#define HFI_LOCA_CFG_PIPE3_RESERVED_27_16_MASK			0xFFFull
#define HFI_LOCA_CFG_PIPE3_RESERVED_27_16_SMASK			0xFFF0000ull
#define HFI_LOCA_CFG_PIPE3_GO_GENERATIONS_SHIFT			4
#define HFI_LOCA_CFG_PIPE3_GO_GENERATIONS_MASK			0xFFFull
#define HFI_LOCA_CFG_PIPE3_GO_GENERATIONS_SMASK			0xFFF0ull
#define HFI_LOCA_CFG_PIPE3_RESERVED_3_1_SHIFT			1
#define HFI_LOCA_CFG_PIPE3_RESERVED_3_1_MASK			0x7ull
#define HFI_LOCA_CFG_PIPE3_RESERVED_3_1_SMASK			0xEull
#define HFI_LOCA_CFG_PIPE3_PCIE_RD_RO_SHIFT			0
#define HFI_LOCA_CFG_PIPE3_PCIE_RD_RO_MASK			0x1ull
#define HFI_LOCA_CFG_PIPE3_PCIE_RD_RO_SMASK			0x1ull
/*
* Table #7 of fxr_top - LOCA_CFG_PIPE4
* This register thresholds for various L1 TID count checks in the EMEC block. 
* 
*/
#define HFI_LOCA_CFG_PIPE4					(HFI_LOCA_CSRS + 0x000000000018)
#define HFI_LOCA_CFG_PIPE4_RESETCSR				0x0000000002030408ull
#define HFI_LOCA_CFG_PIPE4_RESERVED_63_31_SHIFT			31
#define HFI_LOCA_CFG_PIPE4_RESERVED_63_31_MASK			0x1FFFFFFFFull
#define HFI_LOCA_CFG_PIPE4_RESERVED_63_31_SMASK			0xFFFFFFFF80000000ull
#define HFI_LOCA_CFG_PIPE4_XIN5_THRESH_SHIFT			24
#define HFI_LOCA_CFG_PIPE4_XIN5_THRESH_MASK			0x7Full
#define HFI_LOCA_CFG_PIPE4_XIN5_THRESH_SMASK			0x7F000000ull
#define HFI_LOCA_CFG_PIPE4_RESERVED_23_SHIFT			23
#define HFI_LOCA_CFG_PIPE4_RESERVED_23_MASK			0x1ull
#define HFI_LOCA_CFG_PIPE4_RESERVED_23_SMASK			0x800000ull
#define HFI_LOCA_CFG_PIPE4_XIN4_THRESH_SHIFT			16
#define HFI_LOCA_CFG_PIPE4_XIN4_THRESH_MASK			0x7Full
#define HFI_LOCA_CFG_PIPE4_XIN4_THRESH_SMASK			0x7F0000ull
#define HFI_LOCA_CFG_PIPE4_RESERVED_15_SHIFT			15
#define HFI_LOCA_CFG_PIPE4_RESERVED_15_MASK			0x1ull
#define HFI_LOCA_CFG_PIPE4_RESERVED_15_SMASK			0x8000ull
#define HFI_LOCA_CFG_PIPE4_XIN3_THRESH_SHIFT			8
#define HFI_LOCA_CFG_PIPE4_XIN3_THRESH_MASK			0x7Full
#define HFI_LOCA_CFG_PIPE4_XIN3_THRESH_SMASK			0x7F00ull
#define HFI_LOCA_CFG_PIPE4_RESERVED_7_SHIFT			7
#define HFI_LOCA_CFG_PIPE4_RESERVED_7_MASK			0x1ull
#define HFI_LOCA_CFG_PIPE4_RESERVED_7_SMASK			0x80ull
#define HFI_LOCA_CFG_PIPE4_XIN2_THRESH_SHIFT			0
#define HFI_LOCA_CFG_PIPE4_XIN2_THRESH_MASK			0x7Full
#define HFI_LOCA_CFG_PIPE4_XIN2_THRESH_SMASK			0x7Full
/*
* Table #8 of fxr_top - LOCA_CFG_PARB
* This register enables selected modes and operations within the PARB 
* Block.
*/
#define HFI_LOCA_CFG_PARB					(HFI_LOCA_CSRS + 0x000000000020)
#define HFI_LOCA_CFG_PARB_RESETCSR				0x000005DC2D23160Full
#define HFI_LOCA_CFG_PARB_WAKE_HOLD_PERIOD_SHIFT		32
#define HFI_LOCA_CFG_PARB_WAKE_HOLD_PERIOD_MASK			0xFFFFFFFFull
#define HFI_LOCA_CFG_PARB_WAKE_HOLD_PERIOD_SMASK		0xFFFFFFFF00000000ull
#define HFI_LOCA_CFG_PARB_TRRP_REQ_TO_THRESH_SHIFT		24
#define HFI_LOCA_CFG_PARB_TRRP_REQ_TO_THRESH_MASK		0xFFull
#define HFI_LOCA_CFG_PARB_TRRP_REQ_TO_THRESH_SMASK		0xFF000000ull
#define HFI_LOCA_CFG_PARB_CONQ_REQ_TO_THRESH_SHIFT		16
#define HFI_LOCA_CFG_PARB_CONQ_REQ_TO_THRESH_MASK		0xFFull
#define HFI_LOCA_CFG_PARB_CONQ_REQ_TO_THRESH_SMASK		0xFF0000ull
#define HFI_LOCA_CFG_PARB_EMEC_REQ_TO_THRESH_SHIFT		8
#define HFI_LOCA_CFG_PARB_EMEC_REQ_TO_THRESH_MASK		0xFFull
#define HFI_LOCA_CFG_PARB_EMEC_REQ_TO_THRESH_SMASK		0xFF00ull
#define HFI_LOCA_CFG_PARB_PMI_REQ_TO_THRESH_SHIFT		0
#define HFI_LOCA_CFG_PARB_PMI_REQ_TO_THRESH_MASK		0xFFull
#define HFI_LOCA_CFG_PARB_PMI_REQ_TO_THRESH_SMASK		0xFFull
/*
* Table #9 of fxr_top - LOCA_CFG_DALU
* This register defines Flags, Masks, and Control modes for the 
* DALU.
*/
#define HFI_LOCA_CFG_DALU					(HFI_LOCA_CSRS + 0x000000000028)
#define HFI_LOCA_CFG_DALU_RESETCSR				0x0000000000001F80ull
#define HFI_LOCA_CFG_DALU_RESERVED_63_16_SHIFT			16
#define HFI_LOCA_CFG_DALU_RESERVED_63_16_MASK			0xFFFFFFFFFFFFull
#define HFI_LOCA_CFG_DALU_RESERVED_63_16_SMASK			0xFFFFFFFFFFFF0000ull
#define HFI_LOCA_CFG_DALU_FZ_SHIFT				15
#define HFI_LOCA_CFG_DALU_FZ_MASK				0x1ull
#define HFI_LOCA_CFG_DALU_FZ_SMASK				0x8000ull
#define HFI_LOCA_CFG_DALU_RC_SHIFT				13
#define HFI_LOCA_CFG_DALU_RC_MASK				0x3ull
#define HFI_LOCA_CFG_DALU_RC_SMASK				0x6000ull
#define HFI_LOCA_CFG_DALU_PM_SHIFT				12
#define HFI_LOCA_CFG_DALU_PM_MASK				0x1ull
#define HFI_LOCA_CFG_DALU_PM_SMASK				0x1000ull
#define HFI_LOCA_CFG_DALU_UM_SHIFT				11
#define HFI_LOCA_CFG_DALU_UM_MASK				0x1ull
#define HFI_LOCA_CFG_DALU_UM_SMASK				0x800ull
#define HFI_LOCA_CFG_DALU_OM_SHIFT				10
#define HFI_LOCA_CFG_DALU_OM_MASK				0x1ull
#define HFI_LOCA_CFG_DALU_OM_SMASK				0x400ull
#define HFI_LOCA_CFG_DALU_ZM_SHIFT				9
#define HFI_LOCA_CFG_DALU_ZM_MASK				0x1ull
#define HFI_LOCA_CFG_DALU_ZM_SMASK				0x200ull
#define HFI_LOCA_CFG_DALU_DM_SHIFT				8
#define HFI_LOCA_CFG_DALU_DM_MASK				0x1ull
#define HFI_LOCA_CFG_DALU_DM_SMASK				0x100ull
#define HFI_LOCA_CFG_DALU_IM_SHIFT				7
#define HFI_LOCA_CFG_DALU_IM_MASK				0x1ull
#define HFI_LOCA_CFG_DALU_IM_SMASK				0x80ull
#define HFI_LOCA_CFG_DALU_DAZ_SHIFT				6
#define HFI_LOCA_CFG_DALU_DAZ_MASK				0x1ull
#define HFI_LOCA_CFG_DALU_DAZ_SMASK				0x40ull
#define HFI_LOCA_CFG_DALU_PE_SHIFT				5
#define HFI_LOCA_CFG_DALU_PE_MASK				0x1ull
#define HFI_LOCA_CFG_DALU_PE_SMASK				0x20ull
#define HFI_LOCA_CFG_DALU_UE_SHIFT				4
#define HFI_LOCA_CFG_DALU_UE_MASK				0x1ull
#define HFI_LOCA_CFG_DALU_UE_SMASK				0x10ull
#define HFI_LOCA_CFG_DALU_OE_SHIFT				3
#define HFI_LOCA_CFG_DALU_OE_MASK				0x1ull
#define HFI_LOCA_CFG_DALU_OE_SMASK				0x8ull
#define HFI_LOCA_CFG_DALU_ZE_SHIFT				2
#define HFI_LOCA_CFG_DALU_ZE_MASK				0x1ull
#define HFI_LOCA_CFG_DALU_ZE_SMASK				0x4ull
#define HFI_LOCA_CFG_DALU_DE_SHIFT				1
#define HFI_LOCA_CFG_DALU_DE_MASK				0x1ull
#define HFI_LOCA_CFG_DALU_DE_SMASK				0x2ull
#define HFI_LOCA_CFG_DALU_IE_SHIFT				0
#define HFI_LOCA_CFG_DALU_IE_MASK				0x1ull
#define HFI_LOCA_CFG_DALU_IE_SMASK				0x1ull
/*
* Table #10 of fxr_top - LOCA_CFG_ZBR
* This register defines the address used with ZBR requests sourced by 
* LOCA.
*/
#define HFI_LOCA_CFG_ZBR					(HFI_LOCA_CSRS + 0x000000000030)
#define HFI_LOCA_CFG_ZBR_RESETCSR				0x00000000FEE80000ull
#define HFI_LOCA_CFG_ZBR_RESERVED_63_57_SHIFT			57
#define HFI_LOCA_CFG_ZBR_RESERVED_63_57_MASK			0x7Full
#define HFI_LOCA_CFG_ZBR_RESERVED_63_57_SMASK			0xFE00000000000000ull
#define HFI_LOCA_CFG_ZBR_ADDR_SHIFT				0
#define HFI_LOCA_CFG_ZBR_ADDR_MASK				0x1FFFFFFFFFFFFFFull
#define HFI_LOCA_CFG_ZBR_ADDR_SMASK				0x1FFFFFFFFFFFFFFull
/*
* Table #11 of fxr_top - LOCA_CFG_TPH
* This register set defines the various TPH settings for PCIe requests issued by 
* the HI. The cache hint bits {3,2,0}in the HIFIS request are used to select one 
* of the eight #%%#LOCA_CFG_TPH#%%# CSRs to use for setting the associated 
* fields in the PCIe request.
*/
#define HFI_LOCA_CFG_TPH					(HFI_LOCA_CSRS + 0x000000000038)
#define HFI_LOCA_CFG_TPH_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_CFG_TPH_RESERVED_63_12_SHIFT			12
#define HFI_LOCA_CFG_TPH_RESERVED_63_12_MASK			0xFFFFFFFFFFFFFull
#define HFI_LOCA_CFG_TPH_RESERVED_63_12_SMASK			0xFFFFFFFFFFFFF000ull
#define HFI_LOCA_CFG_TPH_TH_SHIFT				11
#define HFI_LOCA_CFG_TPH_TH_MASK				0x1ull
#define HFI_LOCA_CFG_TPH_TH_SMASK				0x800ull
#define HFI_LOCA_CFG_TPH_PH_SHIFT				9
#define HFI_LOCA_CFG_TPH_PH_MASK				0x3ull
#define HFI_LOCA_CFG_TPH_PH_SMASK				0x600ull
#define HFI_LOCA_CFG_TPH_NS_SHIFT				8
#define HFI_LOCA_CFG_TPH_NS_MASK				0x1ull
#define HFI_LOCA_CFG_TPH_NS_SMASK				0x100ull
#define HFI_LOCA_CFG_TPH_ST_SHIFT				0
#define HFI_LOCA_CFG_TPH_ST_MASK				0xFFull
#define HFI_LOCA_CFG_TPH_ST_SMASK				0xFFull
/*
* Table #12 of fxr_top - LOCA0_ERR_STS
* This is the Error Status CSR. Bits are set by hardware or by writing to the 
* LOCA_ERR_FRC CSR. Bits are cleared by writing to the LOCA_ERR_CLR 
* CSR.
*/
#define HFI_LOCA0_ERR_STS					(HFI_LOCA_CSRS + 0x000000000200)
#define HFI_LOCA0_ERR_STS_RESETCSR				0x0000000000000000ull
#define HFI_LOCA0_ERR_STS_RESERVED_63_53_SHIFT			53
#define HFI_LOCA0_ERR_STS_RESERVED_63_53_MASK			0x7FFull
#define HFI_LOCA0_ERR_STS_RESERVED_63_53_SMASK			0xFFE0000000000000ull
#define HFI_LOCA0_ERR_STS_DSTORE_MBE_SHIFT			52
#define HFI_LOCA0_ERR_STS_DSTORE_MBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_DSTORE_MBE_SMASK			0x10000000000000ull
#define HFI_LOCA0_ERR_STS_DSTORE_SBE_SHIFT			51
#define HFI_LOCA0_ERR_STS_DSTORE_SBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_DSTORE_SBE_SMASK			0x8000000000000ull
#define HFI_LOCA0_ERR_STS_WRR_MBE_SHIFT				50
#define HFI_LOCA0_ERR_STS_WRR_MBE_MASK				0x1ull
#define HFI_LOCA0_ERR_STS_WRR_MBE_SMASK				0x4000000000000ull
#define HFI_LOCA0_ERR_STS_WRR_SBE_SHIFT				49
#define HFI_LOCA0_ERR_STS_WRR_SBE_MASK				0x1ull
#define HFI_LOCA0_ERR_STS_WRR_SBE_SMASK				0x2000000000000ull
#define HFI_LOCA0_ERR_STS_CPORB_MBE_SHIFT			48
#define HFI_LOCA0_ERR_STS_CPORB_MBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_CPORB_MBE_SMASK			0x1000000000000ull
#define HFI_LOCA0_ERR_STS_CPORB_SBE_SHIFT			47
#define HFI_LOCA0_ERR_STS_CPORB_SBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_CPORB_SBE_SMASK			0x800000000000ull
#define HFI_LOCA0_ERR_STS_WRIFILL_SBE_SHIFT			46
#define HFI_LOCA0_ERR_STS_WRIFILL_SBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_WRIFILL_SBE_SMASK			0x400000000000ull
#define HFI_LOCA0_ERR_STS_DCACHE_SBE_SHIFT			45
#define HFI_LOCA0_ERR_STS_DCACHE_SBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_DCACHE_SBE_SMASK			0x200000000000ull
#define HFI_LOCA0_ERR_STS_ADM_SL_DB_SBE_SHIFT			44
#define HFI_LOCA0_ERR_STS_ADM_SL_DB_SBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_ADM_SL_DB_SBE_SMASK			0x100000000000ull
#define HFI_LOCA0_ERR_STS_ADM_RE_DB_SBE_SHIFT			43
#define HFI_LOCA0_ERR_STS_ADM_RE_DB_SBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_ADM_RE_DB_SBE_SMASK			0x80000000000ull
#define HFI_LOCA0_ERR_STS_ADM_PAF_DB_SBE_SHIFT			42
#define HFI_LOCA0_ERR_STS_ADM_PAF_DB_SBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_ADM_PAF_DB_SBE_SMASK			0x40000000000ull
#define HFI_LOCA0_ERR_STS_ADM_HDR_DB_SBE_SHIFT			41
#define HFI_LOCA0_ERR_STS_ADM_HDR_DB_SBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_ADM_HDR_DB_SBE_SMASK			0x20000000000ull
#define HFI_LOCA0_ERR_STS_ADM_CAS_DB_SBE_SHIFT			40
#define HFI_LOCA0_ERR_STS_ADM_CAS_DB_SBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_ADM_CAS_DB_SBE_SMASK			0x10000000000ull
#define HFI_LOCA0_ERR_STS_HCC_REPLAY_ERR_SHIFT			39
#define HFI_LOCA0_ERR_STS_HCC_REPLAY_ERR_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_HCC_REPLAY_ERR_SMASK			0x8000000000ull
#define HFI_LOCA0_ERR_STS_PCAM_SBE_SHIFT			38
#define HFI_LOCA0_ERR_STS_PCAM_SBE_MASK				0x1ull
#define HFI_LOCA0_ERR_STS_PCAM_SBE_SMASK			0x4000000000ull
#define HFI_LOCA0_ERR_STS_MRU_TABLE_SBE_SHIFT			37
#define HFI_LOCA0_ERR_STS_MRU_TABLE_SBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_MRU_TABLE_SBE_SMASK			0x2000000000ull
#define HFI_LOCA0_ERR_STS_PMI_ORB_SCH_SBE_SHIFT			36
#define HFI_LOCA0_ERR_STS_PMI_ORB_SCH_SBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_PMI_ORB_SCH_SBE_SMASK			0x1000000000ull
#define HFI_LOCA0_ERR_STS_PMI_ORB_RSP_SBE_SHIFT			35
#define HFI_LOCA0_ERR_STS_PMI_ORB_RSP_SBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_PMI_ORB_RSP_SBE_SMASK			0x800000000ull
#define HFI_LOCA0_ERR_STS_PMI_MRB_SBE_SHIFT			34
#define HFI_LOCA0_ERR_STS_PMI_MRB_SBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_PMI_MRB_SBE_SMASK			0x400000000ull
#define HFI_LOCA0_ERR_STS_PMI_XALI_DATA_SBE_SHIFT		33
#define HFI_LOCA0_ERR_STS_PMI_XALI_DATA_SBE_MASK		0x1ull
#define HFI_LOCA0_ERR_STS_PMI_XALI_DATA_SBE_SMASK		0x200000000ull
#define HFI_LOCA0_ERR_STS_PMI_XALI_HDR_SBE_SHIFT		32
#define HFI_LOCA0_ERR_STS_PMI_XALI_HDR_SBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_PMI_XALI_HDR_SBE_SMASK		0x100000000ull
#define HFI_LOCA0_ERR_STS_U2C_DIR_SBE_SHIFT			31
#define HFI_LOCA0_ERR_STS_U2C_DIR_SBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_U2C_DIR_SBE_SMASK			0x80000000ull
#define HFI_LOCA0_ERR_STS_PMI_CPL_Q_HDR_SBE_SHIFT		30
#define HFI_LOCA0_ERR_STS_PMI_CPL_Q_HDR_SBE_MASK		0x1ull
#define HFI_LOCA0_ERR_STS_PMI_CPL_Q_HDR_SBE_SMASK		0x40000000ull
#define HFI_LOCA0_ERR_STS_PMI_CPL_DATA_SBE_SHIFT		29
#define HFI_LOCA0_ERR_STS_PMI_CPL_DATA_SBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_PMI_CPL_DATA_SBE_SMASK		0x20000000ull
#define HFI_LOCA0_ERR_STS_CONQ_HDR_SBE_SHIFT			28
#define HFI_LOCA0_ERR_STS_CONQ_HDR_SBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_CONQ_HDR_SBE_SMASK			0x10000000ull
#define HFI_LOCA0_ERR_STS_PROQ_HL_SBE_SHIFT			27
#define HFI_LOCA0_ERR_STS_PROQ_HL_SBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_PROQ_HL_SBE_SMASK			0x8000000ull
#define HFI_LOCA0_ERR_STS_PROQ_F_SBE_SHIFT			26
#define HFI_LOCA0_ERR_STS_PROQ_F_SBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_PROQ_F_SBE_SMASK			0x4000000ull
#define HFI_LOCA0_ERR_STS_PROQ_G_SBE_SHIFT			25
#define HFI_LOCA0_ERR_STS_PROQ_G_SBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_PROQ_G_SBE_SMASK			0x2000000ull
#define HFI_LOCA0_ERR_STS_HCC_RPL_DELAY_PERR_SHIFT		24
#define HFI_LOCA0_ERR_STS_HCC_RPL_DELAY_PERR_MASK		0x1ull
#define HFI_LOCA0_ERR_STS_HCC_RPL_DELAY_PERR_SMASK		0x1000000ull
#define HFI_LOCA0_ERR_STS_WRIFILL_MBE_SHIFT			23
#define HFI_LOCA0_ERR_STS_WRIFILL_MBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_WRIFILL_MBE_SMASK			0x800000ull
#define HFI_LOCA0_ERR_STS_DCACHE_MBE_SHIFT			22
#define HFI_LOCA0_ERR_STS_DCACHE_MBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_DCACHE_MBE_SMASK			0x400000ull
#define HFI_LOCA0_ERR_STS_ADM_SL_DB_MBE_SHIFT			21
#define HFI_LOCA0_ERR_STS_ADM_SL_DB_MBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_ADM_SL_DB_MBE_SMASK			0x200000ull
#define HFI_LOCA0_ERR_STS_ADM_RE_DB_MBE_SHIFT			20
#define HFI_LOCA0_ERR_STS_ADM_RE_DB_MBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_ADM_RE_DB_MBE_SMASK			0x100000ull
#define HFI_LOCA0_ERR_STS_ADM_PAF_DB_MBE_SHIFT			19
#define HFI_LOCA0_ERR_STS_ADM_PAF_DB_MBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_ADM_PAF_DB_MBE_SMASK			0x80000ull
#define HFI_LOCA0_ERR_STS_ADM_HDR_DB_MBE_SHIFT			18
#define HFI_LOCA0_ERR_STS_ADM_HDR_DB_MBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_ADM_HDR_DB_MBE_SMASK			0x40000ull
#define HFI_LOCA0_ERR_STS_ADM_CAS_DB_MBE_SHIFT			17
#define HFI_LOCA0_ERR_STS_ADM_CAS_DB_MBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_ADM_CAS_DB_MBE_SMASK			0x20000ull
#define HFI_LOCA0_ERR_STS_HCC_DCD_TAG_MBE_SHIFT			16
#define HFI_LOCA0_ERR_STS_HCC_DCD_TAG_MBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_HCC_DCD_TAG_MBE_SMASK			0x10000ull
#define HFI_LOCA0_ERR_STS_PCAM_MBE_SHIFT			15
#define HFI_LOCA0_ERR_STS_PCAM_MBE_MASK				0x1ull
#define HFI_LOCA0_ERR_STS_PCAM_MBE_SMASK			0x8000ull
#define HFI_LOCA0_ERR_STS_MRU_TABLE_MBE_SHIFT			14
#define HFI_LOCA0_ERR_STS_MRU_TABLE_MBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_MRU_TABLE_MBE_SMASK			0x4000ull
#define HFI_LOCA0_ERR_STS_PMI_ORB_SCH_MBE_SHIFT			13
#define HFI_LOCA0_ERR_STS_PMI_ORB_SCH_MBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_PMI_ORB_SCH_MBE_SMASK			0x2000ull
#define HFI_LOCA0_ERR_STS_PMI_ORB_RSP_MBE_SHIFT			12
#define HFI_LOCA0_ERR_STS_PMI_ORB_RSP_MBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_PMI_ORB_RSP_MBE_SMASK			0x1000ull
#define HFI_LOCA0_ERR_STS_PMI_MRB_MBE_SHIFT			11
#define HFI_LOCA0_ERR_STS_PMI_MRB_MBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_PMI_MRB_MBE_SMASK			0x800ull
#define HFI_LOCA0_ERR_STS_PMI_XALI_DATA_MBE_SHIFT		10
#define HFI_LOCA0_ERR_STS_PMI_XALI_DATA_MBE_MASK		0x1ull
#define HFI_LOCA0_ERR_STS_PMI_XALI_DATA_MBE_SMASK		0x400ull
#define HFI_LOCA0_ERR_STS_PMI_XALI_HDR_MBE_SHIFT		9
#define HFI_LOCA0_ERR_STS_PMI_XALI_HDR_MBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_PMI_XALI_HDR_MBE_SMASK		0x200ull
#define HFI_LOCA0_ERR_STS_U2C_DIR_MBE_SHIFT			8
#define HFI_LOCA0_ERR_STS_U2C_DIR_MBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_U2C_DIR_MBE_SMASK			0x100ull
#define HFI_LOCA0_ERR_STS_PMI_CPL_Q_HDR_MBE_SHIFT		7
#define HFI_LOCA0_ERR_STS_PMI_CPL_Q_HDR_MBE_MASK		0x1ull
#define HFI_LOCA0_ERR_STS_PMI_CPL_Q_HDR_MBE_SMASK		0x80ull
#define HFI_LOCA0_ERR_STS_PMI_CPL_DATA_MBE_SHIFT		6
#define HFI_LOCA0_ERR_STS_PMI_CPL_DATA_MBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_PMI_CPL_DATA_MBE_SMASK		0x40ull
#define HFI_LOCA0_ERR_STS_CONQ_HDR_MBE_SHIFT			5
#define HFI_LOCA0_ERR_STS_CONQ_HDR_MBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_CONQ_HDR_MBE_SMASK			0x20ull
#define HFI_LOCA0_ERR_STS_PROQ_HL_MBE_SHIFT			4
#define HFI_LOCA0_ERR_STS_PROQ_HL_MBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_PROQ_HL_MBE_SMASK			0x10ull
#define HFI_LOCA0_ERR_STS_PROQ_F_MBE_SHIFT			3
#define HFI_LOCA0_ERR_STS_PROQ_F_MBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_PROQ_F_MBE_SMASK			0x8ull
#define HFI_LOCA0_ERR_STS_PROQ_G_MBE_SHIFT			2
#define HFI_LOCA0_ERR_STS_PROQ_G_MBE_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_PROQ_G_MBE_SMASK			0x4ull
#define HFI_LOCA0_ERR_STS_PMI_XALI_Q_ERR_SHIFT			1
#define HFI_LOCA0_ERR_STS_PMI_XALI_Q_ERR_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_PMI_XALI_Q_ERR_SMASK			0x2ull
#define HFI_LOCA0_ERR_STS_HCC_PMI_RSP_ERR_SHIFT			0
#define HFI_LOCA0_ERR_STS_HCC_PMI_RSP_ERR_MASK			0x1ull
#define HFI_LOCA0_ERR_STS_HCC_PMI_RSP_ERR_SMASK			0x1ull
/*
* Table #13 of fxr_top - LOCA0_ERR_CLR
* This is the Error Clear CSR. Writing a 1 to a valid bit will clear the 
* corresponding bit in the LOCA_ERR_STS CSR.
*/
#define HFI_LOCA0_ERR_CLR					(HFI_LOCA_CSRS + 0x000000000208)
#define HFI_LOCA0_ERR_CLR_RESETCSR				0x0000000000000000ull
#define HFI_LOCA0_ERR_CLR_RESERVED_63_53_SHIFT			53
#define HFI_LOCA0_ERR_CLR_RESERVED_63_53_MASK			0x7FFull
#define HFI_LOCA0_ERR_CLR_RESERVED_63_53_SMASK			0xFFE0000000000000ull
#define HFI_LOCA0_ERR_CLR_EVENTS_SHIFT				0
#define HFI_LOCA0_ERR_CLR_EVENTS_MASK				0x1FFFFFFFFFFFFFull
#define HFI_LOCA0_ERR_CLR_EVENTS_SMASK				0x1FFFFFFFFFFFFFull
/*
* Table #14 of fxr_top - LOCA0_ERR_FRC
* This is the Error Force CSR. Writing a 1 to a valid bit will set the 
* corresponding bit in the LOCA_ERR_STS CSR.
*/
#define HFI_LOCA0_ERR_FRC					(HFI_LOCA_CSRS + 0x000000000210)
#define HFI_LOCA0_ERR_FRC_RESETCSR				0x0000000000000000ull
#define HFI_LOCA0_ERR_FRC_RESERVED_63_53_SHIFT			53
#define HFI_LOCA0_ERR_FRC_RESERVED_63_53_MASK			0x7FFull
#define HFI_LOCA0_ERR_FRC_RESERVED_63_53_SMASK			0xFFE0000000000000ull
#define HFI_LOCA0_ERR_FRC_EVENTS_SHIFT				0
#define HFI_LOCA0_ERR_FRC_EVENTS_MASK				0x1FFFFFFFFFFFFFull
#define HFI_LOCA0_ERR_FRC_EVENTS_SMASK				0x1FFFFFFFFFFFFFull
/*
* Table #15 of fxr_top - LOCA0_ERR_EN_HOST
* This is the Error Enable for the Host Interrupt. If a bit is set, the 
* corresponding error bit in LOCA_ERR_STS will cause an interrupt on the HOST 
* interrupt signal.
*/
#define HFI_LOCA0_ERR_EN_HOST					(HFI_LOCA_CSRS + 0x000000000218)
#define HFI_LOCA0_ERR_EN_HOST_RESETCSR				0x0000000000000000ull
#define HFI_LOCA0_ERR_EN_HOST_RESERVED_63_53_SHIFT		53
#define HFI_LOCA0_ERR_EN_HOST_RESERVED_63_53_MASK		0x7FFull
#define HFI_LOCA0_ERR_EN_HOST_RESERVED_63_53_SMASK		0xFFE0000000000000ull
#define HFI_LOCA0_ERR_EN_HOST_EVENTS_SHIFT			0
#define HFI_LOCA0_ERR_EN_HOST_EVENTS_MASK			0x1FFFFFFFFFFFFFull
#define HFI_LOCA0_ERR_EN_HOST_EVENTS_SMASK			0x1FFFFFFFFFFFFFull
/*
* Table #16 of fxr_top - LOCA0_ERR_FIRST_HOST
* This is the First Error CSR for the Host Interrupt. When this CSR is clear, it 
* will capture the next LOCA_ERR_STS value when a new HOST Interrupt 
* occurs.
*/
#define HFI_LOCA0_ERR_FIRST_HOST				(HFI_LOCA_CSRS + 0x000000000220)
#define HFI_LOCA0_ERR_FIRST_HOST_RESETCSR			0x0000000000000000ull
#define HFI_LOCA0_ERR_FIRST_HOST_RESERVED_63_53_SHIFT		53
#define HFI_LOCA0_ERR_FIRST_HOST_RESERVED_63_53_MASK		0x7FFull
#define HFI_LOCA0_ERR_FIRST_HOST_RESERVED_63_53_SMASK		0xFFE0000000000000ull
#define HFI_LOCA0_ERR_FIRST_HOST_EVENTS_SHIFT			0
#define HFI_LOCA0_ERR_FIRST_HOST_EVENTS_MASK			0x1FFFFFFFFFFFFFull
#define HFI_LOCA0_ERR_FIRST_HOST_EVENTS_SMASK			0x1FFFFFFFFFFFFFull
/*
* Table #17 of fxr_top - LOCA0_ERR_EN_BMC
* This is the Error Enable for the BMC Interrupt. If a bit is set, the 
* corresponding error bit in LOCA_ERR_STS will cause an interrupt on the BMC 
* interrupt signal.
*/
#define HFI_LOCA0_ERR_EN_BMC					(HFI_LOCA_CSRS + 0x000000000228)
#define HFI_LOCA0_ERR_EN_BMC_RESETCSR				0x0000000000000000ull
#define HFI_LOCA0_ERR_EN_BMC_RESERVED_63_53_SHIFT		53
#define HFI_LOCA0_ERR_EN_BMC_RESERVED_63_53_MASK		0x7FFull
#define HFI_LOCA0_ERR_EN_BMC_RESERVED_63_53_SMASK		0xFFE0000000000000ull
#define HFI_LOCA0_ERR_EN_BMC_EVENTS_SHIFT			0
#define HFI_LOCA0_ERR_EN_BMC_EVENTS_MASK			0x1FFFFFFFFFFFFFull
#define HFI_LOCA0_ERR_EN_BMC_EVENTS_SMASK			0x1FFFFFFFFFFFFFull
/*
* Table #18 of fxr_top - LOCA0_ERR_FIRST_BMC
* This is the First Error CSR for the BMC Interrupt. When this CSR is clear, it 
* will capture the next LOCA_ERR_STS value when a new BMC Interrupt 
* occurs.
*/
#define HFI_LOCA0_ERR_FIRST_BMC					(HFI_LOCA_CSRS + 0x000000000230)
#define HFI_LOCA0_ERR_FIRST_BMC_RESETCSR			0x0000000000000000ull
#define HFI_LOCA0_ERR_FIRST_BMC_RESERVED_63_53_SHIFT		53
#define HFI_LOCA0_ERR_FIRST_BMC_RESERVED_63_53_MASK		0x7FFull
#define HFI_LOCA0_ERR_FIRST_BMC_RESERVED_63_53_SMASK		0xFFE0000000000000ull
#define HFI_LOCA0_ERR_FIRST_BMC_EVENTS_SHIFT			0
#define HFI_LOCA0_ERR_FIRST_BMC_EVENTS_MASK			0x1FFFFFFFFFFFFFull
#define HFI_LOCA0_ERR_FIRST_BMC_EVENTS_SMASK			0x1FFFFFFFFFFFFFull
/*
* Table #19 of fxr_top - LOCA0_ERR_EN_QUAR
* This is the Error Enable for the Quarantine Interrupt. If a bit is set, the 
* corresponding error bit in LOCA_ERR_STS will cause an interrupt on the QUAR 
* interrupt signal.
*/
#define HFI_LOCA0_ERR_EN_QUAR					(HFI_LOCA_CSRS + 0x000000000238)
#define HFI_LOCA0_ERR_EN_QUAR_RESETCSR				0x0000000000000000ull
#define HFI_LOCA0_ERR_EN_QUAR_RESERVED_63_53_SHIFT		53
#define HFI_LOCA0_ERR_EN_QUAR_RESERVED_63_53_MASK		0x7FFull
#define HFI_LOCA0_ERR_EN_QUAR_RESERVED_63_53_SMASK		0xFFE0000000000000ull
#define HFI_LOCA0_ERR_EN_QUAR_EVENTS_SHIFT			0
#define HFI_LOCA0_ERR_EN_QUAR_EVENTS_MASK			0x1FFFFFFFFFFFFFull
#define HFI_LOCA0_ERR_EN_QUAR_EVENTS_SMASK			0x1FFFFFFFFFFFFFull
/*
* Table #20 of fxr_top - LOCA0_ERR_FIRST_QUAR
* This is the First Error CSR for the Quarantine Interrupt. When this CSR is 
* clear, it will capture the next LOCA_ERR_STS value when a new QUAR Interrupt 
* occurs.
*/
#define HFI_LOCA0_ERR_FIRST_QUAR				(HFI_LOCA_CSRS + 0x000000000240)
#define HFI_LOCA0_ERR_FIRST_QUAR_RESETCSR			0x0000000000000000ull
#define HFI_LOCA0_ERR_FIRST_QUAR_RESERVED_63_53_SHIFT		53
#define HFI_LOCA0_ERR_FIRST_QUAR_RESERVED_63_53_MASK		0x7FFull
#define HFI_LOCA0_ERR_FIRST_QUAR_RESERVED_63_53_SMASK		0xFFE0000000000000ull
#define HFI_LOCA0_ERR_FIRST_QUAR_EVENTS_SHIFT			0
#define HFI_LOCA0_ERR_FIRST_QUAR_EVENTS_MASK			0x1FFFFFFFFFFFFFull
#define HFI_LOCA0_ERR_FIRST_QUAR_EVENTS_SMASK			0x1FFFFFFFFFFFFFull
/*
* Table #21 of fxr_top - LOCA_ERR_INFO
* Misc syndrome bits for associated SBE/SBE events. Syndrome is held until the 
* associated event is cleared in the #%%#LOCA0_ERR_STS#%%# register. 
* 
*/
#define HFI_LOCA_ERR_INFO					(HFI_LOCA_CSRS + 0x000000000250)
#define HFI_LOCA_ERR_INFO_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_ERR_INFO_PROQ_TF_MBE_SHIFT			60
#define HFI_LOCA_ERR_INFO_PROQ_TF_MBE_MASK			0xFull
#define HFI_LOCA_ERR_INFO_PROQ_TF_MBE_SMASK			0xF000000000000000ull
#define HFI_LOCA_ERR_INFO_PROQ_TF_SBE_SHIFT			56
#define HFI_LOCA_ERR_INFO_PROQ_TF_SBE_MASK			0xFull
#define HFI_LOCA_ERR_INFO_PROQ_TF_SBE_SMASK			0xF00000000000000ull
#define HFI_LOCA_ERR_INFO_ADM_HDR_SYND_SHIFT			47
#define HFI_LOCA_ERR_INFO_ADM_HDR_SYND_MASK			0x1FFull
#define HFI_LOCA_ERR_INFO_ADM_HDR_SYND_SMASK			0xFF800000000000ull
#define HFI_LOCA_ERR_INFO_ADM_CAS_SYND_SHIFT			39
#define HFI_LOCA_ERR_INFO_ADM_CAS_SYND_MASK			0xFFull
#define HFI_LOCA_ERR_INFO_ADM_CAS_SYND_SMASK			0x7F8000000000ull
#define HFI_LOCA_ERR_INFO_RESERVED_38_30_SHIFT			30
#define HFI_LOCA_ERR_INFO_RESERVED_38_30_MASK			0x1FFull
#define HFI_LOCA_ERR_INFO_RESERVED_38_30_SMASK			0x7FC0000000ull
#define HFI_LOCA_ERR_INFO_PROQ_TG_SYND_SHIFT			25
#define HFI_LOCA_ERR_INFO_PROQ_TG_SYND_MASK			0x1Full
#define HFI_LOCA_ERR_INFO_PROQ_TG_SYND_SMASK			0x3E000000ull
#define HFI_LOCA_ERR_INFO_PROQ_TF0_SYND_SHIFT			20
#define HFI_LOCA_ERR_INFO_PROQ_TF0_SYND_MASK			0x1Full
#define HFI_LOCA_ERR_INFO_PROQ_TF0_SYND_SMASK			0x1F00000ull
#define HFI_LOCA_ERR_INFO_PROQ_TF1_SYND_SHIFT			15
#define HFI_LOCA_ERR_INFO_PROQ_TF1_SYND_MASK			0x1Full
#define HFI_LOCA_ERR_INFO_PROQ_TF1_SYND_SMASK			0xF8000ull
#define HFI_LOCA_ERR_INFO_PROQ_TF2_SYND_SHIFT			10
#define HFI_LOCA_ERR_INFO_PROQ_TF2_SYND_MASK			0x1Full
#define HFI_LOCA_ERR_INFO_PROQ_TF2_SYND_SMASK			0x7C00ull
#define HFI_LOCA_ERR_INFO_PROQ_TF3_SYND_SHIFT			5
#define HFI_LOCA_ERR_INFO_PROQ_TF3_SYND_MASK			0x1Full
#define HFI_LOCA_ERR_INFO_PROQ_TF3_SYND_SMASK			0x3E0ull
#define HFI_LOCA_ERR_INFO_PROQ_HL_SYND_SHIFT			0
#define HFI_LOCA_ERR_INFO_PROQ_HL_SYND_MASK			0x1Full
#define HFI_LOCA_ERR_INFO_PROQ_HL_SYND_SMASK			0x1Full
/*
* Table #22 of fxr_top - LOCA_ERR_INFO1
* Syndrome bits for associated SBE/SBE events. Syndrome is held until the 
* associated event is cleared in the #%%#LOCA0_ERR_STS#%%# register. 
* 
*/
#define HFI_LOCA_ERR_INFO1					(HFI_LOCA_CSRS + 0x000000000258)
#define HFI_LOCA_ERR_INFO1_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_ERR_INFO1_RESERVED_63_34_SHIFT			34
#define HFI_LOCA_ERR_INFO1_RESERVED_63_34_MASK			0x3FFFFFFFull
#define HFI_LOCA_ERR_INFO1_RESERVED_63_34_SMASK			0xFFFFFFFC00000000ull
#define HFI_LOCA_ERR_INFO1_CONQ_HDR_SYND_SHIFT			24
#define HFI_LOCA_ERR_INFO1_CONQ_HDR_SYND_MASK			0x3FFull
#define HFI_LOCA_ERR_INFO1_CONQ_HDR_SYND_SMASK			0x3FF000000ull
#define HFI_LOCA_ERR_INFO1_WRR_SYND_SHIFT			16
#define HFI_LOCA_ERR_INFO1_WRR_SYND_MASK			0xFFull
#define HFI_LOCA_ERR_INFO1_WRR_SYND_SMASK			0xFF0000ull
#define HFI_LOCA_ERR_INFO1_CPORB_SYND_SHIFT			8
#define HFI_LOCA_ERR_INFO1_CPORB_SYND_MASK			0xFFull
#define HFI_LOCA_ERR_INFO1_CPORB_SYND_SMASK			0xFF00ull
#define HFI_LOCA_ERR_INFO1_PMI_MRB_SYND_SHIFT			0
#define HFI_LOCA_ERR_INFO1_PMI_MRB_SYND_MASK			0xFFull
#define HFI_LOCA_ERR_INFO1_PMI_MRB_SYND_SMASK			0xFFull
/*
* Table #23 of fxr_top - LOCA_ERR_INFO2
* Misc syndrome bits for associated SBE/SBE events. Syndrome is held until the 
* associated event is cleared in the #%%#LOCA0_ERR_STS#%%# register. 
* 
*/
#define HFI_LOCA_ERR_INFO2					(HFI_LOCA_CSRS + 0x000000000260)
#define HFI_LOCA_ERR_INFO2_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_ERR_INFO2_RESERVED_63_56_SHIFT			56
#define HFI_LOCA_ERR_INFO2_RESERVED_63_56_MASK			0xFFull
#define HFI_LOCA_ERR_INFO2_RESERVED_63_56_SMASK			0xFF00000000000000ull
#define HFI_LOCA_ERR_INFO2_ORB_CNF_SYND_SHIFT			48
#define HFI_LOCA_ERR_INFO2_ORB_CNF_SYND_MASK			0xFFull
#define HFI_LOCA_ERR_INFO2_ORB_CNF_SYND_SMASK			0xFF000000000000ull
#define HFI_LOCA_ERR_INFO2_ORB_RSP_SYND_SHIFT			40
#define HFI_LOCA_ERR_INFO2_ORB_RSP_SYND_MASK			0xFFull
#define HFI_LOCA_ERR_INFO2_ORB_RSP_SYND_SMASK			0xFF0000000000ull
#define HFI_LOCA_ERR_INFO2_ORB_SCH_SYND_SHIFT			32
#define HFI_LOCA_ERR_INFO2_ORB_SCH_SYND_MASK			0xFFull
#define HFI_LOCA_ERR_INFO2_ORB_SCH_SYND_SMASK			0xFF00000000ull
#define HFI_LOCA_ERR_INFO2_RESERVED_31_30_SHIFT			30
#define HFI_LOCA_ERR_INFO2_RESERVED_31_30_MASK			0x3ull
#define HFI_LOCA_ERR_INFO2_RESERVED_31_30_SMASK			0xC0000000ull
#define HFI_LOCA_ERR_INFO2_RESERVED_29_24_SHIFT			24
#define HFI_LOCA_ERR_INFO2_RESERVED_29_24_MASK			0x3Full
#define HFI_LOCA_ERR_INFO2_RESERVED_29_24_SMASK			0x3F000000ull
#define HFI_LOCA_ERR_INFO2_RESERVED_23_22_SHIFT			22
#define HFI_LOCA_ERR_INFO2_RESERVED_23_22_MASK			0x3ull
#define HFI_LOCA_ERR_INFO2_RESERVED_23_22_SMASK			0xC00000ull
#define HFI_LOCA_ERR_INFO2_RESERVED_21_16_SHIFT			16
#define HFI_LOCA_ERR_INFO2_RESERVED_21_16_MASK			0x3Full
#define HFI_LOCA_ERR_INFO2_RESERVED_21_16_SMASK			0x3F0000ull
#define HFI_LOCA_ERR_INFO2_PMI_XALI_DATA_SYND_SHIFT		8
#define HFI_LOCA_ERR_INFO2_PMI_XALI_DATA_SYND_MASK		0xFFull
#define HFI_LOCA_ERR_INFO2_PMI_XALI_DATA_SYND_SMASK		0xFF00ull
#define HFI_LOCA_ERR_INFO2_PMI_XALI_HDR_SYND_SHIFT		0
#define HFI_LOCA_ERR_INFO2_PMI_XALI_HDR_SYND_MASK		0xFFull
#define HFI_LOCA_ERR_INFO2_PMI_XALI_HDR_SYND_SMASK		0xFFull
/*
* Table #24 of fxr_top - LOCA_ERR_INFO3
* Misc syndrome bits for associated SBE/SBE events. Syndrome is held until the 
* associated event is cleared in the #%%#LOCA1_ERR_STS#%%# register. 
* 
*/
#define HFI_LOCA_ERR_INFO3					(HFI_LOCA_CSRS + 0x000000000268)
#define HFI_LOCA_ERR_INFO3_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_ERR_INFO3_MRU_TABLE_SYND_SHIFT			56
#define HFI_LOCA_ERR_INFO3_MRU_TABLE_SYND_MASK			0xFFull
#define HFI_LOCA_ERR_INFO3_MRU_TABLE_SYND_SMASK			0xFF00000000000000ull
#define HFI_LOCA_ERR_INFO3_RESERVED_55_53_SHIFT			53
#define HFI_LOCA_ERR_INFO3_RESERVED_55_53_MASK			0x7ull
#define HFI_LOCA_ERR_INFO3_RESERVED_55_53_SMASK			0xE0000000000000ull
#define HFI_LOCA_ERR_INFO3_U2C_DIR_SYND_SHIFT			46
#define HFI_LOCA_ERR_INFO3_U2C_DIR_SYND_MASK			0x7Full
#define HFI_LOCA_ERR_INFO3_U2C_DIR_SYND_SMASK			0x1FC00000000000ull
#define HFI_LOCA_ERR_INFO3_RESERVED_45_16_SHIFT			16
#define HFI_LOCA_ERR_INFO3_RESERVED_45_16_MASK			0x3FFFFFFFull
#define HFI_LOCA_ERR_INFO3_RESERVED_45_16_SMASK			0x3FFFFFFF0000ull
#define HFI_LOCA_ERR_INFO3_PMI_CPL_DATA_SYND_SHIFT		8
#define HFI_LOCA_ERR_INFO3_PMI_CPL_DATA_SYND_MASK		0xFFull
#define HFI_LOCA_ERR_INFO3_PMI_CPL_DATA_SYND_SMASK		0xFF00ull
#define HFI_LOCA_ERR_INFO3_PMI_CPL_HDR_SYND_SHIFT		0
#define HFI_LOCA_ERR_INFO3_PMI_CPL_HDR_SYND_MASK		0xFFull
#define HFI_LOCA_ERR_INFO3_PMI_CPL_HDR_SYND_SMASK		0xFFull
/*
* Table #25 of fxr_top - LOCA_ERR_INFO4
* Syndrome bits for associated SBE/SBE events. Syndrome is held until the 
* associated event is cleared in the #%%#LOCA1_ERR_STS#%%# register. 
* 
*/
#define HFI_LOCA_ERR_INFO4					(HFI_LOCA_CSRS + 0x000000000270)
#define HFI_LOCA_ERR_INFO4_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_ERR_INFO4_RESERVED_63_56_SHIFT			56
#define HFI_LOCA_ERR_INFO4_RESERVED_63_56_MASK			0xFFull
#define HFI_LOCA_ERR_INFO4_RESERVED_63_56_SMASK			0xFF00000000000000ull
#define HFI_LOCA_ERR_INFO4_DCD_BANK3_SYND_SHIFT			42
#define HFI_LOCA_ERR_INFO4_DCD_BANK3_SYND_MASK			0x3FFFull
#define HFI_LOCA_ERR_INFO4_DCD_BANK3_SYND_SMASK			0xFFFC0000000000ull
#define HFI_LOCA_ERR_INFO4_DCD_BANK2_SYND_SHIFT			28
#define HFI_LOCA_ERR_INFO4_DCD_BANK2_SYND_MASK			0x3FFFull
#define HFI_LOCA_ERR_INFO4_DCD_BANK2_SYND_SMASK			0x3FFF0000000ull
#define HFI_LOCA_ERR_INFO4_DCD_BANK1_SYND_SHIFT			14
#define HFI_LOCA_ERR_INFO4_DCD_BANK1_SYND_MASK			0x3FFFull
#define HFI_LOCA_ERR_INFO4_DCD_BANK1_SYND_SMASK			0xFFFC000ull
#define HFI_LOCA_ERR_INFO4_DCD_BANK0_SYND_SHIFT			0
#define HFI_LOCA_ERR_INFO4_DCD_BANK0_SYND_MASK			0x3FFFull
#define HFI_LOCA_ERR_INFO4_DCD_BANK0_SYND_SMASK			0x3FFFull
/*
* Table #26 of fxr_top - LOCA_ERR_INFO5
* Syndrome bits for associated SBE/SBE events. Syndrome is held until the 
* associated event is cleared in the #%%#LOCA1_ERR_STS#%%# register. 
* 
*/
#define HFI_LOCA_ERR_INFO5					(HFI_LOCA_CSRS + 0x000000000278)
#define HFI_LOCA_ERR_INFO5_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_ERR_INFO5_RESERVED_63_56_SHIFT			56
#define HFI_LOCA_ERR_INFO5_RESERVED_63_56_MASK			0xFFull
#define HFI_LOCA_ERR_INFO5_RESERVED_63_56_SMASK			0xFF00000000000000ull
#define HFI_LOCA_ERR_INFO5_DCD_BANK7_SYND_SHIFT			42
#define HFI_LOCA_ERR_INFO5_DCD_BANK7_SYND_MASK			0x3FFFull
#define HFI_LOCA_ERR_INFO5_DCD_BANK7_SYND_SMASK			0xFFFC0000000000ull
#define HFI_LOCA_ERR_INFO5_DCD_BANK6_SYND_SHIFT			28
#define HFI_LOCA_ERR_INFO5_DCD_BANK6_SYND_MASK			0x3FFFull
#define HFI_LOCA_ERR_INFO5_DCD_BANK6_SYND_SMASK			0x3FFF0000000ull
#define HFI_LOCA_ERR_INFO5_DCD_BANK5_SYND_SHIFT			14
#define HFI_LOCA_ERR_INFO5_DCD_BANK5_SYND_MASK			0x3FFFull
#define HFI_LOCA_ERR_INFO5_DCD_BANK5_SYND_SMASK			0xFFFC000ull
#define HFI_LOCA_ERR_INFO5_DCD_BANK4_SYND_SHIFT			0
#define HFI_LOCA_ERR_INFO5_DCD_BANK4_SYND_MASK			0x3FFFull
#define HFI_LOCA_ERR_INFO5_DCD_BANK4_SYND_SMASK			0x3FFFull
/*
* Table #27 of fxr_top - LOCA_ERR_INFO6
* Syndrome bits for associated SBE/SBE events. Syndrome is held until the 
* associated event is cleared in the #%%#LOCA0_ERR_STS#%%# register. 
* 
*/
#define HFI_LOCA_ERR_INFO6					(HFI_LOCA_CSRS + 0x000000000280)
#define HFI_LOCA_ERR_INFO6_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_ERR_INFO6_ADM_PAF_SYND_SHIFT			0
#define HFI_LOCA_ERR_INFO6_ADM_PAF_SYND_MASK			0xFFFFFFFFFFFFFFFFull
#define HFI_LOCA_ERR_INFO6_ADM_PAF_SYND_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #28 of fxr_top - LOCA_ERR_INFO7
* Syndrome bits for associated SBE/SBE events. Syndrome is held until the 
* associated event is cleared in the #%%#LOCA0_ERR_STS#%%# register. 
* 
*/
#define HFI_LOCA_ERR_INFO7					(HFI_LOCA_CSRS + 0x000000000288)
#define HFI_LOCA_ERR_INFO7_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_ERR_INFO7_ADM_RE_SYND_SHIFT			0
#define HFI_LOCA_ERR_INFO7_ADM_RE_SYND_MASK			0xFFFFFFFFFFFFFFFFull
#define HFI_LOCA_ERR_INFO7_ADM_RE_SYND_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #29 of fxr_top - LOCA_ERR_INFO8
* Syndrome bits for associated SBE/SBE events. Syndrome is held until the 
* associated event is cleared in the #%%#LOCA0_ERR_STS#%%# register. 
* 
*/
#define HFI_LOCA_ERR_INFO8					(HFI_LOCA_CSRS + 0x000000000290)
#define HFI_LOCA_ERR_INFO8_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_ERR_INFO8_ADM_SLDB_SYND_SHIFT			0
#define HFI_LOCA_ERR_INFO8_ADM_SLDB_SYND_MASK			0xFFFFFFFFFFFFFFFFull
#define HFI_LOCA_ERR_INFO8_ADM_SLDB_SYND_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #30 of fxr_top - LOCA_ERR_INFO9
* Reserved Info
*/
#define HFI_LOCA_ERR_INFO9					(HFI_LOCA_CSRS + 0x000000000298)
#define HFI_LOCA_ERR_INFO9_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_ERR_INFO9_RESERVED_63_0_SHIFT			0
#define HFI_LOCA_ERR_INFO9_RESERVED_63_0_MASK			0xFFFFFFFFFFFFFFFFull
#define HFI_LOCA_ERR_INFO9_RESERVED_63_0_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #31 of fxr_top - LOCA_ERR_INFO10
* Syndrome bits for associated SBE/SBE events. Syndrome is held until the 
* associated event is cleared in the #%%#LOCA0_ERR_STS#%%# register. 
* 
*/
#define HFI_LOCA_ERR_INFO10					(HFI_LOCA_CSRS + 0x0000000002A0)
#define HFI_LOCA_ERR_INFO10_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_ERR_INFO10_DCACHE_SYND_SHIFT			0
#define HFI_LOCA_ERR_INFO10_DCACHE_SYND_MASK			0xFFFFFFFFFFFFFFFFull
#define HFI_LOCA_ERR_INFO10_DCACHE_SYND_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #32 of fxr_top - LOCA_ERR_INFO11
* Syndrome bits for associated SBE/SBE events. Syndrome is held until the 
* associated event is cleared in the #%%#LOCA0_ERR_STS#%%# register. 
* 
*/
#define HFI_LOCA_ERR_INFO11					(HFI_LOCA_CSRS + 0x0000000002A8)
#define HFI_LOCA_ERR_INFO11_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_ERR_INFO11_WRIFILL_SYND_SHIFT			0
#define HFI_LOCA_ERR_INFO11_WRIFILL_SYND_MASK			0xFFFFFFFFFFFFFFFFull
#define HFI_LOCA_ERR_INFO11_WRIFILL_SYND_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #33 of fxr_top - LOCA_ERR_INFO12
* Error information for associated #%%#LOCA0_ERR_STS#%%# events. Error 
* information is held until the associated event is cleared in the 
* #%%#LOCA0_ERR_STS#%%# register. 
*/
#define HFI_LOCA_ERR_INFO12					(HFI_LOCA_CSRS + 0x0000000002B0)
#define HFI_LOCA_ERR_INFO12_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_ERR_INFO12_RESERVED_63_7_SHIFT			7
#define HFI_LOCA_ERR_INFO12_RESERVED_63_7_MASK			0x1FFFFFFFFFFFFFFull
#define HFI_LOCA_ERR_INFO12_RESERVED_63_7_SMASK			0xFFFFFFFFFFFFFF80ull
#define HFI_LOCA_ERR_INFO12_PCAM_DATA_SYND_SHIFT		0
#define HFI_LOCA_ERR_INFO12_PCAM_DATA_SYND_MASK			0x7Full
#define HFI_LOCA_ERR_INFO12_PCAM_DATA_SYND_SMASK		0x7Full
/*
* Table #34 of fxr_top - LOCA_ERR_INFO13
* Error information for associated #%%#LOCA0_ERR_STS#%%# events. Error 
* information is held until the associated event is cleared in the 
* #%%#LOCA0_ERR_STS#%%# register. 
*/
#define HFI_LOCA_ERR_INFO13					(HFI_LOCA_CSRS + 0x0000000002B8)
#define HFI_LOCA_ERR_INFO13_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_ERR_INFO13_HCC_REPLAY_STATUS_SHIFT		56
#define HFI_LOCA_ERR_INFO13_HCC_REPLAY_STATUS_MASK		0xFFull
#define HFI_LOCA_ERR_INFO13_HCC_REPLAY_STATUS_SMASK		0xFF00000000000000ull
#define HFI_LOCA_ERR_INFO13_RESERVED_55_0_SHIFT			0
#define HFI_LOCA_ERR_INFO13_RESERVED_55_0_MASK			0xFFFFFFFFFFFFFFull
#define HFI_LOCA_ERR_INFO13_RESERVED_55_0_SMASK			0xFFFFFFFFFFFFFFull
/*
* Table #35 of fxr_top - LOCA_ERR_INFO14
* Error information for associated #%%#LOCA0_ERR_STS#%%#.#%%#hcc_pmi_rsp_err#%%# 
* event. Error information is held until the associated event is cleared in the 
* #%%#LOCA0_ERR_STS#%%# register. 
*/
#define HFI_LOCA_ERR_INFO14					(HFI_LOCA_CSRS + 0x0000000002C0)
#define HFI_LOCA_ERR_INFO14_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_ERR_INFO14_TID_SHIFT				52
#define HFI_LOCA_ERR_INFO14_TID_MASK				0xFFFull
#define HFI_LOCA_ERR_INFO14_TID_SMASK				0xFFF0000000000000ull
#define HFI_LOCA_ERR_INFO14_ADDRESS_SHIFT			6
#define HFI_LOCA_ERR_INFO14_ADDRESS_MASK			0x3FFFFFFFFFFFull
#define HFI_LOCA_ERR_INFO14_ADDRESS_SMASK			0xFFFFFFFFFFFC0ull
#define HFI_LOCA_ERR_INFO14_RESERVED_5_1_SHIFT			1
#define HFI_LOCA_ERR_INFO14_RESERVED_5_1_MASK			0x1Full
#define HFI_LOCA_ERR_INFO14_RESERVED_5_1_SMASK			0x3Eull
#define HFI_LOCA_ERR_INFO14_DELAYED_REQS_SHIFT			0
#define HFI_LOCA_ERR_INFO14_DELAYED_REQS_MASK			0x1ull
#define HFI_LOCA_ERR_INFO14_DELAYED_REQS_SMASK			0x1ull
/*
* Table #36 of fxr_top - LOCA_ERR_INFO15
* Error information for associated #%%#LOCA1_ERR_STS#%%# event. Error 
* information is held until the associated event is cleared in the 
* #%%#LOCA1_ERR_STS#%%# register. 
*/
#define HFI_LOCA_ERR_INFO15					(HFI_LOCA_CSRS + 0x0000000002C8)
#define HFI_LOCA_ERR_INFO15_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_ERR_INFO15_RESERVED_63_13_SHIFT		13
#define HFI_LOCA_ERR_INFO15_RESERVED_63_13_MASK			0x7FFFFFFFFFFFFull
#define HFI_LOCA_ERR_INFO15_RESERVED_63_13_SMASK		0xFFFFFFFFFFFFE000ull
#define HFI_LOCA_ERR_INFO15_CONQ_TAIL_SYND_SHIFT		8
#define HFI_LOCA_ERR_INFO15_CONQ_TAIL_SYND_MASK			0x1Full
#define HFI_LOCA_ERR_INFO15_CONQ_TAIL_SYND_SMASK		0x1F00ull
#define HFI_LOCA_ERR_INFO15_HIFIS_HDR_SYND_SHIFT		0
#define HFI_LOCA_ERR_INFO15_HIFIS_HDR_SYND_MASK			0xFFull
#define HFI_LOCA_ERR_INFO15_HIFIS_HDR_SYND_SMASK		0xFFull
/*
* Table #37 of fxr_top - LOCA_ERR_INFO16
* Error information for associated #%%#LOCA1_ERR_STS#%%# event. Error 
* information is held until the associated event is cleared in the 
* #%%#LOCA1_ERR_STS#%%# register. 
*/
#define HFI_LOCA_ERR_INFO16					(HFI_LOCA_CSRS + 0x0000000002D0)
#define HFI_LOCA_ERR_INFO16_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_ERR_INFO16_DFIFO_SYND_SHIFT			0
#define HFI_LOCA_ERR_INFO16_DFIFO_SYND_MASK			0xFFFFFFFFFFFFFFFFull
#define HFI_LOCA_ERR_INFO16_DFIFO_SYND_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #38 of fxr_top - LOCA_ERR_INFO17
* Error information for associated #%%#LOCA1_ERR_STS#%%# event. Error 
* information is held until the associated event is cleared in the 
* #%%#LOCA1_ERR_STS#%%# register. 
*/
#define HFI_LOCA_ERR_INFO17					(HFI_LOCA_CSRS + 0x0000000002D8)
#define HFI_LOCA_ERR_INFO17_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_ERR_INFO17_DSTORE_SYND_SHIFT			0
#define HFI_LOCA_ERR_INFO17_DSTORE_SYND_MASK			0xFFFFFFFFFFFFFFFFull
#define HFI_LOCA_ERR_INFO17_DSTORE_SYND_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #39 of fxr_top - LOCA1_ERR_STS
* This is the Error Status CSR. Bits are set by hardware or by writing to the 
* LOCA1_ERR_FRC CSR. Bits are cleared by writing to the LOCA1_ERR_CLR 
* CSR.
*/
#define HFI_LOCA1_ERR_STS					(HFI_LOCA_CSRS + 0x000000000300)
#define HFI_LOCA1_ERR_STS_RESETCSR				0x0000000000000000ull
#define HFI_LOCA1_ERR_STS_RESERVED_63_26_SHIFT			26
#define HFI_LOCA1_ERR_STS_RESERVED_63_26_MASK			0x3FFFFFFFFFull
#define HFI_LOCA1_ERR_STS_RESERVED_63_26_SMASK			0xFFFFFFFFFC000000ull
#define HFI_LOCA1_ERR_STS_DFIFO_SBE_SHIFT			25
#define HFI_LOCA1_ERR_STS_DFIFO_SBE_MASK			0x1ull
#define HFI_LOCA1_ERR_STS_DFIFO_SBE_SMASK			0x2000000ull
#define HFI_LOCA1_ERR_STS_DFIFO_MBE_SHIFT			24
#define HFI_LOCA1_ERR_STS_DFIFO_MBE_MASK			0x1ull
#define HFI_LOCA1_ERR_STS_DFIFO_MBE_SMASK			0x1000000ull
#define HFI_LOCA1_ERR_STS_ADM_MALFORM_ASO_SHIFT			23
#define HFI_LOCA1_ERR_STS_ADM_MALFORM_ASO_MASK			0x1ull
#define HFI_LOCA1_ERR_STS_ADM_MALFORM_ASO_SMASK			0x800000ull
#define HFI_LOCA1_ERR_STS_ADM_MALFORM_ADT_SHIFT			22
#define HFI_LOCA1_ERR_STS_ADM_MALFORM_ADT_MASK			0x1ull
#define HFI_LOCA1_ERR_STS_ADM_MALFORM_ADT_SMASK			0x400000ull
#define HFI_LOCA1_ERR_STS_ADM_MALFORM_ADDR_SHIFT		21
#define HFI_LOCA1_ERR_STS_ADM_MALFORM_ADDR_MASK			0x1ull
#define HFI_LOCA1_ERR_STS_ADM_MALFORM_ADDR_SMASK		0x200000ull
#define HFI_LOCA1_ERR_STS_ADM_MALFORM_BLEN_SHIFT		20
#define HFI_LOCA1_ERR_STS_ADM_MALFORM_BLEN_MASK			0x1ull
#define HFI_LOCA1_ERR_STS_ADM_MALFORM_BLEN_SMASK		0x100000ull
#define HFI_LOCA1_ERR_STS_HIFIS_HDR_SBE_SHIFT			19
#define HFI_LOCA1_ERR_STS_HIFIS_HDR_SBE_MASK			0x1ull
#define HFI_LOCA1_ERR_STS_HIFIS_HDR_SBE_SMASK			0x80000ull
#define HFI_LOCA1_ERR_STS_CONQ_TAIL_SBE_SHIFT			18
#define HFI_LOCA1_ERR_STS_CONQ_TAIL_SBE_MASK			0x1ull
#define HFI_LOCA1_ERR_STS_CONQ_TAIL_SBE_SMASK			0x40000ull
#define HFI_LOCA1_ERR_STS_HIFIS_HDR_MBE_SHIFT			17
#define HFI_LOCA1_ERR_STS_HIFIS_HDR_MBE_MASK			0x1ull
#define HFI_LOCA1_ERR_STS_HIFIS_HDR_MBE_SMASK			0x20000ull
#define HFI_LOCA1_ERR_STS_CONQ_TAIL_MBE_SHIFT			16
#define HFI_LOCA1_ERR_STS_CONQ_TAIL_MBE_MASK			0x1ull
#define HFI_LOCA1_ERR_STS_CONQ_TAIL_MBE_SMASK			0x10000ull
#define HFI_LOCA1_ERR_STS_DCD_BANK_SBE_SHIFT			8
#define HFI_LOCA1_ERR_STS_DCD_BANK_SBE_MASK			0xFFull
#define HFI_LOCA1_ERR_STS_DCD_BANK_SBE_SMASK			0xFF00ull
#define HFI_LOCA1_ERR_STS_DCD_BANK_MBE_SHIFT			0
#define HFI_LOCA1_ERR_STS_DCD_BANK_MBE_MASK			0xFFull
#define HFI_LOCA1_ERR_STS_DCD_BANK_MBE_SMASK			0xFFull
/*
* Table #40 of fxr_top - LOCA1_ERR_CLR
* This is the Error Clear CSR. Writing a 1 to a valid bit will clear the 
* corresponding bit in the LOCA_ERR_STS CSR.
*/
#define HFI_LOCA1_ERR_CLR					(HFI_LOCA_CSRS + 0x000000000308)
#define HFI_LOCA1_ERR_CLR_RESETCSR				0x0000000000000000ull
#define HFI_LOCA1_ERR_CLR_RESERVED_63_24_SHIFT			24
#define HFI_LOCA1_ERR_CLR_RESERVED_63_24_MASK			0xFFFFFFFFFFull
#define HFI_LOCA1_ERR_CLR_RESERVED_63_24_SMASK			0xFFFFFFFFFF000000ull
#define HFI_LOCA1_ERR_CLR_ADM_MALFORM_ASO_SHIFT			23
#define HFI_LOCA1_ERR_CLR_ADM_MALFORM_ASO_MASK			0x1ull
#define HFI_LOCA1_ERR_CLR_ADM_MALFORM_ASO_SMASK			0x800000ull
#define HFI_LOCA1_ERR_CLR_ADM_MALFORM_ADT_SHIFT			22
#define HFI_LOCA1_ERR_CLR_ADM_MALFORM_ADT_MASK			0x1ull
#define HFI_LOCA1_ERR_CLR_ADM_MALFORM_ADT_SMASK			0x400000ull
#define HFI_LOCA1_ERR_CLR_ADM_MALFORM_ADDR_SHIFT		21
#define HFI_LOCA1_ERR_CLR_ADM_MALFORM_ADDR_MASK			0x1ull
#define HFI_LOCA1_ERR_CLR_ADM_MALFORM_ADDR_SMASK		0x200000ull
#define HFI_LOCA1_ERR_CLR_ADM_MALFORM_BLEN_SHIFT		20
#define HFI_LOCA1_ERR_CLR_ADM_MALFORM_BLEN_MASK			0x1ull
#define HFI_LOCA1_ERR_CLR_ADM_MALFORM_BLEN_SMASK		0x100000ull
#define HFI_LOCA1_ERR_CLR_HIFIS_HDR_SBE_SHIFT			19
#define HFI_LOCA1_ERR_CLR_HIFIS_HDR_SBE_MASK			0x1ull
#define HFI_LOCA1_ERR_CLR_HIFIS_HDR_SBE_SMASK			0x80000ull
#define HFI_LOCA1_ERR_CLR_CONQ_TAIL_SBE_SHIFT			18
#define HFI_LOCA1_ERR_CLR_CONQ_TAIL_SBE_MASK			0x1ull
#define HFI_LOCA1_ERR_CLR_CONQ_TAIL_SBE_SMASK			0x40000ull
#define HFI_LOCA1_ERR_CLR_HIFIS_HDR_MBE_SHIFT			17
#define HFI_LOCA1_ERR_CLR_HIFIS_HDR_MBE_MASK			0x1ull
#define HFI_LOCA1_ERR_CLR_HIFIS_HDR_MBE_SMASK			0x20000ull
#define HFI_LOCA1_ERR_CLR_CONQ_TAIL_MBE_SHIFT			16
#define HFI_LOCA1_ERR_CLR_CONQ_TAIL_MBE_MASK			0x1ull
#define HFI_LOCA1_ERR_CLR_CONQ_TAIL_MBE_SMASK			0x10000ull
#define HFI_LOCA1_ERR_CLR_DCD_BANK_SBE_SHIFT			8
#define HFI_LOCA1_ERR_CLR_DCD_BANK_SBE_MASK			0xFFull
#define HFI_LOCA1_ERR_CLR_DCD_BANK_SBE_SMASK			0xFF00ull
#define HFI_LOCA1_ERR_CLR_DCD_BANK_MBE_SHIFT			0
#define HFI_LOCA1_ERR_CLR_DCD_BANK_MBE_MASK			0xFFull
#define HFI_LOCA1_ERR_CLR_DCD_BANK_MBE_SMASK			0xFFull
/*
* Table #41 of fxr_top - LOCA1_ERR_FRC
* This is the Error Force CSR. Writing a 1 to a valid bit will set the 
* corresponding bit in the LOCA_ERR_STS CSR.
*/
#define HFI_LOCA1_ERR_FRC					(HFI_LOCA_CSRS + 0x000000000310)
#define HFI_LOCA1_ERR_FRC_RESETCSR				0x0000000000000000ull
#define HFI_LOCA1_ERR_FRC_RESERVED_63_24_SHIFT			24
#define HFI_LOCA1_ERR_FRC_RESERVED_63_24_MASK			0xFFFFFFFFFFull
#define HFI_LOCA1_ERR_FRC_RESERVED_63_24_SMASK			0xFFFFFFFFFF000000ull
#define HFI_LOCA1_ERR_FRC_ADM_MALFORM_ASO_SHIFT			23
#define HFI_LOCA1_ERR_FRC_ADM_MALFORM_ASO_MASK			0x1ull
#define HFI_LOCA1_ERR_FRC_ADM_MALFORM_ASO_SMASK			0x800000ull
#define HFI_LOCA1_ERR_FRC_ADM_MALFORM_ADT_SHIFT			22
#define HFI_LOCA1_ERR_FRC_ADM_MALFORM_ADT_MASK			0x1ull
#define HFI_LOCA1_ERR_FRC_ADM_MALFORM_ADT_SMASK			0x400000ull
#define HFI_LOCA1_ERR_FRC_ADM_MALFORM_ADDR_SHIFT		21
#define HFI_LOCA1_ERR_FRC_ADM_MALFORM_ADDR_MASK			0x1ull
#define HFI_LOCA1_ERR_FRC_ADM_MALFORM_ADDR_SMASK		0x200000ull
#define HFI_LOCA1_ERR_FRC_ADM_MALFORM_BLEN_SHIFT		20
#define HFI_LOCA1_ERR_FRC_ADM_MALFORM_BLEN_MASK			0x1ull
#define HFI_LOCA1_ERR_FRC_ADM_MALFORM_BLEN_SMASK		0x100000ull
#define HFI_LOCA1_ERR_FRC_HIFIS_HDR_SBE_SHIFT			19
#define HFI_LOCA1_ERR_FRC_HIFIS_HDR_SBE_MASK			0x1ull
#define HFI_LOCA1_ERR_FRC_HIFIS_HDR_SBE_SMASK			0x80000ull
#define HFI_LOCA1_ERR_FRC_CONQ_TAIL_SBE_SHIFT			18
#define HFI_LOCA1_ERR_FRC_CONQ_TAIL_SBE_MASK			0x1ull
#define HFI_LOCA1_ERR_FRC_CONQ_TAIL_SBE_SMASK			0x40000ull
#define HFI_LOCA1_ERR_FRC_HIFIS_HDR_MBE_SHIFT			17
#define HFI_LOCA1_ERR_FRC_HIFIS_HDR_MBE_MASK			0x1ull
#define HFI_LOCA1_ERR_FRC_HIFIS_HDR_MBE_SMASK			0x20000ull
#define HFI_LOCA1_ERR_FRC_CONQ_TAIL_MBE_SHIFT			16
#define HFI_LOCA1_ERR_FRC_CONQ_TAIL_MBE_MASK			0x1ull
#define HFI_LOCA1_ERR_FRC_CONQ_TAIL_MBE_SMASK			0x10000ull
#define HFI_LOCA1_ERR_FRC_DCD_BANK_SBE_SHIFT			8
#define HFI_LOCA1_ERR_FRC_DCD_BANK_SBE_MASK			0xFFull
#define HFI_LOCA1_ERR_FRC_DCD_BANK_SBE_SMASK			0xFF00ull
#define HFI_LOCA1_ERR_FRC_DCD_BANK_MBE_SHIFT			0
#define HFI_LOCA1_ERR_FRC_DCD_BANK_MBE_MASK			0xFFull
#define HFI_LOCA1_ERR_FRC_DCD_BANK_MBE_SMASK			0xFFull
/*
* Table #42 of fxr_top - LOCA1_ERR_EN_HOST
* This is the Error Enable for the Host Interrupt. If a bit is set, the 
* corresponding error bit in LOCA_ERR_STS will cause an interrupt on the HOST 
* interrupt signal.
*/
#define HFI_LOCA1_ERR_EN_HOST					(HFI_LOCA_CSRS + 0x000000000318)
#define HFI_LOCA1_ERR_EN_HOST_RESETCSR				0x0000000000000000ull
#define HFI_LOCA1_ERR_EN_HOST_RESERVED_63_24_SHIFT		24
#define HFI_LOCA1_ERR_EN_HOST_RESERVED_63_24_MASK		0xFFFFFFFFFFull
#define HFI_LOCA1_ERR_EN_HOST_RESERVED_63_24_SMASK		0xFFFFFFFFFF000000ull
#define HFI_LOCA1_ERR_EN_HOST_ADM_MALFORM_ASO_SHIFT		23
#define HFI_LOCA1_ERR_EN_HOST_ADM_MALFORM_ASO_MASK		0x1ull
#define HFI_LOCA1_ERR_EN_HOST_ADM_MALFORM_ASO_SMASK		0x800000ull
#define HFI_LOCA1_ERR_EN_HOST_ADM_MALFORM_ADT_SHIFT		22
#define HFI_LOCA1_ERR_EN_HOST_ADM_MALFORM_ADT_MASK		0x1ull
#define HFI_LOCA1_ERR_EN_HOST_ADM_MALFORM_ADT_SMASK		0x400000ull
#define HFI_LOCA1_ERR_EN_HOST_ADM_MALFORM_ADDR_SHIFT		21
#define HFI_LOCA1_ERR_EN_HOST_ADM_MALFORM_ADDR_MASK		0x1ull
#define HFI_LOCA1_ERR_EN_HOST_ADM_MALFORM_ADDR_SMASK		0x200000ull
#define HFI_LOCA1_ERR_EN_HOST_ADM_MALFORM_BLEN_SHIFT		20
#define HFI_LOCA1_ERR_EN_HOST_ADM_MALFORM_BLEN_MASK		0x1ull
#define HFI_LOCA1_ERR_EN_HOST_ADM_MALFORM_BLEN_SMASK		0x100000ull
#define HFI_LOCA1_ERR_EN_HOST_HIFIS_HDR_SBE_SHIFT		19
#define HFI_LOCA1_ERR_EN_HOST_HIFIS_HDR_SBE_MASK		0x1ull
#define HFI_LOCA1_ERR_EN_HOST_HIFIS_HDR_SBE_SMASK		0x80000ull
#define HFI_LOCA1_ERR_EN_HOST_CONQ_TAIL_SBE_SHIFT		18
#define HFI_LOCA1_ERR_EN_HOST_CONQ_TAIL_SBE_MASK		0x1ull
#define HFI_LOCA1_ERR_EN_HOST_CONQ_TAIL_SBE_SMASK		0x40000ull
#define HFI_LOCA1_ERR_EN_HOST_HIFIS_HDR_MBE_SHIFT		17
#define HFI_LOCA1_ERR_EN_HOST_HIFIS_HDR_MBE_MASK		0x1ull
#define HFI_LOCA1_ERR_EN_HOST_HIFIS_HDR_MBE_SMASK		0x20000ull
#define HFI_LOCA1_ERR_EN_HOST_CONQ_TAIL_MBE_SHIFT		16
#define HFI_LOCA1_ERR_EN_HOST_CONQ_TAIL_MBE_MASK		0x1ull
#define HFI_LOCA1_ERR_EN_HOST_CONQ_TAIL_MBE_SMASK		0x10000ull
#define HFI_LOCA1_ERR_EN_HOST_DCD_BANK_SBE_SHIFT		8
#define HFI_LOCA1_ERR_EN_HOST_DCD_BANK_SBE_MASK			0xFFull
#define HFI_LOCA1_ERR_EN_HOST_DCD_BANK_SBE_SMASK		0xFF00ull
#define HFI_LOCA1_ERR_EN_HOST_DCD_BANK_MBE_SHIFT		0
#define HFI_LOCA1_ERR_EN_HOST_DCD_BANK_MBE_MASK			0xFFull
#define HFI_LOCA1_ERR_EN_HOST_DCD_BANK_MBE_SMASK		0xFFull
/*
* Table #43 of fxr_top - LOCA1_ERR_FIRST_HOST
* This is the First Error CSR for the Host Interrupt. When this CSR is clear, it 
* will capture the next LOCA_ERR_STS value when a new HOST Interrupt 
* occurs.
*/
#define HFI_LOCA1_ERR_FIRST_HOST				(HFI_LOCA_CSRS + 0x000000000320)
#define HFI_LOCA1_ERR_FIRST_HOST_RESETCSR			0x0000000000000000ull
#define HFI_LOCA1_ERR_FIRST_HOST_RESERVED_63_24_SHIFT		24
#define HFI_LOCA1_ERR_FIRST_HOST_RESERVED_63_24_MASK		0xFFFFFFFFFFull
#define HFI_LOCA1_ERR_FIRST_HOST_RESERVED_63_24_SMASK		0xFFFFFFFFFF000000ull
#define HFI_LOCA1_ERR_FIRST_HOST_ADM_MALFORM_ASO_SHIFT		23
#define HFI_LOCA1_ERR_FIRST_HOST_ADM_MALFORM_ASO_MASK		0x1ull
#define HFI_LOCA1_ERR_FIRST_HOST_ADM_MALFORM_ASO_SMASK		0x800000ull
#define HFI_LOCA1_ERR_FIRST_HOST_ADM_MALFORM_ADT_SHIFT		22
#define HFI_LOCA1_ERR_FIRST_HOST_ADM_MALFORM_ADT_MASK		0x1ull
#define HFI_LOCA1_ERR_FIRST_HOST_ADM_MALFORM_ADT_SMASK		0x400000ull
#define HFI_LOCA1_ERR_FIRST_HOST_ADM_MALFORM_ADDR_SHIFT		21
#define HFI_LOCA1_ERR_FIRST_HOST_ADM_MALFORM_ADDR_MASK		0x1ull
#define HFI_LOCA1_ERR_FIRST_HOST_ADM_MALFORM_ADDR_SMASK		0x200000ull
#define HFI_LOCA1_ERR_FIRST_HOST_ADM_MALFORM_BLEN_SHIFT		20
#define HFI_LOCA1_ERR_FIRST_HOST_ADM_MALFORM_BLEN_MASK		0x1ull
#define HFI_LOCA1_ERR_FIRST_HOST_ADM_MALFORM_BLEN_SMASK		0x100000ull
#define HFI_LOCA1_ERR_FIRST_HOST_HIFIS_HDR_SBE_SHIFT		19
#define HFI_LOCA1_ERR_FIRST_HOST_HIFIS_HDR_SBE_MASK		0x1ull
#define HFI_LOCA1_ERR_FIRST_HOST_HIFIS_HDR_SBE_SMASK		0x80000ull
#define HFI_LOCA1_ERR_FIRST_HOST_CONQ_TAIL_SBE_SHIFT		18
#define HFI_LOCA1_ERR_FIRST_HOST_CONQ_TAIL_SBE_MASK		0x1ull
#define HFI_LOCA1_ERR_FIRST_HOST_CONQ_TAIL_SBE_SMASK		0x40000ull
#define HFI_LOCA1_ERR_FIRST_HOST_HIFIS_HDR_MBE_SHIFT		17
#define HFI_LOCA1_ERR_FIRST_HOST_HIFIS_HDR_MBE_MASK		0x1ull
#define HFI_LOCA1_ERR_FIRST_HOST_HIFIS_HDR_MBE_SMASK		0x20000ull
#define HFI_LOCA1_ERR_FIRST_HOST_CONQ_TAIL_MBE_SHIFT		16
#define HFI_LOCA1_ERR_FIRST_HOST_CONQ_TAIL_MBE_MASK		0x1ull
#define HFI_LOCA1_ERR_FIRST_HOST_CONQ_TAIL_MBE_SMASK		0x10000ull
#define HFI_LOCA1_ERR_FIRST_HOST_DCD_BANK_SBE_SHIFT		8
#define HFI_LOCA1_ERR_FIRST_HOST_DCD_BANK_SBE_MASK		0xFFull
#define HFI_LOCA1_ERR_FIRST_HOST_DCD_BANK_SBE_SMASK		0xFF00ull
#define HFI_LOCA1_ERR_FIRST_HOST_DCD_BANK_MBE_SHIFT		0
#define HFI_LOCA1_ERR_FIRST_HOST_DCD_BANK_MBE_MASK		0xFFull
#define HFI_LOCA1_ERR_FIRST_HOST_DCD_BANK_MBE_SMASK		0xFFull
/*
* Table #44 of fxr_top - LOCA1_ERR_EN_BMC
* This is the Error Enable for the BMC Interrupt. If a bit is set, the 
* corresponding error bit in LOCA_ERR_STS will cause an interrupt on the BMC 
* interrupt signal.
*/
#define HFI_LOCA1_ERR_EN_BMC					(HFI_LOCA_CSRS + 0x000000000328)
#define HFI_LOCA1_ERR_EN_BMC_RESETCSR				0x0000000000000000ull
#define HFI_LOCA1_ERR_EN_BMC_RESERVED_63_24_SHIFT		24
#define HFI_LOCA1_ERR_EN_BMC_RESERVED_63_24_MASK		0xFFFFFFFFFFull
#define HFI_LOCA1_ERR_EN_BMC_RESERVED_63_24_SMASK		0xFFFFFFFFFF000000ull
#define HFI_LOCA1_ERR_EN_BMC_ADM_MALFORM_ASO_SHIFT		23
#define HFI_LOCA1_ERR_EN_BMC_ADM_MALFORM_ASO_MASK		0x1ull
#define HFI_LOCA1_ERR_EN_BMC_ADM_MALFORM_ASO_SMASK		0x800000ull
#define HFI_LOCA1_ERR_EN_BMC_ADM_MALFORM_ADT_SHIFT		22
#define HFI_LOCA1_ERR_EN_BMC_ADM_MALFORM_ADT_MASK		0x1ull
#define HFI_LOCA1_ERR_EN_BMC_ADM_MALFORM_ADT_SMASK		0x400000ull
#define HFI_LOCA1_ERR_EN_BMC_ADM_MALFORM_ADDR_SHIFT		21
#define HFI_LOCA1_ERR_EN_BMC_ADM_MALFORM_ADDR_MASK		0x1ull
#define HFI_LOCA1_ERR_EN_BMC_ADM_MALFORM_ADDR_SMASK		0x200000ull
#define HFI_LOCA1_ERR_EN_BMC_ADM_MALFORM_BLEN_SHIFT		20
#define HFI_LOCA1_ERR_EN_BMC_ADM_MALFORM_BLEN_MASK		0x1ull
#define HFI_LOCA1_ERR_EN_BMC_ADM_MALFORM_BLEN_SMASK		0x100000ull
#define HFI_LOCA1_ERR_EN_BMC_HIFIS_HDR_SBE_SHIFT		19
#define HFI_LOCA1_ERR_EN_BMC_HIFIS_HDR_SBE_MASK			0x1ull
#define HFI_LOCA1_ERR_EN_BMC_HIFIS_HDR_SBE_SMASK		0x80000ull
#define HFI_LOCA1_ERR_EN_BMC_CONQ_TAIL_SBE_SHIFT		18
#define HFI_LOCA1_ERR_EN_BMC_CONQ_TAIL_SBE_MASK			0x1ull
#define HFI_LOCA1_ERR_EN_BMC_CONQ_TAIL_SBE_SMASK		0x40000ull
#define HFI_LOCA1_ERR_EN_BMC_HIFIS_HDR_MBE_SHIFT		17
#define HFI_LOCA1_ERR_EN_BMC_HIFIS_HDR_MBE_MASK			0x1ull
#define HFI_LOCA1_ERR_EN_BMC_HIFIS_HDR_MBE_SMASK		0x20000ull
#define HFI_LOCA1_ERR_EN_BMC_CONQ_TAIL_MBE_SHIFT		16
#define HFI_LOCA1_ERR_EN_BMC_CONQ_TAIL_MBE_MASK			0x1ull
#define HFI_LOCA1_ERR_EN_BMC_CONQ_TAIL_MBE_SMASK		0x10000ull
#define HFI_LOCA1_ERR_EN_BMC_DCD_BANK_SBE_SHIFT			8
#define HFI_LOCA1_ERR_EN_BMC_DCD_BANK_SBE_MASK			0xFFull
#define HFI_LOCA1_ERR_EN_BMC_DCD_BANK_SBE_SMASK			0xFF00ull
#define HFI_LOCA1_ERR_EN_BMC_DCD_BANK_MBE_SHIFT			0
#define HFI_LOCA1_ERR_EN_BMC_DCD_BANK_MBE_MASK			0xFFull
#define HFI_LOCA1_ERR_EN_BMC_DCD_BANK_MBE_SMASK			0xFFull
/*
* Table #45 of fxr_top - LOCA1_ERR_FIRST_BMC
* This is the First Error CSR for the BMC Interrupt. When this CSR is clear, it 
* will capture the next LOCA_ERR_STS value when a new BMC Interrupt 
* occurs.
*/
#define HFI_LOCA1_ERR_FIRST_BMC					(HFI_LOCA_CSRS + 0x000000000330)
#define HFI_LOCA1_ERR_FIRST_BMC_RESETCSR			0x0000000000000000ull
#define HFI_LOCA1_ERR_FIRST_BMC_RESERVED_63_24_SHIFT		24
#define HFI_LOCA1_ERR_FIRST_BMC_RESERVED_63_24_MASK		0xFFFFFFFFFFull
#define HFI_LOCA1_ERR_FIRST_BMC_RESERVED_63_24_SMASK		0xFFFFFFFFFF000000ull
#define HFI_LOCA1_ERR_FIRST_BMC_ADM_MALFORM_ASO_SHIFT		23
#define HFI_LOCA1_ERR_FIRST_BMC_ADM_MALFORM_ASO_MASK		0x1ull
#define HFI_LOCA1_ERR_FIRST_BMC_ADM_MALFORM_ASO_SMASK		0x800000ull
#define HFI_LOCA1_ERR_FIRST_BMC_ADM_MALFORM_ADT_SHIFT		22
#define HFI_LOCA1_ERR_FIRST_BMC_ADM_MALFORM_ADT_MASK		0x1ull
#define HFI_LOCA1_ERR_FIRST_BMC_ADM_MALFORM_ADT_SMASK		0x400000ull
#define HFI_LOCA1_ERR_FIRST_BMC_ADM_MALFORM_ADDR_SHIFT		21
#define HFI_LOCA1_ERR_FIRST_BMC_ADM_MALFORM_ADDR_MASK		0x1ull
#define HFI_LOCA1_ERR_FIRST_BMC_ADM_MALFORM_ADDR_SMASK		0x200000ull
#define HFI_LOCA1_ERR_FIRST_BMC_ADM_MALFORM_BLEN_SHIFT		20
#define HFI_LOCA1_ERR_FIRST_BMC_ADM_MALFORM_BLEN_MASK		0x1ull
#define HFI_LOCA1_ERR_FIRST_BMC_ADM_MALFORM_BLEN_SMASK		0x100000ull
#define HFI_LOCA1_ERR_FIRST_BMC_HIFIS_HDR_SBE_SHIFT		19
#define HFI_LOCA1_ERR_FIRST_BMC_HIFIS_HDR_SBE_MASK		0x1ull
#define HFI_LOCA1_ERR_FIRST_BMC_HIFIS_HDR_SBE_SMASK		0x80000ull
#define HFI_LOCA1_ERR_FIRST_BMC_CONQ_TAIL_SBE_SHIFT		18
#define HFI_LOCA1_ERR_FIRST_BMC_CONQ_TAIL_SBE_MASK		0x1ull
#define HFI_LOCA1_ERR_FIRST_BMC_CONQ_TAIL_SBE_SMASK		0x40000ull
#define HFI_LOCA1_ERR_FIRST_BMC_HIFIS_HDR_MBE_SHIFT		17
#define HFI_LOCA1_ERR_FIRST_BMC_HIFIS_HDR_MBE_MASK		0x1ull
#define HFI_LOCA1_ERR_FIRST_BMC_HIFIS_HDR_MBE_SMASK		0x20000ull
#define HFI_LOCA1_ERR_FIRST_BMC_CONQ_TAIL_MBE_SHIFT		16
#define HFI_LOCA1_ERR_FIRST_BMC_CONQ_TAIL_MBE_MASK		0x1ull
#define HFI_LOCA1_ERR_FIRST_BMC_CONQ_TAIL_MBE_SMASK		0x10000ull
#define HFI_LOCA1_ERR_FIRST_BMC_DCD_BANK_SBE_SHIFT		8
#define HFI_LOCA1_ERR_FIRST_BMC_DCD_BANK_SBE_MASK		0xFFull
#define HFI_LOCA1_ERR_FIRST_BMC_DCD_BANK_SBE_SMASK		0xFF00ull
#define HFI_LOCA1_ERR_FIRST_BMC_DCD_BANK_MBE_SHIFT		0
#define HFI_LOCA1_ERR_FIRST_BMC_DCD_BANK_MBE_MASK		0xFFull
#define HFI_LOCA1_ERR_FIRST_BMC_DCD_BANK_MBE_SMASK		0xFFull
/*
* Table #46 of fxr_top - LOCA1_ERR_EN_QUAR
* This is the Error Enable for the Quarantine Interrupt. If a bit is set, the 
* corresponding error bit in LOCA_ERR_STS will cause an interrupt on the QUAR 
* interrupt signal.
*/
#define HFI_LOCA1_ERR_EN_QUAR					(HFI_LOCA_CSRS + 0x000000000338)
#define HFI_LOCA1_ERR_EN_QUAR_RESETCSR				0x0000000000000000ull
#define HFI_LOCA1_ERR_EN_QUAR_RESERVED_63_24_SHIFT		24
#define HFI_LOCA1_ERR_EN_QUAR_RESERVED_63_24_MASK		0xFFFFFFFFFFull
#define HFI_LOCA1_ERR_EN_QUAR_RESERVED_63_24_SMASK		0xFFFFFFFFFF000000ull
#define HFI_LOCA1_ERR_EN_QUAR_ADM_MALFORM_ASO_SHIFT		23
#define HFI_LOCA1_ERR_EN_QUAR_ADM_MALFORM_ASO_MASK		0x1ull
#define HFI_LOCA1_ERR_EN_QUAR_ADM_MALFORM_ASO_SMASK		0x800000ull
#define HFI_LOCA1_ERR_EN_QUAR_ADM_MALFORM_ADT_SHIFT		22
#define HFI_LOCA1_ERR_EN_QUAR_ADM_MALFORM_ADT_MASK		0x1ull
#define HFI_LOCA1_ERR_EN_QUAR_ADM_MALFORM_ADT_SMASK		0x400000ull
#define HFI_LOCA1_ERR_EN_QUAR_ADM_MALFORM_ADDR_SHIFT		21
#define HFI_LOCA1_ERR_EN_QUAR_ADM_MALFORM_ADDR_MASK		0x1ull
#define HFI_LOCA1_ERR_EN_QUAR_ADM_MALFORM_ADDR_SMASK		0x200000ull
#define HFI_LOCA1_ERR_EN_QUAR_ADM_MALFORM_BLEN_SHIFT		20
#define HFI_LOCA1_ERR_EN_QUAR_ADM_MALFORM_BLEN_MASK		0x1ull
#define HFI_LOCA1_ERR_EN_QUAR_ADM_MALFORM_BLEN_SMASK		0x100000ull
#define HFI_LOCA1_ERR_EN_QUAR_HIFIS_HDR_SBE_SHIFT		19
#define HFI_LOCA1_ERR_EN_QUAR_HIFIS_HDR_SBE_MASK		0x1ull
#define HFI_LOCA1_ERR_EN_QUAR_HIFIS_HDR_SBE_SMASK		0x80000ull
#define HFI_LOCA1_ERR_EN_QUAR_CONQ_TAIL_SBE_SHIFT		18
#define HFI_LOCA1_ERR_EN_QUAR_CONQ_TAIL_SBE_MASK		0x1ull
#define HFI_LOCA1_ERR_EN_QUAR_CONQ_TAIL_SBE_SMASK		0x40000ull
#define HFI_LOCA1_ERR_EN_QUAR_HIFIS_HDR_MBE_SHIFT		17
#define HFI_LOCA1_ERR_EN_QUAR_HIFIS_HDR_MBE_MASK		0x1ull
#define HFI_LOCA1_ERR_EN_QUAR_HIFIS_HDR_MBE_SMASK		0x20000ull
#define HFI_LOCA1_ERR_EN_QUAR_CONQ_TAIL_MBE_SHIFT		16
#define HFI_LOCA1_ERR_EN_QUAR_CONQ_TAIL_MBE_MASK		0x1ull
#define HFI_LOCA1_ERR_EN_QUAR_CONQ_TAIL_MBE_SMASK		0x10000ull
#define HFI_LOCA1_ERR_EN_QUAR_DCD_BANK_SBE_SHIFT		8
#define HFI_LOCA1_ERR_EN_QUAR_DCD_BANK_SBE_MASK			0xFFull
#define HFI_LOCA1_ERR_EN_QUAR_DCD_BANK_SBE_SMASK		0xFF00ull
#define HFI_LOCA1_ERR_EN_QUAR_DCD_BANK_MBE_SHIFT		0
#define HFI_LOCA1_ERR_EN_QUAR_DCD_BANK_MBE_MASK			0xFFull
#define HFI_LOCA1_ERR_EN_QUAR_DCD_BANK_MBE_SMASK		0xFFull
/*
* Table #47 of fxr_top - LOCA1_ERR_FIRST_QUAR
* This is the First Error CSR for the Quarantine Interrupt. When this CSR is 
* clear, it will capture the next LOCA_ERR_STS value when a new QUAR Interrupt 
* occurs.
*/
#define HFI_LOCA1_ERR_FIRST_QUAR				(HFI_LOCA_CSRS + 0x000000000340)
#define HFI_LOCA1_ERR_FIRST_QUAR_RESETCSR			0x0000000000000000ull
#define HFI_LOCA1_ERR_FIRST_QUAR_RESERVED_63_24_SHIFT		24
#define HFI_LOCA1_ERR_FIRST_QUAR_RESERVED_63_24_MASK		0xFFFFFFFFFFull
#define HFI_LOCA1_ERR_FIRST_QUAR_RESERVED_63_24_SMASK		0xFFFFFFFFFF000000ull
#define HFI_LOCA1_ERR_FIRST_QUAR_ADM_MALFORM_ASO_SHIFT		23
#define HFI_LOCA1_ERR_FIRST_QUAR_ADM_MALFORM_ASO_MASK		0x1ull
#define HFI_LOCA1_ERR_FIRST_QUAR_ADM_MALFORM_ASO_SMASK		0x800000ull
#define HFI_LOCA1_ERR_FIRST_QUAR_ADM_MALFORM_ADT_SHIFT		22
#define HFI_LOCA1_ERR_FIRST_QUAR_ADM_MALFORM_ADT_MASK		0x1ull
#define HFI_LOCA1_ERR_FIRST_QUAR_ADM_MALFORM_ADT_SMASK		0x400000ull
#define HFI_LOCA1_ERR_FIRST_QUAR_ADM_MALFORM_ADDR_SHIFT		21
#define HFI_LOCA1_ERR_FIRST_QUAR_ADM_MALFORM_ADDR_MASK		0x1ull
#define HFI_LOCA1_ERR_FIRST_QUAR_ADM_MALFORM_ADDR_SMASK		0x200000ull
#define HFI_LOCA1_ERR_FIRST_QUAR_ADM_MALFORM_BLEN_SHIFT		20
#define HFI_LOCA1_ERR_FIRST_QUAR_ADM_MALFORM_BLEN_MASK		0x1ull
#define HFI_LOCA1_ERR_FIRST_QUAR_ADM_MALFORM_BLEN_SMASK		0x100000ull
#define HFI_LOCA1_ERR_FIRST_QUAR_HIFIS_HDR_SBE_SHIFT		19
#define HFI_LOCA1_ERR_FIRST_QUAR_HIFIS_HDR_SBE_MASK		0x1ull
#define HFI_LOCA1_ERR_FIRST_QUAR_HIFIS_HDR_SBE_SMASK		0x80000ull
#define HFI_LOCA1_ERR_FIRST_QUAR_CONQ_TAIL_SBE_SHIFT		18
#define HFI_LOCA1_ERR_FIRST_QUAR_CONQ_TAIL_SBE_MASK		0x1ull
#define HFI_LOCA1_ERR_FIRST_QUAR_CONQ_TAIL_SBE_SMASK		0x40000ull
#define HFI_LOCA1_ERR_FIRST_QUAR_HIFIS_HDR_MBE_SHIFT		17
#define HFI_LOCA1_ERR_FIRST_QUAR_HIFIS_HDR_MBE_MASK		0x1ull
#define HFI_LOCA1_ERR_FIRST_QUAR_HIFIS_HDR_MBE_SMASK		0x20000ull
#define HFI_LOCA1_ERR_FIRST_QUAR_CONQ_TAIL_MBE_SHIFT		16
#define HFI_LOCA1_ERR_FIRST_QUAR_CONQ_TAIL_MBE_MASK		0x1ull
#define HFI_LOCA1_ERR_FIRST_QUAR_CONQ_TAIL_MBE_SMASK		0x10000ull
#define HFI_LOCA1_ERR_FIRST_QUAR_DCD_BANK_SBE_SHIFT		8
#define HFI_LOCA1_ERR_FIRST_QUAR_DCD_BANK_SBE_MASK		0xFFull
#define HFI_LOCA1_ERR_FIRST_QUAR_DCD_BANK_SBE_SMASK		0xFF00ull
#define HFI_LOCA1_ERR_FIRST_QUAR_DCD_BANK_MBE_SHIFT		0
#define HFI_LOCA1_ERR_FIRST_QUAR_DCD_BANK_MBE_MASK		0xFFull
#define HFI_LOCA1_ERR_FIRST_QUAR_DCD_BANK_MBE_SMASK		0xFFull
/*
* Table #48 of fxr_top - LOCA_PMON_AR_LOWER
* Performance Monitor Address Range Lower control registers. These four 
* registers define the lower address range for the #%%#pm_addr_range3#%%# 
* through #%%#pm_addr_range0#%%# PMON counters. 
*/
#define HFI_LOCA_PMON_AR_LOWER					(HFI_LOCA_CSRS + 0x000000000350)
#define HFI_LOCA_PMON_AR_LOWER_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_PMON_AR_LOWER_RESERVED_63_47_SHIFT		47
#define HFI_LOCA_PMON_AR_LOWER_RESERVED_63_47_MASK		0x1FFFFull
#define HFI_LOCA_PMON_AR_LOWER_RESERVED_63_47_SMASK		0xFFFF800000000000ull
#define HFI_LOCA_PMON_AR_LOWER_LOWER_ADDR_RANGE_SHIFT		12
#define HFI_LOCA_PMON_AR_LOWER_LOWER_ADDR_RANGE_MASK		0x7FFFFFFFFull
#define HFI_LOCA_PMON_AR_LOWER_LOWER_ADDR_RANGE_SMASK		0x7FFFFFFFF000ull
#define HFI_LOCA_PMON_AR_LOWER_RESERVED_11_5_SHIFT		5
#define HFI_LOCA_PMON_AR_LOWER_RESERVED_11_5_MASK		0x7Full
#define HFI_LOCA_PMON_AR_LOWER_RESERVED_11_5_SMASK		0xFE0ull
#define HFI_LOCA_PMON_AR_LOWER_CACHEMISS_ENABLE_SHIFT		4
#define HFI_LOCA_PMON_AR_LOWER_CACHEMISS_ENABLE_MASK		0x1ull
#define HFI_LOCA_PMON_AR_LOWER_CACHEMISS_ENABLE_SMASK		0x10ull
#define HFI_LOCA_PMON_AR_LOWER_CACHEHIT_ENABLE_SHIFT		3
#define HFI_LOCA_PMON_AR_LOWER_CACHEHIT_ENABLE_MASK		0x1ull
#define HFI_LOCA_PMON_AR_LOWER_CACHEHIT_ENABLE_SMASK		0x8ull
#define HFI_LOCA_PMON_AR_LOWER_ATOMIC_ENABLE_SHIFT		2
#define HFI_LOCA_PMON_AR_LOWER_ATOMIC_ENABLE_MASK		0x1ull
#define HFI_LOCA_PMON_AR_LOWER_ATOMIC_ENABLE_SMASK		0x4ull
#define HFI_LOCA_PMON_AR_LOWER_WRITE_ENABLE_SHIFT		1
#define HFI_LOCA_PMON_AR_LOWER_WRITE_ENABLE_MASK		0x1ull
#define HFI_LOCA_PMON_AR_LOWER_WRITE_ENABLE_SMASK		0x2ull
#define HFI_LOCA_PMON_AR_LOWER_READ_ENABLE_SHIFT		0
#define HFI_LOCA_PMON_AR_LOWER_READ_ENABLE_MASK			0x1ull
#define HFI_LOCA_PMON_AR_LOWER_READ_ENABLE_SMASK		0x1ull
/*
* Table #49 of fxr_top - LOCA_PMON_AR_UPPER
* Performance Monitor Address Range Upper control registers. These four 
* registers define the upper address ranges for the #%%#pm_addr_range3#%%# 
* through #%%#pm_addr_range0#%%# PMON counters. 
*/
#define HFI_LOCA_PMON_AR_UPPER					(HFI_LOCA_CSRS + 0x000000000370)
#define HFI_LOCA_PMON_AR_UPPER_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_PMON_AR_UPPER_RESERVED_63_47_SHIFT		47
#define HFI_LOCA_PMON_AR_UPPER_RESERVED_63_47_MASK		0x1FFFFull
#define HFI_LOCA_PMON_AR_UPPER_RESERVED_63_47_SMASK		0xFFFF800000000000ull
#define HFI_LOCA_PMON_AR_UPPER_UPPER_ADDR_RANGE_SHIFT		12
#define HFI_LOCA_PMON_AR_UPPER_UPPER_ADDR_RANGE_MASK		0x7FFFFFFFFull
#define HFI_LOCA_PMON_AR_UPPER_UPPER_ADDR_RANGE_SMASK		0x7FFFFFFFF000ull
#define HFI_LOCA_PMON_AR_UPPER_RESERVED_11_0_SHIFT		0
#define HFI_LOCA_PMON_AR_UPPER_RESERVED_11_0_MASK		0xFFFull
#define HFI_LOCA_PMON_AR_UPPER_RESERVED_11_0_SMASK		0xFFFull
/*
* Table #50 of fxr_top - LOCA_PMON_CFG
* This CSR configures the select LOCA Performance Monitor Counters 
* (PMONs).
*/
#define HFI_LOCA_PMON_CFG					(HFI_LOCA_CSRS + 0x000000000390)
#define HFI_LOCA_PMON_CFG_RESETCSR				0x000000001F00000Full
#define HFI_LOCA_PMON_CFG_RESERVED_63_30_SHIFT			30
#define HFI_LOCA_PMON_CFG_RESERVED_63_30_MASK			0x3FFFFFFFFull
#define HFI_LOCA_PMON_CFG_RESERVED_63_30_SMASK			0xFFFFFFFFC0000000ull
#define HFI_LOCA_PMON_CFG_FID_CNT_MSK_SHIFT			24
#define HFI_LOCA_PMON_CFG_FID_CNT_MSK_MASK			0x3Full
#define HFI_LOCA_PMON_CFG_FID_CNT_MSK_SMASK			0x3F000000ull
#define HFI_LOCA_PMON_CFG_RESERVED_23_22_SHIFT			22
#define HFI_LOCA_PMON_CFG_RESERVED_23_22_MASK			0x3ull
#define HFI_LOCA_PMON_CFG_RESERVED_23_22_SMASK			0xC00000ull
#define HFI_LOCA_PMON_CFG_FID_CNT_ID_SHIFT			16
#define HFI_LOCA_PMON_CFG_FID_CNT_ID_MASK			0x3Full
#define HFI_LOCA_PMON_CFG_FID_CNT_ID_SMASK			0x3F0000ull
#define HFI_LOCA_PMON_CFG_RESERVED_15_4_SHIFT			4
#define HFI_LOCA_PMON_CFG_RESERVED_15_4_MASK			0xFFFull
#define HFI_LOCA_PMON_CFG_RESERVED_15_4_SMASK			0xFFF0ull
#define HFI_LOCA_PMON_CFG_ALLOC_OPCODE_ENA_SHIFT		3
#define HFI_LOCA_PMON_CFG_ALLOC_OPCODE_ENA_MASK			0x1ull
#define HFI_LOCA_PMON_CFG_ALLOC_OPCODE_ENA_SMASK		0x8ull
#define HFI_LOCA_PMON_CFG_RX_CNT_ENA_SHIFT			2
#define HFI_LOCA_PMON_CFG_RX_CNT_ENA_MASK			0x1ull
#define HFI_LOCA_PMON_CFG_RX_CNT_ENA_SMASK			0x4ull
#define HFI_LOCA_PMON_CFG_TX_CNT_ENA_SHIFT			1
#define HFI_LOCA_PMON_CFG_TX_CNT_ENA_MASK			0x1ull
#define HFI_LOCA_PMON_CFG_TX_CNT_ENA_SMASK			0x2ull
#define HFI_LOCA_PMON_CFG_AT_CNT_ENA_SHIFT			0
#define HFI_LOCA_PMON_CFG_AT_CNT_ENA_MASK			0x1ull
#define HFI_LOCA_PMON_CFG_AT_CNT_ENA_SMASK			0x1ull
/*
* Table #51 of fxr_top - LOCA_PMON_INFO
* This INFO register records the maximum latency values measured from sampled 
* PCIe transactions
*/
#define HFI_LOCA_PMON_INFO					(HFI_LOCA_CSRS + 0x000000000398)
#define HFI_LOCA_PMON_INFO_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_PMON_INFO_RESERVED_63_40_SHIFT			40
#define HFI_LOCA_PMON_INFO_RESERVED_63_40_MASK			0xFFFFFFull
#define HFI_LOCA_PMON_INFO_RESERVED_63_40_SMASK			0xFFFFFF0000000000ull
#define HFI_LOCA_PMON_INFO_MAX_RXGO_LATENCY_SHIFT		20
#define HFI_LOCA_PMON_INFO_MAX_RXGO_LATENCY_MASK		0xFFFFFull
#define HFI_LOCA_PMON_INFO_MAX_RXGO_LATENCY_SMASK		0xFFFFF00000ull
#define HFI_LOCA_PMON_INFO_MAX_READ_LATENCY_SHIFT		0
#define HFI_LOCA_PMON_INFO_MAX_READ_LATENCY_MASK		0xFFFFFull
#define HFI_LOCA_PMON_INFO_MAX_READ_LATENCY_SMASK		0xFFFFFull
/*
* Table #52 of fxr_top - LOCA_DBG_CACHE_CLN
* This register controls various cache clean operations in the Data Cache. A 
* cache clean operation evicts modified lines to the uncore and invalidates 
* clean lines. Clean data eviction notification will be signaled to the uncore 
* if the Clean Evict Notify strap bit is set.
*/
#define HFI_LOCA_DBG_CACHE_CLN					(HFI_LOCA_CSRS + 0x000000000100)
#define HFI_LOCA_DBG_CACHE_CLN_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_DBG_CACHE_CLN_RESERVED_63_52_SHIFT		52
#define HFI_LOCA_DBG_CACHE_CLN_RESERVED_63_52_MASK		0xFFFull
#define HFI_LOCA_DBG_CACHE_CLN_RESERVED_63_52_SMASK		0xFFF0000000000000ull
#define HFI_LOCA_DBG_CACHE_CLN_ADDR_SHIFT			6
#define HFI_LOCA_DBG_CACHE_CLN_ADDR_MASK			0x3FFFFFFFFFFFull
#define HFI_LOCA_DBG_CACHE_CLN_ADDR_SMASK			0xFFFFFFFFFFFC0ull
#define HFI_LOCA_DBG_CACHE_CLN_RESERVED_5_3_SHIFT		3
#define HFI_LOCA_DBG_CACHE_CLN_RESERVED_5_3_MASK		0x7ull
#define HFI_LOCA_DBG_CACHE_CLN_RESERVED_5_3_SMASK		0x38ull
#define HFI_LOCA_DBG_CACHE_CLN_HW_SEQ_CC_SHIFT			2
#define HFI_LOCA_DBG_CACHE_CLN_HW_SEQ_CC_MASK			0x1ull
#define HFI_LOCA_DBG_CACHE_CLN_HW_SEQ_CC_SMASK			0x4ull
#define HFI_LOCA_DBG_CACHE_CLN_CC_ENTRY_SHIFT			1
#define HFI_LOCA_DBG_CACHE_CLN_CC_ENTRY_MASK			0x1ull
#define HFI_LOCA_DBG_CACHE_CLN_CC_ENTRY_SMASK			0x2ull
#define HFI_LOCA_DBG_CACHE_CLN_CC_ADDR_SHIFT			0
#define HFI_LOCA_DBG_CACHE_CLN_CC_ADDR_MASK			0x1ull
#define HFI_LOCA_DBG_CACHE_CLN_CC_ADDR_SMASK			0x1ull
/*
* Table #53 of fxr_top - LOCA_DBG_ERRINJECT
* This register enables error injection into the DCache Read Data..
*/
#define HFI_LOCA_DBG_ERRINJECT					(HFI_LOCA_CSRS + 0x000000000108)
#define HFI_LOCA_DBG_ERRINJECT_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_DBG_ERRINJECT_RESERVED_63_16_SHIFT		16
#define HFI_LOCA_DBG_ERRINJECT_RESERVED_63_16_MASK		0xFFFFFFFFFFFFull
#define HFI_LOCA_DBG_ERRINJECT_RESERVED_63_16_SMASK		0xFFFFFFFFFFFF0000ull
#define HFI_LOCA_DBG_ERRINJECT_ENABLE_SHIFT			8
#define HFI_LOCA_DBG_ERRINJECT_ENABLE_MASK			0xFFull
#define HFI_LOCA_DBG_ERRINJECT_ENABLE_SMASK			0xFF00ull
#define HFI_LOCA_DBG_ERRINJECT_MASK_SHIFT			0
#define HFI_LOCA_DBG_ERRINJECT_MASK_MASK			0xFFull
#define HFI_LOCA_DBG_ERRINJECT_MASK_SMASK			0xFFull
/*
* Table #54 of fxr_top - LOCA_DBG_PROBE_ADDR
* Writes to this CSR will probe the DCache Directory and Data for cache hit, 
* line status and data contents. The write data provides the physical cache line 
* address used by the probe operation and a Valid bit to initiate the probe 
* operation. The #%%#LOCA_DBG_PROBE_DIR#%%# CSR provides Directory Status 
* information and the #%%#LOCA_DBG_PROBE_DATA#%%# CSRs provide the DCache Data 
* contents when the physical address hits in the cache. Reads to this register 
* return the register contents with no side effects.  
*/
#define HFI_LOCA_DBG_PROBE_ADDR					(HFI_LOCA_CSRS + 0x000000000110)
#define HFI_LOCA_DBG_PROBE_ADDR_RESETCSR			0x0000000000000000ull
#define HFI_LOCA_DBG_PROBE_ADDR_RESERVED_63_52_SHIFT		52
#define HFI_LOCA_DBG_PROBE_ADDR_RESERVED_63_52_MASK		0xFFFull
#define HFI_LOCA_DBG_PROBE_ADDR_RESERVED_63_52_SMASK		0xFFF0000000000000ull
#define HFI_LOCA_DBG_PROBE_ADDR_ADDR_SHIFT			6
#define HFI_LOCA_DBG_PROBE_ADDR_ADDR_MASK			0x3FFFFFFFFFFFull
#define HFI_LOCA_DBG_PROBE_ADDR_ADDR_SMASK			0xFFFFFFFFFFFC0ull
#define HFI_LOCA_DBG_PROBE_ADDR_RESERVED_5_1_SHIFT		1
#define HFI_LOCA_DBG_PROBE_ADDR_RESERVED_5_1_MASK		0x1Full
#define HFI_LOCA_DBG_PROBE_ADDR_RESERVED_5_1_SMASK		0x3Eull
#define HFI_LOCA_DBG_PROBE_ADDR_GO_SHIFT			0
#define HFI_LOCA_DBG_PROBE_ADDR_GO_MASK				0x1ull
#define HFI_LOCA_DBG_PROBE_ADDR_GO_SMASK			0x1ull
/*
* Table #55 of fxr_top - LOCA_DBG_PROBE_DIR
* This CSR contains the Data Cache Directory State from a Data Cache Probe 
* operation. See #%%#LOCA_DBG_PROBE_ADDR#%%# for details 
*/
#define HFI_LOCA_DBG_PROBE_DIR					(HFI_LOCA_CSRS + 0x000000000118)
#define HFI_LOCA_DBG_PROBE_DIR_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_DBG_PROBE_DIR_RESERVED_63_44_SHIFT		44
#define HFI_LOCA_DBG_PROBE_DIR_RESERVED_63_44_MASK		0xFFFFFull
#define HFI_LOCA_DBG_PROBE_DIR_RESERVED_63_44_SMASK		0xFFFFF00000000000ull
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_ADR76_SHIFT			42
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_ADR76_MASK			0x3ull
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_ADR76_SMASK			0xC0000000000ull
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_PROQSRPLY_SHIFT		41
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_PROQSRPLY_MASK		0x1ull
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_PROQSRPLY_SMASK		0x20000000000ull
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_PROQID_SHIFT		32
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_PROQID_MASK			0x1FFull
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_PROQID_SMASK		0x1FF00000000ull
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_CONQTP_SHIFT		24
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_CONQTP_MASK			0xFFull
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_CONQTP_SMASK		0xFF000000ull
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_CONQHP_SHIFT		16
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_CONQHP_MASK			0xFFull
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_CONQHP_SMASK		0xFF0000ull
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_CONQVAL_SHIFT		15
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_CONQVAL_MASK		0x1ull
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_CONQVAL_SMASK		0x8000ull
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_CHAIN_SHIFT			11
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_CHAIN_MASK			0xFull
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_CHAIN_SMASK			0x7800ull
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_CHINT1_SHIFT		10
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_CHINT1_MASK			0x1ull
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_CHINT1_SMASK		0x400ull
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_RPLFLG_SHIFT		9
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_RPLFLG_MASK			0x1ull
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_RPLFLG_SMASK		0x200ull
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_SPARE_SHIFT			8
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_SPARE_MASK			0x1ull
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_SPARE_SMASK			0x100ull
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_STATE_SHIFT			4
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_STATE_MASK			0xFull
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_STATE_SMASK			0xF0ull
#define HFI_LOCA_DBG_PROBE_DIR_DCD_VALID_SHIFT			3
#define HFI_LOCA_DBG_PROBE_DIR_DCD_VALID_MASK			0x1ull
#define HFI_LOCA_DBG_PROBE_DIR_DCD_VALID_SMASK			0x8ull
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_HIT_SHIFT			2
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_HIT_MASK			0x1ull
#define HFI_LOCA_DBG_PROBE_DIR_PCAM_HIT_SMASK			0x4ull
#define HFI_LOCA_DBG_PROBE_DIR_DCD_HIT_SHIFT			1
#define HFI_LOCA_DBG_PROBE_DIR_DCD_HIT_MASK			0x1ull
#define HFI_LOCA_DBG_PROBE_DIR_DCD_HIT_SMASK			0x2ull
#define HFI_LOCA_DBG_PROBE_DIR_VALID_SHIFT			0
#define HFI_LOCA_DBG_PROBE_DIR_VALID_MASK			0x1ull
#define HFI_LOCA_DBG_PROBE_DIR_VALID_SMASK			0x1ull
/*
* Table #56 of fxr_top - LOCA_DBG_PROBE_DATA
* These 8 CSRs provide the Data Cache contents resulting from a Cache Probe 
* operation. See #%%#LOCA_DBG_PROBE_ADDR#%%# for details on initiating a probe 
* request. The contents of these CSRs are valid when the #%%#LOCA_DBG_PROBE_DIR#%%#.VALID 
* bit is set and the #%%#LOCA_DBG_PROBE_DIR#%%# contents indicate the probe 
* resulted in a Cache Hit. Register offset 0x80 provides the least significant 
* 8B of cache line data and register offset 0xB8 provides the most significant 
* 8B of cache line data.  
*/
#define HFI_LOCA_DBG_PROBE_DATA					(HFI_LOCA_CSRS + 0x000000000120)
#define HFI_LOCA_DBG_PROBE_DATA_RESETCSR			0x0000000000000000ull
#define HFI_LOCA_DBG_PROBE_DATA_DATA_SHIFT			0
#define HFI_LOCA_DBG_PROBE_DATA_DATA_MASK			0xFFFFFFFFFFFFFFFFull
#define HFI_LOCA_DBG_PROBE_DATA_DATA_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #57 of fxr_top - LOCA_DBG_PCAM_ADDR
* Register access to the 320 entry Pending CAM (PCAM) Address content. Each 
* entry provides entry valid bit and the physical cache line address ([51:6]) 
* associated with that entry. 
*/
#define HFI_LOCA_DBG_PCAM_ADDR					(HFI_LOCA_CSRS + 0x000000001000)
#define HFI_LOCA_DBG_PCAM_ADDR_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_DBG_PCAM_ADDR_RESERVED_63_52_SHIFT		52
#define HFI_LOCA_DBG_PCAM_ADDR_RESERVED_63_52_MASK		0xFFFull
#define HFI_LOCA_DBG_PCAM_ADDR_RESERVED_63_52_SMASK		0xFFF0000000000000ull
#define HFI_LOCA_DBG_PCAM_ADDR_ADDR_SHIFT			6
#define HFI_LOCA_DBG_PCAM_ADDR_ADDR_MASK			0x3FFFFFFFFFFFull
#define HFI_LOCA_DBG_PCAM_ADDR_ADDR_SMASK			0xFFFFFFFFFFFC0ull
#define HFI_LOCA_DBG_PCAM_ADDR_RESERVED_5_1_SHIFT		1
#define HFI_LOCA_DBG_PCAM_ADDR_RESERVED_5_1_MASK		0x1Full
#define HFI_LOCA_DBG_PCAM_ADDR_RESERVED_5_1_SMASK		0x3Eull
#define HFI_LOCA_DBG_PCAM_ADDR_EVALID_SHIFT			0
#define HFI_LOCA_DBG_PCAM_ADDR_EVALID_MASK			0x1ull
#define HFI_LOCA_DBG_PCAM_ADDR_EVALID_SMASK			0x1ull
/*
* Table #58 of fxr_top - LOCA_DBG_PCAM_DATA
* Register access to the 320 entry Pending CAM (PCAM) Data content. Each entry 
* provides state, flags and request information about the pending request. Note: 
* writes to #%%#LOCA_DBG_PCAM_DATA#%%# will not mark the PCAM entry valid. See 
* #%%#LOCA_DBG_PCAM_ADDR#%%# CSR to validate a PCAM entry and set the entry CAM 
* address.  
*/
#define HFI_LOCA_DBG_PCAM_DATA					(HFI_LOCA_CSRS + 0x000000002000)
#define HFI_LOCA_DBG_PCAM_DATA_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_DBG_PCAM_DATA_RESERVED_63_40_SHIFT		40
#define HFI_LOCA_DBG_PCAM_DATA_RESERVED_63_40_MASK		0xFFFFFFull
#define HFI_LOCA_DBG_PCAM_DATA_RESERVED_63_40_SMASK		0xFFFFFF0000000000ull
#define HFI_LOCA_DBG_PCAM_DATA_ADR76_SHIFT			38
#define HFI_LOCA_DBG_PCAM_DATA_ADR76_MASK			0x3ull
#define HFI_LOCA_DBG_PCAM_DATA_ADR76_SMASK			0xC000000000ull
#define HFI_LOCA_DBG_PCAM_DATA_PROQSRPLY_SHIFT			37
#define HFI_LOCA_DBG_PCAM_DATA_PROQSRPLY_MASK			0x1ull
#define HFI_LOCA_DBG_PCAM_DATA_PROQSRPLY_SMASK			0x2000000000ull
#define HFI_LOCA_DBG_PCAM_DATA_PROQID_SHIFT			28
#define HFI_LOCA_DBG_PCAM_DATA_PROQID_MASK			0x1FFull
#define HFI_LOCA_DBG_PCAM_DATA_PROQID_SMASK			0x1FF0000000ull
#define HFI_LOCA_DBG_PCAM_DATA_CONQTP_SHIFT			20
#define HFI_LOCA_DBG_PCAM_DATA_CONQTP_MASK			0xFFull
#define HFI_LOCA_DBG_PCAM_DATA_CONQTP_SMASK			0xFF00000ull
#define HFI_LOCA_DBG_PCAM_DATA_CONQHP_SHIFT			12
#define HFI_LOCA_DBG_PCAM_DATA_CONQHP_MASK			0xFFull
#define HFI_LOCA_DBG_PCAM_DATA_CONQHP_SMASK			0xFF000ull
#define HFI_LOCA_DBG_PCAM_DATA_CONQVAL_SHIFT			11
#define HFI_LOCA_DBG_PCAM_DATA_CONQVAL_MASK			0x1ull
#define HFI_LOCA_DBG_PCAM_DATA_CONQVAL_SMASK			0x800ull
#define HFI_LOCA_DBG_PCAM_DATA_CHAIN_SHIFT			7
#define HFI_LOCA_DBG_PCAM_DATA_CHAIN_MASK			0xFull
#define HFI_LOCA_DBG_PCAM_DATA_CHAIN_SMASK			0x780ull
#define HFI_LOCA_DBG_PCAM_DATA_CHINT1_SHIFT			6
#define HFI_LOCA_DBG_PCAM_DATA_CHINT1_MASK			0x1ull
#define HFI_LOCA_DBG_PCAM_DATA_CHINT1_SMASK			0x40ull
#define HFI_LOCA_DBG_PCAM_DATA_RPLFLG_SHIFT			5
#define HFI_LOCA_DBG_PCAM_DATA_RPLFLG_MASK			0x1ull
#define HFI_LOCA_DBG_PCAM_DATA_RPLFLG_SMASK			0x20ull
#define HFI_LOCA_DBG_PCAM_DATA_SPARE_SHIFT			4
#define HFI_LOCA_DBG_PCAM_DATA_SPARE_MASK			0x1ull
#define HFI_LOCA_DBG_PCAM_DATA_SPARE_SMASK			0x10ull
#define HFI_LOCA_DBG_PCAM_DATA_STATE_SHIFT			0
#define HFI_LOCA_DBG_PCAM_DATA_STATE_MASK			0xFull
#define HFI_LOCA_DBG_PCAM_DATA_STATE_SMASK			0xFull
/*
* Table #59 of fxr_top - LOCA_DBG_MRU
* Register access to the 512 entry Data Cache Directory MRU Table. Each entry 
* provides 16-bits of Pending, Valid and MRU state. One bit for each way (bank) 
* in the indexed set. The entry also describes which bank will be victimized by 
* the next new cache line for that set. 
*/
#define HFI_LOCA_DBG_MRU					(HFI_LOCA_CSRS + 0x000000000800)
#define HFI_LOCA_DBG_MRU_RESETCSR				0x0101010100000000ull
#define HFI_LOCA_DBG_MRU_VICTIM3_SHIFT				56
#define HFI_LOCA_DBG_MRU_VICTIM3_MASK				0xFFull
#define HFI_LOCA_DBG_MRU_VICTIM3_SMASK				0xFF00000000000000ull
#define HFI_LOCA_DBG_MRU_VICTIM2_SHIFT				48
#define HFI_LOCA_DBG_MRU_VICTIM2_MASK				0xFFull
#define HFI_LOCA_DBG_MRU_VICTIM2_SMASK				0xFF000000000000ull
#define HFI_LOCA_DBG_MRU_VICTIM1_SHIFT				40
#define HFI_LOCA_DBG_MRU_VICTIM1_MASK				0xFFull
#define HFI_LOCA_DBG_MRU_VICTIM1_SMASK				0xFF0000000000ull
#define HFI_LOCA_DBG_MRU_VICTIM0_SHIFT				32
#define HFI_LOCA_DBG_MRU_VICTIM0_MASK				0xFFull
#define HFI_LOCA_DBG_MRU_VICTIM0_SMASK				0xFF00000000ull
#define HFI_LOCA_DBG_MRU_RESERVED_31_24_SHIFT			24
#define HFI_LOCA_DBG_MRU_RESERVED_31_24_MASK			0xFFull
#define HFI_LOCA_DBG_MRU_RESERVED_31_24_SMASK			0xFF000000ull
#define HFI_LOCA_DBG_MRU_MRU_SHIFT				16
#define HFI_LOCA_DBG_MRU_MRU_MASK				0xFFull
#define HFI_LOCA_DBG_MRU_MRU_SMASK				0xFF0000ull
#define HFI_LOCA_DBG_MRU_VALID_SHIFT				8
#define HFI_LOCA_DBG_MRU_VALID_MASK				0xFFull
#define HFI_LOCA_DBG_MRU_VALID_SMASK				0xFF00ull
#define HFI_LOCA_DBG_MRU_PENDING_SHIFT				0
#define HFI_LOCA_DBG_MRU_PENDING_MASK				0xFFull
#define HFI_LOCA_DBG_MRU_PENDING_SMASK				0xFFull
/*
* Table #60 of fxr_top - LOCA_DBG_PROQ_FID_STATE
* Register access to the state of the 33 Flow IDs queues implemented in PROQ. 
* FlowID[32] is the Global ID queue. Entry contents are defined 
* below
*/
#define HFI_LOCA_DBG_PROQ_FID_STATE				(HFI_LOCA_CSRS + 0x000000003000)
#define HFI_LOCA_DBG_PROQ_FID_STATE_RESETCSR			0x0000000000000000ull
#define HFI_LOCA_DBG_PROQ_FID_STATE_RESERVED_63_41_SHIFT	41
#define HFI_LOCA_DBG_PROQ_FID_STATE_RESERVED_63_41_MASK		0x7FFFFFull
#define HFI_LOCA_DBG_PROQ_FID_STATE_RESERVED_63_41_SMASK	0xFFFFFE0000000000ull
#define HFI_LOCA_DBG_PROQ_FID_STATE_HEADPTR_SHIFT		32
#define HFI_LOCA_DBG_PROQ_FID_STATE_HEADPTR_MASK		0x1FFull
#define HFI_LOCA_DBG_PROQ_FID_STATE_HEADPTR_SMASK		0x1FF00000000ull
#define HFI_LOCA_DBG_PROQ_FID_STATE_RESERVED_31_17_SHIFT	17
#define HFI_LOCA_DBG_PROQ_FID_STATE_RESERVED_31_17_MASK		0x7FFFull
#define HFI_LOCA_DBG_PROQ_FID_STATE_RESERVED_31_17_SMASK	0xFFFE0000ull
#define HFI_LOCA_DBG_PROQ_FID_STATE_TAILPTR_SHIFT		8
#define HFI_LOCA_DBG_PROQ_FID_STATE_TAILPTR_MASK		0x1FFull
#define HFI_LOCA_DBG_PROQ_FID_STATE_TAILPTR_SMASK		0x1FF00ull
#define HFI_LOCA_DBG_PROQ_FID_STATE_RESERVED_7_4_SHIFT		4
#define HFI_LOCA_DBG_PROQ_FID_STATE_RESERVED_7_4_MASK		0xFull
#define HFI_LOCA_DBG_PROQ_FID_STATE_RESERVED_7_4_SMASK		0xF0ull
#define HFI_LOCA_DBG_PROQ_FID_STATE_EMPTY_SHIFT			3
#define HFI_LOCA_DBG_PROQ_FID_STATE_EMPTY_MASK			0x1ull
#define HFI_LOCA_DBG_PROQ_FID_STATE_EMPTY_SMASK			0x8ull
#define HFI_LOCA_DBG_PROQ_FID_STATE_CONQSENT_SHIFT		2
#define HFI_LOCA_DBG_PROQ_FID_STATE_CONQSENT_MASK		0x1ull
#define HFI_LOCA_DBG_PROQ_FID_STATE_CONQSENT_SMASK		0x4ull
#define HFI_LOCA_DBG_PROQ_FID_STATE_CMPL_RCV_SHIFT		1
#define HFI_LOCA_DBG_PROQ_FID_STATE_CMPL_RCV_MASK		0x1ull
#define HFI_LOCA_DBG_PROQ_FID_STATE_CMPL_RCV_SMASK		0x2ull
#define HFI_LOCA_DBG_PROQ_FID_STATE_HLD_SHIFT			0
#define HFI_LOCA_DBG_PROQ_FID_STATE_HLD_MASK			0x1ull
#define HFI_LOCA_DBG_PROQ_FID_STATE_HLD_SMASK			0x1ull
/*
* Table #61 of fxr_top - LOCA_DBG_PROQ_CMPLT
* Register access to the 512 complete state bits in the PROQ. The 8 registers 
* (64 bits each) in total provide all 512 completion bits in the PROQ, one bit 
* for each PROQ entry. Register N provides completion bits for PROQ entries 
* [64N+63:64N] 
*/
#define HFI_LOCA_DBG_PROQ_CMPLT					(HFI_LOCA_CSRS + 0x000000003200)
#define HFI_LOCA_DBG_PROQ_CMPLT_RESETCSR			0x0000000000000000ull
#define HFI_LOCA_DBG_PROQ_CMPLT_COMPLETE_SHIFT			0
#define HFI_LOCA_DBG_PROQ_CMPLT_COMPLETE_MASK			0xFFFFFFFFFFFFFFFFull
#define HFI_LOCA_DBG_PROQ_CMPLT_COMPLETE_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #62 of fxr_top - LOCA_DBG_PROQ_GLOBAL
* Register access to the 512 Global ID state bits in the PROQ. The 8 registers 
* (64 bits each) in total provide all 512 global bits in the PROQ, one bit for 
* each PROQ entry. Register N provides global bits for PROQ entries [64N+63:64N] 
* 
*/
#define HFI_LOCA_DBG_PROQ_GLOBAL				(HFI_LOCA_CSRS + 0x000000003240)
#define HFI_LOCA_DBG_PROQ_GLOBAL_RESETCSR			0x0000000000000000ull
#define HFI_LOCA_DBG_PROQ_GLOBAL_GLOBAL_ID_SHIFT		0
#define HFI_LOCA_DBG_PROQ_GLOBAL_GLOBAL_ID_MASK			0xFFFFFFFFFFFFFFFFull
#define HFI_LOCA_DBG_PROQ_GLOBAL_GLOBAL_ID_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #63 of fxr_top - LOCA_DBG_PROQ_CONQVAL
* Register access to the 512 ConQ valid state bits in the PROQ. The 8 registers 
* (64 bits each) in total provide all 512 ConQ bits in the PROQ, one bit for 
* each PROQ entry. Register N provides ConQ bits for PROQ entries [64N+63:64N] 
* 
*/
#define HFI_LOCA_DBG_PROQ_CONQVAL				(HFI_LOCA_CSRS + 0x000000003280)
#define HFI_LOCA_DBG_PROQ_CONQVAL_RESETCSR			0x0000000000000000ull
#define HFI_LOCA_DBG_PROQ_CONQVAL_CONQVAL_SHIFT			0
#define HFI_LOCA_DBG_PROQ_CONQVAL_CONQVAL_MASK			0xFFFFFFFFFFFFFFFFull
#define HFI_LOCA_DBG_PROQ_CONQVAL_CONQVAL_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #64 of fxr_top - LOCA_DBG_PMI_ORB0
* Register access to the 320 PMI ORB entries. One CSR per entry. ORB State0 bits 
* are presented here. ORB State1 bits are described in #%%#Section 33.18.7.14, 
* 'PMI ORB State1 Debug'
*/
#define HFI_LOCA_DBG_PMI_ORB0					(HFI_LOCA_CSRS + 0x000000004000)
#define HFI_LOCA_DBG_PMI_ORB0_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_DBG_PMI_ORB0_ORB0_SHIFT			0
#define HFI_LOCA_DBG_PMI_ORB0_ORB0_MASK				0xFFFFFFFFFFFFFFFFull
#define HFI_LOCA_DBG_PMI_ORB0_ORB0_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #65 of fxr_top - LOCA_DBG_PMI_ORB1
* Register access to the 320 PMI ORB entries. One CSR per entry. ORB State0 bits 
* are presented here. ORB State0 bits are described in #%%#Section 33.18.7.13, 
* 'PMI ORB State0 Debug' 
*/
#define HFI_LOCA_DBG_PMI_ORB1					(HFI_LOCA_CSRS + 0x000000004008)
#define HFI_LOCA_DBG_PMI_ORB1_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_DBG_PMI_ORB1_ORB1_SHIFT			0
#define HFI_LOCA_DBG_PMI_ORB1_ORB1_MASK				0xFFFFFFFFFFFFFFFFull
#define HFI_LOCA_DBG_PMI_ORB1_ORB1_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #66 of fxr_top - LOCA_DBG_PMI_ORBVAL
* Register access to the 320 PMI ORB Vaild bits. Total of 5 CSRs with 64 Valid 
* bits per CSR entry. Register N provides Valid bits for ORB entries 
* [64N+63:64N]. 
*/
#define HFI_LOCA_DBG_PMI_ORBVAL					(HFI_LOCA_CSRS + 0x000000006000)
#define HFI_LOCA_DBG_PMI_ORBVAL_RESETCSR			0x0000000000000000ull
#define HFI_LOCA_DBG_PMI_ORBVAL_VALID_SHIFT			0
#define HFI_LOCA_DBG_PMI_ORBVAL_VALID_MASK			0xFFFFFFFFFFFFFFFFull
#define HFI_LOCA_DBG_PMI_ORBVAL_VALID_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #67 of fxr_top - LOCA_DBG_CONQ_TAILVAL
* Register access to the Tail Valid state of the 256 ConQ entries. Each CSR 
* provides 64 Tail Valid bits. Register N provides Tail Valid bits for ConQ 
* entries [64N+63:64N] 
*/
#define HFI_LOCA_DBG_CONQ_TAILVAL				(HFI_LOCA_CSRS + 0x000000006180)
#define HFI_LOCA_DBG_CONQ_TAILVAL_RESETCSR			0x0000000000000000ull
#define HFI_LOCA_DBG_CONQ_TAILVAL_TAIL_VALID_SHIFT		0
#define HFI_LOCA_DBG_CONQ_TAILVAL_TAIL_VALID_MASK		0xFFFFFFFFFFFFFFFFull
#define HFI_LOCA_DBG_CONQ_TAILVAL_TAIL_VALID_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #68 of fxr_top - LOCA_DBG_CONQ_PSRRPLY
* Register access to the PSR Replay state of the 256 ConQ entries. Each CSR 
* provides 64 PSR Replay bits. Register N provides PSR Replay bits for ConQ 
* entries [64N+63:64N] 
*/
#define HFI_LOCA_DBG_CONQ_PSRRPLY				(HFI_LOCA_CSRS + 0x0000000061C0)
#define HFI_LOCA_DBG_CONQ_PSRRPLY_RESETCSR			0x0000000000000000ull
#define HFI_LOCA_DBG_CONQ_PSRRPLY_PSR_REPLAY_SHIFT		0
#define HFI_LOCA_DBG_CONQ_PSRRPLY_PSR_REPLAY_MASK		0xFFFFFFFFFFFFFFFFull
#define HFI_LOCA_DBG_CONQ_PSRRPLY_PSR_REPLAY_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #69 of fxr_top - LOCA_DBG_CONQ_HEADER0
* Register access to the 256 ConQ Request Header0. One CSR per entry. Header0 
* bits are presented here. Header1 bits are described in #%%#Section 33.18.7.19, 
* 'ConQ Header1 Debug'
*/
#define HFI_LOCA_DBG_CONQ_HEADER0				(HFI_LOCA_CSRS + 0x000000007000)
#define HFI_LOCA_DBG_CONQ_HEADER0_RESETCSR			0x0000000000000000ull
#define HFI_LOCA_DBG_CONQ_HEADER0_HEADER0_SHIFT			0
#define HFI_LOCA_DBG_CONQ_HEADER0_HEADER0_MASK			0xFFFFFFFFFFFFFFFFull
#define HFI_LOCA_DBG_CONQ_HEADER0_HEADER0_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #70 of fxr_top - LOCA_DBG_CONQ_HEADER1
* Register access to the 256 ConQ Request Header1. One CSR per entry. Header1 
* bits are presented here. Header0 bits are described in #%%#Section 33.18.7.18, 
* 'ConQ Header0 Debug' 
*/
#define HFI_LOCA_DBG_CONQ_HEADER1				(HFI_LOCA_CSRS + 0x000000007008)
#define HFI_LOCA_DBG_CONQ_HEADER1_RESETCSR			0x0000000000000000ull
#define HFI_LOCA_DBG_CONQ_HEADER1_HEADER1_SHIFT			0
#define HFI_LOCA_DBG_CONQ_HEADER1_HEADER1_MASK			0xFFFFFFFFFFFFFFFFull
#define HFI_LOCA_DBG_CONQ_HEADER1_HEADER1_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #71 of fxr_top - LOCA_DBG_CONQ_LINKS
* Register access to the 256 ConQ Request Links state. One CSR per 
* entry.
*/
#define HFI_LOCA_DBG_CONQ_LINKS					(HFI_LOCA_CSRS + 0x000000008000)
#define HFI_LOCA_DBG_CONQ_LINKS_RESETCSR			0x0000000000000000ull
#define HFI_LOCA_DBG_CONQ_LINKS_LINKS_SHIFT			0
#define HFI_LOCA_DBG_CONQ_LINKS_LINKS_MASK			0xFFFFFFFFFFFFFFFFull
#define HFI_LOCA_DBG_CONQ_LINKS_LINKS_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #72 of fxr_top - LOCA_DBG_DCD0
* Register access to the 1K entry Data Cache Directory0. Each entry provides the 
* 64 bit Byte Valid vector for the cached line. DCD entry is mapped as 
* follows:Register Address Bits [13:11] - DCD way (bank)Register Address Bits 
* [10:4] - DCD set (index).
*/
#define HFI_LOCA_DBG_DCD0					(HFI_LOCA_CSRS + 0x000000010000)
#define HFI_LOCA_DBG_DCD0_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_DBG_DCD0_BYTE_VALID_SHIFT			0
#define HFI_LOCA_DBG_DCD0_BYTE_VALID_MASK			0xFFFFFFFFFFFFFFFFull
#define HFI_LOCA_DBG_DCD0_BYTE_VALID_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #73 of fxr_top - LOCA_DBG_DCD1
* Register access to the 1K entry Data Cache Directory1. Each entry provides the 
* 44 bit TAG and Entry Valid bit for the cached line.DCD entry is mapped as 
* follows:Register Address Bits [13:11] - DCD way (bank)Register Address Bits 
* [10:4] - DCD set (index).
*/
#define HFI_LOCA_DBG_DCD1					(HFI_LOCA_CSRS + 0x000000010008)
#define HFI_LOCA_DBG_DCD1_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_DBG_DCD1_RESERVED_63_58_SHIFT			58
#define HFI_LOCA_DBG_DCD1_RESERVED_63_58_MASK			0x3Full
#define HFI_LOCA_DBG_DCD1_RESERVED_63_58_SMASK			0xFC00000000000000ull
#define HFI_LOCA_DBG_DCD1_VALID_SHIFT				57
#define HFI_LOCA_DBG_DCD1_VALID_MASK				0x1ull
#define HFI_LOCA_DBG_DCD1_VALID_SMASK				0x200000000000000ull
#define HFI_LOCA_DBG_DCD1_TAG1_SHIFT				15
#define HFI_LOCA_DBG_DCD1_TAG1_MASK				0x3FFFFFFFFFFull
#define HFI_LOCA_DBG_DCD1_TAG1_SMASK				0x1FFFFFFFFFF8000ull
#define HFI_LOCA_DBG_DCD1_ADDR_SHIFT				8
#define HFI_LOCA_DBG_DCD1_ADDR_MASK				0x7Full
#define HFI_LOCA_DBG_DCD1_ADDR_SMASK				0x7F00ull
#define HFI_LOCA_DBG_DCD1_TAG0_SHIFT				6
#define HFI_LOCA_DBG_DCD1_TAG0_MASK				0x3ull
#define HFI_LOCA_DBG_DCD1_TAG0_SMASK				0xC0ull
#define HFI_LOCA_DBG_DCD1_RESERVED_5_3_SHIFT			3
#define HFI_LOCA_DBG_DCD1_RESERVED_5_3_MASK			0x7ull
#define HFI_LOCA_DBG_DCD1_RESERVED_5_3_SMASK			0x38ull
#define HFI_LOCA_DBG_DCD1_WAY_SHIFT				0
#define HFI_LOCA_DBG_DCD1_WAY_MASK				0x7ull
#define HFI_LOCA_DBG_DCD1_WAY_SMASK				0x7ull
/*
* Table #74 of fxr_top - LOCA_DBG_GO_CPORB
* Register access to the 320 entry Completion ORB.
*/
#define HFI_LOCA_DBG_GO_CPORB					(HFI_LOCA_CSRS + 0x000000018000)
#define HFI_LOCA_DBG_GO_CPORB_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_DBG_GO_CPORB_RESERVED_63_25_SHIFT		25
#define HFI_LOCA_DBG_GO_CPORB_RESERVED_63_25_MASK		0x7FFFFFFFFFull
#define HFI_LOCA_DBG_GO_CPORB_RESERVED_63_25_SMASK		0xFFFFFFFFFE000000ull
#define HFI_LOCA_DBG_GO_CPORB_VALID_SHIFT			24
#define HFI_LOCA_DBG_GO_CPORB_VALID_MASK			0x1ull
#define HFI_LOCA_DBG_GO_CPORB_VALID_SMASK			0x1000000ull
#define HFI_LOCA_DBG_GO_CPORB_GEN_ID_SHIFT			12
#define HFI_LOCA_DBG_GO_CPORB_GEN_ID_MASK			0xFFFull
#define HFI_LOCA_DBG_GO_CPORB_GEN_ID_SMASK			0xFFF000ull
#define HFI_LOCA_DBG_GO_CPORB_RESERVED_11_9_SHIFT		9
#define HFI_LOCA_DBG_GO_CPORB_RESERVED_11_9_MASK		0x7ull
#define HFI_LOCA_DBG_GO_CPORB_RESERVED_11_9_SMASK		0xE00ull
#define HFI_LOCA_DBG_GO_CPORB_WRR_PTR_SHIFT			0
#define HFI_LOCA_DBG_GO_CPORB_WRR_PTR_MASK			0x1FFull
#define HFI_LOCA_DBG_GO_CPORB_WRR_PTR_SMASK			0x1FFull
/*
* Table #75 of fxr_top - LOCA_DBG_GO_WRR
* Register access to the 512 entry Write RR FIFO.
*/
#define HFI_LOCA_DBG_GO_WRR					(HFI_LOCA_CSRS + 0x000000019000)
#define HFI_LOCA_DBG_GO_WRR_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_DBG_GO_WRR_RESERVED_63_12_SHIFT		12
#define HFI_LOCA_DBG_GO_WRR_RESERVED_63_12_MASK			0xFFFFFFFFFFFFFull
#define HFI_LOCA_DBG_GO_WRR_RESERVED_63_12_SMASK		0xFFFFFFFFFFFFF000ull
#define HFI_LOCA_DBG_GO_WRR_HFI_TID_SHIFT			0
#define HFI_LOCA_DBG_GO_WRR_HFI_TID_MASK			0xFFFull
#define HFI_LOCA_DBG_GO_WRR_HFI_TID_SMASK			0xFFFull
/*
* Table #76 of fxr_top - LOCA_DBG_DCACHE
* Register access to the 64MB Data Cache. Each entry provides 8B of raw DCache 
* access for a total of 8K entries. Entries are addressed as follows:
*/
#define HFI_LOCA_DBG_DCACHE					(HFI_LOCA_CSRS + 0x000000100000)
#define HFI_LOCA_DBG_DCACHE_RESETCSR				0x0000000000000000ull
#define HFI_LOCA_DBG_DCACHE_DATA_SHIFT				0
#define HFI_LOCA_DBG_DCACHE_DATA_MASK				0xFFFFFFFFFFFFFFFFull
#define HFI_LOCA_DBG_DCACHE_DATA_SMASK				0xFFFFFFFFFFFFFFFFull

#endif 		/* DEF_FXR_LOCA_SW_DEF */

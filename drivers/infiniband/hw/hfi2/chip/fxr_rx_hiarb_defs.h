/*
*------------------------------------------------------------------------------
*                                                                              
*  INTEL CONFIDENTIAL                                                          
*                                                                              
*  Copyright 2016 Intel Corporation All Rights Reserved.                 
*                                                                              
*  The source code contained or described herein and all documents related     
*  to the source code ("Material") are owned by Intel Corporation or its    
*  suppliers or licensors. Title to the Material remains with Intel            
*  Corporation or its suppliers and licensors. The Material contains trade     
*  secrets and proprietary and confidential information of Intel or its        
*  suppliers and licensors. The Material is protected by worldwide copyright   
*  and trade secret laws and treaty provisions. No part of the Material may    
*  be used, copied, reproduced, modified, published, uploaded, posted,         
*  transmitted, distributed, or disclosed in any way without Intel's prior     
*  express written permission.                                                 
*                                                                              
*  No license under any patent, copyright, trade secret or other intellectual  
*  property right is granted to or conferred upon you by disclosure or         
*  delivery of the Materials, either expressly, by implication, inducement,    
*  estoppel or otherwise. Any license under such intellectual property rights  
*  must be express and approved by Intel in writing.                           
*                                                                              
*------------------------------------------------------------------------------
*  Auto-generated by /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/i_csrs.pl
*  i_csrs.pl Version 1.5 last modified on Monday 12/19/16 11:42:34
*  /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/i_csrs.pl -C -RVREGS -ST fxr_rx_hiarb -o /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/fxr /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/repo_xml/300_Memory_Map.xml /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/repo_xml/334_Memory_Map_RX_HIARB.xml
*------------------------------------------------------------------------------
*/

#ifndef DEF_FXR_RX_HIARB_SW_DEF
#define DEF_FXR_RX_HIARB_SW_DEF

#ifndef FXR_RX_HIARB_CSRS
#define FXR_RX_HIARB_CSRS						0x000000000000ULL
#endif
#define FXR_NUM_CONTEXTS						192
#define FXR_NUM_PIDS							4096
#define FXR_MAX_CONTEXT							191
#define FXR_TX_CONTEXT_ENTRIES						128
#define FXR_TX_CONTEXT_MAX						127
#define FXR_RX_CONTEXT_ENTRIES						16
#define FXR_RX_CONTEXT_MAX						15
#define FXR_NUM_SL							32
#define FXR_MAX_SL							31
#define RX_HIARB_BASE							0
/*
* Table #4 of fxr_top - RXHIARB_CFG_PCB_LOW
* The lower entries of the Process Context Block Table. Note that byte-wise 
* operations are not supported by logic. Also note that the hardware will 
* require 4K clock cycles after the de-assertion of reset so to scrub the PCB 
* table to its reset values and initialize the ECC check bits.
*/
#define FXR_RXHIARB_CFG_PCB_LOW						(FXR_RX_HIARB_CSRS + 0x000000000000)
#define FXR_RXHIARB_CFG_PCB_LOW_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_CFG_PCB_LOW_RESERVED_63_57_SHIFT			57
#define FXR_RXHIARB_CFG_PCB_LOW_RESERVED_63_57_MASK			0x7Full
#define FXR_RXHIARB_CFG_PCB_LOW_RESERVED_63_57_SMASK			0xFE00000000000000ull
#define FXR_RXHIARB_CFG_PCB_LOW_PORTALS_STATE_BASE_SHIFT		12
#define FXR_RXHIARB_CFG_PCB_LOW_PORTALS_STATE_BASE_MASK			0x1FFFFFFFFFFFull
#define FXR_RXHIARB_CFG_PCB_LOW_PORTALS_STATE_BASE_SMASK		0x1FFFFFFFFFFF000ull
#define FXR_RXHIARB_CFG_PCB_LOW_RESERVED_11_1_SHIFT			1
#define FXR_RXHIARB_CFG_PCB_LOW_RESERVED_11_1_MASK			0x7FFull
#define FXR_RXHIARB_CFG_PCB_LOW_RESERVED_11_1_SMASK			0xFFEull
#define FXR_RXHIARB_CFG_PCB_LOW_VALID_SHIFT				0
#define FXR_RXHIARB_CFG_PCB_LOW_VALID_MASK				0x1ull
#define FXR_RXHIARB_CFG_PCB_LOW_VALID_SMASK				0x1ull
/*
* Table #5 of fxr_top - RXHIARB_CFG_PCB_HIGH
* The upper entries of the Process Context Block Table. Note that byte-wise 
* operations are not supported by logic. Also note that the hardware will 
* require 4K clock cycles after the de-assertion of reset so to scrub the PCB 
* table to its reset values and initialize the ECC check bits.
*/
#define FXR_RXHIARB_CFG_PCB_HIGH					(FXR_RX_HIARB_CSRS + 0x000000008000)
#define FXR_RXHIARB_CFG_PCB_HIGH_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_CFG_PCB_HIGH_RESERVED_63_43_SHIFT			43
#define FXR_RXHIARB_CFG_PCB_HIGH_RESERVED_63_43_MASK			0x1FFFFFull
#define FXR_RXHIARB_CFG_PCB_HIGH_RESERVED_63_43_SMASK			0xFFFFF80000000000ull
#define FXR_RXHIARB_CFG_PCB_HIGH_LE_ME_SIZE_SHIFT			32
#define FXR_RXHIARB_CFG_PCB_HIGH_LE_ME_SIZE_MASK			0x7FFull
#define FXR_RXHIARB_CFG_PCB_HIGH_LE_ME_SIZE_SMASK			0x7FF00000000ull
#define FXR_RXHIARB_CFG_PCB_HIGH_RESERVED_31_27_SHIFT			27
#define FXR_RXHIARB_CFG_PCB_HIGH_RESERVED_31_27_MASK			0x1Full
#define FXR_RXHIARB_CFG_PCB_HIGH_RESERVED_31_27_SMASK			0xF8000000ull
#define FXR_RXHIARB_CFG_PCB_HIGH_UNEXPECTED_SIZE_SHIFT			16
#define FXR_RXHIARB_CFG_PCB_HIGH_UNEXPECTED_SIZE_MASK			0x7FFull
#define FXR_RXHIARB_CFG_PCB_HIGH_UNEXPECTED_SIZE_SMASK			0x7FF0000ull
#define FXR_RXHIARB_CFG_PCB_HIGH_RESERVED_15_11_SHIFT			11
#define FXR_RXHIARB_CFG_PCB_HIGH_RESERVED_15_11_MASK			0x1Full
#define FXR_RXHIARB_CFG_PCB_HIGH_RESERVED_15_11_SMASK			0xF800ull
#define FXR_RXHIARB_CFG_PCB_HIGH_TRIGGERED_OP_SIZE_SHIFT		0
#define FXR_RXHIARB_CFG_PCB_HIGH_TRIGGERED_OP_SIZE_MASK			0x7FFull
#define FXR_RXHIARB_CFG_PCB_HIGH_TRIGGERED_OP_SIZE_SMASK		0x7FFull
/*
* Table #6 of fxr_top - RXHIARB_CFG_HQUE_WM
* This configures the watermark levels for the holding queues. There is a single 
* high watermark that defines the total number of requests allowed within all 
* holding queues - the maximum number of in-flight requests residing within the 
* 9 holding queues. Though the design can support up to 128 in-flight requests, 
* this number must be reduced so as to not consume all of the AT's resources 
* during worst case conditions where every request is attempting to access a 
* unique 4KB page. The low watermarks are on a per holding queue basis, and 
* defines the minimum number of requests that are reserved for that holding 
* queue. This provides the capacity for each queue to achieve forward momentum 
* during cases when flow is heavily asymmetric and a holding queue (or a set of 
* holding queues) is attempting to consume all the available holding queue 
* resources. For example, if there is only traffic for a single holding queue, 
* that holding queue is able to absorb up to the high watermark subtracting the 
* sum of the low watermarks for the other 8 holding queues. In the default case, 
* this would be 112-(8*2), or 96 requests. Note that in order to guard against 
* corrupting the logic's internal counters, the logic will only apply these 
* values when the holding queues are idle and empty. Therefore, if one attempts 
* to reconfigure these values during traffic, even though the updated values 
* will be accepted by the CSR register, they will not be used by the logic until 
* all the holding queues are in a quiescent state (i.e. drained and 
* idle),
*/
#define FXR_RXHIARB_CFG_HQUE_WM						(FXR_RX_HIARB_CSRS + 0x000000010000)
#define FXR_RXHIARB_CFG_HQUE_WM_RESETCSR				0x0000700222222222ull
#define FXR_RXHIARB_CFG_HQUE_WM_RESERVED_63_48_SHIFT			48
#define FXR_RXHIARB_CFG_HQUE_WM_RESERVED_63_48_MASK			0xFFFFull
#define FXR_RXHIARB_CFG_HQUE_WM_RESERVED_63_48_SMASK			0xFFFF000000000000ull
#define FXR_RXHIARB_CFG_HQUE_WM_HQUE_WM_HI_ALL_SHIFT			40
#define FXR_RXHIARB_CFG_HQUE_WM_HQUE_WM_HI_ALL_MASK			0xFFull
#define FXR_RXHIARB_CFG_HQUE_WM_HQUE_WM_HI_ALL_SMASK			0xFF0000000000ull
#define FXR_RXHIARB_CFG_HQUE_WM_RESERVED_39_36_SHIFT			36
#define FXR_RXHIARB_CFG_HQUE_WM_RESERVED_39_36_MASK			0xFull
#define FXR_RXHIARB_CFG_HQUE_WM_RESERVED_39_36_SMASK			0xF000000000ull
#define FXR_RXHIARB_CFG_HQUE_WM_HQUE_WM_LOW8_SHIFT			32
#define FXR_RXHIARB_CFG_HQUE_WM_HQUE_WM_LOW8_MASK			0xFull
#define FXR_RXHIARB_CFG_HQUE_WM_HQUE_WM_LOW8_SMASK			0xF00000000ull
#define FXR_RXHIARB_CFG_HQUE_WM_HQUE_WM_LOW7_SHIFT			28
#define FXR_RXHIARB_CFG_HQUE_WM_HQUE_WM_LOW7_MASK			0xFull
#define FXR_RXHIARB_CFG_HQUE_WM_HQUE_WM_LOW7_SMASK			0xF0000000ull
#define FXR_RXHIARB_CFG_HQUE_WM_HQUE_WM_LOW6_SHIFT			24
#define FXR_RXHIARB_CFG_HQUE_WM_HQUE_WM_LOW6_MASK			0xFull
#define FXR_RXHIARB_CFG_HQUE_WM_HQUE_WM_LOW6_SMASK			0xF000000ull
#define FXR_RXHIARB_CFG_HQUE_WM_HQUE_WM_LOW5_SHIFT			20
#define FXR_RXHIARB_CFG_HQUE_WM_HQUE_WM_LOW5_MASK			0xFull
#define FXR_RXHIARB_CFG_HQUE_WM_HQUE_WM_LOW5_SMASK			0xF00000ull
#define FXR_RXHIARB_CFG_HQUE_WM_HQUE_WM_LOW4_SHIFT			16
#define FXR_RXHIARB_CFG_HQUE_WM_HQUE_WM_LOW4_MASK			0xFull
#define FXR_RXHIARB_CFG_HQUE_WM_HQUE_WM_LOW4_SMASK			0xF0000ull
#define FXR_RXHIARB_CFG_HQUE_WM_HQUE_WM_LOW3_SHIFT			12
#define FXR_RXHIARB_CFG_HQUE_WM_HQUE_WM_LOW3_MASK			0xFull
#define FXR_RXHIARB_CFG_HQUE_WM_HQUE_WM_LOW3_SMASK			0xF000ull
#define FXR_RXHIARB_CFG_HQUE_WM_HQUE_WM_LOW2_SHIFT			8
#define FXR_RXHIARB_CFG_HQUE_WM_HQUE_WM_LOW2_MASK			0xFull
#define FXR_RXHIARB_CFG_HQUE_WM_HQUE_WM_LOW2_SMASK			0xF00ull
#define FXR_RXHIARB_CFG_HQUE_WM_HQUE_WM_LOW1_SHIFT			4
#define FXR_RXHIARB_CFG_HQUE_WM_HQUE_WM_LOW1_MASK			0xFull
#define FXR_RXHIARB_CFG_HQUE_WM_HQUE_WM_LOW1_SMASK			0xF0ull
#define FXR_RXHIARB_CFG_HQUE_WM_HQUE_WM_LOW0_SHIFT			0
#define FXR_RXHIARB_CFG_HQUE_WM_HQUE_WM_LOW0_MASK			0xFull
#define FXR_RXHIARB_CFG_HQUE_WM_HQUE_WM_LOW0_SMASK			0xFull
/*
* Table #7 of fxr_top - RXHIARB_CFG_PERF_MATCH
* This configures the match criteria for both the AT latency performance counter 
* and the read latency performance counter. There is a separate criteria for 
* each type, along with enables to enable/disable the increments from being sent 
* to the performance counter logic. Whenever a request is detected that matches 
* these criteria, a single increment will be sent to the performance counters to 
* count requests. In parallel, logic will monitor the response delay by 
* incrementing for each clock cycle until the corresponding response returns, so 
* to provide performance counter's delay value.,
*/
#define FXR_RXHIARB_CFG_PERF_MATCH					(FXR_RX_HIARB_CSRS + 0x000000010008)
#define FXR_RXHIARB_CFG_PERF_MATCH_RESETCSR				0x00000FFF00007F00ull
#define FXR_RXHIARB_CFG_PERF_MATCH_RESERVED_63_48_SHIFT			48
#define FXR_RXHIARB_CFG_PERF_MATCH_RESERVED_63_48_MASK			0xFFFFull
#define FXR_RXHIARB_CFG_PERF_MATCH_RESERVED_63_48_SMASK			0xFFFF000000000000ull
#define FXR_RXHIARB_CFG_PERF_MATCH_RD_DLY_MATCH_EN_SHIFT		47
#define FXR_RXHIARB_CFG_PERF_MATCH_RD_DLY_MATCH_EN_MASK			0x1ull
#define FXR_RXHIARB_CFG_PERF_MATCH_RD_DLY_MATCH_EN_SMASK		0x800000000000ull
#define FXR_RXHIARB_CFG_PERF_MATCH_RESERVED_46_44_SHIFT			44
#define FXR_RXHIARB_CFG_PERF_MATCH_RESERVED_46_44_MASK			0x7ull
#define FXR_RXHIARB_CFG_PERF_MATCH_RESERVED_46_44_SMASK			0x700000000000ull
#define FXR_RXHIARB_CFG_PERF_MATCH_RD_DLY_MASK_SHIFT			32
#define FXR_RXHIARB_CFG_PERF_MATCH_RD_DLY_MASK_MASK			0xFFFull
#define FXR_RXHIARB_CFG_PERF_MATCH_RD_DLY_MASK_SMASK			0xFFF00000000ull
#define FXR_RXHIARB_CFG_PERF_MATCH_RESERVED_31_28_SHIFT			28
#define FXR_RXHIARB_CFG_PERF_MATCH_RESERVED_31_28_MASK			0xFull
#define FXR_RXHIARB_CFG_PERF_MATCH_RESERVED_31_28_SMASK			0xF0000000ull
#define FXR_RXHIARB_CFG_PERF_MATCH_RD_DLY_MATCH_TID_SHIFT		16
#define FXR_RXHIARB_CFG_PERF_MATCH_RD_DLY_MATCH_TID_MASK		0xFFFull
#define FXR_RXHIARB_CFG_PERF_MATCH_RD_DLY_MATCH_TID_SMASK		0xFFF0000ull
#define FXR_RXHIARB_CFG_PERF_MATCH_AT_DLY_MATCH_EN_SHIFT		15
#define FXR_RXHIARB_CFG_PERF_MATCH_AT_DLY_MATCH_EN_MASK			0x1ull
#define FXR_RXHIARB_CFG_PERF_MATCH_AT_DLY_MATCH_EN_SMASK		0x8000ull
#define FXR_RXHIARB_CFG_PERF_MATCH_AT_DLY_MASK_SHIFT			8
#define FXR_RXHIARB_CFG_PERF_MATCH_AT_DLY_MASK_MASK			0x7Full
#define FXR_RXHIARB_CFG_PERF_MATCH_AT_DLY_MASK_SMASK			0x7F00ull
#define FXR_RXHIARB_CFG_PERF_MATCH_RESERVED_7_SHIFT			7
#define FXR_RXHIARB_CFG_PERF_MATCH_RESERVED_7_MASK			0x1ull
#define FXR_RXHIARB_CFG_PERF_MATCH_RESERVED_7_SMASK			0x80ull
#define FXR_RXHIARB_CFG_PERF_MATCH_AT_DLY_MATCH_INDEX_SHIFT		0
#define FXR_RXHIARB_CFG_PERF_MATCH_AT_DLY_MATCH_INDEX_MASK		0x7Full
#define FXR_RXHIARB_CFG_PERF_MATCH_AT_DLY_MATCH_INDEX_SMASK		0x7Full
/*
* Table #8 of fxr_top - RXHIARB_STS_MAX_HI_STALL
* Maximum number of cycles that the HI backpressures the HIARB logic. This is a 
* free-running monitor that continuously tracks and records the maximum time 
* that the HIARB has a request pending, but can't send it due to a lack of 
* credit. To clear out value and start a new sampling period, software just 
* needs to write zeroes to this CSR.
*/
#define FXR_RXHIARB_STS_MAX_HI_STALL					(FXR_RX_HIARB_CSRS + 0x000000020000)
#define FXR_RXHIARB_STS_MAX_HI_STALL_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_STS_MAX_HI_STALL_RESERVED_63_16_SHIFT		16
#define FXR_RXHIARB_STS_MAX_HI_STALL_RESERVED_63_16_MASK		0xFFFFFFFFFFFFull
#define FXR_RXHIARB_STS_MAX_HI_STALL_RESERVED_63_16_SMASK		0xFFFFFFFFFFFF0000ull
#define FXR_RXHIARB_STS_MAX_HI_STALL_MAX_HI_STALL_SHIFT			0
#define FXR_RXHIARB_STS_MAX_HI_STALL_MAX_HI_STALL_MASK			0xFFFFull
#define FXR_RXHIARB_STS_MAX_HI_STALL_MAX_HI_STALL_SMASK			0xFFFFull
/*
* Table #9 of fxr_top - RXHIARB_STS_MAX_AT_STALL
* Maximum number of cycles that  HIARB is waiting to send a request to AT but 
* doesnlt have credits. To clear out value and start a new sampling period, 
* software just needs to write zeroes to this CSR.
*/
#define FXR_RXHIARB_STS_MAX_AT_STALL					(FXR_RX_HIARB_CSRS + 0x000000020008)
#define FXR_RXHIARB_STS_MAX_AT_STALL_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_STS_MAX_AT_STALL_RESERVED_63_16_SHIFT		16
#define FXR_RXHIARB_STS_MAX_AT_STALL_RESERVED_63_16_MASK		0xFFFFFFFFFFFFull
#define FXR_RXHIARB_STS_MAX_AT_STALL_RESERVED_63_16_SMASK		0xFFFFFFFFFFFF0000ull
#define FXR_RXHIARB_STS_MAX_AT_STALL_MAX_AT_STALL_SHIFT			0
#define FXR_RXHIARB_STS_MAX_AT_STALL_MAX_AT_STALL_MASK			0xFFFFull
#define FXR_RXHIARB_STS_MAX_AT_STALL_MAX_AT_STALL_SMASK			0xFFFFull
/*
* Table #10 of fxr_top - RXHIARB_STS_RXDMA_IN_0_3
* Status of RxDMA input queues 0-3. Note that though there are 6 bits provided 
* for counts, the number of locations vary between input clients and will not 
* utilize all bits,
*/
#define FXR_RXHIARB_STS_RXDMA_IN_0_3					(FXR_RX_HIARB_CSRS + 0x000000020010)
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RESETCSR				0x0000000080808080ull
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RESERVED_63_32_SHIFT		32
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RESERVED_63_32_MASK		0xFFFFFFFFull
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RESERVED_63_32_SMASK		0xFFFFFFFF00000000ull
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_EMPTY3_SHIFT			31
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_EMPTY3_MASK			0x1ull
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_EMPTY3_SMASK			0x80000000ull
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_FULL3_SHIFT			30
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_FULL3_MASK			0x1ull
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_FULL3_SMASK			0x40000000ull
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_CNT3_SHIFT			24
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_CNT3_MASK			0x3Full
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_CNT3_SMASK			0x3F000000ull
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_EMPTY2_SHIFT			23
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_EMPTY2_MASK			0x1ull
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_EMPTY2_SMASK			0x800000ull
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_FULL2_SHIFT			22
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_FULL2_MASK			0x1ull
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_FULL2_SMASK			0x400000ull
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_CNT2_SHIFT			16
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_CNT2_MASK			0x3Full
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_CNT2_SMASK			0x3F0000ull
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_EMPTY1_SHIFT			15
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_EMPTY1_MASK			0x1ull
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_EMPTY1_SMASK			0x8000ull
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_FULL1_SHIFT			14
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_FULL1_MASK			0x1ull
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_FULL1_SMASK			0x4000ull
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_CNT1_SHIFT			8
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_CNT1_MASK			0x3Full
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_CNT1_SMASK			0x3F00ull
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_EMPTY0_SHIFT			7
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_EMPTY0_MASK			0x1ull
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_EMPTY0_SMASK			0x80ull
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_FULL0_SHIFT			6
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_FULL0_MASK			0x1ull
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_FULL0_SMASK			0x40ull
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_CNT0_SHIFT			0
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_CNT0_MASK			0x3Full
#define FXR_RXHIARB_STS_RXDMA_IN_0_3_RXDMA_CNT0_SMASK			0x3Full
/*
* Table #11 of fxr_top - RXHIARB_STS_RXDMA_IN_4_8
* Status of non-RxDMA input queues (RxHP, RxET, RxE2E, and RxCID).Note that 
* though there are 6 bits provided for counts, the number of locations vary 
* between input clients and will not utilize all bits,
*/
#define FXR_RXHIARB_STS_RXDMA_IN_4_8					(FXR_RX_HIARB_CSRS + 0x000000020018)
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RESETCSR				0x0000008080808080ull
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RESERVED_63_40_SHIFT		40
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RESERVED_63_40_MASK		0xFFFFFFull
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RESERVED_63_40_SMASK		0xFFFFFF0000000000ull
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_EMPTY8_SHIFT			39
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_EMPTY8_MASK			0x1ull
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_EMPTY8_SMASK			0x8000000000ull
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_FULL8_SHIFT			38
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_FULL8_MASK			0x1ull
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_FULL8_SMASK			0x4000000000ull
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_CNT8_SHIFT			32
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_CNT8_MASK			0x3Full
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_CNT8_SMASK			0x3F00000000ull
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_EMPTY7_SHIFT			31
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_EMPTY7_MASK			0x1ull
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_EMPTY7_SMASK			0x80000000ull
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_FULL7_SHIFT			30
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_FULL7_MASK			0x1ull
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_FULL7_SMASK			0x40000000ull
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_CNT7_SHIFT			24
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_CNT7_MASK			0x3Full
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_CNT7_SMASK			0x3F000000ull
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_EMPTY6_SHIFT			23
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_EMPTY6_MASK			0x1ull
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_EMPTY6_SMASK			0x800000ull
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_FULL6_SHIFT			22
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_FULL6_MASK			0x1ull
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_FULL6_SMASK			0x400000ull
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_CNT6_SHIFT			16
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_CNT6_MASK			0x3Full
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_CNT6_SMASK			0x3F0000ull
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_EMPTY5_SHIFT			15
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_EMPTY5_MASK			0x1ull
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_EMPTY5_SMASK			0x8000ull
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_FULL5_SHIFT			14
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_FULL5_MASK			0x1ull
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_FULL5_SMASK			0x4000ull
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_CNT5_SHIFT			8
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_CNT5_MASK			0x3Full
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_CNT5_SMASK			0x3F00ull
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_EMPTY4_SHIFT			7
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_EMPTY4_MASK			0x1ull
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_EMPTY4_SMASK			0x80ull
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_FULL4_SHIFT			6
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_FULL4_MASK			0x1ull
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_FULL4_SMASK			0x40ull
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_CNT4_SHIFT			0
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_CNT4_MASK			0x3Full
#define FXR_RXHIARB_STS_RXDMA_IN_4_8_RXDMA_CNT4_SMASK			0x3Full
/*
* Table #12 of fxr_top - RXHIARB_STS_MISC_IN
* Status of RxHP, RxET, RxE2E, and RxCID input queues. Note that though there 
* are 6 bits provided for counts, the number of locations vary between input 
* clients and will not utilize all bits,
*/
#define FXR_RXHIARB_STS_MISC_IN						(FXR_RX_HIARB_CSRS + 0x000000020020)
#define FXR_RXHIARB_STS_MISC_IN_RESETCSR				0x0000000080808080ull
#define FXR_RXHIARB_STS_MISC_IN_RESERVED_63_32_SHIFT			32
#define FXR_RXHIARB_STS_MISC_IN_RESERVED_63_32_MASK			0xFFFFFFFFull
#define FXR_RXHIARB_STS_MISC_IN_RESERVED_63_32_SMASK			0xFFFFFFFF00000000ull
#define FXR_RXHIARB_STS_MISC_IN_RXCID_EMPTY_SHIFT			31
#define FXR_RXHIARB_STS_MISC_IN_RXCID_EMPTY_MASK			0x1ull
#define FXR_RXHIARB_STS_MISC_IN_RXCID_EMPTY_SMASK			0x80000000ull
#define FXR_RXHIARB_STS_MISC_IN_RXCID_FULL_SHIFT			30
#define FXR_RXHIARB_STS_MISC_IN_RXCID_FULL_MASK				0x1ull
#define FXR_RXHIARB_STS_MISC_IN_RXCID_FULL_SMASK			0x40000000ull
#define FXR_RXHIARB_STS_MISC_IN_RXCID_CNT_SHIFT				24
#define FXR_RXHIARB_STS_MISC_IN_RXCID_CNT_MASK				0x3Full
#define FXR_RXHIARB_STS_MISC_IN_RXCID_CNT_SMASK				0x3F000000ull
#define FXR_RXHIARB_STS_MISC_IN_RXE2E_EMPTY_SHIFT			23
#define FXR_RXHIARB_STS_MISC_IN_RXE2E_EMPTY_MASK			0x1ull
#define FXR_RXHIARB_STS_MISC_IN_RXE2E_EMPTY_SMASK			0x800000ull
#define FXR_RXHIARB_STS_MISC_IN_RXE2E_FULL_SHIFT			22
#define FXR_RXHIARB_STS_MISC_IN_RXE2E_FULL_MASK				0x1ull
#define FXR_RXHIARB_STS_MISC_IN_RXE2E_FULL_SMASK			0x400000ull
#define FXR_RXHIARB_STS_MISC_IN_RXE2E_CNT_SHIFT				16
#define FXR_RXHIARB_STS_MISC_IN_RXE2E_CNT_MASK				0x3Full
#define FXR_RXHIARB_STS_MISC_IN_RXE2E_CNT_SMASK				0x3F0000ull
#define FXR_RXHIARB_STS_MISC_IN_RXET_EMPTY_SHIFT			15
#define FXR_RXHIARB_STS_MISC_IN_RXET_EMPTY_MASK				0x1ull
#define FXR_RXHIARB_STS_MISC_IN_RXET_EMPTY_SMASK			0x8000ull
#define FXR_RXHIARB_STS_MISC_IN_RXET_FULL_SHIFT				14
#define FXR_RXHIARB_STS_MISC_IN_RXET_FULL_MASK				0x1ull
#define FXR_RXHIARB_STS_MISC_IN_RXET_FULL_SMASK				0x4000ull
#define FXR_RXHIARB_STS_MISC_IN_RXET_CNT_SHIFT				8
#define FXR_RXHIARB_STS_MISC_IN_RXET_CNT_MASK				0x3Full
#define FXR_RXHIARB_STS_MISC_IN_RXET_CNT_SMASK				0x3F00ull
#define FXR_RXHIARB_STS_MISC_IN_RXHP_EMPTY_SHIFT			7
#define FXR_RXHIARB_STS_MISC_IN_RXHP_EMPTY_MASK				0x1ull
#define FXR_RXHIARB_STS_MISC_IN_RXHP_EMPTY_SMASK			0x80ull
#define FXR_RXHIARB_STS_MISC_IN_RXHP_FULL_SHIFT				6
#define FXR_RXHIARB_STS_MISC_IN_RXHP_FULL_MASK				0x1ull
#define FXR_RXHIARB_STS_MISC_IN_RXHP_FULL_SMASK				0x40ull
#define FXR_RXHIARB_STS_MISC_IN_RXHP_CNT_SHIFT				0
#define FXR_RXHIARB_STS_MISC_IN_RXHP_CNT_MASK				0x3Full
#define FXR_RXHIARB_STS_MISC_IN_RXHP_CNT_SMASK				0x3Full
/*
* Table #13 of fxr_top - RXHIARB_STS_AT_CRED
* Status of AT request port's credits. Note that though there are 8 bits 
* provided for count, the number of credits vary by interface,
*/
#define FXR_RXHIARB_STS_AT_CRED						(FXR_RX_HIARB_CSRS + 0x000000020028)
#define FXR_RXHIARB_STS_AT_CRED_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_STS_AT_CRED_RESERVED_63_9_SHIFT			9
#define FXR_RXHIARB_STS_AT_CRED_RESERVED_63_9_MASK			0x7FFFFFFFFFFFFFull
#define FXR_RXHIARB_STS_AT_CRED_RESERVED_63_9_SMASK			0xFFFFFFFFFFFFFE00ull
#define FXR_RXHIARB_STS_AT_CRED_AT_HAVE_CRED_SHIFT			8
#define FXR_RXHIARB_STS_AT_CRED_AT_HAVE_CRED_MASK			0x1ull
#define FXR_RXHIARB_STS_AT_CRED_AT_HAVE_CRED_SMASK			0x100ull
#define FXR_RXHIARB_STS_AT_CRED_AT_CRED_CNT_SHIFT			0
#define FXR_RXHIARB_STS_AT_CRED_AT_CRED_CNT_MASK			0xFFull
#define FXR_RXHIARB_STS_AT_CRED_AT_CRED_CNT_SMASK			0xFFull
/*
* Table #14 of fxr_top - RXHIARB_STS_HI_CRED
* Status of HIFIs request port's credits. Note that though there are 8 bits 
* provided for count, the number of credits vary by interface,
*/
#define FXR_RXHIARB_STS_HI_CRED						(FXR_RX_HIARB_CSRS + 0x000000020030)
#define FXR_RXHIARB_STS_HI_CRED_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_STS_HI_CRED_RESERVED_63_9_SHIFT			9
#define FXR_RXHIARB_STS_HI_CRED_RESERVED_63_9_MASK			0x7FFFFFFFFFFFFFull
#define FXR_RXHIARB_STS_HI_CRED_RESERVED_63_9_SMASK			0xFFFFFFFFFFFFFE00ull
#define FXR_RXHIARB_STS_HI_CRED_HI_HAVE_CRED_SHIFT			8
#define FXR_RXHIARB_STS_HI_CRED_HI_HAVE_CRED_MASK			0x1ull
#define FXR_RXHIARB_STS_HI_CRED_HI_HAVE_CRED_SMASK			0x100ull
#define FXR_RXHIARB_STS_HI_CRED_HI_CRED_CNT_SHIFT			0
#define FXR_RXHIARB_STS_HI_CRED_HI_CRED_CNT_MASK			0xFFull
#define FXR_RXHIARB_STS_HI_CRED_HI_CRED_CNT_SMASK			0xFFull
/*
* Table #15 of fxr_top - RXHIARB_ERR_STS_1
* Error status register.
*/
#define FXR_RXHIARB_ERR_STS_1						(FXR_RX_HIARB_CSRS + 0x000000030000)
#define FXR_RXHIARB_ERR_STS_1_RESETCSR					0x0000000000000000ull
#define FXR_RXHIARB_ERR_STS_1_RESERVED_63_55_SHIFT			55
#define FXR_RXHIARB_ERR_STS_1_RESERVED_63_55_MASK			0x1FFull
#define FXR_RXHIARB_ERR_STS_1_RESERVED_63_55_SMASK			0xFF80000000000000ull
#define FXR_RXHIARB_ERR_STS_1_NACK_ERR_MBE_SHIFT			54
#define FXR_RXHIARB_ERR_STS_1_NACK_ERR_MBE_MASK				0x1ull
#define FXR_RXHIARB_ERR_STS_1_NACK_ERR_MBE_SMASK			0x40000000000000ull
#define FXR_RXHIARB_ERR_STS_1_NACK_ERR_SBE_SHIFT			53
#define FXR_RXHIARB_ERR_STS_1_NACK_ERR_SBE_MASK				0x1ull
#define FXR_RXHIARB_ERR_STS_1_NACK_ERR_SBE_SMASK			0x20000000000000ull
#define FXR_RXHIARB_ERR_STS_1_HIFI_ERR_MBE_SHIFT			52
#define FXR_RXHIARB_ERR_STS_1_HIFI_ERR_MBE_MASK				0x1ull
#define FXR_RXHIARB_ERR_STS_1_HIFI_ERR_MBE_SMASK			0x10000000000000ull
#define FXR_RXHIARB_ERR_STS_1_HIFI_ERR_SBE_SHIFT			51
#define FXR_RXHIARB_ERR_STS_1_HIFI_ERR_SBE_MASK				0x1ull
#define FXR_RXHIARB_ERR_STS_1_HIFI_ERR_SBE_SMASK			0x8000000000000ull
#define FXR_RXHIARB_ERR_STS_1_HIFI_ERR_FRAME_SHIFT			50
#define FXR_RXHIARB_ERR_STS_1_HIFI_ERR_FRAME_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_HIFI_ERR_FRAME_SMASK			0x4000000000000ull
#define FXR_RXHIARB_ERR_STS_1_HIFIFO_MBE_SHIFT				49
#define FXR_RXHIARB_ERR_STS_1_HIFIFO_MBE_MASK				0x1ull
#define FXR_RXHIARB_ERR_STS_1_HIFIFO_MBE_SMASK				0x2000000000000ull
#define FXR_RXHIARB_ERR_STS_1_HIFIFO_SBE_SHIFT				48
#define FXR_RXHIARB_ERR_STS_1_HIFIFO_SBE_MASK				0x1ull
#define FXR_RXHIARB_ERR_STS_1_HIFIFO_SBE_SMASK				0x1000000000000ull
#define FXR_RXHIARB_ERR_STS_1_ATFIFO_MBE_SHIFT				47
#define FXR_RXHIARB_ERR_STS_1_ATFIFO_MBE_MASK				0x1ull
#define FXR_RXHIARB_ERR_STS_1_ATFIFO_MBE_SMASK				0x800000000000ull
#define FXR_RXHIARB_ERR_STS_1_ATFIFO_SBE_SHIFT				46
#define FXR_RXHIARB_ERR_STS_1_ATFIFO_SBE_MASK				0x1ull
#define FXR_RXHIARB_ERR_STS_1_ATFIFO_SBE_SMASK				0x400000000000ull
#define FXR_RXHIARB_ERR_STS_1_MTLB_VECT_PERR_SHIFT			45
#define FXR_RXHIARB_ERR_STS_1_MTLB_VECT_PERR_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_MTLB_VECT_PERR_SMASK			0x200000000000ull
#define FXR_RXHIARB_ERR_STS_1_MTLB_ERR_MBE_SHIFT			44
#define FXR_RXHIARB_ERR_STS_1_MTLB_ERR_MBE_MASK				0x1ull
#define FXR_RXHIARB_ERR_STS_1_MTLB_ERR_MBE_SMASK			0x100000000000ull
#define FXR_RXHIARB_ERR_STS_1_MTLB_ERR_SBE_SHIFT			43
#define FXR_RXHIARB_ERR_STS_1_MTLB_ERR_SBE_MASK				0x1ull
#define FXR_RXHIARB_ERR_STS_1_MTLB_ERR_SBE_SMASK			0x80000000000ull
#define FXR_RXHIARB_ERR_STS_1_HQUE_VECT_PERR_SHIFT			42
#define FXR_RXHIARB_ERR_STS_1_HQUE_VECT_PERR_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_HQUE_VECT_PERR_SMASK			0x40000000000ull
#define FXR_RXHIARB_ERR_STS_1_HQUE8_ERR_MBE_SHIFT			41
#define FXR_RXHIARB_ERR_STS_1_HQUE8_ERR_MBE_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_HQUE8_ERR_MBE_SMASK			0x20000000000ull
#define FXR_RXHIARB_ERR_STS_1_HQUE8_ERR_SBE_SHIFT			40
#define FXR_RXHIARB_ERR_STS_1_HQUE8_ERR_SBE_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_HQUE8_ERR_SBE_SMASK			0x10000000000ull
#define FXR_RXHIARB_ERR_STS_1_HQUE7_ERR_MBE_SHIFT			39
#define FXR_RXHIARB_ERR_STS_1_HQUE7_ERR_MBE_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_HQUE7_ERR_MBE_SMASK			0x8000000000ull
#define FXR_RXHIARB_ERR_STS_1_HQUE7_ERR_SBE_SHIFT			38
#define FXR_RXHIARB_ERR_STS_1_HQUE7_ERR_SBE_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_HQUE7_ERR_SBE_SMASK			0x4000000000ull
#define FXR_RXHIARB_ERR_STS_1_HQUE6_ERR_MBE_SHIFT			37
#define FXR_RXHIARB_ERR_STS_1_HQUE6_ERR_MBE_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_HQUE6_ERR_MBE_SMASK			0x2000000000ull
#define FXR_RXHIARB_ERR_STS_1_HQUE6_ERR_SBE_SHIFT			36
#define FXR_RXHIARB_ERR_STS_1_HQUE6_ERR_SBE_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_HQUE6_ERR_SBE_SMASK			0x1000000000ull
#define FXR_RXHIARB_ERR_STS_1_HQUE5_ERR_MBE_SHIFT			35
#define FXR_RXHIARB_ERR_STS_1_HQUE5_ERR_MBE_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_HQUE5_ERR_MBE_SMASK			0x800000000ull
#define FXR_RXHIARB_ERR_STS_1_HQUE5_ERR_SBE_SHIFT			34
#define FXR_RXHIARB_ERR_STS_1_HQUE5_ERR_SBE_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_HQUE5_ERR_SBE_SMASK			0x400000000ull
#define FXR_RXHIARB_ERR_STS_1_HQUE4_ERR_MBE_SHIFT			33
#define FXR_RXHIARB_ERR_STS_1_HQUE4_ERR_MBE_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_HQUE4_ERR_MBE_SMASK			0x200000000ull
#define FXR_RXHIARB_ERR_STS_1_HQUE4_ERR_SBE_SHIFT			32
#define FXR_RXHIARB_ERR_STS_1_HQUE4_ERR_SBE_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_HQUE4_ERR_SBE_SMASK			0x100000000ull
#define FXR_RXHIARB_ERR_STS_1_HQUE3_ERR_MBE_SHIFT			31
#define FXR_RXHIARB_ERR_STS_1_HQUE3_ERR_MBE_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_HQUE3_ERR_MBE_SMASK			0x80000000ull
#define FXR_RXHIARB_ERR_STS_1_HQUE3_ERR_SBE_SHIFT			30
#define FXR_RXHIARB_ERR_STS_1_HQUE3_ERR_SBE_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_HQUE3_ERR_SBE_SMASK			0x40000000ull
#define FXR_RXHIARB_ERR_STS_1_HQUE2_ERR_MBE_SHIFT			29
#define FXR_RXHIARB_ERR_STS_1_HQUE2_ERR_MBE_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_HQUE2_ERR_MBE_SMASK			0x20000000ull
#define FXR_RXHIARB_ERR_STS_1_HQUE2_ERR_SBE_SHIFT			28
#define FXR_RXHIARB_ERR_STS_1_HQUE2_ERR_SBE_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_HQUE2_ERR_SBE_SMASK			0x10000000ull
#define FXR_RXHIARB_ERR_STS_1_HQUE1_ERR_MBE_SHIFT			27
#define FXR_RXHIARB_ERR_STS_1_HQUE1_ERR_MBE_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_HQUE1_ERR_MBE_SMASK			0x8000000ull
#define FXR_RXHIARB_ERR_STS_1_HQUE1_ERR_SBE_SHIFT			26
#define FXR_RXHIARB_ERR_STS_1_HQUE1_ERR_SBE_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_HQUE1_ERR_SBE_SMASK			0x4000000ull
#define FXR_RXHIARB_ERR_STS_1_HQUE0_ERR_MBE_SHIFT			25
#define FXR_RXHIARB_ERR_STS_1_HQUE0_ERR_MBE_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_HQUE0_ERR_MBE_SMASK			0x2000000ull
#define FXR_RXHIARB_ERR_STS_1_HQUE0_ERR_SBE_SHIFT			24
#define FXR_RXHIARB_ERR_STS_1_HQUE0_ERR_SBE_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_HQUE0_ERR_SBE_SMASK			0x1000000ull
#define FXR_RXHIARB_ERR_STS_1_PAYLD_ERR_MBE_SHIFT			23
#define FXR_RXHIARB_ERR_STS_1_PAYLD_ERR_MBE_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_PAYLD_ERR_MBE_SMASK			0x800000ull
#define FXR_RXHIARB_ERR_STS_1_PAYLD_ERR_SBE_SHIFT			22
#define FXR_RXHIARB_ERR_STS_1_PAYLD_ERR_SBE_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_PAYLD_ERR_SBE_SMASK			0x400000ull
#define FXR_RXHIARB_ERR_STS_1_FPFIFO_PERR_SHIFT				21
#define FXR_RXHIARB_ERR_STS_1_FPFIFO_PERR_MASK				0x1ull
#define FXR_RXHIARB_ERR_STS_1_FPFIFO_PERR_SMASK				0x200000ull
#define FXR_RXHIARB_ERR_STS_1_SLRSP_ERR_MBE_SHIFT			20
#define FXR_RXHIARB_ERR_STS_1_SLRSP_ERR_MBE_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_SLRSP_ERR_MBE_SMASK			0x100000ull
#define FXR_RXHIARB_ERR_STS_1_SLRSP_ERR_SBE_SHIFT			19
#define FXR_RXHIARB_ERR_STS_1_SLRSP_ERR_SBE_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_SLRSP_ERR_SBE_SMASK			0x80000ull
#define FXR_RXHIARB_ERR_STS_1_RXCID_ERR_MBE_SHIFT			18
#define FXR_RXHIARB_ERR_STS_1_RXCID_ERR_MBE_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_RXCID_ERR_MBE_SMASK			0x40000ull
#define FXR_RXHIARB_ERR_STS_1_RXCID_ERR_SBE_SHIFT			17
#define FXR_RXHIARB_ERR_STS_1_RXCID_ERR_SBE_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_RXCID_ERR_SBE_SMASK			0x20000ull
#define FXR_RXHIARB_ERR_STS_1_RXE2E_ERR_MBE_SHIFT			16
#define FXR_RXHIARB_ERR_STS_1_RXE2E_ERR_MBE_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_RXE2E_ERR_MBE_SMASK			0x10000ull
#define FXR_RXHIARB_ERR_STS_1_RXE2E_ERR_SBE_SHIFT			15
#define FXR_RXHIARB_ERR_STS_1_RXE2E_ERR_SBE_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_RXE2E_ERR_SBE_SMASK			0x8000ull
#define FXR_RXHIARB_ERR_STS_1_RXET_ERR_MBE_SHIFT			14
#define FXR_RXHIARB_ERR_STS_1_RXET_ERR_MBE_MASK				0x1ull
#define FXR_RXHIARB_ERR_STS_1_RXET_ERR_MBE_SMASK			0x4000ull
#define FXR_RXHIARB_ERR_STS_1_RXET_ERR_SBE_SHIFT			13
#define FXR_RXHIARB_ERR_STS_1_RXET_ERR_SBE_MASK				0x1ull
#define FXR_RXHIARB_ERR_STS_1_RXET_ERR_SBE_SMASK			0x2000ull
#define FXR_RXHIARB_ERR_STS_1_RXET_ERR_FRAME_SHIFT			12
#define FXR_RXHIARB_ERR_STS_1_RXET_ERR_FRAME_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_RXET_ERR_FRAME_SMASK			0x1000ull
#define FXR_RXHIARB_ERR_STS_1_RXCHP_ERR_MBE_SHIFT			11
#define FXR_RXHIARB_ERR_STS_1_RXCHP_ERR_MBE_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_RXCHP_ERR_MBE_SMASK			0x800ull
#define FXR_RXHIARB_ERR_STS_1_RXCHP_ERR_SBE_SHIFT			10
#define FXR_RXHIARB_ERR_STS_1_RXCHP_ERR_SBE_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_RXCHP_ERR_SBE_SMASK			0x400ull
#define FXR_RXHIARB_ERR_STS_1_RXHP_ERR_FRAME_SHIFT			9
#define FXR_RXHIARB_ERR_STS_1_RXHP_ERR_FRAME_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_RXHP_ERR_FRAME_SMASK			0x200ull
#define FXR_RXHIARB_ERR_STS_1_RXDMA_ERR_MBE_SHIFT			8
#define FXR_RXHIARB_ERR_STS_1_RXDMA_ERR_MBE_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_RXDMA_ERR_MBE_SMASK			0x100ull
#define FXR_RXHIARB_ERR_STS_1_RXDMA_ERR_SBE_SHIFT			7
#define FXR_RXHIARB_ERR_STS_1_RXDMA_ERR_SBE_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_RXDMA_ERR_SBE_SMASK			0x80ull
#define FXR_RXHIARB_ERR_STS_1_RXDMA_ERR_FRAME_SHIFT			6
#define FXR_RXHIARB_ERR_STS_1_RXDMA_ERR_FRAME_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_RXDMA_ERR_FRAME_SMASK			0x40ull
#define FXR_RXHIARB_ERR_STS_1_MTLB_ERR_AT_RSP_SHIFT			5
#define FXR_RXHIARB_ERR_STS_1_MTLB_ERR_AT_RSP_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_MTLB_ERR_AT_RSP_SMASK			0x20ull
#define FXR_RXHIARB_ERR_STS_1_PCB_ERR_MBE_SHIFT				4
#define FXR_RXHIARB_ERR_STS_1_PCB_ERR_MBE_MASK				0x1ull
#define FXR_RXHIARB_ERR_STS_1_PCB_ERR_MBE_SMASK				0x10ull
#define FXR_RXHIARB_ERR_STS_1_PCB_ERR_SBE_SHIFT				3
#define FXR_RXHIARB_ERR_STS_1_PCB_ERR_SBE_MASK				0x1ull
#define FXR_RXHIARB_ERR_STS_1_PCB_ERR_SBE_SMASK				0x8ull
#define FXR_RXHIARB_ERR_STS_1_PCB_ERR_ADDR_OFLW_SHIFT			2
#define FXR_RXHIARB_ERR_STS_1_PCB_ERR_ADDR_OFLW_MASK			0x1ull
#define FXR_RXHIARB_ERR_STS_1_PCB_ERR_ADDR_OFLW_SMASK			0x4ull
#define FXR_RXHIARB_ERR_STS_1_PCB_ERR_BVIO_SHIFT			1
#define FXR_RXHIARB_ERR_STS_1_PCB_ERR_BVIO_MASK				0x1ull
#define FXR_RXHIARB_ERR_STS_1_PCB_ERR_BVIO_SMASK			0x2ull
#define FXR_RXHIARB_ERR_STS_1_PCB_ERR_NVAL_SHIFT			0
#define FXR_RXHIARB_ERR_STS_1_PCB_ERR_NVAL_MASK				0x1ull
#define FXR_RXHIARB_ERR_STS_1_PCB_ERR_NVAL_SMASK			0x1ull
/*
* Table #16 of fxr_top - RXHIARB_ERR_CLR_1
* Clear error by writing 1 to corresponding bit(s).
*/
#define FXR_RXHIARB_ERR_CLR_1						(FXR_RX_HIARB_CSRS + 0x000000030008)
#define FXR_RXHIARB_ERR_CLR_1_RESETCSR					0x0000000000000000ull
#define FXR_RXHIARB_ERR_CLR_1_RESERVED_63_56_SHIFT			56
#define FXR_RXHIARB_ERR_CLR_1_RESERVED_63_56_MASK			0xFFull
#define FXR_RXHIARB_ERR_CLR_1_RESERVED_63_56_SMASK			0xFF00000000000000ull
#define FXR_RXHIARB_ERR_CLR_1_ERR_CLR_SHIFT				0
#define FXR_RXHIARB_ERR_CLR_1_ERR_CLR_MASK				0xFFFFFFFFFFFFFFull
#define FXR_RXHIARB_ERR_CLR_1_ERR_CLR_SMASK				0xFFFFFFFFFFFFFFull
/*
* Table #17 of fxr_top - RXHIARB_ERR_FRC_1
* Force error by writing 1 to corresponding bit(s)..
*/
#define FXR_RXHIARB_ERR_FRC_1						(FXR_RX_HIARB_CSRS + 0x000000030010)
#define FXR_RXHIARB_ERR_FRC_1_RESETCSR					0x0000000000000000ull
#define FXR_RXHIARB_ERR_FRC_1_RESERVED_63_56_SHIFT			56
#define FXR_RXHIARB_ERR_FRC_1_RESERVED_63_56_MASK			0xFFull
#define FXR_RXHIARB_ERR_FRC_1_RESERVED_63_56_SMASK			0xFF00000000000000ull
#define FXR_RXHIARB_ERR_FRC_1_ERR_FRC_SHIFT				0
#define FXR_RXHIARB_ERR_FRC_1_ERR_FRC_MASK				0xFFFFFFFFFFFFFFull
#define FXR_RXHIARB_ERR_FRC_1_ERR_FRC_SMASK				0xFFFFFFFFFFFFFFull
/*
* Table #18 of fxr_top - RXHIARB_ERR_EN_HOST_1
* Enable host interrupt by writing a 1 to the corresponding bit(s).
*/
#define FXR_RXHIARB_ERR_EN_HOST_1					(FXR_RX_HIARB_CSRS + 0x000000030018)
#define FXR_RXHIARB_ERR_EN_HOST_1_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_EN_HOST_1_RESERVED_63_56_SHIFT			56
#define FXR_RXHIARB_ERR_EN_HOST_1_RESERVED_63_56_MASK			0xFFull
#define FXR_RXHIARB_ERR_EN_HOST_1_RESERVED_63_56_SMASK			0xFF00000000000000ull
#define FXR_RXHIARB_ERR_EN_HOST_1_ERR_HOST_EN_SHIFT			0
#define FXR_RXHIARB_ERR_EN_HOST_1_ERR_HOST_EN_MASK			0xFFFFFFFFFFFFFFull
#define FXR_RXHIARB_ERR_EN_HOST_1_ERR_HOST_EN_SMASK			0xFFFFFFFFFFFFFFull
/*
* Table #19 of fxr_top - RXHIARB_ERR_FIRST_HOST_1
* First error detected for host interrupt.
*/
#define FXR_RXHIARB_ERR_FIRST_HOST_1					(FXR_RX_HIARB_CSRS + 0x000000030020)
#define FXR_RXHIARB_ERR_FIRST_HOST_1_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_FIRST_HOST_1_RESERVED_63_56_SHIFT		56
#define FXR_RXHIARB_ERR_FIRST_HOST_1_RESERVED_63_56_MASK		0xFFull
#define FXR_RXHIARB_ERR_FIRST_HOST_1_RESERVED_63_56_SMASK		0xFF00000000000000ull
#define FXR_RXHIARB_ERR_FIRST_HOST_1_ERR_HOST_FIRST_SHIFT		0
#define FXR_RXHIARB_ERR_FIRST_HOST_1_ERR_HOST_FIRST_MASK		0xFFFFFFFFFFFFFFull
#define FXR_RXHIARB_ERR_FIRST_HOST_1_ERR_HOST_FIRST_SMASK		0xFFFFFFFFFFFFFFull
/*
* Table #20 of fxr_top - RXHIARB_ERR_EN_BMC_1
* Enable BMC interrupt by writing a 1 to the corresponding bit(s).
*/
#define FXR_RXHIARB_ERR_EN_BMC_1					(FXR_RX_HIARB_CSRS + 0x000000030028)
#define FXR_RXHIARB_ERR_EN_BMC_1_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_EN_BMC_1_RESERVED_63_56_SHIFT			56
#define FXR_RXHIARB_ERR_EN_BMC_1_RESERVED_63_56_MASK			0xFFull
#define FXR_RXHIARB_ERR_EN_BMC_1_RESERVED_63_56_SMASK			0xFF00000000000000ull
#define FXR_RXHIARB_ERR_EN_BMC_1_ERR_HOST_EN_SHIFT			0
#define FXR_RXHIARB_ERR_EN_BMC_1_ERR_HOST_EN_MASK			0xFFFFFFFFFFFFFFull
#define FXR_RXHIARB_ERR_EN_BMC_1_ERR_HOST_EN_SMASK			0xFFFFFFFFFFFFFFull
/*
* Table #21 of fxr_top - RXHIARB_ERR_FIRST_BMC_1
* First error detected for BMC interrupt.
*/
#define FXR_RXHIARB_ERR_FIRST_BMC_1					(FXR_RX_HIARB_CSRS + 0x000000030030)
#define FXR_RXHIARB_ERR_FIRST_BMC_1_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_FIRST_BMC_1_RESERVED_63_56_SHIFT		56
#define FXR_RXHIARB_ERR_FIRST_BMC_1_RESERVED_63_56_MASK			0xFFull
#define FXR_RXHIARB_ERR_FIRST_BMC_1_RESERVED_63_56_SMASK		0xFF00000000000000ull
#define FXR_RXHIARB_ERR_FIRST_BMC_1_ERR_HOST_FIRST_SHIFT		0
#define FXR_RXHIARB_ERR_FIRST_BMC_1_ERR_HOST_FIRST_MASK			0xFFFFFFFFFFFFFFull
#define FXR_RXHIARB_ERR_FIRST_BMC_1_ERR_HOST_FIRST_SMASK		0xFFFFFFFFFFFFFFull
/*
* Table #22 of fxr_top - RXHIARB_ERR_EN_QUAR_1
* Enable quarantine interrupt by writing a 1 to the corresponding 
* bit(s).
*/
#define FXR_RXHIARB_ERR_EN_QUAR_1					(FXR_RX_HIARB_CSRS + 0x000000030038)
#define FXR_RXHIARB_ERR_EN_QUAR_1_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_EN_QUAR_1_RESERVED_63_56_SHIFT			56
#define FXR_RXHIARB_ERR_EN_QUAR_1_RESERVED_63_56_MASK			0xFFull
#define FXR_RXHIARB_ERR_EN_QUAR_1_RESERVED_63_56_SMASK			0xFF00000000000000ull
#define FXR_RXHIARB_ERR_EN_QUAR_1_ERR_HOST_EN_SHIFT			0
#define FXR_RXHIARB_ERR_EN_QUAR_1_ERR_HOST_EN_MASK			0xFFFFFFFFFFFFFFull
#define FXR_RXHIARB_ERR_EN_QUAR_1_ERR_HOST_EN_SMASK			0xFFFFFFFFFFFFFFull
/*
* Table #23 of fxr_top - RXHIARB_ERR_FIRST_QUAR_1
* First error detected for quarantine interrupt.
*/
#define FXR_RXHIARB_ERR_FIRST_QUAR_1					(FXR_RX_HIARB_CSRS + 0x000000030040)
#define FXR_RXHIARB_ERR_FIRST_QUAR_1_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_FIRST_QUAR_1_RESERVED_63_56_SHIFT		56
#define FXR_RXHIARB_ERR_FIRST_QUAR_1_RESERVED_63_56_MASK		0xFFull
#define FXR_RXHIARB_ERR_FIRST_QUAR_1_RESERVED_63_56_SMASK		0xFF00000000000000ull
#define FXR_RXHIARB_ERR_FIRST_QUAR_1_ERR_HOST_FIRST_SHIFT		0
#define FXR_RXHIARB_ERR_FIRST_QUAR_1_ERR_HOST_FIRST_MASK		0xFFFFFFFFFFFFFFull
#define FXR_RXHIARB_ERR_FIRST_QUAR_1_ERR_HOST_FIRST_SMASK		0xFFFFFFFFFFFFFFull
/*
* Table #24 of fxr_top - RXHIARB_ERR_INFO_PCB_NVAL
* Captures information for the first non-valid entry PCB error.
*/
#define FXR_RXHIARB_ERR_INFO_PCB_NVAL					(FXR_RX_HIARB_CSRS + 0x000000030100)
#define FXR_RXHIARB_ERR_INFO_PCB_NVAL_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_PCB_NVAL_RESERVED_63_48_SHIFT		48
#define FXR_RXHIARB_ERR_INFO_PCB_NVAL_RESERVED_63_48_MASK		0xFFFFull
#define FXR_RXHIARB_ERR_INFO_PCB_NVAL_RESERVED_63_48_SMASK		0xFFFF000000000000ull
#define FXR_RXHIARB_ERR_INFO_PCB_NVAL_COUNT_SHIFT			40
#define FXR_RXHIARB_ERR_INFO_PCB_NVAL_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_PCB_NVAL_COUNT_SMASK			0xFF0000000000ull
#define FXR_RXHIARB_ERR_INFO_PCB_NVAL_RESERVED_39_37_SHIFT		37
#define FXR_RXHIARB_ERR_INFO_PCB_NVAL_RESERVED_39_37_MASK		0x7ull
#define FXR_RXHIARB_ERR_INFO_PCB_NVAL_RESERVED_39_37_SMASK		0xE000000000ull
#define FXR_RXHIARB_ERR_INFO_PCB_NVAL_NI_SHIFT				35
#define FXR_RXHIARB_ERR_INFO_PCB_NVAL_NI_MASK				0x3ull
#define FXR_RXHIARB_ERR_INFO_PCB_NVAL_NI_SMASK				0x1800000000ull
#define FXR_RXHIARB_ERR_INFO_PCB_NVAL_REGION_SHIFT			32
#define FXR_RXHIARB_ERR_INFO_PCB_NVAL_REGION_MASK			0x7ull
#define FXR_RXHIARB_ERR_INFO_PCB_NVAL_REGION_SMASK			0x700000000ull
#define FXR_RXHIARB_ERR_INFO_PCB_NVAL_ELEMENT_SHIFT			16
#define FXR_RXHIARB_ERR_INFO_PCB_NVAL_ELEMENT_MASK			0xFFFFull
#define FXR_RXHIARB_ERR_INFO_PCB_NVAL_ELEMENT_SMASK			0xFFFF0000ull
#define FXR_RXHIARB_ERR_INFO_PCB_NVAL_RX_SRC_ID_SHIFT			12
#define FXR_RXHIARB_ERR_INFO_PCB_NVAL_RX_SRC_ID_MASK			0xFull
#define FXR_RXHIARB_ERR_INFO_PCB_NVAL_RX_SRC_ID_SMASK			0xF000ull
#define FXR_RXHIARB_ERR_INFO_PCB_NVAL_HANDLE_SHIFT			0
#define FXR_RXHIARB_ERR_INFO_PCB_NVAL_HANDLE_MASK			0xFFFull
#define FXR_RXHIARB_ERR_INFO_PCB_NVAL_HANDLE_SMASK			0xFFFull
/*
* Table #25 of fxr_top - RXHIARB_ERR_INFO_PCB_BVIO
* Captures information for the first PCB boundary violation error. Boundary 
* violations are checked when an address is calculated and it exceeds the 
* maximum address range for the region being accessed. For example, if the PTE 
* region is being accessed and the resulting address ends up accessing a region 
* beyond the PTE region (e.g. it ends up within the CT region).
*/
#define FXR_RXHIARB_ERR_INFO_PCB_BVIO					(FXR_RX_HIARB_CSRS + 0x000000030108)
#define FXR_RXHIARB_ERR_INFO_PCB_BVIO_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_PCB_BVIO_RESERVED_63_48_SHIFT		48
#define FXR_RXHIARB_ERR_INFO_PCB_BVIO_RESERVED_63_48_MASK		0xFFFFull
#define FXR_RXHIARB_ERR_INFO_PCB_BVIO_RESERVED_63_48_SMASK		0xFFFF000000000000ull
#define FXR_RXHIARB_ERR_INFO_PCB_BVIO_COUNT_SHIFT			40
#define FXR_RXHIARB_ERR_INFO_PCB_BVIO_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_PCB_BVIO_COUNT_SMASK			0xFF0000000000ull
#define FXR_RXHIARB_ERR_INFO_PCB_BVIO_RESERVED_39_37_SHIFT		37
#define FXR_RXHIARB_ERR_INFO_PCB_BVIO_RESERVED_39_37_MASK		0x7ull
#define FXR_RXHIARB_ERR_INFO_PCB_BVIO_RESERVED_39_37_SMASK		0xE000000000ull
#define FXR_RXHIARB_ERR_INFO_PCB_BVIO_NI_SHIFT				35
#define FXR_RXHIARB_ERR_INFO_PCB_BVIO_NI_MASK				0x3ull
#define FXR_RXHIARB_ERR_INFO_PCB_BVIO_NI_SMASK				0x1800000000ull
#define FXR_RXHIARB_ERR_INFO_PCB_BVIO_REGION_SHIFT			32
#define FXR_RXHIARB_ERR_INFO_PCB_BVIO_REGION_MASK			0x7ull
#define FXR_RXHIARB_ERR_INFO_PCB_BVIO_REGION_SMASK			0x700000000ull
#define FXR_RXHIARB_ERR_INFO_PCB_BVIO_ELEMENT_SHIFT			16
#define FXR_RXHIARB_ERR_INFO_PCB_BVIO_ELEMENT_MASK			0xFFFFull
#define FXR_RXHIARB_ERR_INFO_PCB_BVIO_ELEMENT_SMASK			0xFFFF0000ull
#define FXR_RXHIARB_ERR_INFO_PCB_BVIO_RX_SRC_ID_SHIFT			12
#define FXR_RXHIARB_ERR_INFO_PCB_BVIO_RX_SRC_ID_MASK			0xFull
#define FXR_RXHIARB_ERR_INFO_PCB_BVIO_RX_SRC_ID_SMASK			0xF000ull
#define FXR_RXHIARB_ERR_INFO_PCB_BVIO_HANDLE_SHIFT			0
#define FXR_RXHIARB_ERR_INFO_PCB_BVIO_HANDLE_MASK			0xFFFull
#define FXR_RXHIARB_ERR_INFO_PCB_BVIO_HANDLE_SMASK			0xFFFull
/*
* Table #26 of fxr_top - RXHIARB_ERR_INFO_PCB_OFLW
* Captures information for the first PCB address overflow error. This occurs if 
* a PCB table is defined in the uppermost region of the address space and the 
* address calculation causes an overflow of the maximu number of address bits 
* allowed.
*/
#define FXR_RXHIARB_ERR_INFO_PCB_OFLW					(FXR_RX_HIARB_CSRS + 0x000000030110)
#define FXR_RXHIARB_ERR_INFO_PCB_OFLW_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_PCB_OFLW_RESERVED_63_48_SHIFT		48
#define FXR_RXHIARB_ERR_INFO_PCB_OFLW_RESERVED_63_48_MASK		0xFFFFull
#define FXR_RXHIARB_ERR_INFO_PCB_OFLW_RESERVED_63_48_SMASK		0xFFFF000000000000ull
#define FXR_RXHIARB_ERR_INFO_PCB_OFLW_COUNT_SHIFT			40
#define FXR_RXHIARB_ERR_INFO_PCB_OFLW_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_PCB_OFLW_COUNT_SMASK			0xFF0000000000ull
#define FXR_RXHIARB_ERR_INFO_PCB_OFLW_RESERVED_39_37_SHIFT		37
#define FXR_RXHIARB_ERR_INFO_PCB_OFLW_RESERVED_39_37_MASK		0x7ull
#define FXR_RXHIARB_ERR_INFO_PCB_OFLW_RESERVED_39_37_SMASK		0xE000000000ull
#define FXR_RXHIARB_ERR_INFO_PCB_OFLW_NI_SHIFT				35
#define FXR_RXHIARB_ERR_INFO_PCB_OFLW_NI_MASK				0x3ull
#define FXR_RXHIARB_ERR_INFO_PCB_OFLW_NI_SMASK				0x1800000000ull
#define FXR_RXHIARB_ERR_INFO_PCB_OFLW_REGION_SHIFT			32
#define FXR_RXHIARB_ERR_INFO_PCB_OFLW_REGION_MASK			0x7ull
#define FXR_RXHIARB_ERR_INFO_PCB_OFLW_REGION_SMASK			0x700000000ull
#define FXR_RXHIARB_ERR_INFO_PCB_OFLW_ELEMENT_SHIFT			16
#define FXR_RXHIARB_ERR_INFO_PCB_OFLW_ELEMENT_MASK			0xFFFFull
#define FXR_RXHIARB_ERR_INFO_PCB_OFLW_ELEMENT_SMASK			0xFFFF0000ull
#define FXR_RXHIARB_ERR_INFO_PCB_OFLW_RX_SRC_ID_SHIFT			12
#define FXR_RXHIARB_ERR_INFO_PCB_OFLW_RX_SRC_ID_MASK			0xFull
#define FXR_RXHIARB_ERR_INFO_PCB_OFLW_RX_SRC_ID_SMASK			0xF000ull
#define FXR_RXHIARB_ERR_INFO_PCB_OFLW_HANDLE_SHIFT			0
#define FXR_RXHIARB_ERR_INFO_PCB_OFLW_HANDLE_MASK			0xFFFull
#define FXR_RXHIARB_ERR_INFO_PCB_OFLW_HANDLE_SMASK			0xFFFull
/*
* Table #27 of fxr_top - RXHIARB_ERR_INFO_PCB_ECC
* Captures information related to ECC errors within the PCB table. Errors are 
* checked for 1 domain: PCB SRAM.
*/
#define FXR_RXHIARB_ERR_INFO_PCB_ECC					(FXR_RX_HIARB_CSRS + 0x000000030118)
#define FXR_RXHIARB_ERR_INFO_PCB_ECC_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_PCB_ECC_SBE_COUNT_SHIFT			56
#define FXR_RXHIARB_ERR_INFO_PCB_ECC_SBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_PCB_ECC_SBE_COUNT_SMASK			0xFF00000000000000ull
#define FXR_RXHIARB_ERR_INFO_PCB_ECC_RESERVED_55_52_SHIFT		52
#define FXR_RXHIARB_ERR_INFO_PCB_ECC_RESERVED_55_52_MASK		0xFull
#define FXR_RXHIARB_ERR_INFO_PCB_ECC_RESERVED_55_52_SMASK		0xF0000000000000ull
#define FXR_RXHIARB_ERR_INFO_PCB_ECC_SBE_FIRST_INDEX_SHIFT		40
#define FXR_RXHIARB_ERR_INFO_PCB_ECC_SBE_FIRST_INDEX_MASK		0xFFFull
#define FXR_RXHIARB_ERR_INFO_PCB_ECC_SBE_FIRST_INDEX_SMASK		0xFFF0000000000ull
#define FXR_RXHIARB_ERR_INFO_PCB_ECC_SBE_FIRST_SYNDROME_SHIFT		32
#define FXR_RXHIARB_ERR_INFO_PCB_ECC_SBE_FIRST_SYNDROME_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_PCB_ECC_SBE_FIRST_SYNDROME_SMASK		0xFF00000000ull
#define FXR_RXHIARB_ERR_INFO_PCB_ECC_MBE_COUNT_SHIFT			24
#define FXR_RXHIARB_ERR_INFO_PCB_ECC_MBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_PCB_ECC_MBE_COUNT_SMASK			0xFF000000ull
#define FXR_RXHIARB_ERR_INFO_PCB_ECC_RESERVED_23_20_SHIFT		20
#define FXR_RXHIARB_ERR_INFO_PCB_ECC_RESERVED_23_20_MASK		0xFull
#define FXR_RXHIARB_ERR_INFO_PCB_ECC_RESERVED_23_20_SMASK		0xF00000ull
#define FXR_RXHIARB_ERR_INFO_PCB_ECC_MBE_FIRST_INDEX_SHIFT		8
#define FXR_RXHIARB_ERR_INFO_PCB_ECC_MBE_FIRST_INDEX_MASK		0xFFFull
#define FXR_RXHIARB_ERR_INFO_PCB_ECC_MBE_FIRST_INDEX_SMASK		0xFFF00ull
#define FXR_RXHIARB_ERR_INFO_PCB_ECC_MBE_FIRST_SYNDROME_SHIFT		0
#define FXR_RXHIARB_ERR_INFO_PCB_ECC_MBE_FIRST_SYNDROME_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_PCB_ECC_MBE_FIRST_SYNDROME_SMASK		0xFFull
/*
* Table #28 of fxr_top - RXHIARB_ERR_INJECT_PCB
* Injects ECC errors on the PCB checkers. Errors are injected/checked for 4 
* domains: PCB NVAL (domain 3), PCB BVIO (domain 2), PCB OVFLW (domain 1). and 
* PCB ECC (domain 0). Since only one of the error domains is ECC protected, that 
* is the only error which contains a mask.
*/
#define FXR_RXHIARB_ERR_INJECT_PCB					(FXR_RX_HIARB_CSRS + 0x000000030120)
#define FXR_RXHIARB_ERR_INJECT_PCB_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INJECT_PCB_RESERVED_63_12_SHIFT			12
#define FXR_RXHIARB_ERR_INJECT_PCB_RESERVED_63_12_MASK			0xFFFFFFFFFFFFFull
#define FXR_RXHIARB_ERR_INJECT_PCB_RESERVED_63_12_SMASK			0xFFFFFFFFFFFFF000ull
#define FXR_RXHIARB_ERR_INJECT_PCB_ERR_INJECT_NVAL_EN_SHIFT		11
#define FXR_RXHIARB_ERR_INJECT_PCB_ERR_INJECT_NVAL_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_PCB_ERR_INJECT_NVAL_EN_SMASK		0x800ull
#define FXR_RXHIARB_ERR_INJECT_PCB_ERR_INJECT_BVIO_EN_SHIFT		10
#define FXR_RXHIARB_ERR_INJECT_PCB_ERR_INJECT_BVIO_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_PCB_ERR_INJECT_BVIO_EN_SMASK		0x400ull
#define FXR_RXHIARB_ERR_INJECT_PCB_ERR_INJECT_OVFLW_EN_SHIFT		9
#define FXR_RXHIARB_ERR_INJECT_PCB_ERR_INJECT_OVFLW_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_PCB_ERR_INJECT_OVFLW_EN_SMASK		0x200ull
#define FXR_RXHIARB_ERR_INJECT_PCB_ERR_INJECT_ECC_EN_SHIFT		8
#define FXR_RXHIARB_ERR_INJECT_PCB_ERR_INJECT_ECC_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_PCB_ERR_INJECT_ECC_EN_SMASK		0x100ull
#define FXR_RXHIARB_ERR_INJECT_PCB_ERR_INJECT_ECC_MASK_SHIFT		0
#define FXR_RXHIARB_ERR_INJECT_PCB_ERR_INJECT_ECC_MASK_MASK		0xFFull
#define FXR_RXHIARB_ERR_INJECT_PCB_ERR_INJECT_ECC_MASK_SMASK		0xFFull
/*
* Table #29 of fxr_top - RXHIARB_ERR_INFO_AT_RSP
* Captures information for the first AT error response. Captures the response 
* delivered by the AT during the error. See AT interface for descriptions of the 
* fields. Since this is not a HIARB protected error, no injection will be 
* associated with it. The error can be injected through the AT 
* configuration.
*/
#define FXR_RXHIARB_ERR_INFO_AT_RSP					(FXR_RX_HIARB_CSRS + 0x000000030128)
#define FXR_RXHIARB_ERR_INFO_AT_RSP_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_AT_RSP_RESERVED_63_32_SHIFT		32
#define FXR_RXHIARB_ERR_INFO_AT_RSP_RESERVED_63_32_MASK			0xFFFFFFFFull
#define FXR_RXHIARB_ERR_INFO_AT_RSP_RESERVED_63_32_SMASK		0xFFFFFFFF00000000ull
#define FXR_RXHIARB_ERR_INFO_AT_RSP_COUNT_SHIFT				16
#define FXR_RXHIARB_ERR_INFO_AT_RSP_COUNT_MASK				0xFFFFull
#define FXR_RXHIARB_ERR_INFO_AT_RSP_COUNT_SMASK				0xFFFF0000ull
#define FXR_RXHIARB_ERR_INFO_AT_RSP_RESERVED_15_12_SHIFT		12
#define FXR_RXHIARB_ERR_INFO_AT_RSP_RESERVED_15_12_MASK			0xFull
#define FXR_RXHIARB_ERR_INFO_AT_RSP_RESERVED_15_12_SMASK		0xF000ull
#define FXR_RXHIARB_ERR_INFO_AT_RSP_STATUS_SHIFT			8
#define FXR_RXHIARB_ERR_INFO_AT_RSP_STATUS_MASK				0xFull
#define FXR_RXHIARB_ERR_INFO_AT_RSP_STATUS_SMASK			0xF00ull
#define FXR_RXHIARB_ERR_INFO_AT_RSP_RESERVED_7_SHIFT			7
#define FXR_RXHIARB_ERR_INFO_AT_RSP_RESERVED_7_MASK			0x1ull
#define FXR_RXHIARB_ERR_INFO_AT_RSP_RESERVED_7_SMASK			0x80ull
#define FXR_RXHIARB_ERR_INFO_AT_RSP_AT_TID_SHIFT			0
#define FXR_RXHIARB_ERR_INFO_AT_RSP_AT_TID_MASK				0x7Full
#define FXR_RXHIARB_ERR_INFO_AT_RSP_AT_TID_SMASK			0x7Full
/*
* Table #30 of fxr_top - RXHIARB_ERR_INFO_RXDMA_FRAME
* Captures information related to the first framing error on the RxDMA 
* interface. Framing errors occur during head/tail mismatches or when the length 
* does not correspond to the number of flits. They are monitored across 9 
* domians (one domain per MCTC queue).
*/
#define FXR_RXHIARB_ERR_INFO_RXDMA_FRAME				(FXR_RX_HIARB_CSRS + 0x000000030130)
#define FXR_RXHIARB_ERR_INFO_RXDMA_FRAME_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_RXDMA_FRAME_RESERVED_63_40_SHIFT		40
#define FXR_RXHIARB_ERR_INFO_RXDMA_FRAME_RESERVED_63_40_MASK		0xFFFFFFull
#define FXR_RXHIARB_ERR_INFO_RXDMA_FRAME_RESERVED_63_40_SMASK		0xFFFFFF0000000000ull
#define FXR_RXHIARB_ERR_INFO_RXDMA_FRAME_COUNT_SHIFT			32
#define FXR_RXHIARB_ERR_INFO_RXDMA_FRAME_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_RXDMA_FRAME_COUNT_SMASK			0xFF00000000ull
#define FXR_RXHIARB_ERR_INFO_RXDMA_FRAME_RESERVED_31_25_SHIFT		25
#define FXR_RXHIARB_ERR_INFO_RXDMA_FRAME_RESERVED_31_25_MASK		0x7Full
#define FXR_RXHIARB_ERR_INFO_RXDMA_FRAME_RESERVED_31_25_SMASK		0xFE000000ull
#define FXR_RXHIARB_ERR_INFO_RXDMA_FRAME_FERR_SHIFT			16
#define FXR_RXHIARB_ERR_INFO_RXDMA_FRAME_FERR_MASK			0x1FFull
#define FXR_RXHIARB_ERR_INFO_RXDMA_FRAME_FERR_SMASK			0x1FF0000ull
#define FXR_RXHIARB_ERR_INFO_RXDMA_FRAME_RESERVED_15_12_SHIFT		12
#define FXR_RXHIARB_ERR_INFO_RXDMA_FRAME_RESERVED_15_12_MASK		0xFull
#define FXR_RXHIARB_ERR_INFO_RXDMA_FRAME_RESERVED_15_12_SMASK		0xF000ull
#define FXR_RXHIARB_ERR_INFO_RXDMA_FRAME_DOMAIN_SHIFT			8
#define FXR_RXHIARB_ERR_INFO_RXDMA_FRAME_DOMAIN_MASK			0xFull
#define FXR_RXHIARB_ERR_INFO_RXDMA_FRAME_DOMAIN_SMASK			0xF00ull
#define FXR_RXHIARB_ERR_INFO_RXDMA_FRAME_TID_SHIFT			0
#define FXR_RXHIARB_ERR_INFO_RXDMA_FRAME_TID_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_RXDMA_FRAME_TID_SMASK			0xFFull
/*
* Table #31 of fxr_top - RXHIARB_ERR_INFO_RXDMA_ECC
* Captures information related to ECC errors on the RxDMA interface. Errors are 
* only checked for the 9 header domains (one domain per MCTC queue)
*/
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC					(FXR_RX_HIARB_CSRS + 0x000000030138)
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_SBE_COUNT_SHIFT			56
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_SBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_SBE_COUNT_SMASK			0xFF00000000000000ull
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_RESERVED_55_53_SHIFT		53
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_RESERVED_55_53_MASK		0x7ull
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_RESERVED_55_53_SMASK		0xE0000000000000ull
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_SBE_SHIFT			44
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_SBE_MASK				0x1FFull
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_SBE_SMASK			0x1FF00000000000ull
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_SBE_FIRST_DOMAIN_SHIFT		40
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_SBE_FIRST_DOMAIN_MASK		0xFull
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_SBE_FIRST_DOMAIN_SMASK		0xF0000000000ull
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_SBE_FIRST_SYNDROME_SHIFT		32
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_SBE_FIRST_SYNDROME_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_SBE_FIRST_SYNDROME_SMASK		0xFF00000000ull
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_MBE_COUNT_SHIFT			24
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_MBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_MBE_COUNT_SMASK			0xFF000000ull
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_RESERVED_23_21_SHIFT		21
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_RESERVED_23_21_MASK		0x7ull
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_RESERVED_23_21_SMASK		0xE00000ull
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_MBE_SHIFT			12
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_MBE_MASK				0x1FFull
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_MBE_SMASK			0x1FF000ull
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_MBE_FIRST_DOMAIN_SHIFT		8
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_MBE_FIRST_DOMAIN_MASK		0xFull
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_MBE_FIRST_DOMAIN_SMASK		0xF00ull
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_MBE_FIRST_SYNDROME_SHIFT		0
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_MBE_FIRST_SYNDROME_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_RXDMA_ECC_MBE_FIRST_SYNDROME_SMASK		0xFFull
/*
* Table #32 of fxr_top - RXHIARB_ERR_INJECT_RXDMA_0_3
* Injects ECC errors on the RxDMA inpur queue checkers for queues 0-3. Errors 
* are only injected/checked for the header domain.
*/
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3				(FXR_RX_HIARB_CSRS + 0x000000030140)
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_RESERVED_63_44_SHIFT		44
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_RESERVED_63_44_MASK		0xFFFFFull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_RESERVED_63_44_SMASK		0xFFFFF00000000000ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_ERR_INJECT_EN3_SHIFT		43
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_ERR_INJECT_EN3_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_ERR_INJECT_EN3_SMASK		0x80000000000ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_ERR_INJECT_EN2_SHIFT		42
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_ERR_INJECT_EN2_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_ERR_INJECT_EN2_SMASK		0x40000000000ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_ERR_INJECT_EN1_SHIFT		41
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_ERR_INJECT_EN1_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_ERR_INJECT_EN1_SMASK		0x20000000000ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_ERR_INJECT_EN0_SHIFT		40
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_ERR_INJECT_EN0_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_ERR_INJECT_EN0_SMASK		0x10000000000ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_RESERVED_39_32_SHIFT		32
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_RESERVED_39_32_MASK		0xFFull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_RESERVED_39_32_SMASK		0xFF00000000ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_ERR_INJECT_MASK3_SHIFT		24
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_ERR_INJECT_MASK3_MASK		0xFFull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_ERR_INJECT_MASK3_SMASK		0xFF000000ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_ERR_INJECT_MASK2_SHIFT		16
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_ERR_INJECT_MASK2_MASK		0xFFull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_ERR_INJECT_MASK2_SMASK		0xFF0000ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_ERR_INJECT_MASK1_SHIFT		8
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_ERR_INJECT_MASK1_MASK		0xFFull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_ERR_INJECT_MASK1_SMASK		0xFF00ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_ERR_INJECT_MASK0_SHIFT		0
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_ERR_INJECT_MASK0_MASK		0xFFull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_0_3_ERR_INJECT_MASK0_SMASK		0xFFull
/*
* Table #33 of fxr_top - RXHIARB_ERR_INJECT_RXDMA_4_7
* Injects ECC errors on the RxDMA inpur queue checkers for queues 3-7. Errors 
* are only injected/checked for the header domain.
*/
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7				(FXR_RX_HIARB_CSRS + 0x000000030148)
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_RESERVED_63_44_SHIFT		44
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_RESERVED_63_44_MASK		0xFFFFFull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_RESERVED_63_44_SMASK		0xFFFFF00000000000ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_ERR_INJECT_EN7_SHIFT		43
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_ERR_INJECT_EN7_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_ERR_INJECT_EN7_SMASK		0x80000000000ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_ERR_INJECT_EN6_SHIFT		42
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_ERR_INJECT_EN6_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_ERR_INJECT_EN6_SMASK		0x40000000000ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_ERR_INJECT_EN5_SHIFT		41
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_ERR_INJECT_EN5_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_ERR_INJECT_EN5_SMASK		0x20000000000ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_ERR_INJECT_EN4_SHIFT		40
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_ERR_INJECT_EN4_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_ERR_INJECT_EN4_SMASK		0x10000000000ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_RESERVED_39_32_SHIFT		32
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_RESERVED_39_32_MASK		0xFFull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_RESERVED_39_32_SMASK		0xFF00000000ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_ERR_INJECT_MASK7_SHIFT		24
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_ERR_INJECT_MASK7_MASK		0xFFull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_ERR_INJECT_MASK7_SMASK		0xFF000000ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_ERR_INJECT_MASK6_SHIFT		16
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_ERR_INJECT_MASK6_MASK		0xFFull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_ERR_INJECT_MASK6_SMASK		0xFF0000ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_ERR_INJECT_MASK5_SHIFT		8
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_ERR_INJECT_MASK5_MASK		0xFFull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_ERR_INJECT_MASK5_SMASK		0xFF00ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_ERR_INJECT_MASK4_SHIFT		0
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_ERR_INJECT_MASK4_MASK		0xFFull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_4_7_ERR_INJECT_MASK4_SMASK		0xFFull
/*
* Table #34 of fxr_top - RXHIARB_ERR_INJECT_RXDMA_8F
* Injects errors on the RxDMA inpur queue checkers for queue 8. Errors are only 
* injected/checked for the header ECC domain. Since framing errors are not 
* detected via ECC, there is no mask associated with it,
*/
#define FXR_RXHIARB_ERR_INJECT_RXDMA_8F					(FXR_RX_HIARB_CSRS + 0x000000030150)
#define FXR_RXHIARB_ERR_INJECT_RXDMA_8F_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_8F_RESERVED_63_10_SHIFT		10
#define FXR_RXHIARB_ERR_INJECT_RXDMA_8F_RESERVED_63_10_MASK		0x3FFFFFFFFFFFFFull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_8F_RESERVED_63_10_SMASK		0xFFFFFFFFFFFFFC00ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_8F_ERR_INJECT_FERR_EN_SHIFT	9
#define FXR_RXHIARB_ERR_INJECT_RXDMA_8F_ERR_INJECT_FERR_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_8F_ERR_INJECT_FERR_EN_SMASK	0x200ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_8F_ERR_INJECT_EN8_SHIFT		8
#define FXR_RXHIARB_ERR_INJECT_RXDMA_8F_ERR_INJECT_EN8_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_8F_ERR_INJECT_EN8_SMASK		0x100ull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_8F_ERR_INJECT_MASK8_SHIFT		0
#define FXR_RXHIARB_ERR_INJECT_RXDMA_8F_ERR_INJECT_MASK8_MASK		0xFFull
#define FXR_RXHIARB_ERR_INJECT_RXDMA_8F_ERR_INJECT_MASK8_SMASK		0xFFull
/*
* Table #35 of fxr_top - RXHIARB_ERR_INFO_RXHP_FRAME
* Captures information related to the first framing error on the RxHP interface. 
* Framing errors occur when the length does not correspond to the number of 
* flits.
*/
#define FXR_RXHIARB_ERR_INFO_RXHP_FRAME					(FXR_RX_HIARB_CSRS + 0x000000030158)
#define FXR_RXHIARB_ERR_INFO_RXHP_FRAME_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_RXHP_FRAME_RESERVED_63_16_SHIFT		16
#define FXR_RXHIARB_ERR_INFO_RXHP_FRAME_RESERVED_63_16_MASK		0xFFFFFFFFFFFFull
#define FXR_RXHIARB_ERR_INFO_RXHP_FRAME_RESERVED_63_16_SMASK		0xFFFFFFFFFFFF0000ull
#define FXR_RXHIARB_ERR_INFO_RXHP_FRAME_COUNT_SHIFT			8
#define FXR_RXHIARB_ERR_INFO_RXHP_FRAME_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_RXHP_FRAME_COUNT_SMASK			0xFF00ull
#define FXR_RXHIARB_ERR_INFO_RXHP_FRAME_TID_SHIFT			0
#define FXR_RXHIARB_ERR_INFO_RXHP_FRAME_TID_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_RXHP_FRAME_TID_SMASK			0xFFull
/*
* Table #36 of fxr_top - RXHIARB_ERR_INFO_RXHP_ECC
* Captures information related to ECC errors on the RxHP interface. Errors are 
* only checked for the header domain,
*/
#define FXR_RXHIARB_ERR_INFO_RXHP_ECC					(FXR_RX_HIARB_CSRS + 0x000000030160)
#define FXR_RXHIARB_ERR_INFO_RXHP_ECC_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_RXHP_ECC_RESERVED_63_48_SHIFT		48
#define FXR_RXHIARB_ERR_INFO_RXHP_ECC_RESERVED_63_48_MASK		0xFFFFull
#define FXR_RXHIARB_ERR_INFO_RXHP_ECC_RESERVED_63_48_SMASK		0xFFFF000000000000ull
#define FXR_RXHIARB_ERR_INFO_RXHP_ECC_SBE_COUNT_SHIFT			40
#define FXR_RXHIARB_ERR_INFO_RXHP_ECC_SBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_RXHP_ECC_SBE_COUNT_SMASK			0xFF0000000000ull
#define FXR_RXHIARB_ERR_INFO_RXHP_ECC_SBE_FIRST_SYNDROME_SHIFT		32
#define FXR_RXHIARB_ERR_INFO_RXHP_ECC_SBE_FIRST_SYNDROME_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_RXHP_ECC_SBE_FIRST_SYNDROME_SMASK		0xFF00000000ull
#define FXR_RXHIARB_ERR_INFO_RXHP_ECC_RESERVED_31_16_SHIFT		16
#define FXR_RXHIARB_ERR_INFO_RXHP_ECC_RESERVED_31_16_MASK		0xFFFFull
#define FXR_RXHIARB_ERR_INFO_RXHP_ECC_RESERVED_31_16_SMASK		0xFFFF0000ull
#define FXR_RXHIARB_ERR_INFO_RXHP_ECC_MBE_COUNT_SHIFT			8
#define FXR_RXHIARB_ERR_INFO_RXHP_ECC_MBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_RXHP_ECC_MBE_COUNT_SMASK			0xFF00ull
#define FXR_RXHIARB_ERR_INFO_RXHP_ECC_MBE_FIRST_SYNDROME_SHIFT		0
#define FXR_RXHIARB_ERR_INFO_RXHP_ECC_MBE_FIRST_SYNDROME_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_RXHP_ECC_MBE_FIRST_SYNDROME_SMASK		0xFFull
/*
* Table #37 of fxr_top - RXHIARB_ERR_INJECT_RXHP
* Injects errors on the RXHP input queue checker. Errors are only 
* injected/checked for the header ECC domain. Since framing errors are not 
* checked via ECC, there is no mask associated with it.
*/
#define FXR_RXHIARB_ERR_INJECT_RXHP					(FXR_RX_HIARB_CSRS + 0x000000030168)
#define FXR_RXHIARB_ERR_INJECT_RXHP_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INJECT_RXHP_RESERVED_63_10_SHIFT		10
#define FXR_RXHIARB_ERR_INJECT_RXHP_RESERVED_63_10_MASK			0x3FFFFFFFFFFFFFull
#define FXR_RXHIARB_ERR_INJECT_RXHP_RESERVED_63_10_SMASK		0xFFFFFFFFFFFFFC00ull
#define FXR_RXHIARB_ERR_INJECT_RXHP_ERR_INJECT_FERR_EN_SHIFT		9
#define FXR_RXHIARB_ERR_INJECT_RXHP_ERR_INJECT_FERR_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_RXHP_ERR_INJECT_FERR_EN_SMASK		0x200ull
#define FXR_RXHIARB_ERR_INJECT_RXHP_ERR_INJECT_ECC_EN_SHIFT		8
#define FXR_RXHIARB_ERR_INJECT_RXHP_ERR_INJECT_ECC_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_RXHP_ERR_INJECT_ECC_EN_SMASK		0x100ull
#define FXR_RXHIARB_ERR_INJECT_RXHP_ERR_INJECT_ECC_MASK_SHIFT		0
#define FXR_RXHIARB_ERR_INJECT_RXHP_ERR_INJECT_ECC_MASK_MASK		0xFFull
#define FXR_RXHIARB_ERR_INJECT_RXHP_ERR_INJECT_ECC_MASK_SMASK		0xFFull
/*
* Table #38 of fxr_top - RXHIARB_ERR_INFO_RXET_FRAME
* Captures information related to the first framing error on the RxET interface. 
* Framing errors occur when the length does not correspond to the number of 
* flits.
*/
#define FXR_RXHIARB_ERR_INFO_RXET_FRAME					(FXR_RX_HIARB_CSRS + 0x000000030170)
#define FXR_RXHIARB_ERR_INFO_RXET_FRAME_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_RXET_FRAME_RESERVED_63_16_SHIFT		16
#define FXR_RXHIARB_ERR_INFO_RXET_FRAME_RESERVED_63_16_MASK		0xFFFFFFFFFFFFull
#define FXR_RXHIARB_ERR_INFO_RXET_FRAME_RESERVED_63_16_SMASK		0xFFFFFFFFFFFF0000ull
#define FXR_RXHIARB_ERR_INFO_RXET_FRAME_COUNT_SHIFT			8
#define FXR_RXHIARB_ERR_INFO_RXET_FRAME_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_RXET_FRAME_COUNT_SMASK			0xFF00ull
#define FXR_RXHIARB_ERR_INFO_RXET_FRAME_TID_SHIFT			0
#define FXR_RXHIARB_ERR_INFO_RXET_FRAME_TID_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_RXET_FRAME_TID_SMASK			0xFFull
/*
* Table #39 of fxr_top - RXHIARB_ERR_INFO_RXET_ECC
* Captures information related to ECC errors on the RxET interface. Errors are 
* only checked for the header domain.
*/
#define FXR_RXHIARB_ERR_INFO_RXET_ECC					(FXR_RX_HIARB_CSRS + 0x000000030178)
#define FXR_RXHIARB_ERR_INFO_RXET_ECC_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_RXET_ECC_RESERVED_63_48_SHIFT		48
#define FXR_RXHIARB_ERR_INFO_RXET_ECC_RESERVED_63_48_MASK		0xFFFFull
#define FXR_RXHIARB_ERR_INFO_RXET_ECC_RESERVED_63_48_SMASK		0xFFFF000000000000ull
#define FXR_RXHIARB_ERR_INFO_RXET_ECC_SBE_COUNT_SHIFT			40
#define FXR_RXHIARB_ERR_INFO_RXET_ECC_SBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_RXET_ECC_SBE_COUNT_SMASK			0xFF0000000000ull
#define FXR_RXHIARB_ERR_INFO_RXET_ECC_SBE_FIRST_SYNDROME_SHIFT		32
#define FXR_RXHIARB_ERR_INFO_RXET_ECC_SBE_FIRST_SYNDROME_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_RXET_ECC_SBE_FIRST_SYNDROME_SMASK		0xFF00000000ull
#define FXR_RXHIARB_ERR_INFO_RXET_ECC_RESERVED_31_16_SHIFT		16
#define FXR_RXHIARB_ERR_INFO_RXET_ECC_RESERVED_31_16_MASK		0xFFFFull
#define FXR_RXHIARB_ERR_INFO_RXET_ECC_RESERVED_31_16_SMASK		0xFFFF0000ull
#define FXR_RXHIARB_ERR_INFO_RXET_ECC_MBE_COUNT_SHIFT			8
#define FXR_RXHIARB_ERR_INFO_RXET_ECC_MBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_RXET_ECC_MBE_COUNT_SMASK			0xFF00ull
#define FXR_RXHIARB_ERR_INFO_RXET_ECC_MBE_FIRST_SYNDROME_SHIFT		0
#define FXR_RXHIARB_ERR_INFO_RXET_ECC_MBE_FIRST_SYNDROME_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_RXET_ECC_MBE_FIRST_SYNDROME_SMASK		0xFFull
/*
* Table #40 of fxr_top - RXHIARB_ERR_INJECT_RXET
* Injects errors on the RXET input queue checker. Errors are only 
* injected/checked for the ECC header domain, Since framing errors are not 
* checked via ECC, there is no mask associated with it.
*/
#define FXR_RXHIARB_ERR_INJECT_RXET					(FXR_RX_HIARB_CSRS + 0x000000030180)
#define FXR_RXHIARB_ERR_INJECT_RXET_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INJECT_RXET_RESERVED_63_10_SHIFT		10
#define FXR_RXHIARB_ERR_INJECT_RXET_RESERVED_63_10_MASK			0x3FFFFFFFFFFFFFull
#define FXR_RXHIARB_ERR_INJECT_RXET_RESERVED_63_10_SMASK		0xFFFFFFFFFFFFFC00ull
#define FXR_RXHIARB_ERR_INJECT_RXET_ERR_INJECT_FERR_EN_SHIFT		9
#define FXR_RXHIARB_ERR_INJECT_RXET_ERR_INJECT_FERR_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_RXET_ERR_INJECT_FERR_EN_SMASK		0x200ull
#define FXR_RXHIARB_ERR_INJECT_RXET_ERR_INJECT_ECC_EN_SHIFT		8
#define FXR_RXHIARB_ERR_INJECT_RXET_ERR_INJECT_ECC_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_RXET_ERR_INJECT_ECC_EN_SMASK		0x100ull
#define FXR_RXHIARB_ERR_INJECT_RXET_ERR_INJECT_ECC_MASK_SHIFT		0
#define FXR_RXHIARB_ERR_INJECT_RXET_ERR_INJECT_ECC_MASK_MASK		0xFFull
#define FXR_RXHIARB_ERR_INJECT_RXET_ERR_INJECT_ECC_MASK_SMASK		0xFFull
/*
* Table #41 of fxr_top - RXHIARB_ERR_INFO_RXE2E_ECC
* Captures information related to ECC errors on the RxE2E interface. Errors are 
* only checked for the header domain.
*/
#define FXR_RXHIARB_ERR_INFO_RXE2E_ECC					(FXR_RX_HIARB_CSRS + 0x000000030188)
#define FXR_RXHIARB_ERR_INFO_RXE2E_ECC_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_RXE2E_ECC_RESERVED_63_48_SHIFT		48
#define FXR_RXHIARB_ERR_INFO_RXE2E_ECC_RESERVED_63_48_MASK		0xFFFFull
#define FXR_RXHIARB_ERR_INFO_RXE2E_ECC_RESERVED_63_48_SMASK		0xFFFF000000000000ull
#define FXR_RXHIARB_ERR_INFO_RXE2E_ECC_SBE_COUNT_SHIFT			40
#define FXR_RXHIARB_ERR_INFO_RXE2E_ECC_SBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_RXE2E_ECC_SBE_COUNT_SMASK			0xFF0000000000ull
#define FXR_RXHIARB_ERR_INFO_RXE2E_ECC_SBE_FIRST_SYNDROME_SHIFT		32
#define FXR_RXHIARB_ERR_INFO_RXE2E_ECC_SBE_FIRST_SYNDROME_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_RXE2E_ECC_SBE_FIRST_SYNDROME_SMASK		0xFF00000000ull
#define FXR_RXHIARB_ERR_INFO_RXE2E_ECC_RESERVED_31_16_SHIFT		16
#define FXR_RXHIARB_ERR_INFO_RXE2E_ECC_RESERVED_31_16_MASK		0xFFFFull
#define FXR_RXHIARB_ERR_INFO_RXE2E_ECC_RESERVED_31_16_SMASK		0xFFFF0000ull
#define FXR_RXHIARB_ERR_INFO_RXE2E_ECC_MBE_COUNT_SHIFT			8
#define FXR_RXHIARB_ERR_INFO_RXE2E_ECC_MBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_RXE2E_ECC_MBE_COUNT_SMASK			0xFF00ull
#define FXR_RXHIARB_ERR_INFO_RXE2E_ECC_MBE_FIRST_SYNDROME_SHIFT		0
#define FXR_RXHIARB_ERR_INFO_RXE2E_ECC_MBE_FIRST_SYNDROME_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_RXE2E_ECC_MBE_FIRST_SYNDROME_SMASK		0xFFull
/*
* Table #42 of fxr_top - RXHIARB_ERR_INJECT_RXE2E
* Injects ECC errors on the RXE2E input queue checker. Errors are only 
* injected/checked for the header domain.
*/
#define FXR_RXHIARB_ERR_INJECT_RXE2E					(FXR_RX_HIARB_CSRS + 0x000000030190)
#define FXR_RXHIARB_ERR_INJECT_RXE2E_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INJECT_RXE2E_RESERVED_63_9_SHIFT		9
#define FXR_RXHIARB_ERR_INJECT_RXE2E_RESERVED_63_9_MASK			0x7FFFFFFFFFFFFFull
#define FXR_RXHIARB_ERR_INJECT_RXE2E_RESERVED_63_9_SMASK		0xFFFFFFFFFFFFFE00ull
#define FXR_RXHIARB_ERR_INJECT_RXE2E_ERR_INJECT_EN_SHIFT		8
#define FXR_RXHIARB_ERR_INJECT_RXE2E_ERR_INJECT_EN_MASK			0x1ull
#define FXR_RXHIARB_ERR_INJECT_RXE2E_ERR_INJECT_EN_SMASK		0x100ull
#define FXR_RXHIARB_ERR_INJECT_RXE2E_ERR_INJECT_MASK_SHIFT		0
#define FXR_RXHIARB_ERR_INJECT_RXE2E_ERR_INJECT_MASK_MASK		0xFFull
#define FXR_RXHIARB_ERR_INJECT_RXE2E_ERR_INJECT_MASK_SMASK		0xFFull
/*
* Table #43 of fxr_top - RXHIARB_ERR_INFO_RXCID_ECC
* Captures information related to ECC errors on the RxCID interface. Errors are 
* only checked for the header domains.
*/
#define FXR_RXHIARB_ERR_INFO_RXCID_ECC					(FXR_RX_HIARB_CSRS + 0x000000030198)
#define FXR_RXHIARB_ERR_INFO_RXCID_ECC_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_RXCID_ECC_RESERVED_63_48_SHIFT		48
#define FXR_RXHIARB_ERR_INFO_RXCID_ECC_RESERVED_63_48_MASK		0xFFFFull
#define FXR_RXHIARB_ERR_INFO_RXCID_ECC_RESERVED_63_48_SMASK		0xFFFF000000000000ull
#define FXR_RXHIARB_ERR_INFO_RXCID_ECC_SBE_COUNT_SHIFT			40
#define FXR_RXHIARB_ERR_INFO_RXCID_ECC_SBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_RXCID_ECC_SBE_COUNT_SMASK			0xFF0000000000ull
#define FXR_RXHIARB_ERR_INFO_RXCID_ECC_SBE_FIRST_SYNDROME_SHIFT		32
#define FXR_RXHIARB_ERR_INFO_RXCID_ECC_SBE_FIRST_SYNDROME_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_RXCID_ECC_SBE_FIRST_SYNDROME_SMASK		0xFF00000000ull
#define FXR_RXHIARB_ERR_INFO_RXCID_ECC_RESERVED_31_16_SHIFT		16
#define FXR_RXHIARB_ERR_INFO_RXCID_ECC_RESERVED_31_16_MASK		0xFFFFull
#define FXR_RXHIARB_ERR_INFO_RXCID_ECC_RESERVED_31_16_SMASK		0xFFFF0000ull
#define FXR_RXHIARB_ERR_INFO_RXCID_ECC_MBE_COUNT_SHIFT			8
#define FXR_RXHIARB_ERR_INFO_RXCID_ECC_MBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_RXCID_ECC_MBE_COUNT_SMASK			0xFF00ull
#define FXR_RXHIARB_ERR_INFO_RXCID_ECC_MBE_FIRST_SYNDROME_SHIFT		0
#define FXR_RXHIARB_ERR_INFO_RXCID_ECC_MBE_FIRST_SYNDROME_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_RXCID_ECC_MBE_FIRST_SYNDROME_SMASK		0xFFull
/*
* Table #44 of fxr_top - RXHIARB_ERR_INJECT_RXCID
* Injects ECC errors on the RXCID input queue checker. Errors are only 
* injected/checked for the header domain.
*/
#define FXR_RXHIARB_ERR_INJECT_RXCID					(FXR_RX_HIARB_CSRS + 0x0000000301A0)
#define FXR_RXHIARB_ERR_INJECT_RXCID_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INJECT_RXCID_RESERVED_63_9_SHIFT		9
#define FXR_RXHIARB_ERR_INJECT_RXCID_RESERVED_63_9_MASK			0x7FFFFFFFFFFFFFull
#define FXR_RXHIARB_ERR_INJECT_RXCID_RESERVED_63_9_SMASK		0xFFFFFFFFFFFFFE00ull
#define FXR_RXHIARB_ERR_INJECT_RXCID_ERR_INJECT_EN_SHIFT		8
#define FXR_RXHIARB_ERR_INJECT_RXCID_ERR_INJECT_EN_MASK			0x1ull
#define FXR_RXHIARB_ERR_INJECT_RXCID_ERR_INJECT_EN_SMASK		0x100ull
#define FXR_RXHIARB_ERR_INJECT_RXCID_ERR_INJECT_MASK_SHIFT		0
#define FXR_RXHIARB_ERR_INJECT_RXCID_ERR_INJECT_MASK_MASK		0xFFull
#define FXR_RXHIARB_ERR_INJECT_RXCID_ERR_INJECT_MASK_SMASK		0xFFull
/*
* Table #45 of fxr_top - RXHIARB_ERR_INFO_SLRSP_ECC
* Captures information related to ECC errors within the slow response queue 
* (used for capturing responses to RxHP and RxET). Errors are only checked for 
* the header domain.
*/
#define FXR_RXHIARB_ERR_INFO_SLRSP_ECC					(FXR_RX_HIARB_CSRS + 0x0000000301A8)
#define FXR_RXHIARB_ERR_INFO_SLRSP_ECC_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_SLRSP_ECC_RESERVED_63_48_SHIFT		48
#define FXR_RXHIARB_ERR_INFO_SLRSP_ECC_RESERVED_63_48_MASK		0xFFFFull
#define FXR_RXHIARB_ERR_INFO_SLRSP_ECC_RESERVED_63_48_SMASK		0xFFFF000000000000ull
#define FXR_RXHIARB_ERR_INFO_SLRSP_ECC_SBE_COUNT_SHIFT			40
#define FXR_RXHIARB_ERR_INFO_SLRSP_ECC_SBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_SLRSP_ECC_SBE_COUNT_SMASK			0xFF0000000000ull
#define FXR_RXHIARB_ERR_INFO_SLRSP_ECC_RESERVED_39_38_SHIFT		38
#define FXR_RXHIARB_ERR_INFO_SLRSP_ECC_RESERVED_39_38_MASK		0x3ull
#define FXR_RXHIARB_ERR_INFO_SLRSP_ECC_RESERVED_39_38_SMASK		0xC000000000ull
#define FXR_RXHIARB_ERR_INFO_SLRSP_ECC_SBE_FIRST_SYNDROME_SHIFT		32
#define FXR_RXHIARB_ERR_INFO_SLRSP_ECC_SBE_FIRST_SYNDROME_MASK		0x3Full
#define FXR_RXHIARB_ERR_INFO_SLRSP_ECC_SBE_FIRST_SYNDROME_SMASK		0x3F00000000ull
#define FXR_RXHIARB_ERR_INFO_SLRSP_ECC_RESERVED_31_16_SHIFT		16
#define FXR_RXHIARB_ERR_INFO_SLRSP_ECC_RESERVED_31_16_MASK		0xFFFFull
#define FXR_RXHIARB_ERR_INFO_SLRSP_ECC_RESERVED_31_16_SMASK		0xFFFF0000ull
#define FXR_RXHIARB_ERR_INFO_SLRSP_ECC_MBE_COUNT_SHIFT			8
#define FXR_RXHIARB_ERR_INFO_SLRSP_ECC_MBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_SLRSP_ECC_MBE_COUNT_SMASK			0xFF00ull
#define FXR_RXHIARB_ERR_INFO_SLRSP_ECC_RESERVED_7_6_SHIFT		6
#define FXR_RXHIARB_ERR_INFO_SLRSP_ECC_RESERVED_7_6_MASK		0x3ull
#define FXR_RXHIARB_ERR_INFO_SLRSP_ECC_RESERVED_7_6_SMASK		0xC0ull
#define FXR_RXHIARB_ERR_INFO_SLRSP_ECC_MBE_FIRST_SYNDROME_SHIFT		0
#define FXR_RXHIARB_ERR_INFO_SLRSP_ECC_MBE_FIRST_SYNDROME_MASK		0x3Full
#define FXR_RXHIARB_ERR_INFO_SLRSP_ECC_MBE_FIRST_SYNDROME_SMASK		0x3Full
/*
* Table #46 of fxr_top - RXHIARB_ERR_INJECT_SLRSP
* Injects ECC errors on the Slow Response queue checker. Errors are only 
* injected/checked for the header domain.
*/
#define FXR_RXHIARB_ERR_INJECT_SLRSP					(FXR_RX_HIARB_CSRS + 0x0000000301B0)
#define FXR_RXHIARB_ERR_INJECT_SLRSP_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INJECT_SLRSP_RESERVED_63_9_SHIFT		9
#define FXR_RXHIARB_ERR_INJECT_SLRSP_RESERVED_63_9_MASK			0x7FFFFFFFFFFFFFull
#define FXR_RXHIARB_ERR_INJECT_SLRSP_RESERVED_63_9_SMASK		0xFFFFFFFFFFFFFE00ull
#define FXR_RXHIARB_ERR_INJECT_SLRSP_ERR_INJECT_EN_SHIFT		8
#define FXR_RXHIARB_ERR_INJECT_SLRSP_ERR_INJECT_EN_MASK			0x1ull
#define FXR_RXHIARB_ERR_INJECT_SLRSP_ERR_INJECT_EN_SMASK		0x100ull
#define FXR_RXHIARB_ERR_INJECT_SLRSP_RESERVED_7_6_SHIFT			6
#define FXR_RXHIARB_ERR_INJECT_SLRSP_RESERVED_7_6_MASK			0x3ull
#define FXR_RXHIARB_ERR_INJECT_SLRSP_RESERVED_7_6_SMASK			0xC0ull
#define FXR_RXHIARB_ERR_INJECT_SLRSP_ERR_INJECT_MASK_SHIFT		0
#define FXR_RXHIARB_ERR_INJECT_SLRSP_ERR_INJECT_MASK_MASK		0x3Full
#define FXR_RXHIARB_ERR_INJECT_SLRSP_ERR_INJECT_MASK_SMASK		0x3Full
/*
* Table #47 of fxr_top - RXHIARB_ERR_INFO_FPFIFO_PERR
* Captures information related to parity errors within the free pool queue (used 
* for holding free internal IDs).
*/
#define FXR_RXHIARB_ERR_INFO_FPFIFO_PERR				(FXR_RX_HIARB_CSRS + 0x0000000301B8)
#define FXR_RXHIARB_ERR_INFO_FPFIFO_PERR_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_FPFIFO_PERR_RESERVED_63_7_SHIFT		7
#define FXR_RXHIARB_ERR_INFO_FPFIFO_PERR_RESERVED_63_7_MASK		0x1FFFFFFFFFFFFFFull
#define FXR_RXHIARB_ERR_INFO_FPFIFO_PERR_RESERVED_63_7_SMASK		0xFFFFFFFFFFFFFF80ull
#define FXR_RXHIARB_ERR_INFO_FPFIFO_PERR_PERR_COUNT_SHIFT		0
#define FXR_RXHIARB_ERR_INFO_FPFIFO_PERR_PERR_COUNT_MASK		0x7Full
#define FXR_RXHIARB_ERR_INFO_FPFIFO_PERR_PERR_COUNT_SMASK		0x7Full
/*
* Table #48 of fxr_top - RXHIARB_ERR_INJECT_FPFIFO
* Injects parity errors on the HID free pool checker..
*/
#define FXR_RXHIARB_ERR_INJECT_FPFIFO					(FXR_RX_HIARB_CSRS + 0x0000000301C0)
#define FXR_RXHIARB_ERR_INJECT_FPFIFO_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INJECT_FPFIFO_RESERVED_63_1_SHIFT		1
#define FXR_RXHIARB_ERR_INJECT_FPFIFO_RESERVED_63_1_MASK		0x7FFFFFFFFFFFFFFFull
#define FXR_RXHIARB_ERR_INJECT_FPFIFO_RESERVED_63_1_SMASK		0xFFFFFFFFFFFFFFFEull
#define FXR_RXHIARB_ERR_INJECT_FPFIFO_ERR_INJECT_EN_SHIFT		0
#define FXR_RXHIARB_ERR_INJECT_FPFIFO_ERR_INJECT_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_FPFIFO_ERR_INJECT_EN_SMASK		0x1ull
/*
* Table #49 of fxr_top - RXHIARB_ERR_INFO_PYLD_ECC
* Captures information related to ECC errors for header domain in the payload 
* buffer..
*/
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC					(FXR_RX_HIARB_CSRS + 0x0000000301C8)
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_RESERVED_63_56_SHIFT		56
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_RESERVED_63_56_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_RESERVED_63_56_SMASK		0xFF00000000000000ull
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_SBE_COUNT_SHIFT			48
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_SBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_SBE_COUNT_SMASK			0xFF000000000000ull
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_RESERVED_47_SHIFT			47
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_RESERVED_47_MASK			0x1ull
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_RESERVED_47_SMASK			0x800000000000ull
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_SBE_FIRST_INDEX_SHIFT		40
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_SBE_FIRST_INDEX_MASK		0x7Full
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_SBE_FIRST_INDEX_SMASK		0x7F0000000000ull
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_SBE_FIRST_SYNDROME_SHIFT		32
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_SBE_FIRST_SYNDROME_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_SBE_FIRST_SYNDROME_SMASK		0xFF00000000ull
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_RESERVED_31_24_SHIFT		24
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_RESERVED_31_24_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_RESERVED_31_24_SMASK		0xFF000000ull
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_MBE_COUNT_SHIFT			16
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_MBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_MBE_COUNT_SMASK			0xFF0000ull
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_RESERVED_15_SHIFT			15
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_RESERVED_15_MASK			0x1ull
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_RESERVED_15_SMASK			0x8000ull
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_MBE_FIRST_INDEX_SHIFT		8
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_MBE_FIRST_INDEX_MASK		0x7Full
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_MBE_FIRST_INDEX_SMASK		0x7F00ull
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_MBE_FIRST_SYNDROME_SHIFT		0
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_MBE_FIRST_SYNDROME_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_PYLD_ECC_MBE_FIRST_SYNDROME_SMASK		0xFFull
/*
* Table #50 of fxr_top - RXHIARB_ERR_INJECT_PYLD
* Injects ECC errors on the Slow Response queue checker. Errors are only 
* injected/checked for the header domain.
*/
#define FXR_RXHIARB_ERR_INJECT_PYLD					(FXR_RX_HIARB_CSRS + 0x0000000301D0)
#define FXR_RXHIARB_ERR_INJECT_PYLD_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INJECT_PYLD_RESERVED_63_9_SHIFT			9
#define FXR_RXHIARB_ERR_INJECT_PYLD_RESERVED_63_9_MASK			0x7FFFFFFFFFFFFFull
#define FXR_RXHIARB_ERR_INJECT_PYLD_RESERVED_63_9_SMASK			0xFFFFFFFFFFFFFE00ull
#define FXR_RXHIARB_ERR_INJECT_PYLD_ERR_INJECT_EN_SHIFT			8
#define FXR_RXHIARB_ERR_INJECT_PYLD_ERR_INJECT_EN_MASK			0x1ull
#define FXR_RXHIARB_ERR_INJECT_PYLD_ERR_INJECT_EN_SMASK			0x100ull
#define FXR_RXHIARB_ERR_INJECT_PYLD_ERR_INJECT_MASK_SHIFT		0
#define FXR_RXHIARB_ERR_INJECT_PYLD_ERR_INJECT_MASK_MASK		0xFFull
#define FXR_RXHIARB_ERR_INJECT_PYLD_ERR_INJECT_MASK_SMASK		0xFFull
/*
* Table #51 of fxr_top - RXHIARB_ERR_INFO_HQUE0_ECC
* Captures information related to ECC errors within the holding queue 0 
* memories. Errors are checked for 2 domains: HID-index queue (domain 1) and 
* LADDR/MTLB-index queue (domain 0).
*/
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC					(FXR_RX_HIARB_CSRS + 0x0000000301D8)
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_RESERVED_63_56_SHIFT		56
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_RESERVED_63_56_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_RESERVED_63_56_SMASK		0xFF00000000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_SBE_COUNT_SHIFT			48
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_SBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_SBE_COUNT_SMASK			0xFF000000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_RESERVED_47_41_SHIFT		41
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_RESERVED_47_41_MASK		0x7Full
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_RESERVED_47_41_SMASK		0xFE0000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_SBE_SHIFT			39
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_SBE_MASK				0x3ull
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_SBE_SMASK			0x18000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_SBE_FIRST_DOMAIN_SHIFT		38
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_SBE_FIRST_DOMAIN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_SBE_FIRST_DOMAIN_SMASK		0x4000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_SBE_FIRST_SYNDROME_SHIFT		32
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_SBE_FIRST_SYNDROME_MASK		0x3Full
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_SBE_FIRST_SYNDROME_SMASK		0x3F00000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_RESERVED_31_24_SHIFT		24
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_RESERVED_31_24_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_RESERVED_31_24_SMASK		0xFF000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_MBE_COUNT_SHIFT			16
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_MBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_MBE_COUNT_SMASK			0xFF0000ull
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_RESERVED_15_9_SHIFT		9
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_RESERVED_15_9_MASK		0x7Full
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_RESERVED_15_9_SMASK		0xFE00ull
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_MBE_SHIFT			7
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_MBE_MASK				0x3ull
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_MBE_SMASK			0x180ull
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_MBE_FIRST_DOMAIN_SHIFT		6
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_MBE_FIRST_DOMAIN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_MBE_FIRST_DOMAIN_SMASK		0x40ull
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_MBE_FIRST_SYNDROME_SHIFT		0
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_MBE_FIRST_SYNDROME_MASK		0x3Full
#define FXR_RXHIARB_ERR_INFO_HQUE0_ECC_MBE_FIRST_SYNDROME_SMASK		0x3Full
/*
* Table #52 of fxr_top - RXHIARB_ERR_INFO_HQUE1_ECC
* Captures information related to ECC errors within the holding queue 1 
* memories. Errors are checked for 2 domains: HID-index queue (domain 1) and 
* LADDR/MTLB-index queue (domain 0).
*/
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC					(FXR_RX_HIARB_CSRS + 0x0000000301E0)
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_RESERVED_63_56_SHIFT		56
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_RESERVED_63_56_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_RESERVED_63_56_SMASK		0xFF00000000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_SBE_COUNT_SHIFT			48
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_SBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_SBE_COUNT_SMASK			0xFF000000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_RESERVED_47_41_SHIFT		41
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_RESERVED_47_41_MASK		0x7Full
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_RESERVED_47_41_SMASK		0xFE0000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_SBE_SHIFT			39
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_SBE_MASK				0x3ull
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_SBE_SMASK			0x18000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_SBE_FIRST_DOMAIN_SHIFT		38
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_SBE_FIRST_DOMAIN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_SBE_FIRST_DOMAIN_SMASK		0x4000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_SBE_FIRST_SYNDROME_SHIFT		32
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_SBE_FIRST_SYNDROME_MASK		0x3Full
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_SBE_FIRST_SYNDROME_SMASK		0x3F00000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_RESERVED_31_24_SHIFT		24
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_RESERVED_31_24_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_RESERVED_31_24_SMASK		0xFF000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_MBE_COUNT_SHIFT			16
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_MBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_MBE_COUNT_SMASK			0xFF0000ull
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_RESERVED_15_9_SHIFT		9
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_RESERVED_15_9_MASK		0x7Full
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_RESERVED_15_9_SMASK		0xFE00ull
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_MBE_SHIFT			7
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_MBE_MASK				0x3ull
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_MBE_SMASK			0x180ull
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_MBE_FIRST_DOMAIN_SHIFT		6
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_MBE_FIRST_DOMAIN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_MBE_FIRST_DOMAIN_SMASK		0x40ull
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_MBE_FIRST_SYNDROME_SHIFT		0
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_MBE_FIRST_SYNDROME_MASK		0x3Full
#define FXR_RXHIARB_ERR_INFO_HQUE1_ECC_MBE_FIRST_SYNDROME_SMASK		0x3Full
/*
* Table #53 of fxr_top - RXHIARB_ERR_INFO_HQUE2_ECC
* Captures information related to ECC errors within the holding queue 2 
* memories. Errors are checked for 2 domains: HID-index queue (domain 1) and 
* LADDR/MTLB-index queue (domain 0).
*/
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC					(FXR_RX_HIARB_CSRS + 0x0000000301E8)
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_RESERVED_63_56_SHIFT		56
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_RESERVED_63_56_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_RESERVED_63_56_SMASK		0xFF00000000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_SBE_COUNT_SHIFT			48
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_SBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_SBE_COUNT_SMASK			0xFF000000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_RESERVED_47_41_SHIFT		41
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_RESERVED_47_41_MASK		0x7Full
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_RESERVED_47_41_SMASK		0xFE0000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_SBE_SHIFT			39
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_SBE_MASK				0x3ull
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_SBE_SMASK			0x18000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_SBE_FIRST_DOMAIN_SHIFT		38
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_SBE_FIRST_DOMAIN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_SBE_FIRST_DOMAIN_SMASK		0x4000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_SBE_FIRST_SYNDROME_SHIFT		32
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_SBE_FIRST_SYNDROME_MASK		0x3Full
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_SBE_FIRST_SYNDROME_SMASK		0x3F00000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_RESERVED_31_24_SHIFT		24
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_RESERVED_31_24_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_RESERVED_31_24_SMASK		0xFF000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_MBE_COUNT_SHIFT			16
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_MBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_MBE_COUNT_SMASK			0xFF0000ull
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_RESERVED_15_9_SHIFT		9
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_RESERVED_15_9_MASK		0x7Full
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_RESERVED_15_9_SMASK		0xFE00ull
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_MBE_SHIFT			7
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_MBE_MASK				0x3ull
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_MBE_SMASK			0x180ull
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_MBE_FIRST_DOMAIN_SHIFT		6
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_MBE_FIRST_DOMAIN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_MBE_FIRST_DOMAIN_SMASK		0x40ull
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_MBE_FIRST_SYNDROME_SHIFT		0
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_MBE_FIRST_SYNDROME_MASK		0x3Full
#define FXR_RXHIARB_ERR_INFO_HQUE2_ECC_MBE_FIRST_SYNDROME_SMASK		0x3Full
/*
* Table #54 of fxr_top - RXHIARB_ERR_INFO_HQUE3_ECC
* Captures information related to ECC errors within the holding queue 3 
* memories. Errors are checked for 2 domains: HID-index queue (domain 1) and 
* LADDR/MTLB-index queue (domain 0).
*/
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC					(FXR_RX_HIARB_CSRS + 0x0000000301F0)
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_RESERVED_63_56_SHIFT		56
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_RESERVED_63_56_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_RESERVED_63_56_SMASK		0xFF00000000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_SBE_COUNT_SHIFT			48
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_SBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_SBE_COUNT_SMASK			0xFF000000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_RESERVED_47_41_SHIFT		41
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_RESERVED_47_41_MASK		0x7Full
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_RESERVED_47_41_SMASK		0xFE0000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_SBE_SHIFT			39
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_SBE_MASK				0x3ull
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_SBE_SMASK			0x18000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_SBE_FIRST_DOMAIN_SHIFT		38
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_SBE_FIRST_DOMAIN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_SBE_FIRST_DOMAIN_SMASK		0x4000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_SBE_FIRST_SYNDROME_SHIFT		32
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_SBE_FIRST_SYNDROME_MASK		0x3Full
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_SBE_FIRST_SYNDROME_SMASK		0x3F00000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_RESERVED_31_24_SHIFT		24
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_RESERVED_31_24_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_RESERVED_31_24_SMASK		0xFF000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_MBE_COUNT_SHIFT			16
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_MBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_MBE_COUNT_SMASK			0xFF0000ull
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_RESERVED_15_9_SHIFT		9
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_RESERVED_15_9_MASK		0x7Full
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_RESERVED_15_9_SMASK		0xFE00ull
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_MBE_SHIFT			7
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_MBE_MASK				0x3ull
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_MBE_SMASK			0x180ull
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_MBE_FIRST_DOMAIN_SHIFT		6
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_MBE_FIRST_DOMAIN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_MBE_FIRST_DOMAIN_SMASK		0x40ull
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_MBE_FIRST_SYNDROME_SHIFT		0
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_MBE_FIRST_SYNDROME_MASK		0x3Full
#define FXR_RXHIARB_ERR_INFO_HQUE3_ECC_MBE_FIRST_SYNDROME_SMASK		0x3Full
/*
* Table #55 of fxr_top - RXHIARB_ERR_INFO_HQUE4_ECC
* Captures information related to ECC errors within the holding queue 4 
* memories. Errors are checked for 2 domains: HID-index queue (domain 1) and 
* LADDR/MTLB-index queue (domain 0).
*/
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC					(FXR_RX_HIARB_CSRS + 0x0000000301F8)
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_RESERVED_63_56_SHIFT		56
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_RESERVED_63_56_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_RESERVED_63_56_SMASK		0xFF00000000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_SBE_COUNT_SHIFT			48
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_SBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_SBE_COUNT_SMASK			0xFF000000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_RESERVED_47_41_SHIFT		41
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_RESERVED_47_41_MASK		0x7Full
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_RESERVED_47_41_SMASK		0xFE0000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_SBE_SHIFT			39
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_SBE_MASK				0x3ull
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_SBE_SMASK			0x18000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_SBE_FIRST_DOMAIN_SHIFT		38
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_SBE_FIRST_DOMAIN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_SBE_FIRST_DOMAIN_SMASK		0x4000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_SBE_FIRST_SYNDROME_SHIFT		32
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_SBE_FIRST_SYNDROME_MASK		0x3Full
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_SBE_FIRST_SYNDROME_SMASK		0x3F00000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_RESERVED_31_24_SHIFT		24
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_RESERVED_31_24_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_RESERVED_31_24_SMASK		0xFF000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_MBE_COUNT_SHIFT			16
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_MBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_MBE_COUNT_SMASK			0xFF0000ull
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_RESERVED_15_9_SHIFT		9
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_RESERVED_15_9_MASK		0x7Full
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_RESERVED_15_9_SMASK		0xFE00ull
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_MBE_SHIFT			7
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_MBE_MASK				0x3ull
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_MBE_SMASK			0x180ull
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_MBE_FIRST_DOMAIN_SHIFT		6
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_MBE_FIRST_DOMAIN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_MBE_FIRST_DOMAIN_SMASK		0x40ull
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_MBE_FIRST_SYNDROME_SHIFT		0
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_MBE_FIRST_SYNDROME_MASK		0x3Full
#define FXR_RXHIARB_ERR_INFO_HQUE4_ECC_MBE_FIRST_SYNDROME_SMASK		0x3Full
/*
* Table #56 of fxr_top - RXHIARB_ERR_INFO_HQUE5_ECC
* Captures information related to ECC errors within the holding queue 5 
* memories. Errors are checked for 2 domains: HID-index queue (domain 1) and 
* LADDR/MTLB-index queue (domain 0).
*/
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC					(FXR_RX_HIARB_CSRS + 0x000000030200)
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_RESERVED_63_56_SHIFT		56
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_RESERVED_63_56_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_RESERVED_63_56_SMASK		0xFF00000000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_SBE_COUNT_SHIFT			48
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_SBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_SBE_COUNT_SMASK			0xFF000000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_RESERVED_47_41_SHIFT		41
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_RESERVED_47_41_MASK		0x7Full
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_RESERVED_47_41_SMASK		0xFE0000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_SBE_SHIFT			39
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_SBE_MASK				0x3ull
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_SBE_SMASK			0x18000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_SBE_FIRST_DOMAIN_SHIFT		38
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_SBE_FIRST_DOMAIN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_SBE_FIRST_DOMAIN_SMASK		0x4000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_SBE_FIRST_SYNDROME_SHIFT		32
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_SBE_FIRST_SYNDROME_MASK		0x3Full
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_SBE_FIRST_SYNDROME_SMASK		0x3F00000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_RESERVED_31_24_SHIFT		24
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_RESERVED_31_24_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_RESERVED_31_24_SMASK		0xFF000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_MBE_COUNT_SHIFT			16
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_MBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_MBE_COUNT_SMASK			0xFF0000ull
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_RESERVED_15_9_SHIFT		9
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_RESERVED_15_9_MASK		0x7Full
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_RESERVED_15_9_SMASK		0xFE00ull
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_MBE_SHIFT			7
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_MBE_MASK				0x3ull
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_MBE_SMASK			0x180ull
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_MBE_FIRST_DOMAIN_SHIFT		6
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_MBE_FIRST_DOMAIN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_MBE_FIRST_DOMAIN_SMASK		0x40ull
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_MBE_FIRST_SYNDROME_SHIFT		0
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_MBE_FIRST_SYNDROME_MASK		0x3Full
#define FXR_RXHIARB_ERR_INFO_HQUE5_ECC_MBE_FIRST_SYNDROME_SMASK		0x3Full
/*
* Table #57 of fxr_top - RXHIARB_ERR_INFO_HQUE6_ECC
* Captures information related to ECC errors within the holding queue 6 
* memories. Errors are checked for 2 domains: HID-index queue (domain 1) and 
* LADDR/MTLB-index queue (domain 0).
*/
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC					(FXR_RX_HIARB_CSRS + 0x000000030208)
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_RESERVED_63_56_SHIFT		56
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_RESERVED_63_56_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_RESERVED_63_56_SMASK		0xFF00000000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_SBE_COUNT_SHIFT			48
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_SBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_SBE_COUNT_SMASK			0xFF000000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_RESERVED_47_41_SHIFT		41
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_RESERVED_47_41_MASK		0x7Full
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_RESERVED_47_41_SMASK		0xFE0000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_SBE_SHIFT			39
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_SBE_MASK				0x3ull
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_SBE_SMASK			0x18000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_SBE_FIRST_DOMAIN_SHIFT		38
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_SBE_FIRST_DOMAIN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_SBE_FIRST_DOMAIN_SMASK		0x4000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_SBE_FIRST_SYNDROME_SHIFT		32
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_SBE_FIRST_SYNDROME_MASK		0x3Full
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_SBE_FIRST_SYNDROME_SMASK		0x3F00000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_RESERVED_31_24_SHIFT		24
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_RESERVED_31_24_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_RESERVED_31_24_SMASK		0xFF000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_MBE_COUNT_SHIFT			16
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_MBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_MBE_COUNT_SMASK			0xFF0000ull
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_RESERVED_15_9_SHIFT		9
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_RESERVED_15_9_MASK		0x7Full
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_RESERVED_15_9_SMASK		0xFE00ull
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_MBE_SHIFT			7
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_MBE_MASK				0x3ull
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_MBE_SMASK			0x180ull
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_MBE_FIRST_DOMAIN_SHIFT		6
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_MBE_FIRST_DOMAIN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_MBE_FIRST_DOMAIN_SMASK		0x40ull
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_MBE_FIRST_SYNDROME_SHIFT		0
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_MBE_FIRST_SYNDROME_MASK		0x3Full
#define FXR_RXHIARB_ERR_INFO_HQUE6_ECC_MBE_FIRST_SYNDROME_SMASK		0x3Full
/*
* Table #58 of fxr_top - RXHIARB_ERR_INFO_HQUE7_ECC
* Captures information related to ECC errors within the holding queue 7 
* memories. Errors are checked for 2 domains: HID-index queue (domain 1) and 
* LADDR/MTLB-index queue (domain 0).
*/
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC					(FXR_RX_HIARB_CSRS + 0x000000030210)
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_RESERVED_63_56_SHIFT		56
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_RESERVED_63_56_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_RESERVED_63_56_SMASK		0xFF00000000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_SBE_COUNT_SHIFT			48
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_SBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_SBE_COUNT_SMASK			0xFF000000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_RESERVED_47_41_SHIFT		41
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_RESERVED_47_41_MASK		0x7Full
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_RESERVED_47_41_SMASK		0xFE0000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_SBE_SHIFT			39
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_SBE_MASK				0x3ull
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_SBE_SMASK			0x18000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_SBE_FIRST_DOMAIN_SHIFT		38
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_SBE_FIRST_DOMAIN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_SBE_FIRST_DOMAIN_SMASK		0x4000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_SBE_FIRST_SYNDROME_SHIFT		32
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_SBE_FIRST_SYNDROME_MASK		0x3Full
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_SBE_FIRST_SYNDROME_SMASK		0x3F00000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_RESERVED_31_24_SHIFT		24
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_RESERVED_31_24_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_RESERVED_31_24_SMASK		0xFF000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_MBE_COUNT_SHIFT			16
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_MBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_MBE_COUNT_SMASK			0xFF0000ull
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_RESERVED_15_9_SHIFT		9
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_RESERVED_15_9_MASK		0x7Full
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_RESERVED_15_9_SMASK		0xFE00ull
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_MBE_SHIFT			7
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_MBE_MASK				0x3ull
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_MBE_SMASK			0x180ull
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_MBE_FIRST_DOMAIN_SHIFT		6
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_MBE_FIRST_DOMAIN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_MBE_FIRST_DOMAIN_SMASK		0x40ull
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_MBE_FIRST_SYNDROME_SHIFT		0
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_MBE_FIRST_SYNDROME_MASK		0x3Full
#define FXR_RXHIARB_ERR_INFO_HQUE7_ECC_MBE_FIRST_SYNDROME_SMASK		0x3Full
/*
* Table #59 of fxr_top - RXHIARB_ERR_INFO_HQUE8_ECC
* Captures information related to ECC errors within the holding queue 8 
* memories. Errors are checked for 2 domains: HID-index queue (domain 1) and 
* LADDR/MTLB-index queue (domain 0).
*/
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC					(FXR_RX_HIARB_CSRS + 0x000000030218)
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_RESERVED_63_56_SHIFT		56
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_RESERVED_63_56_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_RESERVED_63_56_SMASK		0xFF00000000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_SBE_COUNT_SHIFT			48
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_SBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_SBE_COUNT_SMASK			0xFF000000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_RESERVED_47_41_SHIFT		41
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_RESERVED_47_41_MASK		0x7Full
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_RESERVED_47_41_SMASK		0xFE0000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_SBE_SHIFT			39
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_SBE_MASK				0x3ull
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_SBE_SMASK			0x18000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_SBE_FIRST_DOMAIN_SHIFT		38
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_SBE_FIRST_DOMAIN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_SBE_FIRST_DOMAIN_SMASK		0x4000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_SBE_FIRST_SYNDROME_SHIFT		32
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_SBE_FIRST_SYNDROME_MASK		0x3Full
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_SBE_FIRST_SYNDROME_SMASK		0x3F00000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_RESERVED_31_24_SHIFT		24
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_RESERVED_31_24_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_RESERVED_31_24_SMASK		0xFF000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_MBE_COUNT_SHIFT			16
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_MBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_MBE_COUNT_SMASK			0xFF0000ull
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_RESERVED_15_9_SHIFT		9
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_RESERVED_15_9_MASK		0x7Full
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_RESERVED_15_9_SMASK		0xFE00ull
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_MBE_SHIFT			7
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_MBE_MASK				0x3ull
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_MBE_SMASK			0x180ull
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_MBE_FIRST_DOMAIN_SHIFT		6
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_MBE_FIRST_DOMAIN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_MBE_FIRST_DOMAIN_SMASK		0x40ull
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_MBE_FIRST_SYNDROME_SHIFT		0
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_MBE_FIRST_SYNDROME_MASK		0x3Full
#define FXR_RXHIARB_ERR_INFO_HQUE8_ECC_MBE_FIRST_SYNDROME_SMASK		0x3Full
/*
* Table #60 of fxr_top - RXHIARB_ERR_INJECT_HQUE_0_3
* Injects ECC errors on the holding queue checkers for queues 0-3. Errors are 
* injected/checked for 2 domains per queue (LADDR AND HID).
*/
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3					(FXR_RX_HIARB_CSRS + 0x000000030220)
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_RESERVED_63_56_SHIFT		56
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_RESERVED_63_56_MASK		0xFFull
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_RESERVED_63_56_SMASK		0xFF00000000000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_LADDR3_EN_SHIFT	55
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_LADDR3_EN_MASK	0x1ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_LADDR3_EN_SMASK	0x80000000000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_HID3_EN_SHIFT	54
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_HID3_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_HID3_EN_SMASK	0x40000000000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_LADDR2_EN_SHIFT	53
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_LADDR2_EN_MASK	0x1ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_LADDR2_EN_SMASK	0x20000000000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_HID2_EN_SHIFT	52
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_HID2_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_HID2_EN_SMASK	0x10000000000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_LADDR1_EN_SHIFT	51
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_LADDR1_EN_MASK	0x1ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_LADDR1_EN_SMASK	0x8000000000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_HID1_EN_SHIFT	50
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_HID1_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_HID1_EN_SMASK	0x4000000000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_LADDR0_EN_SHIFT	49
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_LADDR0_EN_MASK	0x1ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_LADDR0_EN_SMASK	0x2000000000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_HID0_EN_SHIFT	48
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_HID0_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_HID0_EN_SMASK	0x1000000000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_RESERVED_47_44_SHIFT		44
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_RESERVED_47_44_MASK		0xFull
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_RESERVED_47_44_SMASK		0xF00000000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_LADDR3_MASK_SHIFT	38
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_LADDR3_MASK_MASK	0x3Full
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_LADDR3_MASK_SMASK	0xFC000000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_HID3_MASK_SHIFT	33
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_HID3_MASK_MASK	0x1Full
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_HID3_MASK_SMASK	0x3E00000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_LADDR2_MASK_SHIFT	27
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_LADDR2_MASK_MASK	0x3Full
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_LADDR2_MASK_SMASK	0x1F8000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_HID2_MASK_SHIFT	22
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_HID2_MASK_MASK	0x1Full
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_HID2_MASK_SMASK	0x7C00000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_LADDR1_MASK_SHIFT	16
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_LADDR1_MASK_MASK	0x3Full
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_LADDR1_MASK_SMASK	0x3F0000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_HID1_MASK_SHIFT	11
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_HID1_MASK_MASK	0x1Full
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_HID1_MASK_SMASK	0xF800ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_LADDR0_MASK_SHIFT	5
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_LADDR0_MASK_MASK	0x3Full
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_LADDR0_MASK_SMASK	0x7E0ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_HID0_MASK_SHIFT	0
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_HID0_MASK_MASK	0x1Full
#define FXR_RXHIARB_ERR_INJECT_HQUE_0_3_ERR_INJECT_HID0_MASK_SMASK	0x1Full
/*
* Table #61 of fxr_top - RXHIARB_ERR_INJECT_HQUE_4_7
* Injects ECC errors on the holding queue checkers for queues 4-7. Errors are 
* injected/checked for 2 domains per queue (LADDR AND HID).
*/
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7					(FXR_RX_HIARB_CSRS + 0x000000030228)
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_RESERVED_63_56_SHIFT		56
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_RESERVED_63_56_MASK		0xFFull
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_RESERVED_63_56_SMASK		0xFF00000000000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_LADDR7_EN_SHIFT	55
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_LADDR7_EN_MASK	0x1ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_LADDR7_EN_SMASK	0x80000000000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_HID7_EN_SHIFT	54
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_HID7_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_HID7_EN_SMASK	0x40000000000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_LADDR6_EN_SHIFT	53
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_LADDR6_EN_MASK	0x1ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_LADDR6_EN_SMASK	0x20000000000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_HID6_EN_SHIFT	52
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_HID6_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_HID6_EN_SMASK	0x10000000000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_LADDR5_EN_SHIFT	51
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_LADDR5_EN_MASK	0x1ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_LADDR5_EN_SMASK	0x8000000000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_HID5_EN_SHIFT	50
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_HID5_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_HID5_EN_SMASK	0x4000000000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_LADDR4_EN_SHIFT	49
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_LADDR4_EN_MASK	0x1ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_LADDR4_EN_SMASK	0x2000000000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_HID4_EN_SHIFT	48
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_HID4_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_HID4_EN_SMASK	0x1000000000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_RESERVED_47_44_SHIFT		44
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_RESERVED_47_44_MASK		0xFull
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_RESERVED_47_44_SMASK		0xF00000000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_LADDR7_MASK_SHIFT	38
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_LADDR7_MASK_MASK	0x3Full
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_LADDR7_MASK_SMASK	0xFC000000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_HID7_MASK_SHIFT	33
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_HID7_MASK_MASK	0x1Full
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_HID7_MASK_SMASK	0x3E00000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_LADDR6_MASK_SHIFT	27
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_LADDR6_MASK_MASK	0x3Full
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_LADDR6_MASK_SMASK	0x1F8000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_HID6_MASK_SHIFT	22
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_HID6_MASK_MASK	0x1Full
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_HID6_MASK_SMASK	0x7C00000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_LADDR5_MASK_SHIFT	16
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_LADDR5_MASK_MASK	0x3Full
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_LADDR5_MASK_SMASK	0x3F0000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_HID5_MASK_SHIFT	11
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_HID5_MASK_MASK	0x1Full
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_HID5_MASK_SMASK	0xF800ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_LADDR4_MASK_SHIFT	5
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_LADDR4_MASK_MASK	0x3Full
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_LADDR4_MASK_SMASK	0x7E0ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_HID4_MASK_SHIFT	0
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_HID4_MASK_MASK	0x1Full
#define FXR_RXHIARB_ERR_INJECT_HQUE_4_7_ERR_INJECT_HID4_MASK_SMASK	0x1Full
/*
* Table #62 of fxr_top - RXHIARB_ERR_INJECT_HQUE_8
* Injects ECC errors on the holding queue checkers for queue 8. Errors are 
* injected/checked for 2 domains per queue (LADDR AND HID).
*/
#define FXR_RXHIARB_ERR_INJECT_HQUE_8					(FXR_RX_HIARB_CSRS + 0x000000030230)
#define FXR_RXHIARB_ERR_INJECT_HQUE_8_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_8_RESERVED_63_50_SHIFT		50
#define FXR_RXHIARB_ERR_INJECT_HQUE_8_RESERVED_63_50_MASK		0x3FFFull
#define FXR_RXHIARB_ERR_INJECT_HQUE_8_RESERVED_63_50_SMASK		0xFFFC000000000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_8_ERR_INJECT_LADDR8_EN_SHIFT	49
#define FXR_RXHIARB_ERR_INJECT_HQUE_8_ERR_INJECT_LADDR8_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_8_ERR_INJECT_LADDR8_EN_SMASK	0x2000000000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_8_ERR_INJECT_HID8_EN_SHIFT		48
#define FXR_RXHIARB_ERR_INJECT_HQUE_8_ERR_INJECT_HID8_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_8_ERR_INJECT_HID8_EN_SMASK		0x1000000000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_8_RESERVED_47_11_SHIFT		11
#define FXR_RXHIARB_ERR_INJECT_HQUE_8_RESERVED_47_11_MASK		0x1FFFFFFFFFull
#define FXR_RXHIARB_ERR_INJECT_HQUE_8_RESERVED_47_11_SMASK		0xFFFFFFFFF800ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_8_ERR_INJECT_LADDR8_MASK_SHIFT	5
#define FXR_RXHIARB_ERR_INJECT_HQUE_8_ERR_INJECT_LADDR8_MASK_MASK	0x3Full
#define FXR_RXHIARB_ERR_INJECT_HQUE_8_ERR_INJECT_LADDR8_MASK_SMASK	0x7E0ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_8_ERR_INJECT_HID8_MASK_SHIFT	0
#define FXR_RXHIARB_ERR_INJECT_HQUE_8_ERR_INJECT_HID8_MASK_MASK		0x1Full
#define FXR_RXHIARB_ERR_INJECT_HQUE_8_ERR_INJECT_HID8_MASK_SMASK	0x1Full
/*
* Table #63 of fxr_top - RXHIARB_ERR_INFO_HQUE_PVECT
* Captures information related to parity errors within the HQUE present state 
* vectors. Errors are checked for 9 domains: one domain per HQUE 0-8 (domains 
* 0-8). Since these vectors are accessed in a parallel fashion, there is no way 
* to easily detect when a given bit location is used, therefore these errors are 
* logged whenever any location has an error. 
*/
#define FXR_RXHIARB_ERR_INFO_HQUE_PVECT					(FXR_RX_HIARB_CSRS + 0x000000030238)
#define FXR_RXHIARB_ERR_INFO_HQUE_PVECT_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_HQUE_PVECT_RESERVED_63_17_SHIFT		17
#define FXR_RXHIARB_ERR_INFO_HQUE_PVECT_RESERVED_63_17_MASK		0x7FFFFFFFFFFFull
#define FXR_RXHIARB_ERR_INFO_HQUE_PVECT_RESERVED_63_17_SMASK		0xFFFFFFFFFFFE0000ull
#define FXR_RXHIARB_ERR_INFO_HQUE_PVECT_VERR_SHIFT			8
#define FXR_RXHIARB_ERR_INFO_HQUE_PVECT_VERR_MASK			0x1FFull
#define FXR_RXHIARB_ERR_INFO_HQUE_PVECT_VERR_SMASK			0x1FF00ull
#define FXR_RXHIARB_ERR_INFO_HQUE_PVECT_RESERVED_7_4_SHIFT		4
#define FXR_RXHIARB_ERR_INFO_HQUE_PVECT_RESERVED_7_4_MASK		0xFull
#define FXR_RXHIARB_ERR_INFO_HQUE_PVECT_RESERVED_7_4_SMASK		0xF0ull
#define FXR_RXHIARB_ERR_INFO_HQUE_PVECT_VERR_FIRST_DOMAIN_SHIFT		0
#define FXR_RXHIARB_ERR_INFO_HQUE_PVECT_VERR_FIRST_DOMAIN_MASK		0xFull
#define FXR_RXHIARB_ERR_INFO_HQUE_PVECT_VERR_FIRST_DOMAIN_SMASK		0xFull
/*
* Table #64 of fxr_top - RXHIARB_ERR_INJECT_HQUE_PVECT
* Injects partity errors on the holding queue's state vectors checkers. Errors 
* are injected/checked for 9 domains (one per holding queue).
*/
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT				(FXR_RX_HIARB_CSRS + 0x000000030240)
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_RESERVED_63_9_SHIFT		9
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_RESERVED_63_9_MASK		0x7FFFFFFFFFFFFFull
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_RESERVED_63_9_SMASK		0xFFFFFFFFFFFFFE00ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_ERR_INJECT_VECT8_EN_SHIFT	8
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_ERR_INJECT_VECT8_EN_MASK	0x1ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_ERR_INJECT_VECT8_EN_SMASK	0x100ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_ERR_INJECT_VECT7_EN_SHIFT	7
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_ERR_INJECT_VECT7_EN_MASK	0x1ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_ERR_INJECT_VECT7_EN_SMASK	0x80ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_ERR_INJECT_VECT6_EN_SHIFT	6
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_ERR_INJECT_VECT6_EN_MASK	0x1ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_ERR_INJECT_VECT6_EN_SMASK	0x40ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_ERR_INJECT_VECT5_EN_SHIFT	5
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_ERR_INJECT_VECT5_EN_MASK	0x1ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_ERR_INJECT_VECT5_EN_SMASK	0x20ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_ERR_INJECT_VECT4_EN_SHIFT	4
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_ERR_INJECT_VECT4_EN_MASK	0x1ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_ERR_INJECT_VECT4_EN_SMASK	0x10ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_ERR_INJECT_VECT3_EN_SHIFT	3
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_ERR_INJECT_VECT3_EN_MASK	0x1ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_ERR_INJECT_VECT3_EN_SMASK	0x8ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_ERR_INJECT_VECT2_EN_SHIFT	2
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_ERR_INJECT_VECT2_EN_MASK	0x1ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_ERR_INJECT_VECT2_EN_SMASK	0x4ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_ERR_INJECT_VECT1_EN_SHIFT	1
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_ERR_INJECT_VECT1_EN_MASK	0x1ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_ERR_INJECT_VECT1_EN_SMASK	0x2ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_ERR_INJECT_VECT0_EN_SHIFT	0
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_ERR_INJECT_VECT0_EN_MASK	0x1ull
#define FXR_RXHIARB_ERR_INJECT_HQUE_PVECT_ERR_INJECT_VECT0_EN_SMASK	0x1ull
/*
* Table #65 of fxr_top - RXHIARB_ERR_INFO_MTLB_ECC
* Captures information related to ECC errors within the Mini-TLB. Errors are 
* checked for 4 domains: Tags (domain 3), Counters (domains 1 and 2) and HPA 
* Data (domain 0). Note that the Tag is parity protected instead of ECC, so the 
* syndome bits will be defined as the two parity bits in the 2 LSBs with zero 
* padding. Since the Tag is parity, all errors will be logged as MBEs since they 
* are uncorrectable while the SBE vector bit for the tag domain will always be 
* zero. 
*/
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC					(FXR_RX_HIARB_CSRS + 0x000000030248)
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_SBE_COUNT_SHIFT			56
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_SBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_SBE_COUNT_SMASK			0xFF00000000000000ull
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_RESERVED_55_54_SHIFT		54
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_RESERVED_55_54_MASK		0x3ull
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_RESERVED_55_54_SMASK		0xC0000000000000ull
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_SBE_SHIFT				50
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_SBE_MASK				0xFull
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_SBE_SMASK				0x3C000000000000ull
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_SBE_FIRST_DOMAIN_SHIFT		48
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_SBE_FIRST_DOMAIN_MASK		0x3ull
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_SBE_FIRST_DOMAIN_SMASK		0x3000000000000ull
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_RESERVED_47_SHIFT			47
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_RESERVED_47_MASK			0x1ull
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_RESERVED_47_SMASK			0x800000000000ull
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_SBE_FIRST_INDEX_SHIFT		40
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_SBE_FIRST_INDEX_MASK		0x7Full
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_SBE_FIRST_INDEX_SMASK		0x7F0000000000ull
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_RESERVED_39_SHIFT			39
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_RESERVED_39_MASK			0x1ull
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_RESERVED_39_SMASK			0x8000000000ull
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_SBE_FIRST_SYNDROME_SHIFT		32
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_SBE_FIRST_SYNDROME_MASK		0x7Full
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_SBE_FIRST_SYNDROME_SMASK		0x7F00000000ull
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_MBE_COUNT_SHIFT			24
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_MBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_MBE_COUNT_SMASK			0xFF000000ull
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_RESERVED_23_22_SHIFT		22
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_RESERVED_23_22_MASK		0x3ull
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_RESERVED_23_22_SMASK		0xC00000ull
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_MBE_SHIFT				18
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_MBE_MASK				0xFull
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_MBE_SMASK				0x3C0000ull
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_MBE_FIRST_DOMAIN_SHIFT		16
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_MBE_FIRST_DOMAIN_MASK		0x3ull
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_MBE_FIRST_DOMAIN_SMASK		0x30000ull
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_RESERVED_15_SHIFT			15
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_RESERVED_15_MASK			0x1ull
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_RESERVED_15_SMASK			0x8000ull
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_MBE_FIRST_INDEX_SHIFT		8
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_MBE_FIRST_INDEX_MASK		0x7Full
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_MBE_FIRST_INDEX_SMASK		0x7F00ull
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_RESERVED_7_SHIFT			7
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_RESERVED_7_MASK			0x1ull
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_RESERVED_7_SMASK			0x80ull
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_MBE_FIRST_SYNDROME_SHIFT		0
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_MBE_FIRST_SYNDROME_MASK		0x7Full
#define FXR_RXHIARB_ERR_INFO_MTLB_ECC_MBE_FIRST_SYNDROME_SMASK		0x7Full
/*
* Table #66 of fxr_top - RXHIARB_ERR_INFO_MTLB_VECTS
* Captures information related to parity errors within the Mini-TLB state 
* vectors. Errors are checked for 5 domains: valid (domain 4), present (domain 
* 3), zero (domain 2), cbad (domain 1) and fbad (domain 0). Since these vectors 
* are accessed in a parallel fashion, there is no way to easily detect when a 
* given bit location is used, therefore these errors are logged whenever any 
* location has an error. 
*/
#define FXR_RXHIARB_ERR_INFO_MTLB_VECTS					(FXR_RX_HIARB_CSRS + 0x000000030250)
#define FXR_RXHIARB_ERR_INFO_MTLB_VECTS_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_MTLB_VECTS_RESERVED_63_10_SHIFT		10
#define FXR_RXHIARB_ERR_INFO_MTLB_VECTS_RESERVED_63_10_MASK		0x3FFFFFFFFFFFFFull
#define FXR_RXHIARB_ERR_INFO_MTLB_VECTS_RESERVED_63_10_SMASK		0xFFFFFFFFFFFFFC00ull
#define FXR_RXHIARB_ERR_INFO_MTLB_VECTS_FIRST_VERR_SHIFT		5
#define FXR_RXHIARB_ERR_INFO_MTLB_VECTS_FIRST_VERR_MASK			0x1Full
#define FXR_RXHIARB_ERR_INFO_MTLB_VECTS_FIRST_VERR_SMASK		0x3E0ull
#define FXR_RXHIARB_ERR_INFO_MTLB_VECTS_VERR_SHIFT			0
#define FXR_RXHIARB_ERR_INFO_MTLB_VECTS_VERR_MASK			0x1Full
#define FXR_RXHIARB_ERR_INFO_MTLB_VECTS_VERR_SMASK			0x1Full
/*
* Table #67 of fxr_top - RXHIARB_ERR_INJECT_MTLB
* Injects ECC errors on the PCB checkers. Errors are injected for 9 domains: 
* valid vector (domain 8), present vector (domain 7), zero vector (domain 6), 
* cbad vector (domain 5) and fbad vector (domain 5). Tags (domain 3), Counters 
* (domains 1 and 2) and HPA Data (domain 0) Since the tag and vector domains are 
* parity protected, no mask is used as there are no ECC check bits to 
* mask.
*/
#define FXR_RXHIARB_ERR_INJECT_MTLB					(FXR_RX_HIARB_CSRS + 0x000000030258)
#define FXR_RXHIARB_ERR_INJECT_MTLB_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INJECT_MTLB_RESERVED_63_41_SHIFT		41
#define FXR_RXHIARB_ERR_INJECT_MTLB_RESERVED_63_41_MASK			0x7FFFFFull
#define FXR_RXHIARB_ERR_INJECT_MTLB_RESERVED_63_41_SMASK		0xFFFFFE0000000000ull
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_VAL_EN_SHIFT		40
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_VAL_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_VAL_EN_SMASK		0x10000000000ull
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_PRES_EN_SHIFT		39
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_PRES_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_PRES_EN_SMASK		0x8000000000ull
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_ZERO_EN_SHIFT		38
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_ZERO_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_ZERO_EN_SMASK		0x4000000000ull
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_CBAD_EN_SHIFT		37
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_CBAD_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_CBAD_EN_SMASK		0x2000000000ull
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_FBAD_EN_SHIFT		36
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_FBAD_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_FBAD_EN_SMASK		0x1000000000ull
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_TAG_EN_SHIFT		35
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_TAG_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_TAG_EN_SMASK		0x800000000ull
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_CNT0_EN_SHIFT		34
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_CNT0_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_CNT0_EN_SMASK		0x400000000ull
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_CNT1_EN_SHIFT		33
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_CNT1_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_CNT1_EN_SMASK		0x200000000ull
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_HPA_EN_SHIFT		32
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_HPA_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_HPA_EN_SMASK		0x100000000ull
#define FXR_RXHIARB_ERR_INJECT_MTLB_RESERVED_31_21_SHIFT		21
#define FXR_RXHIARB_ERR_INJECT_MTLB_RESERVED_31_21_MASK			0x7FFull
#define FXR_RXHIARB_ERR_INJECT_MTLB_RESERVED_31_21_SMASK		0xFFE00000ull
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_CNT0_MASK_SHIFT		16
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_CNT0_MASK_MASK		0x1Full
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_CNT0_MASK_SMASK		0x1F0000ull
#define FXR_RXHIARB_ERR_INJECT_MTLB_RESERVED_15_13_SHIFT		13
#define FXR_RXHIARB_ERR_INJECT_MTLB_RESERVED_15_13_MASK			0x7ull
#define FXR_RXHIARB_ERR_INJECT_MTLB_RESERVED_15_13_SMASK		0xE000ull
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_CNT1_MASK_SHIFT		8
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_CNT1_MASK_MASK		0x1Full
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_CNT1_MASK_SMASK		0x1F00ull
#define FXR_RXHIARB_ERR_INJECT_MTLB_RESERVED_7_SHIFT			7
#define FXR_RXHIARB_ERR_INJECT_MTLB_RESERVED_7_MASK			0x1ull
#define FXR_RXHIARB_ERR_INJECT_MTLB_RESERVED_7_SMASK			0x80ull
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_HPA_MASK_SHIFT		0
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_HPA_MASK_MASK		0x7Full
#define FXR_RXHIARB_ERR_INJECT_MTLB_ERR_INJECT_HPA_MASK_SMASK		0x7Full
/*
* Table #68 of fxr_top - RXHIARB_ERR_INFO_ATFIFO_ECC
* Captures information related to ECC errors within the AT request FIFO. Errors 
* are checked for 1 domain: AT FIFO.
*/
#define FXR_RXHIARB_ERR_INFO_ATFIFO_ECC					(FXR_RX_HIARB_CSRS + 0x000000030260)
#define FXR_RXHIARB_ERR_INFO_ATFIFO_ECC_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_ATFIFO_ECC_RESERVED_63_48_SHIFT		48
#define FXR_RXHIARB_ERR_INFO_ATFIFO_ECC_RESERVED_63_48_MASK		0xFFFFull
#define FXR_RXHIARB_ERR_INFO_ATFIFO_ECC_RESERVED_63_48_SMASK		0xFFFF000000000000ull
#define FXR_RXHIARB_ERR_INFO_ATFIFO_ECC_SBE_COUNT_SHIFT			40
#define FXR_RXHIARB_ERR_INFO_ATFIFO_ECC_SBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_ATFIFO_ECC_SBE_COUNT_SMASK			0xFF0000000000ull
#define FXR_RXHIARB_ERR_INFO_ATFIFO_ECC_SBE_FIRST_SYNDROME_SHIFT	32
#define FXR_RXHIARB_ERR_INFO_ATFIFO_ECC_SBE_FIRST_SYNDROME_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_ATFIFO_ECC_SBE_FIRST_SYNDROME_SMASK	0xFF00000000ull
#define FXR_RXHIARB_ERR_INFO_ATFIFO_ECC_RESERVED_31_16_SHIFT		16
#define FXR_RXHIARB_ERR_INFO_ATFIFO_ECC_RESERVED_31_16_MASK		0xFFFFull
#define FXR_RXHIARB_ERR_INFO_ATFIFO_ECC_RESERVED_31_16_SMASK		0xFFFF0000ull
#define FXR_RXHIARB_ERR_INFO_ATFIFO_ECC_MBE_COUNT_SHIFT			8
#define FXR_RXHIARB_ERR_INFO_ATFIFO_ECC_MBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_ATFIFO_ECC_MBE_COUNT_SMASK			0xFF00ull
#define FXR_RXHIARB_ERR_INFO_ATFIFO_ECC_MBE_FIRST_SYNDROME_SHIFT	0
#define FXR_RXHIARB_ERR_INFO_ATFIFO_ECC_MBE_FIRST_SYNDROME_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_ATFIFO_ECC_MBE_FIRST_SYNDROME_SMASK	0xFFull
/*
* Table #69 of fxr_top - RXHIARB_ERR_INJECT_ATFIFO
* Injects ECC errors on the PCB checkers. Errors are injected for 1 domain: AT 
* FIFO.
*/
#define FXR_RXHIARB_ERR_INJECT_ATFIFO					(FXR_RX_HIARB_CSRS + 0x000000030268)
#define FXR_RXHIARB_ERR_INJECT_ATFIFO_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INJECT_ATFIFO_RESERVED_63_9_SHIFT		9
#define FXR_RXHIARB_ERR_INJECT_ATFIFO_RESERVED_63_9_MASK		0x7FFFFFFFFFFFFFull
#define FXR_RXHIARB_ERR_INJECT_ATFIFO_RESERVED_63_9_SMASK		0xFFFFFFFFFFFFFE00ull
#define FXR_RXHIARB_ERR_INJECT_ATFIFO_ERR_INJECT_EN_SHIFT		8
#define FXR_RXHIARB_ERR_INJECT_ATFIFO_ERR_INJECT_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_ATFIFO_ERR_INJECT_EN_SMASK		0x100ull
#define FXR_RXHIARB_ERR_INJECT_ATFIFO_ERR_INJECT_MASK_SHIFT		0
#define FXR_RXHIARB_ERR_INJECT_ATFIFO_ERR_INJECT_MASK_MASK		0xFFull
#define FXR_RXHIARB_ERR_INJECT_ATFIFO_ERR_INJECT_MASK_SMASK		0xFFull
/*
* Table #70 of fxr_top - RXHIARB_ERR_INFO_HIFIFO_ECC
* Captures information related to ECC errors within the HI request FIFO. Errors 
* are checked for 1 domain: HI FIFO.
*/
#define FXR_RXHIARB_ERR_INFO_HIFIFO_ECC					(FXR_RX_HIARB_CSRS + 0x000000030270)
#define FXR_RXHIARB_ERR_INFO_HIFIFO_ECC_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_HIFIFO_ECC_RESERVED_63_48_SHIFT		48
#define FXR_RXHIARB_ERR_INFO_HIFIFO_ECC_RESERVED_63_48_MASK		0xFFFFull
#define FXR_RXHIARB_ERR_INFO_HIFIFO_ECC_RESERVED_63_48_SMASK		0xFFFF000000000000ull
#define FXR_RXHIARB_ERR_INFO_HIFIFO_ECC_SBE_COUNT_SHIFT			40
#define FXR_RXHIARB_ERR_INFO_HIFIFO_ECC_SBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_HIFIFO_ECC_SBE_COUNT_SMASK			0xFF0000000000ull
#define FXR_RXHIARB_ERR_INFO_HIFIFO_ECC_SBE_FIRST_SYNDROME_SHIFT	32
#define FXR_RXHIARB_ERR_INFO_HIFIFO_ECC_SBE_FIRST_SYNDROME_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_HIFIFO_ECC_SBE_FIRST_SYNDROME_SMASK	0xFF00000000ull
#define FXR_RXHIARB_ERR_INFO_HIFIFO_ECC_RESERVED_31_16_SHIFT		16
#define FXR_RXHIARB_ERR_INFO_HIFIFO_ECC_RESERVED_31_16_MASK		0xFFFFull
#define FXR_RXHIARB_ERR_INFO_HIFIFO_ECC_RESERVED_31_16_SMASK		0xFFFF0000ull
#define FXR_RXHIARB_ERR_INFO_HIFIFO_ECC_MBE_COUNT_SHIFT			8
#define FXR_RXHIARB_ERR_INFO_HIFIFO_ECC_MBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_HIFIFO_ECC_MBE_COUNT_SMASK			0xFF00ull
#define FXR_RXHIARB_ERR_INFO_HIFIFO_ECC_MBE_FIRST_SYNDROME_SHIFT	0
#define FXR_RXHIARB_ERR_INFO_HIFIFO_ECC_MBE_FIRST_SYNDROME_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_HIFIFO_ECC_MBE_FIRST_SYNDROME_SMASK	0xFFull
/*
* Table #71 of fxr_top - RXHIARB_ERR_INJECT_HIFIFO
* Injects ECC errors on the ECC checkers. Errors are injected for 1 domain: 
* Header.
*/
#define FXR_RXHIARB_ERR_INJECT_HIFIFO					(FXR_RX_HIARB_CSRS + 0x000000030278)
#define FXR_RXHIARB_ERR_INJECT_HIFIFO_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INJECT_HIFIFO_RESERVED_63_9_SHIFT		9
#define FXR_RXHIARB_ERR_INJECT_HIFIFO_RESERVED_63_9_MASK		0x7FFFFFFFFFFFFFull
#define FXR_RXHIARB_ERR_INJECT_HIFIFO_RESERVED_63_9_SMASK		0xFFFFFFFFFFFFFE00ull
#define FXR_RXHIARB_ERR_INJECT_HIFIFO_ERR_INJECT_EN_SHIFT		8
#define FXR_RXHIARB_ERR_INJECT_HIFIFO_ERR_INJECT_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_HIFIFO_ERR_INJECT_EN_SMASK		0x100ull
#define FXR_RXHIARB_ERR_INJECT_HIFIFO_ERR_INJECT_MASK_SHIFT		0
#define FXR_RXHIARB_ERR_INJECT_HIFIFO_ERR_INJECT_MASK_MASK		0xFFull
#define FXR_RXHIARB_ERR_INJECT_HIFIFO_ERR_INJECT_MASK_SMASK		0xFFull
/*
* Table #72 of fxr_top - RXHIARB_ERR_INFO_HIFIS_ECC
* Captures information related to ECC errors within the header flit on HIFIs 
* responses/requests. Errors are checked for 1 domain: HIFIs header 
* flit.
*/
#define FXR_RXHIARB_ERR_INFO_HIFIS_ECC					(FXR_RX_HIARB_CSRS + 0x000000030280)
#define FXR_RXHIARB_ERR_INFO_HIFIS_ECC_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_HIFIS_ECC_RESERVED_63_48_SHIFT		48
#define FXR_RXHIARB_ERR_INFO_HIFIS_ECC_RESERVED_63_48_MASK		0xFFFFull
#define FXR_RXHIARB_ERR_INFO_HIFIS_ECC_RESERVED_63_48_SMASK		0xFFFF000000000000ull
#define FXR_RXHIARB_ERR_INFO_HIFIS_ECC_SBE_COUNT_SHIFT			40
#define FXR_RXHIARB_ERR_INFO_HIFIS_ECC_SBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_HIFIS_ECC_SBE_COUNT_SMASK			0xFF0000000000ull
#define FXR_RXHIARB_ERR_INFO_HIFIS_ECC_SBE_FIRST_SYNDROME_SHIFT		32
#define FXR_RXHIARB_ERR_INFO_HIFIS_ECC_SBE_FIRST_SYNDROME_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_HIFIS_ECC_SBE_FIRST_SYNDROME_SMASK		0xFF00000000ull
#define FXR_RXHIARB_ERR_INFO_HIFIS_ECC_RESERVED_31_16_SHIFT		16
#define FXR_RXHIARB_ERR_INFO_HIFIS_ECC_RESERVED_31_16_MASK		0xFFFFull
#define FXR_RXHIARB_ERR_INFO_HIFIS_ECC_RESERVED_31_16_SMASK		0xFFFF0000ull
#define FXR_RXHIARB_ERR_INFO_HIFIS_ECC_MBE_COUNT_SHIFT			8
#define FXR_RXHIARB_ERR_INFO_HIFIS_ECC_MBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_HIFIS_ECC_MBE_COUNT_SMASK			0xFF00ull
#define FXR_RXHIARB_ERR_INFO_HIFIS_ECC_MBE_FIRST_SYNDROME_SHIFT		0
#define FXR_RXHIARB_ERR_INFO_HIFIS_ECC_MBE_FIRST_SYNDROME_MASK		0xFFull
#define FXR_RXHIARB_ERR_INFO_HIFIS_ECC_MBE_FIRST_SYNDROME_SMASK		0xFFull
/*
* Table #73 of fxr_top - RXHIARB_ERR_INFO_HIFIS_FRAME
* Captures information related to the first framing error on the HIFIs 
* interface. Framing errors only occur during head-less tails (where tail-less 
* heads are assumed to be checked by RxDMA since it is impossible to drop the 
* tail-less head as the head will already have been sent before it is determined 
* that a tail is missing. There is only a single domain.
*/
#define FXR_RXHIARB_ERR_INFO_HIFIS_FRAME				(FXR_RX_HIARB_CSRS + 0x000000030288)
#define FXR_RXHIARB_ERR_INFO_HIFIS_FRAME_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_HIFIS_FRAME_RESERVED_63_8_SHIFT		8
#define FXR_RXHIARB_ERR_INFO_HIFIS_FRAME_RESERVED_63_8_MASK		0xFFFFFFFFFFFFFFull
#define FXR_RXHIARB_ERR_INFO_HIFIS_FRAME_RESERVED_63_8_SMASK		0xFFFFFFFFFFFFFF00ull
#define FXR_RXHIARB_ERR_INFO_HIFIS_FRAME_COUNT_SHIFT			0
#define FXR_RXHIARB_ERR_INFO_HIFIS_FRAME_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_HIFIS_FRAME_COUNT_SMASK			0xFFull
/*
* Table #74 of fxr_top - RXHIARB_ERR_INJECT_HIFIS
* Injects errors on the HIFIs interface checkers. Errors are injected for 
* 2domain: Header (domain 0) and framing (domain1). Since there is no ECC check 
* bits for the framing error, there are no mask bits for it. 
*/
#define FXR_RXHIARB_ERR_INJECT_HIFIS					(FXR_RX_HIARB_CSRS + 0x000000030290)
#define FXR_RXHIARB_ERR_INJECT_HIFIS_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INJECT_HIFIS_RESERVED_63_10_SHIFT		10
#define FXR_RXHIARB_ERR_INJECT_HIFIS_RESERVED_63_10_MASK		0x3FFFFFFFFFFFFFull
#define FXR_RXHIARB_ERR_INJECT_HIFIS_RESERVED_63_10_SMASK		0xFFFFFFFFFFFFFC00ull
#define FXR_RXHIARB_ERR_INJECT_HIFIS_ERR_INJECT_FRAME_EN_SHIFT		9
#define FXR_RXHIARB_ERR_INJECT_HIFIS_ERR_INJECT_FRAME_EN_MASK		0x1ull
#define FXR_RXHIARB_ERR_INJECT_HIFIS_ERR_INJECT_FRAME_EN_SMASK		0x200ull
#define FXR_RXHIARB_ERR_INJECT_HIFIS_ERR_INJECT_EN_SHIFT		8
#define FXR_RXHIARB_ERR_INJECT_HIFIS_ERR_INJECT_EN_MASK			0x1ull
#define FXR_RXHIARB_ERR_INJECT_HIFIS_ERR_INJECT_EN_SMASK		0x100ull
#define FXR_RXHIARB_ERR_INJECT_HIFIS_ERR_INJECT_MASK_SHIFT		0
#define FXR_RXHIARB_ERR_INJECT_HIFIS_ERR_INJECT_MASK_MASK		0xFFull
#define FXR_RXHIARB_ERR_INJECT_HIFIS_ERR_INJECT_MASK_SMASK		0xFFull
/*
* Table #75 of fxr_top - RXHIARB_ERR_INFO_NACK_ECC
* Captures information related to ECC errors within the header flit on HIFIs 
* responses/requests. Errors are checked for 1 domain: Nack queue.
*/
#define FXR_RXHIARB_ERR_INFO_NACK_ECC					(FXR_RX_HIARB_CSRS + 0x000000030298)
#define FXR_RXHIARB_ERR_INFO_NACK_ECC_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INFO_NACK_ECC_RESERVED_63_48_SHIFT		48
#define FXR_RXHIARB_ERR_INFO_NACK_ECC_RESERVED_63_48_MASK		0xFFFFull
#define FXR_RXHIARB_ERR_INFO_NACK_ECC_RESERVED_63_48_SMASK		0xFFFF000000000000ull
#define FXR_RXHIARB_ERR_INFO_NACK_ECC_SBE_COUNT_SHIFT			40
#define FXR_RXHIARB_ERR_INFO_NACK_ECC_SBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_NACK_ECC_SBE_COUNT_SMASK			0xFF0000000000ull
#define FXR_RXHIARB_ERR_INFO_NACK_ECC_RESERVED_39_38_SHIFT		38
#define FXR_RXHIARB_ERR_INFO_NACK_ECC_RESERVED_39_38_MASK		0x3ull
#define FXR_RXHIARB_ERR_INFO_NACK_ECC_RESERVED_39_38_SMASK		0xC000000000ull
#define FXR_RXHIARB_ERR_INFO_NACK_ECC_SBE_FIRST_SYNDROME_SHIFT		32
#define FXR_RXHIARB_ERR_INFO_NACK_ECC_SBE_FIRST_SYNDROME_MASK		0x3Full
#define FXR_RXHIARB_ERR_INFO_NACK_ECC_SBE_FIRST_SYNDROME_SMASK		0x3F00000000ull
#define FXR_RXHIARB_ERR_INFO_NACK_ECC_RESERVED_31_16_SHIFT		16
#define FXR_RXHIARB_ERR_INFO_NACK_ECC_RESERVED_31_16_MASK		0xFFFFull
#define FXR_RXHIARB_ERR_INFO_NACK_ECC_RESERVED_31_16_SMASK		0xFFFF0000ull
#define FXR_RXHIARB_ERR_INFO_NACK_ECC_MBE_COUNT_SHIFT			8
#define FXR_RXHIARB_ERR_INFO_NACK_ECC_MBE_COUNT_MASK			0xFFull
#define FXR_RXHIARB_ERR_INFO_NACK_ECC_MBE_COUNT_SMASK			0xFF00ull
#define FXR_RXHIARB_ERR_INFO_NACK_ECC_RESERVED_7_6_SHIFT		6
#define FXR_RXHIARB_ERR_INFO_NACK_ECC_RESERVED_7_6_MASK			0x3ull
#define FXR_RXHIARB_ERR_INFO_NACK_ECC_RESERVED_7_6_SMASK		0xC0ull
#define FXR_RXHIARB_ERR_INFO_NACK_ECC_MBE_FIRST_SYNDROME_SHIFT		0
#define FXR_RXHIARB_ERR_INFO_NACK_ECC_MBE_FIRST_SYNDROME_MASK		0x3Full
#define FXR_RXHIARB_ERR_INFO_NACK_ECC_MBE_FIRST_SYNDROME_SMASK		0x3Full
/*
* Table #76 of fxr_top - RXHIARB_ERR_INJECT_NACK
* Injects ECC errors on the ECC checkers. Errors are injected for 1 domain: Nack 
* queue.
*/
#define FXR_RXHIARB_ERR_INJECT_NACK					(FXR_RX_HIARB_CSRS + 0x0000000302A0)
#define FXR_RXHIARB_ERR_INJECT_NACK_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_ERR_INJECT_NACK_RESERVED_63_9_SHIFT			9
#define FXR_RXHIARB_ERR_INJECT_NACK_RESERVED_63_9_MASK			0x7FFFFFFFFFFFFFull
#define FXR_RXHIARB_ERR_INJECT_NACK_RESERVED_63_9_SMASK			0xFFFFFFFFFFFFFE00ull
#define FXR_RXHIARB_ERR_INJECT_NACK_ERR_INJECT_EN_SHIFT			8
#define FXR_RXHIARB_ERR_INJECT_NACK_ERR_INJECT_EN_MASK			0x1ull
#define FXR_RXHIARB_ERR_INJECT_NACK_ERR_INJECT_EN_SMASK			0x100ull
#define FXR_RXHIARB_ERR_INJECT_NACK_RESERVED_7_6_SHIFT			6
#define FXR_RXHIARB_ERR_INJECT_NACK_RESERVED_7_6_MASK			0x3ull
#define FXR_RXHIARB_ERR_INJECT_NACK_RESERVED_7_6_SMASK			0xC0ull
#define FXR_RXHIARB_ERR_INJECT_NACK_ERR_INJECT_MASK_SHIFT		0
#define FXR_RXHIARB_ERR_INJECT_NACK_ERR_INJECT_MASK_MASK		0x3Full
#define FXR_RXHIARB_ERR_INJECT_NACK_ERR_INJECT_MASK_SMASK		0x3Full
/*
* Table #77 of fxr_top - RXHIARB_DBG_PYLD_HDR0
* This CSR initiates the read/write operations to the payload buffer. This CSR 
* contains half of the payload buffer's header fields. When this CSR is read, 
* the entire wide word is read out of the buffer with half of header fields 
* returned here and the remainder of the payload buffer word's contents captured 
* in the other payload CSR registers described in the following subsections. 
* Likewise during a write, the write data from this register is merged with the 
* contents of the other payload CSR registers and all written as a single 
* operation to the buffer.Therefore during a read, this CSR is read first and 
* then the others CSRs are read, while during writes, the other CSR registers 
* are preloaded and this CSR is written last. Accessing the payload buffer in 
* this fashions allows the user to capture/write the word in it's entirety while 
* avoiding corruptions with functional logic changing values. Note that 
* byte-wise operations are not supported by logic.
*/
#define FXR_RXHIARB_DBG_PYLD_HDR0					(FXR_RX_HIARB_CSRS + 0x000000040000)
#define FXR_RXHIARB_DBG_PYLD_HDR0_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_PYLD_HDR0_RESERVED_63_54_SHIFT			54
#define FXR_RXHIARB_DBG_PYLD_HDR0_RESERVED_63_54_MASK			0x3FFull
#define FXR_RXHIARB_DBG_PYLD_HDR0_RESERVED_63_54_SMASK			0xFFC0000000000000ull
#define FXR_RXHIARB_DBG_PYLD_HDR0_RX_SRC_ID_SHIFT			50
#define FXR_RXHIARB_DBG_PYLD_HDR0_RX_SRC_ID_MASK			0xFull
#define FXR_RXHIARB_DBG_PYLD_HDR0_RX_SRC_ID_SMASK			0x3C000000000000ull
#define FXR_RXHIARB_DBG_PYLD_HDR0_PAYLD_TC_SHIFT			46
#define FXR_RXHIARB_DBG_PYLD_HDR0_PAYLD_TC_MASK				0xFull
#define FXR_RXHIARB_DBG_PYLD_HDR0_PAYLD_TC_SMASK			0x3C00000000000ull
#define FXR_RXHIARB_DBG_PYLD_HDR0_PAYLD_TID_SHIFT			34
#define FXR_RXHIARB_DBG_PYLD_HDR0_PAYLD_TID_MASK			0xFFFull
#define FXR_RXHIARB_DBG_PYLD_HDR0_PAYLD_TID_SMASK			0x3FFC00000000ull
#define FXR_RXHIARB_DBG_PYLD_HDR0_PAYLD_LEN_SHIFT			27
#define FXR_RXHIARB_DBG_PYLD_HDR0_PAYLD_LEN_MASK			0x7Full
#define FXR_RXHIARB_DBG_PYLD_HDR0_PAYLD_LEN_SMASK			0x3F8000000ull
#define FXR_RXHIARB_DBG_PYLD_HDR0_PAYLD_TMOD_SHIFT			19
#define FXR_RXHIARB_DBG_PYLD_HDR0_PAYLD_TMOD_MASK			0xFFull
#define FXR_RXHIARB_DBG_PYLD_HDR0_PAYLD_TMOD_SMASK			0x7F80000ull
#define FXR_RXHIARB_DBG_PYLD_HDR0_PAYLD_CHINT_SHIFT			17
#define FXR_RXHIARB_DBG_PYLD_HDR0_PAYLD_CHINT_MASK			0x3ull
#define FXR_RXHIARB_DBG_PYLD_HDR0_PAYLD_CHINT_SMASK			0x60000ull
#define FXR_RXHIARB_DBG_PYLD_HDR0_PAYLD_PID_SHIFT			5
#define FXR_RXHIARB_DBG_PYLD_HDR0_PAYLD_PID_MASK			0xFFFull
#define FXR_RXHIARB_DBG_PYLD_HDR0_PAYLD_PID_SMASK			0x1FFE0ull
#define FXR_RXHIARB_DBG_PYLD_HDR0_PAYLD_OPCODE_SHIFT			2
#define FXR_RXHIARB_DBG_PYLD_HDR0_PAYLD_OPCODE_MASK			0x7ull
#define FXR_RXHIARB_DBG_PYLD_HDR0_PAYLD_OPCODE_SMASK			0x1Cull
#define FXR_RXHIARB_DBG_PYLD_HDR0_PAYLD_TVAL_SHIFT			1
#define FXR_RXHIARB_DBG_PYLD_HDR0_PAYLD_TVAL_MASK			0x1ull
#define FXR_RXHIARB_DBG_PYLD_HDR0_PAYLD_TVAL_SMASK			0x2ull
#define FXR_RXHIARB_DBG_PYLD_HDR0_PAYLD_HVAL_SHIFT			0
#define FXR_RXHIARB_DBG_PYLD_HDR0_PAYLD_HVAL_MASK			0x1ull
#define FXR_RXHIARB_DBG_PYLD_HDR0_PAYLD_HVAL_SMASK			0x1ull
/*
* Table #78 of fxr_top - RXHIARB_DBG_PYLD_HDR1_CREG
* Captures header fields during pauload accesses. When payload header 0 CSR is 
* read, this captures the reminder of the corresponding header information. 
* During writes, this data is written in conjunction with the header 0 fields, 
* Note that this register also captures the data valid bits as 
* well.
*/
#define FXR_RXHIARB_DBG_PYLD_HDR1_CREG					(FXR_RX_HIARB_CSRS + 0x000000040400)
#define FXR_RXHIARB_DBG_PYLD_HDR1_CREG_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_PYLD_HDR1_CREG_RESERVED_63_34_SHIFT		34
#define FXR_RXHIARB_DBG_PYLD_HDR1_CREG_RESERVED_63_34_MASK		0x3FFFFFFFull
#define FXR_RXHIARB_DBG_PYLD_HDR1_CREG_RESERVED_63_34_SMASK		0xFFFFFFFC00000000ull
#define FXR_RXHIARB_DBG_PYLD_HDR1_CREG_PAYLD_DVAL1_SHIFT		33
#define FXR_RXHIARB_DBG_PYLD_HDR1_CREG_PAYLD_DVAL1_MASK			0x1ull
#define FXR_RXHIARB_DBG_PYLD_HDR1_CREG_PAYLD_DVAL1_SMASK		0x200000000ull
#define FXR_RXHIARB_DBG_PYLD_HDR1_CREG_PAYLD_DVAL0_SHIFT		32
#define FXR_RXHIARB_DBG_PYLD_HDR1_CREG_PAYLD_DVAL0_MASK			0x1ull
#define FXR_RXHIARB_DBG_PYLD_HDR1_CREG_PAYLD_DVAL0_SMASK		0x100000000ull
#define FXR_RXHIARB_DBG_PYLD_HDR1_CREG_RESERVED_31_24_SHIFT		24
#define FXR_RXHIARB_DBG_PYLD_HDR1_CREG_RESERVED_31_24_MASK		0xFFull
#define FXR_RXHIARB_DBG_PYLD_HDR1_CREG_RESERVED_31_24_SMASK		0xFF000000ull
#define FXR_RXHIARB_DBG_PYLD_HDR1_CREG_PAYLD_HECC_SHIFT			16
#define FXR_RXHIARB_DBG_PYLD_HDR1_CREG_PAYLD_HECC_MASK			0xFFull
#define FXR_RXHIARB_DBG_PYLD_HDR1_CREG_PAYLD_HECC_SMASK			0xFF0000ull
#define FXR_RXHIARB_DBG_PYLD_HDR1_CREG_RESERVED_15_11_SHIFT		11
#define FXR_RXHIARB_DBG_PYLD_HDR1_CREG_RESERVED_15_11_MASK		0x1Full
#define FXR_RXHIARB_DBG_PYLD_HDR1_CREG_RESERVED_15_11_SMASK		0xF800ull
#define FXR_RXHIARB_DBG_PYLD_HDR1_CREG_PAYLD_ART_SHIFT			10
#define FXR_RXHIARB_DBG_PYLD_HDR1_CREG_PAYLD_ART_MASK			0x1ull
#define FXR_RXHIARB_DBG_PYLD_HDR1_CREG_PAYLD_ART_SMASK			0x400ull
#define FXR_RXHIARB_DBG_PYLD_HDR1_CREG_PAYLD_ADT_SHIFT			5
#define FXR_RXHIARB_DBG_PYLD_HDR1_CREG_PAYLD_ADT_MASK			0x1Full
#define FXR_RXHIARB_DBG_PYLD_HDR1_CREG_PAYLD_ADT_SMASK			0x3E0ull
#define FXR_RXHIARB_DBG_PYLD_HDR1_CREG_PAYLD_ASOP_SHIFT			0
#define FXR_RXHIARB_DBG_PYLD_HDR1_CREG_PAYLD_ASOP_MASK			0x1Full
#define FXR_RXHIARB_DBG_PYLD_HDR1_CREG_PAYLD_ASOP_SMASK			0x1Full
/*
* Table #79 of fxr_top - RXHIARB_DBG_PYLD_DAT0_CREG
* Captures a slice of the data fields during pauload accesses. When payload 
* header 0 CSR is read, this captures its corresponding slice of the read data. 
* During writes, this data is written in conjunction with the headers. This data 
* slice maps to data[63:0] of the first data flit.
*/
#define FXR_RXHIARB_DBG_PYLD_DAT0_CREG					(FXR_RX_HIARB_CSRS + 0x000000040408)
#define FXR_RXHIARB_DBG_PYLD_DAT0_CREG_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_PYLD_DAT0_CREG_PAYLD_DATA0_SHIFT		0
#define FXR_RXHIARB_DBG_PYLD_DAT0_CREG_PAYLD_DATA0_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_PYLD_DAT0_CREG_PAYLD_DATA0_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #80 of fxr_top - RXHIARB_DBG_PYLD_DAT1_CREG
* Captures a slice of the data fields during pauload accesses. When payload 
* header 0 CSR is read, this captures its corresponding slice of the read data. 
* During writes, this data is written in conjunction with the headers. This data 
* slice maps to data[127:64] of the first data flit.
*/
#define FXR_RXHIARB_DBG_PYLD_DAT1_CREG					(FXR_RX_HIARB_CSRS + 0x000000040410)
#define FXR_RXHIARB_DBG_PYLD_DAT1_CREG_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_PYLD_DAT1_CREG_PAYLD_DATA1_SHIFT		0
#define FXR_RXHIARB_DBG_PYLD_DAT1_CREG_PAYLD_DATA1_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_PYLD_DAT1_CREG_PAYLD_DATA1_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #81 of fxr_top - RXHIARB_DBG_PYLD_DAT2_CREG
* Captures a slice of the data fields during pauload accesses. When payload 
* header 0 CSR is read, this captures its corresponding slice of the read data. 
* During writes, this data is written in conjunction with the headers. This data 
* slice maps to data[191:128] of the first data flit.
*/
#define FXR_RXHIARB_DBG_PYLD_DAT2_CREG					(FXR_RX_HIARB_CSRS + 0x000000040418)
#define FXR_RXHIARB_DBG_PYLD_DAT2_CREG_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_PYLD_DAT2_CREG_PAYLD_DATA2_SHIFT		0
#define FXR_RXHIARB_DBG_PYLD_DAT2_CREG_PAYLD_DATA2_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_PYLD_DAT2_CREG_PAYLD_DATA2_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #82 of fxr_top - RXHIARB_DBG_PYLD_DAT3_CREG
* Captures a slice of the data fields during pauload accesses. When payload 
* header 0 CSR is read, this captures its corresponding slice of the read data. 
* During writes, this data is written in conjunction with the headers. This data 
* slice maps to data[255:192] of the first data flit.
*/
#define FXR_RXHIARB_DBG_PYLD_DAT3_CREG					(FXR_RX_HIARB_CSRS + 0x000000040420)
#define FXR_RXHIARB_DBG_PYLD_DAT3_CREG_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_PYLD_DAT3_CREG_PAYLD_DATA3_SHIFT		0
#define FXR_RXHIARB_DBG_PYLD_DAT3_CREG_PAYLD_DATA3_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_PYLD_DAT3_CREG_PAYLD_DATA3_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #83 of fxr_top - RXHIARB_DBG_PYLD_DAT4_CREG
* Captures a slice of the data fields during pauload accesses. When payload 
* header 0 CSR is read, this captures its corresponding slice of the read data. 
* During writes, this data is written in conjunction with the headers. This data 
* slice maps to data[63:0] of the second data flit.
*/
#define FXR_RXHIARB_DBG_PYLD_DAT4_CREG					(FXR_RX_HIARB_CSRS + 0x000000040428)
#define FXR_RXHIARB_DBG_PYLD_DAT4_CREG_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_PYLD_DAT4_CREG_PAYLD_DATA4_SHIFT		0
#define FXR_RXHIARB_DBG_PYLD_DAT4_CREG_PAYLD_DATA4_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_PYLD_DAT4_CREG_PAYLD_DATA4_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #84 of fxr_top - RXHIARB_DBG_PYLD_DAT5_CREG
* Captures a slice of the data fields during pauload accesses. When payload 
* header 0 CSR is read, this captures its corresponding slice of the read data. 
* During writes, this data is written in conjunction with the headers. This data 
* slice maps to data[128:64] of the second data flit.
*/
#define FXR_RXHIARB_DBG_PYLD_DAT5_CREG					(FXR_RX_HIARB_CSRS + 0x000000040430)
#define FXR_RXHIARB_DBG_PYLD_DAT5_CREG_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_PYLD_DAT5_CREG_PAYLD_DATA5_SHIFT		0
#define FXR_RXHIARB_DBG_PYLD_DAT5_CREG_PAYLD_DATA5_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_PYLD_DAT5_CREG_PAYLD_DATA5_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #85 of fxr_top - RXHIARB_DBG_PYLD_DAT6_CREG
* Captures a slice of the data fields during pauload accesses. When payload 
* header 0 CSR is read, this captures its corresponding slice of the read data. 
* During writes, this data is written in conjunction with the headers. This data 
* slice maps to data[191:128] of the second data flit.
*/
#define FXR_RXHIARB_DBG_PYLD_DAT6_CREG					(FXR_RX_HIARB_CSRS + 0x000000040438)
#define FXR_RXHIARB_DBG_PYLD_DAT6_CREG_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_PYLD_DAT6_CREG_PAYLD_DATA6_SHIFT		0
#define FXR_RXHIARB_DBG_PYLD_DAT6_CREG_PAYLD_DATA6_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_PYLD_DAT6_CREG_PAYLD_DATA6_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #86 of fxr_top - RXHIARB_DBG_PYLD_DAT7_CREG
* Captures a slice of the data fields during pauload accesses. When payload 
* header 0 CSR is read, this captures its corresponding slice of the read data. 
* During writes, this data is written in conjunction with the headers. This data 
* slice maps to data[255:192] of the second data flit.
*/
#define FXR_RXHIARB_DBG_PYLD_DAT7_CREG					(FXR_RX_HIARB_CSRS + 0x000000040440)
#define FXR_RXHIARB_DBG_PYLD_DAT7_CREG_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_PYLD_DAT7_CREG_PAYLD_DATA7_SHIFT		0
#define FXR_RXHIARB_DBG_PYLD_DAT7_CREG_PAYLD_DATA7_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_PYLD_DAT7_CREG_PAYLD_DATA7_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #87 of fxr_top - RXHIARB_DBG_PYLD_DAT8_CREG
* Captures the data ECC fields during pauload accesses. When payload header 0 
* CSR is read, this captures its corresponding read data ECC fields. During 
* writes, this data is written in conjunction with the headers. This ECC slices 
* map to both data flits, where each 8-bit ECC corresponds to a 64-bit data 
* field.
*/
#define FXR_RXHIARB_DBG_PYLD_DAT8_CREG					(FXR_RX_HIARB_CSRS + 0x000000040448)
#define FXR_RXHIARB_DBG_PYLD_DAT8_CREG_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_PYLD_DAT8_CREG_PAYLD_DECC1_SHIFT		32
#define FXR_RXHIARB_DBG_PYLD_DAT8_CREG_PAYLD_DECC1_MASK			0xFFFFFFFFull
#define FXR_RXHIARB_DBG_PYLD_DAT8_CREG_PAYLD_DECC1_SMASK		0xFFFFFFFF00000000ull
#define FXR_RXHIARB_DBG_PYLD_DAT8_CREG_PAYLD_DECC0_SHIFT		0
#define FXR_RXHIARB_DBG_PYLD_DAT8_CREG_PAYLD_DECC0_MASK			0xFFFFFFFFull
#define FXR_RXHIARB_DBG_PYLD_DAT8_CREG_PAYLD_DECC0_SMASK		0xFFFFFFFFull
/*
* Table #88 of fxr_top - RXHIARB_DBG_MTLB_TAG
* Provides debug access into Mini-TLB's tag CAM. Note that byte-wise operations 
* are not supported by logic. 
*/
#define FXR_RXHIARB_DBG_MTLB_TAG					(FXR_RX_HIARB_CSRS + 0x000000041000)
#define FXR_RXHIARB_DBG_MTLB_TAG_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_MTLB_TAG_RESERVED_63_62_SHIFT			62
#define FXR_RXHIARB_DBG_MTLB_TAG_RESERVED_63_62_MASK			0x3ull
#define FXR_RXHIARB_DBG_MTLB_TAG_RESERVED_63_62_SMASK			0xC000000000000000ull
#define FXR_RXHIARB_DBG_MTLB_TAG_PAR_ODD_SHIFT				61
#define FXR_RXHIARB_DBG_MTLB_TAG_PAR_ODD_MASK				0x1ull
#define FXR_RXHIARB_DBG_MTLB_TAG_PAR_ODD_SMASK				0x2000000000000000ull
#define FXR_RXHIARB_DBG_MTLB_TAG_PAR_EVEN_SHIFT				60
#define FXR_RXHIARB_DBG_MTLB_TAG_PAR_EVEN_MASK				0x1ull
#define FXR_RXHIARB_DBG_MTLB_TAG_PAR_EVEN_SMASK				0x1000000000000000ull
#define FXR_RXHIARB_DBG_MTLB_TAG_PRIV_LEVEL_SHIFT			59
#define FXR_RXHIARB_DBG_MTLB_TAG_PRIV_LEVEL_MASK			0x1ull
#define FXR_RXHIARB_DBG_MTLB_TAG_PRIV_LEVEL_SMASK			0x800000000000000ull
#define FXR_RXHIARB_DBG_MTLB_TAG_ACCESS_SHIFT				57
#define FXR_RXHIARB_DBG_MTLB_TAG_ACCESS_MASK				0x3ull
#define FXR_RXHIARB_DBG_MTLB_TAG_ACCESS_SMASK				0x600000000000000ull
#define FXR_RXHIARB_DBG_MTLB_TAG_PID_SHIFT				45
#define FXR_RXHIARB_DBG_MTLB_TAG_PID_MASK				0xFFFull
#define FXR_RXHIARB_DBG_MTLB_TAG_PID_SMASK				0x1FFE00000000000ull
#define FXR_RXHIARB_DBG_MTLB_TAG_VA_SHIFT				0
#define FXR_RXHIARB_DBG_MTLB_TAG_VA_MASK				0x1FFFFFFFFFFFull
#define FXR_RXHIARB_DBG_MTLB_TAG_VA_SMASK				0x1FFFFFFFFFFFull
/*
* Table #89 of fxr_top - RXHIARB_DBG_MTLB_DATA
* Provides debug access into Mini-TLB's data. Note that byte-wise operations are 
* not supported by logic.
*/
#define FXR_RXHIARB_DBG_MTLB_DATA					(FXR_RX_HIARB_CSRS + 0x000000041400)
#define FXR_RXHIARB_DBG_MTLB_DATA_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_MTLB_DATA_RESERVED_63_48_SHIFT			48
#define FXR_RXHIARB_DBG_MTLB_DATA_RESERVED_63_48_MASK			0xFFFFull
#define FXR_RXHIARB_DBG_MTLB_DATA_RESERVED_63_48_SMASK			0xFFFF000000000000ull
#define FXR_RXHIARB_DBG_MTLB_DATA_ECC_SHIFT				41
#define FXR_RXHIARB_DBG_MTLB_DATA_ECC_MASK				0x7Full
#define FXR_RXHIARB_DBG_MTLB_DATA_ECC_SMASK				0xFE0000000000ull
#define FXR_RXHIARB_DBG_MTLB_DATA_RESERVED_40_SHIFT			40
#define FXR_RXHIARB_DBG_MTLB_DATA_RESERVED_40_MASK			0x1ull
#define FXR_RXHIARB_DBG_MTLB_DATA_RESERVED_40_SMASK			0x10000000000ull
#define FXR_RXHIARB_DBG_MTLB_DATA_PA_SHIFT				0
#define FXR_RXHIARB_DBG_MTLB_DATA_PA_MASK				0xFFFFFFFFFFull
#define FXR_RXHIARB_DBG_MTLB_DATA_PA_SMASK				0xFFFFFFFFFFull
/*
* Table #90 of fxr_top - RXHIARB_DBG_MTLB_VVECT_LOW
* Provides debug access into the lower half of the mini-TLB valid state vector. 
* Note that byte-wise operations are not supported by logic.
*/
#define FXR_RXHIARB_DBG_MTLB_VVECT_LOW					(FXR_RX_HIARB_CSRS + 0x000000041800)
#define FXR_RXHIARB_DBG_MTLB_VVECT_LOW_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_MTLB_VVECT_LOW_VECT_LOW_SHIFT			0
#define FXR_RXHIARB_DBG_MTLB_VVECT_LOW_VECT_LOW_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_MTLB_VVECT_LOW_VECT_LOW_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #91 of fxr_top - RXHIARB_DBG_MTLB_VVECT_HIGH
* Provides debug access into the upper half of the mini-TLB valid state vector. 
* Note that byte-wise operations are not supported by logic.
*/
#define FXR_RXHIARB_DBG_MTLB_VVECT_HIGH					(FXR_RX_HIARB_CSRS + 0x000000041808)
#define FXR_RXHIARB_DBG_MTLB_VVECT_HIGH_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_MTLB_VVECT_HIGH_VECT_HIGH_SHIFT			0
#define FXR_RXHIARB_DBG_MTLB_VVECT_HIGH_VECT_HIGH_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_MTLB_VVECT_HIGH_VECT_HIGH_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #92 of fxr_top - RXHIARB_DBG_MTLB_PVECT_LOW
* Provides debug access into the lower half of the mini-TLB present state 
* vector. Note that byte-wise operations are not supported by logic.
*/
#define FXR_RXHIARB_DBG_MTLB_PVECT_LOW					(FXR_RX_HIARB_CSRS + 0x000000041810)
#define FXR_RXHIARB_DBG_MTLB_PVECT_LOW_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_MTLB_PVECT_LOW_VECT_LOW_SHIFT			0
#define FXR_RXHIARB_DBG_MTLB_PVECT_LOW_VECT_LOW_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_MTLB_PVECT_LOW_VECT_LOW_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #93 of fxr_top - RXHIARB_DBG_MTLB_PVECT_HIGH
* Provides debug access into the upper half of the mini-TLB present state 
* vector. Note that byte-wise operations are not supported by logic.
*/
#define FXR_RXHIARB_DBG_MTLB_PVECT_HIGH					(FXR_RX_HIARB_CSRS + 0x000000041818)
#define FXR_RXHIARB_DBG_MTLB_PVECT_HIGH_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_MTLB_PVECT_HIGH_VECT_HIGH_SHIFT			0
#define FXR_RXHIARB_DBG_MTLB_PVECT_HIGH_VECT_HIGH_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_MTLB_PVECT_HIGH_VECT_HIGH_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #94 of fxr_top - RXHIARB_DBG_MTLB_ZVECT_LOW
* Provides debug access into the lower half of the mini-TLB zero state vector. 
* Note that byte-wise operations are not supported by logic.
*/
#define FXR_RXHIARB_DBG_MTLB_ZVECT_LOW					(FXR_RX_HIARB_CSRS + 0x000000041820)
#define FXR_RXHIARB_DBG_MTLB_ZVECT_LOW_RESETCSR				0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_MTLB_ZVECT_LOW_VECT_LOW_SHIFT			0
#define FXR_RXHIARB_DBG_MTLB_ZVECT_LOW_VECT_LOW_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_MTLB_ZVECT_LOW_VECT_LOW_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #95 of fxr_top - RXHIARB_DBG_MTLB_ZVECT_HIGH
* Provides debug access into the upper half of the mini-TLB zero state vector. 
* Note that byte-wise operations are not supported by logic.
*/
#define FXR_RXHIARB_DBG_MTLB_ZVECT_HIGH					(FXR_RX_HIARB_CSRS + 0x000000041828)
#define FXR_RXHIARB_DBG_MTLB_ZVECT_HIGH_RESETCSR			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_MTLB_ZVECT_HIGH_VECT_HIGH_SHIFT			0
#define FXR_RXHIARB_DBG_MTLB_ZVECT_HIGH_VECT_HIGH_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_MTLB_ZVECT_HIGH_VECT_HIGH_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #96 of fxr_top - RXHIARB_DBG_MTLB_CVECT_LOW
* Provides debug access into the lower half of the mini-TLB corrupt state vector 
* Bits in this vector indicate either a PCB error during a miss or a parity 
* error on tag rd during flush. Note that byte-wise operations are not supported 
* by logic.
*/
#define FXR_RXHIARB_DBG_MTLB_CVECT_LOW					(FXR_RX_HIARB_CSRS + 0x000000041830)
#define FXR_RXHIARB_DBG_MTLB_CVECT_LOW_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_MTLB_CVECT_LOW_VECT_LOW_SHIFT			0
#define FXR_RXHIARB_DBG_MTLB_CVECT_LOW_VECT_LOW_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_MTLB_CVECT_LOW_VECT_LOW_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #97 of fxr_top - RXHIARB_DBG_MTLB_CVECT_HIGH
* Provides debug access into the upper half of the mini-TLB corrupt state 
* vector.Bits in this vector indicate either a PCB error during a miss or a 
* parity error on tag rd during flush. Note that byte-wise operations are not 
* supported by logic.
*/
#define FXR_RXHIARB_DBG_MTLB_CVECT_HIGH					(FXR_RX_HIARB_CSRS + 0x000000041838)
#define FXR_RXHIARB_DBG_MTLB_CVECT_HIGH_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_MTLB_CVECT_HIGH_VECT_HIGH_SHIFT			0
#define FXR_RXHIARB_DBG_MTLB_CVECT_HIGH_VECT_HIGH_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_MTLB_CVECT_HIGH_VECT_HIGH_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #98 of fxr_top - RXHIARB_DBG_MTLB_FVECT_LOW
* Provides debug access into the lower half of the mini-TLB untranslated state 
* vector Bits in this vector indicate that a fill error occurred during an AT 
* translation. Note that byte-wise operations are not supported by logic. 
* 
*/
#define FXR_RXHIARB_DBG_MTLB_FVECT_LOW					(FXR_RX_HIARB_CSRS + 0x000000041840)
#define FXR_RXHIARB_DBG_MTLB_FVECT_LOW_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_MTLB_FVECT_LOW_VECT_LOW_SHIFT			0
#define FXR_RXHIARB_DBG_MTLB_FVECT_LOW_VECT_LOW_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_MTLB_FVECT_LOW_VECT_LOW_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #99 of fxr_top - RXHIARB_DBG_MTLB_FVECT_HIGH
* Provides debug access into the upper half of the mini-TLB untranslated state 
* vector Bits in this vector indicate that a fill error occurred during an AT 
* translation. Note that byte-wise operations are not supported by 
* logic.
*/
#define FXR_RXHIARB_DBG_MTLB_FVECT_HIGH					(FXR_RX_HIARB_CSRS + 0x000000041848)
#define FXR_RXHIARB_DBG_MTLB_FVECT_HIGH_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_MTLB_FVECT_HIGH_VECT_HIGH_SHIFT			0
#define FXR_RXHIARB_DBG_MTLB_FVECT_HIGH_VECT_HIGH_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_MTLB_FVECT_HIGH_VECT_HIGH_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #100 of fxr_top - RXHIARB_DBG_MTLB_DISABLE
* Provides debug access to disable the mini-TLB cache. Asserting this bit is for 
* debug purposes only and will throttle the performance of the HIARB 
* significantly. Asserting the disable bit forces every request in the address 
* translation pipeline to miss in the cache, forcing every request to send an 
* address translation to the AT, therefore a mini-TLB entry is created for every 
* request in the holding queues.
*/
#define FXR_RXHIARB_DBG_MTLB_DISABLE					(FXR_RX_HIARB_CSRS + 0x000000041850)
#define FXR_RXHIARB_DBG_MTLB_DISABLE_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_MTLB_DISABLE_RESERVED_63_1_SHIFT		1
#define FXR_RXHIARB_DBG_MTLB_DISABLE_RESERVED_63_1_MASK			0x7FFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_MTLB_DISABLE_RESERVED_63_1_SMASK		0xFFFFFFFFFFFFFFFEull
#define FXR_RXHIARB_DBG_MTLB_DISABLE_CACHE_DISABLE_SHIFT		0
#define FXR_RXHIARB_DBG_MTLB_DISABLE_CACHE_DISABLE_MASK			0x1ull
#define FXR_RXHIARB_DBG_MTLB_DISABLE_CACHE_DISABLE_SMASK		0x1ull
/*
* Table #101 of fxr_top - RXHIARB_DBG_MTLB_CNT
* Provides debug access into Mini-TLB's counters. Note that byte-wise operations 
* are not supported by logic.
*/
#define FXR_RXHIARB_DBG_MTLB_CNT					(FXR_RX_HIARB_CSRS + 0x000000042000)
#define FXR_RXHIARB_DBG_MTLB_CNT_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_MTLB_CNT_RESERVED_63_13_SHIFT			13
#define FXR_RXHIARB_DBG_MTLB_CNT_RESERVED_63_13_MASK			0x7FFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_MTLB_CNT_RESERVED_63_13_SMASK			0xFFFFFFFFFFFFE000ull
#define FXR_RXHIARB_DBG_MTLB_CNT_ECC_SHIFT				8
#define FXR_RXHIARB_DBG_MTLB_CNT_ECC_MASK				0x1Full
#define FXR_RXHIARB_DBG_MTLB_CNT_ECC_SMASK				0x1F00ull
#define FXR_RXHIARB_DBG_MTLB_CNT_COUNT_SHIFT				0
#define FXR_RXHIARB_DBG_MTLB_CNT_COUNT_MASK				0xFFull
#define FXR_RXHIARB_DBG_MTLB_CNT_COUNT_SMASK				0xFFull
/*
* Table #102 of fxr_top - RXHIARB_DBG_MTLB_FLSH
* Provides read-only debug access, allowing some insight into the flush 
* state.
*/
#define FXR_RXHIARB_DBG_MTLB_FLSH					(FXR_RX_HIARB_CSRS + 0x000000042400)
#define FXR_RXHIARB_DBG_MTLB_FLSH_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_MTLB_FLSH_RESERVED_63_3_SHIFT			3
#define FXR_RXHIARB_DBG_MTLB_FLSH_RESERVED_63_3_MASK			0x1FFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_MTLB_FLSH_RESERVED_63_3_SMASK			0xFFFFFFFFFFFFFFF8ull
#define FXR_RXHIARB_DBG_MTLB_FLSH_NOP_BUSY_SHIFT			2
#define FXR_RXHIARB_DBG_MTLB_FLSH_NOP_BUSY_MASK				0x1ull
#define FXR_RXHIARB_DBG_MTLB_FLSH_NOP_BUSY_SMASK			0x4ull
#define FXR_RXHIARB_DBG_MTLB_FLSH_REF_BUSY_SHIFT			1
#define FXR_RXHIARB_DBG_MTLB_FLSH_REF_BUSY_MASK				0x1ull
#define FXR_RXHIARB_DBG_MTLB_FLSH_REF_BUSY_SMASK			0x2ull
#define FXR_RXHIARB_DBG_MTLB_FLSH_FLUSH_BUSY_SHIFT			0
#define FXR_RXHIARB_DBG_MTLB_FLSH_FLUSH_BUSY_MASK			0x1ull
#define FXR_RXHIARB_DBG_MTLB_FLSH_FLUSH_BUSY_SMASK			0x1ull
/*
* Table #103 of fxr_top - RXHIARB_DBG_MTLB_RVECT_LOW
* Provides debug access into the lower half of the mini-TLB state vector Bits in 
* this vector indicate that the corrsponding mini-TLB index is being refetched 
* due to a flush. Note that byte-wise operations are not supported by 
* logic.
*/
#define FXR_RXHIARB_DBG_MTLB_RVECT_LOW					(FXR_RX_HIARB_CSRS + 0x000000042408)
#define FXR_RXHIARB_DBG_MTLB_RVECT_LOW_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_MTLB_RVECT_LOW_VECT_LOW_SHIFT			0
#define FXR_RXHIARB_DBG_MTLB_RVECT_LOW_VECT_LOW_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_MTLB_RVECT_LOW_VECT_LOW_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #104 of fxr_top - RXHIARB_DBG_MTLB_RVECT_HIGH
* Provides debug access into the lower half of the mini-TLB state vector Bits in 
* this vector indicate that the corrsponding mini-TLB index is being refetched 
* due to a flush. Note that byte-wise operations are not supported by 
* logic.
*/
#define FXR_RXHIARB_DBG_MTLB_RVECT_HIGH					(FXR_RX_HIARB_CSRS + 0x000000042410)
#define FXR_RXHIARB_DBG_MTLB_RVECT_HIGH_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_MTLB_RVECT_HIGH_VECT_HIGH_SHIFT			0
#define FXR_RXHIARB_DBG_MTLB_RVECT_HIGH_VECT_HIGH_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_MTLB_RVECT_HIGH_VECT_HIGH_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #105 of fxr_top - RXHIARB_DBG_HQUE0
* Provides debug access into the head of holding queue 0. Note that byte-wise 
* operations are not supported by logic.
*/
#define FXR_RXHIARB_DBG_HQUE0						(FXR_RX_HIARB_CSRS + 0x000000042418)
#define FXR_RXHIARB_DBG_HQUE0_RESETCSR					0x0000000000000000ull
#define FXR_RXHIARB_DBG_HQUE0_RESERVED_63_42_SHIFT			42
#define FXR_RXHIARB_DBG_HQUE0_RESERVED_63_42_MASK			0x3FFFFFull
#define FXR_RXHIARB_DBG_HQUE0_RESERVED_63_42_SMASK			0xFFFFFC0000000000ull
#define FXR_RXHIARB_DBG_HQUE0_PRES_OUT_SHIFT				41
#define FXR_RXHIARB_DBG_HQUE0_PRES_OUT_MASK				0x1ull
#define FXR_RXHIARB_DBG_HQUE0_PRES_OUT_SMASK				0x20000000000ull
#define FXR_RXHIARB_DBG_HQUE0_LADDR_TLB_INDEX_ECC_SHIFT			35
#define FXR_RXHIARB_DBG_HQUE0_LADDR_TLB_INDEX_ECC_MASK			0x3Full
#define FXR_RXHIARB_DBG_HQUE0_LADDR_TLB_INDEX_ECC_SMASK			0x1F800000000ull
#define FXR_RXHIARB_DBG_HQUE0_TLB_INDEX_SHIFT				28
#define FXR_RXHIARB_DBG_HQUE0_TLB_INDEX_MASK				0x7Full
#define FXR_RXHIARB_DBG_HQUE0_TLB_INDEX_SMASK				0x7F0000000ull
#define FXR_RXHIARB_DBG_HQUE0_LADDR_SHIFT				16
#define FXR_RXHIARB_DBG_HQUE0_LADDR_MASK				0xFFFull
#define FXR_RXHIARB_DBG_HQUE0_LADDR_SMASK				0xFFF0000ull
#define FXR_RXHIARB_DBG_HQUE0_RESERVED_15_13_SHIFT			13
#define FXR_RXHIARB_DBG_HQUE0_RESERVED_15_13_MASK			0x7ull
#define FXR_RXHIARB_DBG_HQUE0_RESERVED_15_13_SMASK			0xE000ull
#define FXR_RXHIARB_DBG_HQUE0_HID_ECC_SHIFT				8
#define FXR_RXHIARB_DBG_HQUE0_HID_ECC_MASK				0x1Full
#define FXR_RXHIARB_DBG_HQUE0_HID_ECC_SMASK				0x1F00ull
#define FXR_RXHIARB_DBG_HQUE0_HID_SHIFT					0
#define FXR_RXHIARB_DBG_HQUE0_HID_MASK					0xFFull
#define FXR_RXHIARB_DBG_HQUE0_HID_SMASK					0xFFull
/*
* Table #106 of fxr_top - RXHIARB_DBG_HQUE1
* Provides debug access into the head of holding queue 1. Note that byte-wise 
* operations are not supported by logic.
*/
#define FXR_RXHIARB_DBG_HQUE1						(FXR_RX_HIARB_CSRS + 0x000000042420)
#define FXR_RXHIARB_DBG_HQUE1_RESETCSR					0x0000000000000000ull
#define FXR_RXHIARB_DBG_HQUE1_RESERVED_63_42_SHIFT			42
#define FXR_RXHIARB_DBG_HQUE1_RESERVED_63_42_MASK			0x3FFFFFull
#define FXR_RXHIARB_DBG_HQUE1_RESERVED_63_42_SMASK			0xFFFFFC0000000000ull
#define FXR_RXHIARB_DBG_HQUE1_PRES_OUT_SHIFT				41
#define FXR_RXHIARB_DBG_HQUE1_PRES_OUT_MASK				0x1ull
#define FXR_RXHIARB_DBG_HQUE1_PRES_OUT_SMASK				0x20000000000ull
#define FXR_RXHIARB_DBG_HQUE1_LADDR_TLB_INDEX_ECC_SHIFT			35
#define FXR_RXHIARB_DBG_HQUE1_LADDR_TLB_INDEX_ECC_MASK			0x3Full
#define FXR_RXHIARB_DBG_HQUE1_LADDR_TLB_INDEX_ECC_SMASK			0x1F800000000ull
#define FXR_RXHIARB_DBG_HQUE1_TLB_INDEX_SHIFT				28
#define FXR_RXHIARB_DBG_HQUE1_TLB_INDEX_MASK				0x7Full
#define FXR_RXHIARB_DBG_HQUE1_TLB_INDEX_SMASK				0x7F0000000ull
#define FXR_RXHIARB_DBG_HQUE1_LADDR_SHIFT				16
#define FXR_RXHIARB_DBG_HQUE1_LADDR_MASK				0xFFFull
#define FXR_RXHIARB_DBG_HQUE1_LADDR_SMASK				0xFFF0000ull
#define FXR_RXHIARB_DBG_HQUE1_RESERVED_15_13_SHIFT			13
#define FXR_RXHIARB_DBG_HQUE1_RESERVED_15_13_MASK			0x7ull
#define FXR_RXHIARB_DBG_HQUE1_RESERVED_15_13_SMASK			0xE000ull
#define FXR_RXHIARB_DBG_HQUE1_HID_ECC_SHIFT				8
#define FXR_RXHIARB_DBG_HQUE1_HID_ECC_MASK				0x1Full
#define FXR_RXHIARB_DBG_HQUE1_HID_ECC_SMASK				0x1F00ull
#define FXR_RXHIARB_DBG_HQUE1_HID_SHIFT					0
#define FXR_RXHIARB_DBG_HQUE1_HID_MASK					0xFFull
#define FXR_RXHIARB_DBG_HQUE1_HID_SMASK					0xFFull
/*
* Table #107 of fxr_top - RXHIARB_DBG_HQUE2
* Provides debug access into the head of holding queue 2. Note that byte-wise 
* operations are not supported by logic.
*/
#define FXR_RXHIARB_DBG_HQUE2						(FXR_RX_HIARB_CSRS + 0x000000042428)
#define FXR_RXHIARB_DBG_HQUE2_RESETCSR					0x0000000000000000ull
#define FXR_RXHIARB_DBG_HQUE2_RESERVED_63_42_SHIFT			42
#define FXR_RXHIARB_DBG_HQUE2_RESERVED_63_42_MASK			0x3FFFFFull
#define FXR_RXHIARB_DBG_HQUE2_RESERVED_63_42_SMASK			0xFFFFFC0000000000ull
#define FXR_RXHIARB_DBG_HQUE2_PRES_OUT_SHIFT				41
#define FXR_RXHIARB_DBG_HQUE2_PRES_OUT_MASK				0x1ull
#define FXR_RXHIARB_DBG_HQUE2_PRES_OUT_SMASK				0x20000000000ull
#define FXR_RXHIARB_DBG_HQUE2_LADDR_TLB_INDEX_ECC_SHIFT			35
#define FXR_RXHIARB_DBG_HQUE2_LADDR_TLB_INDEX_ECC_MASK			0x3Full
#define FXR_RXHIARB_DBG_HQUE2_LADDR_TLB_INDEX_ECC_SMASK			0x1F800000000ull
#define FXR_RXHIARB_DBG_HQUE2_TLB_INDEX_SHIFT				28
#define FXR_RXHIARB_DBG_HQUE2_TLB_INDEX_MASK				0x7Full
#define FXR_RXHIARB_DBG_HQUE2_TLB_INDEX_SMASK				0x7F0000000ull
#define FXR_RXHIARB_DBG_HQUE2_LADDR_SHIFT				16
#define FXR_RXHIARB_DBG_HQUE2_LADDR_MASK				0xFFFull
#define FXR_RXHIARB_DBG_HQUE2_LADDR_SMASK				0xFFF0000ull
#define FXR_RXHIARB_DBG_HQUE2_RESERVED_15_13_SHIFT			13
#define FXR_RXHIARB_DBG_HQUE2_RESERVED_15_13_MASK			0x7ull
#define FXR_RXHIARB_DBG_HQUE2_RESERVED_15_13_SMASK			0xE000ull
#define FXR_RXHIARB_DBG_HQUE2_HID_ECC_SHIFT				8
#define FXR_RXHIARB_DBG_HQUE2_HID_ECC_MASK				0x1Full
#define FXR_RXHIARB_DBG_HQUE2_HID_ECC_SMASK				0x1F00ull
#define FXR_RXHIARB_DBG_HQUE2_HID_SHIFT					0
#define FXR_RXHIARB_DBG_HQUE2_HID_MASK					0xFFull
#define FXR_RXHIARB_DBG_HQUE2_HID_SMASK					0xFFull
/*
* Table #108 of fxr_top - RXHIARB_DBG_HQUE3
* Provides debug access into the head of holding queue 3. Note that byte-wise 
* operations are not supported by logic.
*/
#define FXR_RXHIARB_DBG_HQUE3						(FXR_RX_HIARB_CSRS + 0x000000042430)
#define FXR_RXHIARB_DBG_HQUE3_RESETCSR					0x0000000000000000ull
#define FXR_RXHIARB_DBG_HQUE3_RESERVED_63_42_SHIFT			42
#define FXR_RXHIARB_DBG_HQUE3_RESERVED_63_42_MASK			0x3FFFFFull
#define FXR_RXHIARB_DBG_HQUE3_RESERVED_63_42_SMASK			0xFFFFFC0000000000ull
#define FXR_RXHIARB_DBG_HQUE3_PRES_OUT_SHIFT				41
#define FXR_RXHIARB_DBG_HQUE3_PRES_OUT_MASK				0x1ull
#define FXR_RXHIARB_DBG_HQUE3_PRES_OUT_SMASK				0x20000000000ull
#define FXR_RXHIARB_DBG_HQUE3_LADDR_TLB_INDEX_ECC_SHIFT			35
#define FXR_RXHIARB_DBG_HQUE3_LADDR_TLB_INDEX_ECC_MASK			0x3Full
#define FXR_RXHIARB_DBG_HQUE3_LADDR_TLB_INDEX_ECC_SMASK			0x1F800000000ull
#define FXR_RXHIARB_DBG_HQUE3_TLB_INDEX_SHIFT				28
#define FXR_RXHIARB_DBG_HQUE3_TLB_INDEX_MASK				0x7Full
#define FXR_RXHIARB_DBG_HQUE3_TLB_INDEX_SMASK				0x7F0000000ull
#define FXR_RXHIARB_DBG_HQUE3_LADDR_SHIFT				16
#define FXR_RXHIARB_DBG_HQUE3_LADDR_MASK				0xFFFull
#define FXR_RXHIARB_DBG_HQUE3_LADDR_SMASK				0xFFF0000ull
#define FXR_RXHIARB_DBG_HQUE3_RESERVED_15_13_SHIFT			13
#define FXR_RXHIARB_DBG_HQUE3_RESERVED_15_13_MASK			0x7ull
#define FXR_RXHIARB_DBG_HQUE3_RESERVED_15_13_SMASK			0xE000ull
#define FXR_RXHIARB_DBG_HQUE3_HID_ECC_SHIFT				8
#define FXR_RXHIARB_DBG_HQUE3_HID_ECC_MASK				0x1Full
#define FXR_RXHIARB_DBG_HQUE3_HID_ECC_SMASK				0x1F00ull
#define FXR_RXHIARB_DBG_HQUE3_HID_SHIFT					0
#define FXR_RXHIARB_DBG_HQUE3_HID_MASK					0xFFull
#define FXR_RXHIARB_DBG_HQUE3_HID_SMASK					0xFFull
/*
* Table #109 of fxr_top - RXHIARB_DBG_HQUE4
* Provides debug access into the head of holding queue 4. Note that byte-wise 
* operations are not supported by logic.
*/
#define FXR_RXHIARB_DBG_HQUE4						(FXR_RX_HIARB_CSRS + 0x000000042438)
#define FXR_RXHIARB_DBG_HQUE4_RESETCSR					0x0000000000000000ull
#define FXR_RXHIARB_DBG_HQUE4_RESERVED_63_42_SHIFT			42
#define FXR_RXHIARB_DBG_HQUE4_RESERVED_63_42_MASK			0x3FFFFFull
#define FXR_RXHIARB_DBG_HQUE4_RESERVED_63_42_SMASK			0xFFFFFC0000000000ull
#define FXR_RXHIARB_DBG_HQUE4_PRES_OUT_SHIFT				41
#define FXR_RXHIARB_DBG_HQUE4_PRES_OUT_MASK				0x1ull
#define FXR_RXHIARB_DBG_HQUE4_PRES_OUT_SMASK				0x20000000000ull
#define FXR_RXHIARB_DBG_HQUE4_LADDR_TLB_INDEX_ECC_SHIFT			35
#define FXR_RXHIARB_DBG_HQUE4_LADDR_TLB_INDEX_ECC_MASK			0x3Full
#define FXR_RXHIARB_DBG_HQUE4_LADDR_TLB_INDEX_ECC_SMASK			0x1F800000000ull
#define FXR_RXHIARB_DBG_HQUE4_TLB_INDEX_SHIFT				28
#define FXR_RXHIARB_DBG_HQUE4_TLB_INDEX_MASK				0x7Full
#define FXR_RXHIARB_DBG_HQUE4_TLB_INDEX_SMASK				0x7F0000000ull
#define FXR_RXHIARB_DBG_HQUE4_LADDR_SHIFT				16
#define FXR_RXHIARB_DBG_HQUE4_LADDR_MASK				0xFFFull
#define FXR_RXHIARB_DBG_HQUE4_LADDR_SMASK				0xFFF0000ull
#define FXR_RXHIARB_DBG_HQUE4_RESERVED_15_13_SHIFT			13
#define FXR_RXHIARB_DBG_HQUE4_RESERVED_15_13_MASK			0x7ull
#define FXR_RXHIARB_DBG_HQUE4_RESERVED_15_13_SMASK			0xE000ull
#define FXR_RXHIARB_DBG_HQUE4_HID_ECC_SHIFT				8
#define FXR_RXHIARB_DBG_HQUE4_HID_ECC_MASK				0x1Full
#define FXR_RXHIARB_DBG_HQUE4_HID_ECC_SMASK				0x1F00ull
#define FXR_RXHIARB_DBG_HQUE4_HID_SHIFT					0
#define FXR_RXHIARB_DBG_HQUE4_HID_MASK					0xFFull
#define FXR_RXHIARB_DBG_HQUE4_HID_SMASK					0xFFull
/*
* Table #110 of fxr_top - RXHIARB_DBG_HQUE5
* Provides debug access into the head of holding queue 5. Note that byte-wise 
* operations are not supported by logic.
*/
#define FXR_RXHIARB_DBG_HQUE5						(FXR_RX_HIARB_CSRS + 0x000000042440)
#define FXR_RXHIARB_DBG_HQUE5_RESETCSR					0x0000000000000000ull
#define FXR_RXHIARB_DBG_HQUE5_RESERVED_63_42_SHIFT			42
#define FXR_RXHIARB_DBG_HQUE5_RESERVED_63_42_MASK			0x3FFFFFull
#define FXR_RXHIARB_DBG_HQUE5_RESERVED_63_42_SMASK			0xFFFFFC0000000000ull
#define FXR_RXHIARB_DBG_HQUE5_PRES_OUT_SHIFT				41
#define FXR_RXHIARB_DBG_HQUE5_PRES_OUT_MASK				0x1ull
#define FXR_RXHIARB_DBG_HQUE5_PRES_OUT_SMASK				0x20000000000ull
#define FXR_RXHIARB_DBG_HQUE5_LADDR_TLB_INDEX_ECC_SHIFT			35
#define FXR_RXHIARB_DBG_HQUE5_LADDR_TLB_INDEX_ECC_MASK			0x3Full
#define FXR_RXHIARB_DBG_HQUE5_LADDR_TLB_INDEX_ECC_SMASK			0x1F800000000ull
#define FXR_RXHIARB_DBG_HQUE5_TLB_INDEX_SHIFT				28
#define FXR_RXHIARB_DBG_HQUE5_TLB_INDEX_MASK				0x7Full
#define FXR_RXHIARB_DBG_HQUE5_TLB_INDEX_SMASK				0x7F0000000ull
#define FXR_RXHIARB_DBG_HQUE5_LADDR_SHIFT				16
#define FXR_RXHIARB_DBG_HQUE5_LADDR_MASK				0xFFFull
#define FXR_RXHIARB_DBG_HQUE5_LADDR_SMASK				0xFFF0000ull
#define FXR_RXHIARB_DBG_HQUE5_RESERVED_15_13_SHIFT			13
#define FXR_RXHIARB_DBG_HQUE5_RESERVED_15_13_MASK			0x7ull
#define FXR_RXHIARB_DBG_HQUE5_RESERVED_15_13_SMASK			0xE000ull
#define FXR_RXHIARB_DBG_HQUE5_HID_ECC_SHIFT				8
#define FXR_RXHIARB_DBG_HQUE5_HID_ECC_MASK				0x1Full
#define FXR_RXHIARB_DBG_HQUE5_HID_ECC_SMASK				0x1F00ull
#define FXR_RXHIARB_DBG_HQUE5_HID_SHIFT					0
#define FXR_RXHIARB_DBG_HQUE5_HID_MASK					0xFFull
#define FXR_RXHIARB_DBG_HQUE5_HID_SMASK					0xFFull
/*
* Table #111 of fxr_top - RXHIARB_DBG_HQUE6
* Provides debug access into the head of holding queue 6. Note that byte-wise 
* operations are not supported by logic.
*/
#define FXR_RXHIARB_DBG_HQUE6						(FXR_RX_HIARB_CSRS + 0x000000042448)
#define FXR_RXHIARB_DBG_HQUE6_RESETCSR					0x0000000000000000ull
#define FXR_RXHIARB_DBG_HQUE6_RESERVED_63_42_SHIFT			42
#define FXR_RXHIARB_DBG_HQUE6_RESERVED_63_42_MASK			0x3FFFFFull
#define FXR_RXHIARB_DBG_HQUE6_RESERVED_63_42_SMASK			0xFFFFFC0000000000ull
#define FXR_RXHIARB_DBG_HQUE6_PRES_OUT_SHIFT				41
#define FXR_RXHIARB_DBG_HQUE6_PRES_OUT_MASK				0x1ull
#define FXR_RXHIARB_DBG_HQUE6_PRES_OUT_SMASK				0x20000000000ull
#define FXR_RXHIARB_DBG_HQUE6_LADDR_TLB_INDEX_ECC_SHIFT			35
#define FXR_RXHIARB_DBG_HQUE6_LADDR_TLB_INDEX_ECC_MASK			0x3Full
#define FXR_RXHIARB_DBG_HQUE6_LADDR_TLB_INDEX_ECC_SMASK			0x1F800000000ull
#define FXR_RXHIARB_DBG_HQUE6_TLB_INDEX_SHIFT				28
#define FXR_RXHIARB_DBG_HQUE6_TLB_INDEX_MASK				0x7Full
#define FXR_RXHIARB_DBG_HQUE6_TLB_INDEX_SMASK				0x7F0000000ull
#define FXR_RXHIARB_DBG_HQUE6_LADDR_SHIFT				16
#define FXR_RXHIARB_DBG_HQUE6_LADDR_MASK				0xFFFull
#define FXR_RXHIARB_DBG_HQUE6_LADDR_SMASK				0xFFF0000ull
#define FXR_RXHIARB_DBG_HQUE6_RESERVED_15_13_SHIFT			13
#define FXR_RXHIARB_DBG_HQUE6_RESERVED_15_13_MASK			0x7ull
#define FXR_RXHIARB_DBG_HQUE6_RESERVED_15_13_SMASK			0xE000ull
#define FXR_RXHIARB_DBG_HQUE6_HID_ECC_SHIFT				8
#define FXR_RXHIARB_DBG_HQUE6_HID_ECC_MASK				0x1Full
#define FXR_RXHIARB_DBG_HQUE6_HID_ECC_SMASK				0x1F00ull
#define FXR_RXHIARB_DBG_HQUE6_HID_SHIFT					0
#define FXR_RXHIARB_DBG_HQUE6_HID_MASK					0xFFull
#define FXR_RXHIARB_DBG_HQUE6_HID_SMASK					0xFFull
/*
* Table #112 of fxr_top - RXHIARB_DBG_HQUE7
* Provides debug access into the head of holding queue 7. Note that byte-wise 
* operations are not supported by logic. 
*/
#define FXR_RXHIARB_DBG_HQUE7						(FXR_RX_HIARB_CSRS + 0x000000042450)
#define FXR_RXHIARB_DBG_HQUE7_RESETCSR					0x0000000000000000ull
#define FXR_RXHIARB_DBG_HQUE7_RESERVED_63_42_SHIFT			42
#define FXR_RXHIARB_DBG_HQUE7_RESERVED_63_42_MASK			0x3FFFFFull
#define FXR_RXHIARB_DBG_HQUE7_RESERVED_63_42_SMASK			0xFFFFFC0000000000ull
#define FXR_RXHIARB_DBG_HQUE7_PRES_OUT_SHIFT				41
#define FXR_RXHIARB_DBG_HQUE7_PRES_OUT_MASK				0x1ull
#define FXR_RXHIARB_DBG_HQUE7_PRES_OUT_SMASK				0x20000000000ull
#define FXR_RXHIARB_DBG_HQUE7_LADDR_TLB_INDEX_ECC_SHIFT			35
#define FXR_RXHIARB_DBG_HQUE7_LADDR_TLB_INDEX_ECC_MASK			0x3Full
#define FXR_RXHIARB_DBG_HQUE7_LADDR_TLB_INDEX_ECC_SMASK			0x1F800000000ull
#define FXR_RXHIARB_DBG_HQUE7_TLB_INDEX_SHIFT				28
#define FXR_RXHIARB_DBG_HQUE7_TLB_INDEX_MASK				0x7Full
#define FXR_RXHIARB_DBG_HQUE7_TLB_INDEX_SMASK				0x7F0000000ull
#define FXR_RXHIARB_DBG_HQUE7_LADDR_SHIFT				16
#define FXR_RXHIARB_DBG_HQUE7_LADDR_MASK				0xFFFull
#define FXR_RXHIARB_DBG_HQUE7_LADDR_SMASK				0xFFF0000ull
#define FXR_RXHIARB_DBG_HQUE7_RESERVED_15_13_SHIFT			13
#define FXR_RXHIARB_DBG_HQUE7_RESERVED_15_13_MASK			0x7ull
#define FXR_RXHIARB_DBG_HQUE7_RESERVED_15_13_SMASK			0xE000ull
#define FXR_RXHIARB_DBG_HQUE7_HID_ECC_SHIFT				8
#define FXR_RXHIARB_DBG_HQUE7_HID_ECC_MASK				0x1Full
#define FXR_RXHIARB_DBG_HQUE7_HID_ECC_SMASK				0x1F00ull
#define FXR_RXHIARB_DBG_HQUE7_HID_SHIFT					0
#define FXR_RXHIARB_DBG_HQUE7_HID_MASK					0xFFull
#define FXR_RXHIARB_DBG_HQUE7_HID_SMASK					0xFFull
/*
* Table #113 of fxr_top - RXHIARB_DBG_HQUE8
* Provides debug access into the head of holding queue 8. Note that byte-wise 
* operations are not supported by logic.
*/
#define FXR_RXHIARB_DBG_HQUE8						(FXR_RX_HIARB_CSRS + 0x000000042458)
#define FXR_RXHIARB_DBG_HQUE8_RESETCSR					0x0000000000000000ull
#define FXR_RXHIARB_DBG_HQUE8_RESERVED_63_42_SHIFT			42
#define FXR_RXHIARB_DBG_HQUE8_RESERVED_63_42_MASK			0x3FFFFFull
#define FXR_RXHIARB_DBG_HQUE8_RESERVED_63_42_SMASK			0xFFFFFC0000000000ull
#define FXR_RXHIARB_DBG_HQUE8_PRES_OUT_SHIFT				41
#define FXR_RXHIARB_DBG_HQUE8_PRES_OUT_MASK				0x1ull
#define FXR_RXHIARB_DBG_HQUE8_PRES_OUT_SMASK				0x20000000000ull
#define FXR_RXHIARB_DBG_HQUE8_LADDR_TLB_INDEX_ECC_SHIFT			35
#define FXR_RXHIARB_DBG_HQUE8_LADDR_TLB_INDEX_ECC_MASK			0x3Full
#define FXR_RXHIARB_DBG_HQUE8_LADDR_TLB_INDEX_ECC_SMASK			0x1F800000000ull
#define FXR_RXHIARB_DBG_HQUE8_TLB_INDEX_SHIFT				28
#define FXR_RXHIARB_DBG_HQUE8_TLB_INDEX_MASK				0x7Full
#define FXR_RXHIARB_DBG_HQUE8_TLB_INDEX_SMASK				0x7F0000000ull
#define FXR_RXHIARB_DBG_HQUE8_LADDR_SHIFT				16
#define FXR_RXHIARB_DBG_HQUE8_LADDR_MASK				0xFFFull
#define FXR_RXHIARB_DBG_HQUE8_LADDR_SMASK				0xFFF0000ull
#define FXR_RXHIARB_DBG_HQUE8_RESERVED_15_13_SHIFT			13
#define FXR_RXHIARB_DBG_HQUE8_RESERVED_15_13_MASK			0x7ull
#define FXR_RXHIARB_DBG_HQUE8_RESERVED_15_13_SMASK			0xE000ull
#define FXR_RXHIARB_DBG_HQUE8_HID_ECC_SHIFT				8
#define FXR_RXHIARB_DBG_HQUE8_HID_ECC_MASK				0x1Full
#define FXR_RXHIARB_DBG_HQUE8_HID_ECC_SMASK				0x1F00ull
#define FXR_RXHIARB_DBG_HQUE8_HID_SHIFT					0
#define FXR_RXHIARB_DBG_HQUE8_HID_MASK					0xFFull
#define FXR_RXHIARB_DBG_HQUE8_HID_SMASK					0xFFull
/*
* Table #114 of fxr_top - RXHIARB_DBG_HQUE0_PVECT_LOW
* Provides debug access into the lower half of the hque present state vector. 
* Note that byte-wise operations are not supported by logic. Note that this is 
* not in complete sync with the MTLB's pvect since it only needs to be accurate 
* for the requests currently residing in the corresponding holding queue. The 
* MTLB's version is considered to be the golden copy.
*/
#define FXR_RXHIARB_DBG_HQUE0_PVECT_LOW					(FXR_RX_HIARB_CSRS + 0x000000042460)
#define FXR_RXHIARB_DBG_HQUE0_PVECT_LOW_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_HQUE0_PVECT_LOW_VECT_LOW_SHIFT			0
#define FXR_RXHIARB_DBG_HQUE0_PVECT_LOW_VECT_LOW_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_HQUE0_PVECT_LOW_VECT_LOW_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #115 of fxr_top - RXHIARB_DBG_HQUE0_PVECT_HIGH
* Provides debug access into the upper half of the hque present state vector. 
* Note that byte-wise operations are not supported by logic. Note that this is 
* not in complete sync with the MTLB's pvect since it only needs to be accurate 
* for the requests currently residing in the corresponding holding queue. The 
* MTLB's version is considered to be the golden copy,
*/
#define FXR_RXHIARB_DBG_HQUE0_PVECT_HIGH				(FXR_RX_HIARB_CSRS + 0x000000042468)
#define FXR_RXHIARB_DBG_HQUE0_PVECT_HIGH_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_HQUE0_PVECT_HIGH_VECT_HI_SHIFT			0
#define FXR_RXHIARB_DBG_HQUE0_PVECT_HIGH_VECT_HI_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_HQUE0_PVECT_HIGH_VECT_HI_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #116 of fxr_top - RXHIARB_DBG_HQUE1_PVECT_LOW
* Provides debug access into the lower half of the hque present state vector. 
* Note that byte-wise operations are not supported by logic. Note that this is 
* not in complete sync with the MTLB's pvect since it only needs to be accurate 
* for the requests currently residing in the corresponding holding queue. The 
* MTLB's version is considered to be the golden copy.
*/
#define FXR_RXHIARB_DBG_HQUE1_PVECT_LOW					(FXR_RX_HIARB_CSRS + 0x000000042470)
#define FXR_RXHIARB_DBG_HQUE1_PVECT_LOW_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_HQUE1_PVECT_LOW_VECT_LOW_SHIFT			0
#define FXR_RXHIARB_DBG_HQUE1_PVECT_LOW_VECT_LOW_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_HQUE1_PVECT_LOW_VECT_LOW_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #117 of fxr_top - RXHIARB_DBG_HQUE1_PVECT_HIGH
* Provides debug access into the upper half of the hque present state vector. 
* Note that byte-wise operations are not supported by logic. Note that this is 
* not in complete sync with the MTLB's pvect since it only needs to be accurate 
* for the requests currently residing in the corresponding holding queue. The 
* MTLB's version is considered to be the golden copy.
*/
#define FXR_RXHIARB_DBG_HQUE1_PVECT_HIGH				(FXR_RX_HIARB_CSRS + 0x000000042478)
#define FXR_RXHIARB_DBG_HQUE1_PVECT_HIGH_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_HQUE1_PVECT_HIGH_VECT_HI_SHIFT			0
#define FXR_RXHIARB_DBG_HQUE1_PVECT_HIGH_VECT_HI_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_HQUE1_PVECT_HIGH_VECT_HI_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #118 of fxr_top - RXHIARB_DBG_HQUE2_PVECT_LOW
* Provides debug access into the lower half of the hque present state vector. 
* Note that byte-wise operations are not supported by logic. Note that this is 
* not in complete sync with the MTLB's pvect since it only needs to be accurate 
* for the requests currently residing in the corresponding holding queue. The 
* MTLB's version is considered to be the golden copy.
*/
#define FXR_RXHIARB_DBG_HQUE2_PVECT_LOW					(FXR_RX_HIARB_CSRS + 0x000000042480)
#define FXR_RXHIARB_DBG_HQUE2_PVECT_LOW_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_HQUE2_PVECT_LOW_VECT_LOW_SHIFT			0
#define FXR_RXHIARB_DBG_HQUE2_PVECT_LOW_VECT_LOW_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_HQUE2_PVECT_LOW_VECT_LOW_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #119 of fxr_top - RXHIARB_DBG_HQUE2_PVECT_HIGH
* Provides debug access into the upper half of the hque present state vector. 
* Note that byte-wise operations are not supported by logic. Note that this is 
* not in complete sync with the MTLB's pvect since it only needs to be accurate 
* for the requests currently residing in the corresponding holding queue. The 
* MTLB's version is considered to be the golden copy.
*/
#define FXR_RXHIARB_DBG_HQUE2_PVECT_HIGH				(FXR_RX_HIARB_CSRS + 0x000000042488)
#define FXR_RXHIARB_DBG_HQUE2_PVECT_HIGH_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_HQUE2_PVECT_HIGH_VECT_HI_SHIFT			0
#define FXR_RXHIARB_DBG_HQUE2_PVECT_HIGH_VECT_HI_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_HQUE2_PVECT_HIGH_VECT_HI_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #120 of fxr_top - RXHIARB_DBG_HQUE3_PVECT_LOW
* Provides debug access into the lower half of the hque present state vector. 
* Note that byte-wise operations are not supported by logic. Note that this is 
* not in complete sync with the MTLB's pvect since it only needs to be accurate 
* for the requests currently residing in the corresponding holding queue. The 
* MTLB's version is considered to be the golden copy.
*/
#define FXR_RXHIARB_DBG_HQUE3_PVECT_LOW					(FXR_RX_HIARB_CSRS + 0x000000042490)
#define FXR_RXHIARB_DBG_HQUE3_PVECT_LOW_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_HQUE3_PVECT_LOW_VECT_LOW_SHIFT			0
#define FXR_RXHIARB_DBG_HQUE3_PVECT_LOW_VECT_LOW_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_HQUE3_PVECT_LOW_VECT_LOW_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #121 of fxr_top - RXHIARB_DBG_HQUE3_PVECT_HIGH
* Provides debug access into the upper half of the hque present state vector. 
* Note that byte-wise operations are not supported by logic. Note that this is 
* not in complete sync with the MTLB's pvect since it only needs to be accurate 
* for the requests currently residing in the corresponding holding queue. The 
* MTLB's version is considered to be the golden copy.
*/
#define FXR_RXHIARB_DBG_HQUE3_PVECT_HIGH				(FXR_RX_HIARB_CSRS + 0x000000042498)
#define FXR_RXHIARB_DBG_HQUE3_PVECT_HIGH_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_HQUE3_PVECT_HIGH_VECT_HI_SHIFT			0
#define FXR_RXHIARB_DBG_HQUE3_PVECT_HIGH_VECT_HI_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_HQUE3_PVECT_HIGH_VECT_HI_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #122 of fxr_top - RXHIARB_DBG_HQUE4_PVECT_LOW
* Provides debug access into the lower half of the hque present state vector. 
* Note that byte-wise operations are not supported by logic. Note that this is 
* not in complete sync with the MTLB's pvect since it only needs to be accurate 
* for the requests currently residing in the corresponding holding queue. The 
* MTLB's version is considered to be the golden copy
*/
#define FXR_RXHIARB_DBG_HQUE4_PVECT_LOW					(FXR_RX_HIARB_CSRS + 0x0000000424A0)
#define FXR_RXHIARB_DBG_HQUE4_PVECT_LOW_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_HQUE4_PVECT_LOW_VECT_LOW_SHIFT			0
#define FXR_RXHIARB_DBG_HQUE4_PVECT_LOW_VECT_LOW_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_HQUE4_PVECT_LOW_VECT_LOW_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #123 of fxr_top - RXHIARB_DBG_HQUE4_PVECT_HIGH
* Provides debug access into the upper half of the hque present state vector. 
* Note that byte-wise operations are not supported by logic. Note that this is 
* not in complete sync with the MTLB's pvect since it only needs to be accurate 
* for the requests currently residing in the corresponding holding queue. The 
* MTLB's version is considered to be the golden copy.
*/
#define FXR_RXHIARB_DBG_HQUE4_PVECT_HIGH				(FXR_RX_HIARB_CSRS + 0x0000000424A8)
#define FXR_RXHIARB_DBG_HQUE4_PVECT_HIGH_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_HQUE4_PVECT_HIGH_VECT_HI_SHIFT			0
#define FXR_RXHIARB_DBG_HQUE4_PVECT_HIGH_VECT_HI_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_HQUE4_PVECT_HIGH_VECT_HI_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #124 of fxr_top - RXHIARB_DBG_HQUE5_PVECT_LOW
* Provides debug access into the lower half of the hque present state vector. 
* Note that byte-wise operations are not supported by logic. Note that this is 
* not in complete sync with the MTLB's pvect since it only needs to be accurate 
* for the requests currently residing in the corresponding holding queue. The 
* MTLB's version is considered to be the golden copy.
*/
#define FXR_RXHIARB_DBG_HQUE5_PVECT_LOW					(FXR_RX_HIARB_CSRS + 0x0000000424B0)
#define FXR_RXHIARB_DBG_HQUE5_PVECT_LOW_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_HQUE5_PVECT_LOW_VECT_LOW_SHIFT			0
#define FXR_RXHIARB_DBG_HQUE5_PVECT_LOW_VECT_LOW_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_HQUE5_PVECT_LOW_VECT_LOW_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #125 of fxr_top - RXHIARB_DBG_HQUE5_PVECT_HIGH
* Provides debug access into the upper half of the hque present state vector. 
* Note that byte-wise operations are not supported by logic. Note that this is 
* not in complete sync with the MTLB's pvect since it only needs to be accurate 
* for the requests currently residing in the corresponding holding queue. The 
* MTLB's version is considered to be the golden copy,
*/
#define FXR_RXHIARB_DBG_HQUE5_PVECT_HIGH				(FXR_RX_HIARB_CSRS + 0x0000000424B8)
#define FXR_RXHIARB_DBG_HQUE5_PVECT_HIGH_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_HQUE5_PVECT_HIGH_VECT_HI_SHIFT			0
#define FXR_RXHIARB_DBG_HQUE5_PVECT_HIGH_VECT_HI_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_HQUE5_PVECT_HIGH_VECT_HI_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #126 of fxr_top - RXHIARB_DBG_HQUE6_PVECT_LOW
* Provides debug access into the lower half of the hque present state vector. 
* Note that byte-wise operations are not supported by logic. Note that this is 
* not in complete sync with the MTLB's pvect since it only needs to be accurate 
* for the requests currently residing in the corresponding holding queue. The 
* MTLB's version is considered to be the golden copy.
*/
#define FXR_RXHIARB_DBG_HQUE6_PVECT_LOW					(FXR_RX_HIARB_CSRS + 0x0000000424C0)
#define FXR_RXHIARB_DBG_HQUE6_PVECT_LOW_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_HQUE6_PVECT_LOW_VECT_LOW_SHIFT			0
#define FXR_RXHIARB_DBG_HQUE6_PVECT_LOW_VECT_LOW_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_HQUE6_PVECT_LOW_VECT_LOW_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #127 of fxr_top - RXHIARB_DBG_HQUE6_PVECT_HIGH
* Provides debug access into the upper half of the hque present state vector. 
* Note that byte-wise operations are not supported by logic. Note that this is 
* not in complete sync with the MTLB's pvect since it only needs to be accurate 
* for the requests currently residing in the corresponding holding queue. The 
* MTLB's version is considered to be the golden copy. 
*/
#define FXR_RXHIARB_DBG_HQUE6_PVECT_HIGH				(FXR_RX_HIARB_CSRS + 0x0000000424C8)
#define FXR_RXHIARB_DBG_HQUE6_PVECT_HIGH_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_HQUE6_PVECT_HIGH_VECT_HI_SHIFT			0
#define FXR_RXHIARB_DBG_HQUE6_PVECT_HIGH_VECT_HI_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_HQUE6_PVECT_HIGH_VECT_HI_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #128 of fxr_top - RXHIARB_DBG_HQUE7_PVECT_LOW
* Provides debug access into the lower half of the hque present state vector. 
* Note that byte-wise operations are not supported by logic. Note that this is 
* not in complete sync with the MTLB's pvect since it only needs to be accurate 
* for the requests currently residing in the corresponding holding queue. The 
* MTLB's version is considered to be the golden copy.
*/
#define FXR_RXHIARB_DBG_HQUE7_PVECT_LOW					(FXR_RX_HIARB_CSRS + 0x0000000424D0)
#define FXR_RXHIARB_DBG_HQUE7_PVECT_LOW_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_HQUE7_PVECT_LOW_VECT_LOW_SHIFT			0
#define FXR_RXHIARB_DBG_HQUE7_PVECT_LOW_VECT_LOW_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_HQUE7_PVECT_LOW_VECT_LOW_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #129 of fxr_top - RXHIARB_DBG_HQUE7_PVECT_HIGH
* Provides debug access into the upper half of the hque present state vector. 
* Note that byte-wise operations are not supported by logic. Note that this is 
* not in complete sync with the MTLB's pvect since it only needs to be accurate 
* for the requests currently residing in the corresponding holding queue. The 
* MTLB's version is considered to be the golden copy.
*/
#define FXR_RXHIARB_DBG_HQUE7_PVECT_HIGH				(FXR_RX_HIARB_CSRS + 0x0000000424D8)
#define FXR_RXHIARB_DBG_HQUE7_PVECT_HIGH_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_HQUE7_PVECT_HIGH_VECT_HI_SHIFT			0
#define FXR_RXHIARB_DBG_HQUE7_PVECT_HIGH_VECT_HI_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_HQUE7_PVECT_HIGH_VECT_HI_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #130 of fxr_top - RXHIARB_DBG_HQUE8_PVECT_LOW
* Provides debug access into the lower half of the hque present state vector. 
* Note that byte-wise operations are not supported by logic. Note that this is 
* not in complete sync with the MTLB's pvect since it only needs to be accurate 
* for the requests currently residing in the corresponding holding queue. The 
* MTLB's version is considered to be the golden copy.
*/
#define FXR_RXHIARB_DBG_HQUE8_PVECT_LOW					(FXR_RX_HIARB_CSRS + 0x0000000424E0)
#define FXR_RXHIARB_DBG_HQUE8_PVECT_LOW_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_HQUE8_PVECT_LOW_VECT_LOW_SHIFT			0
#define FXR_RXHIARB_DBG_HQUE8_PVECT_LOW_VECT_LOW_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_HQUE8_PVECT_LOW_VECT_LOW_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #131 of fxr_top - RXHIARB_DBG_HQUE8_PVECT_HIGH
* Provides debug access into the upper half of the hque present state vector. 
* Note that byte-wise operations are not supported by logic. Note that this is 
* not in complete sync with the MTLB's pvect since it only needs to be accurate 
* for the requests currently residing in the corresponding holding queue. The 
* MTLB's version is considered to be the golden copy. 
*/
#define FXR_RXHIARB_DBG_HQUE8_PVECT_HIGH				(FXR_RX_HIARB_CSRS + 0x0000000424E8)
#define FXR_RXHIARB_DBG_HQUE8_PVECT_HIGH_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_HQUE8_PVECT_HIGH_VECT_HI_SHIFT			0
#define FXR_RXHIARB_DBG_HQUE8_PVECT_HIGH_VECT_HI_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_HQUE8_PVECT_HIGH_VECT_HI_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #132 of fxr_top - RXHIARB_DBG_ARB_IN_STATE
* Provides read-only debug access, allowing some insight into queue state in 
* case a lockup condition occurs.
*/
#define FXR_RXHIARB_DBG_ARB_IN_STATE					(FXR_RX_HIARB_CSRS + 0x000000046000)
#define FXR_RXHIARB_DBG_ARB_IN_STATE_RESETCSR				0x1FFF000000000000ull
#define FXR_RXHIARB_DBG_ARB_IN_STATE_RESERVED_63_61_SHIFT		61
#define FXR_RXHIARB_DBG_ARB_IN_STATE_RESERVED_63_61_MASK		0x7ull
#define FXR_RXHIARB_DBG_ARB_IN_STATE_RESERVED_63_61_SMASK		0xE000000000000000ull
#define FXR_RXHIARB_DBG_ARB_IN_STATE_HP_EMPTY_SHIFT			60
#define FXR_RXHIARB_DBG_ARB_IN_STATE_HP_EMPTY_MASK			0x1ull
#define FXR_RXHIARB_DBG_ARB_IN_STATE_HP_EMPTY_SMASK			0x1000000000000000ull
#define FXR_RXHIARB_DBG_ARB_IN_STATE_ET_EMPTY_SHIFT			59
#define FXR_RXHIARB_DBG_ARB_IN_STATE_ET_EMPTY_MASK			0x1ull
#define FXR_RXHIARB_DBG_ARB_IN_STATE_ET_EMPTY_SMASK			0x800000000000000ull
#define FXR_RXHIARB_DBG_ARB_IN_STATE_CID_EMPTY_SHIFT			58
#define FXR_RXHIARB_DBG_ARB_IN_STATE_CID_EMPTY_MASK			0x1ull
#define FXR_RXHIARB_DBG_ARB_IN_STATE_CID_EMPTY_SMASK			0x400000000000000ull
#define FXR_RXHIARB_DBG_ARB_IN_STATE_E2E_EMPTY_SHIFT			57
#define FXR_RXHIARB_DBG_ARB_IN_STATE_E2E_EMPTY_MASK			0x1ull
#define FXR_RXHIARB_DBG_ARB_IN_STATE_E2E_EMPTY_SMASK			0x200000000000000ull
#define FXR_RXHIARB_DBG_ARB_IN_STATE_DMA_EMPTY_SHIFT			48
#define FXR_RXHIARB_DBG_ARB_IN_STATE_DMA_EMPTY_MASK			0x1FFull
#define FXR_RXHIARB_DBG_ARB_IN_STATE_DMA_EMPTY_SMASK			0x1FF000000000000ull
#define FXR_RXHIARB_DBG_ARB_IN_STATE_RESERVED_47_SHIFT			47
#define FXR_RXHIARB_DBG_ARB_IN_STATE_RESERVED_47_MASK			0x1ull
#define FXR_RXHIARB_DBG_ARB_IN_STATE_RESERVED_47_SMASK			0x800000000000ull
#define FXR_RXHIARB_DBG_ARB_IN_STATE_ARB_ACK_SHIFT			42
#define FXR_RXHIARB_DBG_ARB_IN_STATE_ARB_ACK_MASK			0x1Full
#define FXR_RXHIARB_DBG_ARB_IN_STATE_ARB_ACK_SMASK			0x7C0000000000ull
#define FXR_RXHIARB_DBG_ARB_IN_STATE_ARB_GNT_SHIFT			37
#define FXR_RXHIARB_DBG_ARB_IN_STATE_ARB_GNT_MASK			0x1Full
#define FXR_RXHIARB_DBG_ARB_IN_STATE_ARB_GNT_SMASK			0x3E000000000ull
#define FXR_RXHIARB_DBG_ARB_IN_STATE_ARB_REQ_SHIFT			32
#define FXR_RXHIARB_DBG_ARB_IN_STATE_ARB_REQ_MASK			0x1Full
#define FXR_RXHIARB_DBG_ARB_IN_STATE_ARB_REQ_SMASK			0x1F00000000ull
#define FXR_RXHIARB_DBG_ARB_IN_STATE_RESERVED_31_18_SHIFT		18
#define FXR_RXHIARB_DBG_ARB_IN_STATE_RESERVED_31_18_MASK		0x3FFFull
#define FXR_RXHIARB_DBG_ARB_IN_STATE_RESERVED_31_18_SMASK		0xFFFC0000ull
#define FXR_RXHIARB_DBG_ARB_IN_STATE_DMA_ARB_GNT_SHIFT			9
#define FXR_RXHIARB_DBG_ARB_IN_STATE_DMA_ARB_GNT_MASK			0x1FFull
#define FXR_RXHIARB_DBG_ARB_IN_STATE_DMA_ARB_GNT_SMASK			0x3FE00ull
#define FXR_RXHIARB_DBG_ARB_IN_STATE_DMA_ARB_REQ_SHIFT			0
#define FXR_RXHIARB_DBG_ARB_IN_STATE_DMA_ARB_REQ_MASK			0x1FFull
#define FXR_RXHIARB_DBG_ARB_IN_STATE_DMA_ARB_REQ_SMASK			0x1FFull
/*
* Table #133 of fxr_top - RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3
* Provides read-only debug access, allowing some insight into current holding 
* queue state.
*/
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3				(FXR_RX_HIARB_CSRS + 0x000000046008)
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_RESETCSR			0x2222222200000000ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_RSVD3_SHIFT		60
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_RSVD3_MASK		0xFull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_RSVD3_SMASK		0xF000000000000000ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_RSVD2_SHIFT		56
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_RSVD2_MASK		0xFull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_RSVD2_SMASK		0xF00000000000000ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_RSVD1_SHIFT		52
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_RSVD1_MASK		0xFull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_RSVD1_SMASK		0xF0000000000000ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_RSVD0_SHIFT		48
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_RSVD0_MASK		0xFull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_RSVD0_SMASK		0xF000000000000ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_WM3_SHIFT		44
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_WM3_MASK		0xFull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_WM3_SMASK		0xF00000000000ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_WM2_SHIFT		40
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_WM2_MASK		0xFull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_WM2_SMASK		0xF0000000000ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_WM1_SHIFT		36
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_WM1_MASK		0xFull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_WM1_SMASK		0xF000000000ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_WM0_SHIFT		32
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_WM0_MASK		0xFull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_WM0_SMASK		0xF00000000ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_DEPTH3_SHIFT		24
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_DEPTH3_MASK		0xFFull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_DEPTH3_SMASK		0xFF000000ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_DEPTH2_SHIFT		16
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_DEPTH2_MASK		0xFFull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_DEPTH2_SMASK		0xFF0000ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_DEPTH1_SHIFT		8
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_DEPTH1_MASK		0xFFull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_DEPTH1_SMASK		0xFF00ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_DEPTH0_SHIFT		0
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_DEPTH0_MASK		0xFFull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_0_3_HQUE_DEPTH0_SMASK		0xFFull
/*
* Table #134 of fxr_top - RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7
* Provides read-only debug access, allowing some insight into current holding 
* queue state.
*/
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7				(FXR_RX_HIARB_CSRS + 0x000000046010)
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_RESETCSR			0x2222222200000000ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_RSVD7_SHIFT		60
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_RSVD7_MASK		0xFull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_RSVD7_SMASK		0xF000000000000000ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_RSVD6_SHIFT		56
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_RSVD6_MASK		0xFull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_RSVD6_SMASK		0xF00000000000000ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_RSVD5_SHIFT		52
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_RSVD5_MASK		0xFull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_RSVD5_SMASK		0xF0000000000000ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_RSVD4_SHIFT		48
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_RSVD4_MASK		0xFull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_RSVD4_SMASK		0xF000000000000ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_WM7_SHIFT		44
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_WM7_MASK		0xFull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_WM7_SMASK		0xF00000000000ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_WM6_SHIFT		40
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_WM6_MASK		0xFull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_WM6_SMASK		0xF0000000000ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_WM5_SHIFT		36
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_WM5_MASK		0xFull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_WM5_SMASK		0xF000000000ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_WM4_SHIFT		32
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_WM4_MASK		0xFull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_WM4_SMASK		0xF00000000ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_DEPTH7_SHIFT		24
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_DEPTH7_MASK		0xFFull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_DEPTH7_SMASK		0xFF000000ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_DEPTH6_SHIFT		16
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_DEPTH6_MASK		0xFFull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_DEPTH6_SMASK		0xFF0000ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_DEPTH5_SHIFT		8
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_DEPTH5_MASK		0xFFull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_DEPTH5_SMASK		0xFF00ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_DEPTH4_SHIFT		0
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_DEPTH4_MASK		0xFFull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_4_7_HQUE_DEPTH4_SMASK		0xFFull
/*
* Table #135 of fxr_top - RXHIARB_DBG_ARB_IN_HQUE_LVL_8M
* Provides read-only debug access, allowing some insight into current holding 
* queue state..
*/
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_8M				(FXR_RX_HIARB_CSRS + 0x000000046018)
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_8M_RESETCSR			0x0000000000702200ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_8M_RESERVED_63_26_SHIFT		26
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_8M_RESERVED_63_26_MASK		0x3FFFFFFFFFull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_8M_RESERVED_63_26_SMASK		0xFFFFFFFFFC000000ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_8M_MTLB_STALL_SHIFT		25
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_8M_MTLB_STALL_MASK		0x1ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_8M_MTLB_STALL_SMASK		0x2000000ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_8M_PCB_STALL_SHIFT		24
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_8M_PCB_STALL_MASK		0x1ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_8M_PCB_STALL_SMASK		0x1000000ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_8M_HIDS_AVAIL_SHIFT		16
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_8M_HIDS_AVAIL_MASK		0xFFull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_8M_HIDS_AVAIL_SMASK		0xFF0000ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_8M_HQUE_RSVD8_SHIFT		12
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_8M_HQUE_RSVD8_MASK		0xFull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_8M_HQUE_RSVD8_SMASK		0xF000ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_8M_HQUE_WM8_SHIFT		8
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_8M_HQUE_WM8_MASK		0xFull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_8M_HQUE_WM8_SMASK		0xF00ull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_8M_HQUE_DEPTH8_SHIFT		0
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_8M_HQUE_DEPTH8_MASK		0xFFull
#define FXR_RXHIARB_DBG_ARB_IN_HQUE_LVL_8M_HQUE_DEPTH8_SMASK		0xFFull
/*
* Table #136 of fxr_top - RXHIARB_DBG_ARB_OUT_STATE
* Provides read-only debug access, allowing some insight into the output arbiter 
* state.
*/
#define FXR_RXHIARB_DBG_ARB_OUT_STATE					(FXR_RX_HIARB_CSRS + 0x000000047000)
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_RESERVED_63_49_SHIFT		49
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_RESERVED_63_49_MASK		0x7FFFull
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_RESERVED_63_49_SMASK		0xFFFE000000000000ull
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_FLUSH_BUSY_SHIFT			48
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_FLUSH_BUSY_MASK			0x1ull
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_FLUSH_BUSY_SMASK			0x1000000000000ull
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_RESERVED_47_45_SHIFT		45
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_RESERVED_47_45_MASK		0x7ull
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_RESERVED_47_45_SMASK		0xE00000000000ull
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_NACK_FIFO_CNT_SHIFT		41
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_NACK_FIFO_CNT_MASK		0xFull
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_NACK_FIFO_CNT_SMASK		0x1E0000000000ull
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_NACK_STALL_SHIFT			40
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_NACK_STALL_MASK			0x1ull
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_NACK_STALL_SMASK			0x10000000000ull
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_RESERVED_39_38_SHIFT		38
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_RESERVED_39_38_MASK		0x3ull
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_RESERVED_39_38_SMASK		0xC000000000ull
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_HI_FIFO_CNT_SHIFT			33
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_HI_FIFO_CNT_MASK			0x1Full
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_HI_FIFO_CNT_SMASK			0x3E00000000ull
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_HI_FIFO_STALL_SHIFT		32
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_HI_FIFO_STALL_MASK		0x1ull
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_HI_FIFO_STALL_SMASK		0x100000000ull
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_RESERVED_31_27_SHIFT		27
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_RESERVED_31_27_MASK		0x1Full
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_RESERVED_31_27_SMASK		0xF8000000ull
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_ARB_ACK_SHIFT			18
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_ARB_ACK_MASK			0x1FFull
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_ARB_ACK_SMASK			0x7FC0000ull
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_ARB_GNT_SHIFT			9
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_ARB_GNT_MASK			0x1FFull
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_ARB_GNT_SMASK			0x3FE00ull
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_ARB_REQ_SHIFT			0
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_ARB_REQ_MASK			0x1FFull
#define FXR_RXHIARB_DBG_ARB_OUT_STATE_ARB_REQ_SMASK			0x1FFull
/*
* Table #137 of fxr_top - RXHIARB_DBG_SLRSP_STATE
* Provides read-only debug access, allowing some insight into the slow response 
* path's state.
*/
#define FXR_RXHIARB_DBG_SLRSP_STATE					(FXR_RX_HIARB_CSRS + 0x000000048000)
#define FXR_RXHIARB_DBG_SLRSP_STATE_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_SLRSP_STATE_RESERVED_63_13_SHIFT		13
#define FXR_RXHIARB_DBG_SLRSP_STATE_RESERVED_63_13_MASK			0x7FFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_SLRSP_STATE_RESERVED_63_13_SMASK		0xFFFFFFFFFFFFE000ull
#define FXR_RXHIARB_DBG_SLRSP_STATE_SLOW_CRED_CNT_SHIFT			8
#define FXR_RXHIARB_DBG_SLRSP_STATE_SLOW_CRED_CNT_MASK			0x1Full
#define FXR_RXHIARB_DBG_SLRSP_STATE_SLOW_CRED_CNT_SMASK			0x1F00ull
#define FXR_RXHIARB_DBG_SLRSP_STATE_RESERVED_7_6_SHIFT			6
#define FXR_RXHIARB_DBG_SLRSP_STATE_RESERVED_7_6_MASK			0x3ull
#define FXR_RXHIARB_DBG_SLRSP_STATE_RESERVED_7_6_SMASK			0xC0ull
#define FXR_RXHIARB_DBG_SLRSP_STATE_SLOW_CNT_SHIFT			0
#define FXR_RXHIARB_DBG_SLRSP_STATE_SLOW_CNT_MASK			0x3Full
#define FXR_RXHIARB_DBG_SLRSP_STATE_SLOW_CNT_SMASK			0x3Full
/*
* Table #138 of fxr_top - RXHIARB_DBG_AT_REQ_STATE
* Provides read-only debug access, allowing some insight into the slow response 
* path's state.
*/
#define FXR_RXHIARB_DBG_AT_REQ_STATE					(FXR_RX_HIARB_CSRS + 0x000000049000)
#define FXR_RXHIARB_DBG_AT_REQ_STATE_RESETCSR				0x0000000000000020ull
#define FXR_RXHIARB_DBG_AT_REQ_STATE_RESERVED_63_7_SHIFT		7
#define FXR_RXHIARB_DBG_AT_REQ_STATE_RESERVED_63_7_MASK			0x1FFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_AT_REQ_STATE_RESERVED_63_7_SMASK		0xFFFFFFFFFFFFFF80ull
#define FXR_RXHIARB_DBG_AT_REQ_STATE_REF_BUSY_SHIFT			6
#define FXR_RXHIARB_DBG_AT_REQ_STATE_REF_BUSY_MASK			0x1ull
#define FXR_RXHIARB_DBG_AT_REQ_STATE_REF_BUSY_SMASK			0x40ull
#define FXR_RXHIARB_DBG_AT_REQ_STATE_AT_RDY_SHIFT			5
#define FXR_RXHIARB_DBG_AT_REQ_STATE_AT_RDY_MASK			0x1ull
#define FXR_RXHIARB_DBG_AT_REQ_STATE_AT_RDY_SMASK			0x20ull
#define FXR_RXHIARB_DBG_AT_REQ_STATE_AT_FIFO_CNT_SHIFT			0
#define FXR_RXHIARB_DBG_AT_REQ_STATE_AT_FIFO_CNT_MASK			0x1Full
#define FXR_RXHIARB_DBG_AT_REQ_STATE_AT_FIFO_CNT_SMASK			0x1Full
/*
* Table #139 of fxr_top - RXHIARB_DBG_XTRIG_CTRL
* Provides extended triggering capabilities to the DFD logic by allowing for 
* more precise triggering without consuming too many bits. The triggering is 
* used in conjunction with the primary DFD triggering by providing a single 
* match bit which is then included within the DFD data. This CSR contains an 
* enable and hold control for each external trigger group, The enable activate 
* the trigger monitoring, while the hold determines the behavior of the 
* resulting match bit - either a pulse (hold=0) or a level assert-and-change 
* (hold=1). The hold state is useful for multi-level triggering. For example, 
* match on event B only if event A occurred first. In such an example, event A 
* would need to be configured to hold its match state. These settings along with 
* the following xtrig CSRs dictate the full behavior or the xtrg mechanism. Note 
* that once a match occurs, the monitoring is considered to be complete (unless 
* count is set to zero - see xtrig count CSR), and another match will not occur 
* unless the monitor is 're-armed' by toggling the enable signal (though a 
* de-assert and then re-assert sequence).
*/
#define FXR_RXHIARB_DBG_XTRIG_CTRL					(FXR_RX_HIARB_CSRS + 0x00000004A000)
#define FXR_RXHIARB_DBG_XTRIG_CTRL_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_RESERVED_63_16_SHIFT			16
#define FXR_RXHIARB_DBG_XTRIG_CTRL_RESERVED_63_16_MASK			0xFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_RESERVED_63_16_SMASK			0xFFFFFFFFFFFF0000ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_DMA_IN_EN_SHIFT			15
#define FXR_RXHIARB_DBG_XTRIG_CTRL_DMA_IN_EN_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_DMA_IN_EN_SMASK			0x8000ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_DMA_IN_HOLD_SHIFT			14
#define FXR_RXHIARB_DBG_XTRIG_CTRL_DMA_IN_HOLD_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_DMA_IN_HOLD_SMASK			0x4000ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_CID_IN_EN_SHIFT			13
#define FXR_RXHIARB_DBG_XTRIG_CTRL_CID_IN_EN_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_CID_IN_EN_SMASK			0x2000ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_CID_IN_HOLD_SHIFT			12
#define FXR_RXHIARB_DBG_XTRIG_CTRL_CID_IN_HOLD_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_CID_IN_HOLD_SMASK			0x1000ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_HP_IN_EN_SHIFT			11
#define FXR_RXHIARB_DBG_XTRIG_CTRL_HP_IN_EN_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_HP_IN_EN_SMASK			0x800ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_HP_IN_HOLD_SHIFT			10
#define FXR_RXHIARB_DBG_XTRIG_CTRL_HP_IN_HOLD_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_HP_IN_HOLD_SMASK			0x400ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_ET_IN_EN_SHIFT			9
#define FXR_RXHIARB_DBG_XTRIG_CTRL_ET_IN_EN_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_ET_IN_EN_SMASK			0x200ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_ET_IN_HOLD_SHIFT			8
#define FXR_RXHIARB_DBG_XTRIG_CTRL_ET_IN_HOLD_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_ET_IN_HOLD_SMASK			0x100ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_E2E_IN_EN_SHIFT			7
#define FXR_RXHIARB_DBG_XTRIG_CTRL_E2E_IN_EN_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_E2E_IN_EN_SMASK			0x80ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_E2E_IN_HOLD_SHIFT			6
#define FXR_RXHIARB_DBG_XTRIG_CTRL_E2E_IN_HOLD_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_E2E_IN_HOLD_SMASK			0x40ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_ARB_MUX_EN_SHIFT			5
#define FXR_RXHIARB_DBG_XTRIG_CTRL_ARB_MUX_EN_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_ARB_MUX_EN_SMASK			0x20ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_ARB_MUX_HOLD_SHIFT			4
#define FXR_RXHIARB_DBG_XTRIG_CTRL_ARB_MUX_HOLD_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_ARB_MUX_HOLD_SMASK			0x10ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_HI_OUT_EN_SHIFT			3
#define FXR_RXHIARB_DBG_XTRIG_CTRL_HI_OUT_EN_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_HI_OUT_EN_SMASK			0x8ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_HI_OUT_HOLD_SHIFT			2
#define FXR_RXHIARB_DBG_XTRIG_CTRL_HI_OUT_HOLD_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_HI_OUT_HOLD_SMASK			0x4ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_HI_IN_EN_SHIFT			1
#define FXR_RXHIARB_DBG_XTRIG_CTRL_HI_IN_EN_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_HI_IN_EN_SMASK			0x2ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_HI_IN_HOLD_SHIFT			0
#define FXR_RXHIARB_DBG_XTRIG_CTRL_HI_IN_HOLD_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_CTRL_HI_IN_HOLD_SMASK			0x1ull
/*
* Table #140 of fxr_top - RXHIARB_DBG_XTRIG_CNT
* Provides extended triggering capabilities to the DFD logic by allowing for 
* more precise triggering without consuming too many bits. The count value 
* indicates the number of times an event must occur prior to asserting the match 
* state. For example, triggering on the 3rd write to a given address. Note that 
* when count is set to zero, the hold configuration setting is ignored and the 
* match will pulse during every occurrence of a matching event. If count=1, the 
* monitor will trigger during the first matching event. If count=2, a match will 
* occur during the second matching event, and so on..
*/
#define FXR_RXHIARB_DBG_XTRIG_CNT					(FXR_RX_HIARB_CSRS + 0x00000004A008)
#define FXR_RXHIARB_DBG_XTRIG_CNT_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_CNT_DMA_IN_CNT_SHIFT			56
#define FXR_RXHIARB_DBG_XTRIG_CNT_DMA_IN_CNT_MASK			0xFFull
#define FXR_RXHIARB_DBG_XTRIG_CNT_DMA_IN_CNT_SMASK			0xFF00000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_CNT_CID_IN_CNT_SHIFT			48
#define FXR_RXHIARB_DBG_XTRIG_CNT_CID_IN_CNT_MASK			0xFFull
#define FXR_RXHIARB_DBG_XTRIG_CNT_CID_IN_CNT_SMASK			0xFF000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_CNT_HP_IN_CNT_SHIFT			40
#define FXR_RXHIARB_DBG_XTRIG_CNT_HP_IN_CNT_MASK			0xFFull
#define FXR_RXHIARB_DBG_XTRIG_CNT_HP_IN_CNT_SMASK			0xFF0000000000ull
#define FXR_RXHIARB_DBG_XTRIG_CNT_ET_IN_CNT_SHIFT			32
#define FXR_RXHIARB_DBG_XTRIG_CNT_ET_IN_CNT_MASK			0xFFull
#define FXR_RXHIARB_DBG_XTRIG_CNT_ET_IN_CNT_SMASK			0xFF00000000ull
#define FXR_RXHIARB_DBG_XTRIG_CNT_E2E_IN_CNT_SHIFT			24
#define FXR_RXHIARB_DBG_XTRIG_CNT_E2E_IN_CNT_MASK			0xFFull
#define FXR_RXHIARB_DBG_XTRIG_CNT_E2E_IN_CNT_SMASK			0xFF000000ull
#define FXR_RXHIARB_DBG_XTRIG_CNT_ARB_MUX_CNT_SHIFT			16
#define FXR_RXHIARB_DBG_XTRIG_CNT_ARB_MUX_CNT_MASK			0xFFull
#define FXR_RXHIARB_DBG_XTRIG_CNT_ARB_MUX_CNT_SMASK			0xFF0000ull
#define FXR_RXHIARB_DBG_XTRIG_CNT_HI_OUT_CNT_SHIFT			8
#define FXR_RXHIARB_DBG_XTRIG_CNT_HI_OUT_CNT_MASK			0xFFull
#define FXR_RXHIARB_DBG_XTRIG_CNT_HI_OUT_CNT_SMASK			0xFF00ull
#define FXR_RXHIARB_DBG_XTRIG_CNT_HI_IN_CNT_SHIFT			0
#define FXR_RXHIARB_DBG_XTRIG_CNT_HI_IN_CNT_MASK			0xFFull
#define FXR_RXHIARB_DBG_XTRIG_CNT_HI_IN_CNT_SMASK			0xFFull
/*
* Table #141 of fxr_top - RXHIARB_DBG_XTRIG_DMA_IN0
* Provides extended triggering capabilities to the DFD logic by allowing for 
* more precise triggering without consuming too many bits. This provides the 
* value that will be compared against when monitoring the RxDMA input interface. 
* Since the interface is wider than 64-bits, it is spread across 2 CSRs. For 
* detailed information, refer to corresponding interface description,
*/
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN0					(FXR_RX_HIARB_CSRS + 0x00000004A010)
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN0_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN0_RESERVED_63_SHIFT			63
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN0_RESERVED_63_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN0_RESERVED_63_SMASK			0x8000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN0_HEAD_SHIFT			62
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN0_HEAD_MASK				0x1ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN0_HEAD_SMASK			0x4000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN0_TAIL_SHIFT			61
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN0_TAIL_MASK				0x1ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN0_TAIL_SMASK			0x2000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN0_DVAL_SHIFT			60
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN0_DVAL_MASK				0x1ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN0_DVAL_SMASK			0x1000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN0_ADDR_SHIFT			3
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN0_ADDR_MASK				0x1FFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN0_ADDR_SMASK			0xFFFFFFFFFFFFFF8ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN0_OPCODE_SHIFT			0
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN0_OPCODE_MASK			0x7ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN0_OPCODE_SMASK			0x7ull
/*
* Table #142 of fxr_top - RXHIARB_DBG_XTRIG_DMA_IN1
* Provides extended triggering capabilities to the DFD logic by allowing for 
* more precise triggering without consuming too many bits. This provides the 
* value that will be compared against when monitoring the RxDMA input interface. 
* Since the interface is wider than 64-bits, it is spread across 2 CSRs. For 
* detailed information, refer to corresponding interface description,
*/
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1					(FXR_RX_HIARB_CSRS + 0x00000004A018)
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_RESERVED_63_52_SHIFT		52
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_RESERVED_63_52_MASK		0xFFFull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_RESERVED_63_52_SMASK		0xFFF0000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_ASOP_SHIFT			47
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_ASOP_MASK				0x1Full
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_ASOP_SMASK			0xF800000000000ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_ADT_SHIFT				42
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_ADT_MASK				0x1Full
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_ADT_SMASK				0x7C0000000000ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_ART_SHIFT				41
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_ART_MASK				0x1ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_ART_SMASK				0x20000000000ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_TMOD_SHIFT			33
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_TMOD_MASK				0xFFull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_TMOD_SMASK			0x1FE00000000ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_CHINT_SHIFT			31
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_CHINT_MASK			0x3ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_CHINT_SMASK			0x180000000ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_LEN_SHIFT				24
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_LEN_MASK				0x7Full
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_LEN_SMASK				0x7F000000ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_PID_SHIFT				12
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_PID_MASK				0xFFFull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_PID_SMASK				0xFFF000ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_TID_SHIFT				4
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_TID_MASK				0xFFull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_TID_SMASK				0xFF0ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_TC_SHIFT				0
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_TC_MASK				0xFull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN1_TC_SMASK				0xFull
/*
* Table #143 of fxr_top - RXHIARB_DBG_XTRIG_DMA_IN_MSK0
* Provides extended triggering capabilities to the DFD logic by allowing for 
* more precise triggering without consuming too many bits. This provides the 
* mask that will be compared against when monitoring the RxDMA input interface. 
* A mask bit value of 1 indicates that the bit position will be used in the 
* comparison, else a value of 0 it will be ignored. Since the interface is wider 
* than 64-bits, it is spread across 2 CSRs. For detailed information, refer to 
* corresponding interface description,
*/
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK0				(FXR_RX_HIARB_CSRS + 0x00000004A020)
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK0_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK0_RESERVED_63_SHIFT		63
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK0_RESERVED_63_MASK		0x1ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK0_RESERVED_63_SMASK		0x8000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK0_HEAD_SHIFT			62
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK0_HEAD_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK0_HEAD_SMASK			0x4000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK0_TAIL_SHIFT			61
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK0_TAIL_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK0_TAIL_SMASK			0x2000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK0_DVAL_SHIFT			60
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK0_DVAL_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK0_DVAL_SMASK			0x1000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK0_ADDR_SHIFT			3
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK0_ADDR_MASK			0x1FFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK0_ADDR_SMASK			0xFFFFFFFFFFFFFF8ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK0_OPCODE_SHIFT			0
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK0_OPCODE_MASK			0x7ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK0_OPCODE_SMASK			0x7ull
/*
* Table #144 of fxr_top - RXHIARB_DBG_XTRIG_DMA_IN_MSK1
* Provides extended triggering capabilities to the DFD logic by allowing for 
* more precise triggering without consuming too many bits. This provides the 
* value that will be compared against when monitoring the RxDMA input interface. 
* A mask bit value of 1 indicates that the bit position will be used in the 
* comparison, else a value of 0 it will be ignored. Since the interface is wider 
* than 64-bits, it is spread across 2 CSRs. For detailed information, refer to 
* corresponding interface description,
*/
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1				(FXR_RX_HIARB_CSRS + 0x00000004A028)
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_RESERVED_63_52_SHIFT		52
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_RESERVED_63_52_MASK		0xFFFull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_RESERVED_63_52_SMASK		0xFFF0000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_ASOP_SHIFT			47
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_ASOP_MASK			0x1Full
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_ASOP_SMASK			0xF800000000000ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_ADT_SHIFT			42
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_ADT_MASK			0x1Full
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_ADT_SMASK			0x7C0000000000ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_ART_SHIFT			41
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_ART_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_ART_SMASK			0x20000000000ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_TMOD_SHIFT			33
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_TMOD_MASK			0xFFull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_TMOD_SMASK			0x1FE00000000ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_CHINT_SHIFT			31
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_CHINT_MASK			0x3ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_CHINT_SMASK			0x180000000ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_LEN_SHIFT			24
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_LEN_MASK			0x7Full
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_LEN_SMASK			0x7F000000ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_PID_SHIFT			12
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_PID_MASK			0xFFFull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_PID_SMASK			0xFFF000ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_TID_SHIFT			4
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_TID_MASK			0xFFull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_TID_SMASK			0xFF0ull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_TC_SHIFT			0
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_TC_MASK			0xFull
#define FXR_RXHIARB_DBG_XTRIG_DMA_IN_MSK1_TC_SMASK			0xFull
/*
* Table #145 of fxr_top - RXHIARB_DBG_XTRIG_CID_IN0
* Provides extended triggering capabilities to the DFD logic by allowing for 
* more precise triggering without consuming too many bits. This provides the 
* value that will be compared against when monitoring the RxCID input interface. 
* Since the interface is wider than 64-bits, it is spread across 2 CSRs. For 
* detailed information, refer to corresponding interface description,
*/
#define FXR_RXHIARB_DBG_XTRIG_CID_IN0					(FXR_RX_HIARB_CSRS + 0x00000004A030)
#define FXR_RXHIARB_DBG_XTRIG_CID_IN0_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN0_RESERVED_63_SHIFT			63
#define FXR_RXHIARB_DBG_XTRIG_CID_IN0_RESERVED_63_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN0_RESERVED_63_SMASK			0x8000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN0_REQ_VALID_SHIFT			62
#define FXR_RXHIARB_DBG_XTRIG_CID_IN0_REQ_VALID_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN0_REQ_VALID_SMASK			0x4000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN0_REQ_ADDR_SHIFT			8
#define FXR_RXHIARB_DBG_XTRIG_CID_IN0_REQ_ADDR_MASK			0x3FFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN0_REQ_ADDR_SMASK			0x3FFFFFFFFFFFFF00ull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN0_REQ_TID_SHIFT			0
#define FXR_RXHIARB_DBG_XTRIG_CID_IN0_REQ_TID_MASK			0xFFull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN0_REQ_TID_SMASK			0xFFull
/*
* Table #146 of fxr_top - RXHIARB_DBG_XTRIG_CID_IN1
* Provides extended triggering capabilities to the DFD logic by allowing for 
* more precise triggering without consuming too many bits. This provides the 
* value that will be compared against when monitoring the RxCID input interface. 
* Since the interface is wider than 64-bits, it is spread across 2 CSRs. For 
* detailed information, refer to corresponding interface description,
*/
#define FXR_RXHIARB_DBG_XTRIG_CID_IN1					(FXR_RX_HIARB_CSRS + 0x00000004A038)
#define FXR_RXHIARB_DBG_XTRIG_CID_IN1_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN1_RESERVED_63_23_SHIFT		23
#define FXR_RXHIARB_DBG_XTRIG_CID_IN1_RESERVED_63_23_MASK		0x1FFFFFFFFFFull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN1_RESERVED_63_23_SMASK		0xFFFFFFFFFF800000ull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN1_REQ_PID_SHIFT			11
#define FXR_RXHIARB_DBG_XTRIG_CID_IN1_REQ_PID_MASK			0xFFFull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN1_REQ_PID_SMASK			0x7FF800ull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN1_REQ_TMOD_SHIFT			3
#define FXR_RXHIARB_DBG_XTRIG_CID_IN1_REQ_TMOD_MASK			0xFFull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN1_REQ_TMOD_SMASK			0x7F8ull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN1_REQ_PRIV_LEVEL_SHIFT		2
#define FXR_RXHIARB_DBG_XTRIG_CID_IN1_REQ_PRIV_LEVEL_MASK		0x1ull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN1_REQ_PRIV_LEVEL_SMASK		0x4ull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN1_REQ_CHINT_SHIFT			0
#define FXR_RXHIARB_DBG_XTRIG_CID_IN1_REQ_CHINT_MASK			0x3ull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN1_REQ_CHINT_SMASK			0x3ull
/*
* Table #147 of fxr_top - RXHIARB_DBG_XTRIG_CID_IN_MSK0
* Provides extended triggering capabilities to the DFD logic by allowing for 
* more precise triggering without consuming too many bits. This provides the 
* mask that will be compared against when monitoring the RxCID input interface. 
* A mask bit value of 1 indicates that the bit position will be used in the 
* comparison, else a value of 0 it will be ignored. Since the interface is wider 
* than 64-bits, it is spread across 2 CSRs. For detailed information, refer to 
* corresponding interface description,
*/
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK0				(FXR_RX_HIARB_CSRS + 0x00000004A040)
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK0_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK0_RESERVED_63_SHIFT		63
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK0_RESERVED_63_MASK		0x1ull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK0_RESERVED_63_SMASK		0x8000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK0_REQ_VALID_SHIFT		62
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK0_REQ_VALID_MASK		0x1ull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK0_REQ_VALID_SMASK		0x4000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK0_REQ_ADDR_SHIFT		8
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK0_REQ_ADDR_MASK			0x3FFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK0_REQ_ADDR_SMASK		0x3FFFFFFFFFFFFF00ull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK0_REQ_TID_SHIFT			0
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK0_REQ_TID_MASK			0xFFull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK0_REQ_TID_SMASK			0xFFull
/*
* Table #148 of fxr_top - RXHIARB_DBG_XTRIG_CID_IN_MSK1
* Provides extended triggering capabilities to the DFD logic by allowing for 
* more precise triggering without consuming too many bits. This provides the 
* mask that will be compared against when monitoring the RxCID input interface. 
* A mask bit value of 1 indicates that the bit position will be used in the 
* comparison, else a value of 0 it will be ignored. Since the interface is wider 
* than 64-bits, it is spread across 2 CSRs. For detailed information, refer to 
* corresponding interface description,
*/
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK1				(FXR_RX_HIARB_CSRS + 0x00000004A048)
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK1_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK1_RESERVED_63_23_SHIFT		23
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK1_RESERVED_63_23_MASK		0x1FFFFFFFFFFull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK1_RESERVED_63_23_SMASK		0xFFFFFFFFFF800000ull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK1_REQ_PID_SHIFT			11
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK1_REQ_PID_MASK			0xFFFull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK1_REQ_PID_SMASK			0x7FF800ull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK1_REQ_TMOD_SHIFT		3
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK1_REQ_TMOD_MASK			0xFFull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK1_REQ_TMOD_SMASK		0x7F8ull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK1_REQ_PRIV_LEVEL_SHIFT		2
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK1_REQ_PRIV_LEVEL_MASK		0x1ull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK1_REQ_PRIV_LEVEL_SMASK		0x4ull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK1_REQ_CHINT_SHIFT		0
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK1_REQ_CHINT_MASK		0x3ull
#define FXR_RXHIARB_DBG_XTRIG_CID_IN_MSK1_REQ_CHINT_SMASK		0x3ull
/*
* Table #149 of fxr_top - RXHIARB_DBG_XTRIG_HP_IN
* Provides extended triggering capabilities to the DFD logic by allowing for 
* more precise triggering without consuming too many bits. This provides the 
* value that will be compared against when monitoring the RxHP input interface. 
* For detailed information, refer to corresponding interface description,
*/
#define FXR_RXHIARB_DBG_XTRIG_HP_IN					(FXR_RX_HIARB_CSRS + 0x00000004A050)
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_RESERVED_63_61_SHIFT		61
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_RESERVED_63_61_MASK			0x7ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_RESERVED_63_61_SMASK		0xE000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_VALID_SHIFT			60
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_VALID_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_VALID_SMASK			0x1000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_DVAL_SHIFT			59
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_DVAL_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_DVAL_SMASK			0x800000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_HANDLE_SHIFT			47
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_HANDLE_MASK			0xFFFull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_HANDLE_SMASK			0x7FF800000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_ELEMENT_SHIFT			31
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_ELEMENT_MASK			0xFFFFull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_ELEMENT_SMASK			0x7FFF80000000ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_OPCODE_SHIFT			30
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_OPCODE_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_OPCODE_SMASK			0x40000000ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_TMOD_SHIFT			22
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_TMOD_MASK			0xFFull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_TMOD_SMASK			0x3FC00000ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_LEN_SHIFT			15
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_LEN_MASK			0x7Full
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_LEN_SMASK			0x3F8000ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_TID_SHIFT			7
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_TID_MASK			0xFFull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_TID_SMASK			0x7F80ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_NI_SHIFT			5
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_NI_MASK				0x3ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_NI_SMASK			0x60ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_REGION_SHIFT			2
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_REGION_MASK			0x7ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_REGION_SMASK			0x1Cull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_CHINT_SHIFT			0
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_CHINT_MASK			0x3ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_REQ_CHINT_SMASK			0x3ull
/*
* Table #150 of fxr_top - RXHIARB_DBG_XTRIG_HP_IN_MSK
* Provides extended triggering capabilities to the DFD logic by allowing for 
* more precise triggering without consuming too many bits. This provides the 
* mask that will be compared against when monitoring the RxHP input interface. A 
* mask bit value of 1 indicates that the bit position will be used in the 
* comparison, else a value of 0 it will be ignored. For detailed information, 
* refer to corresponding interface description,
*/
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK					(FXR_RX_HIARB_CSRS + 0x00000004A058)
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_RESERVED_63_61_SHIFT		61
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_RESERVED_63_61_MASK		0x7ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_RESERVED_63_61_SMASK		0xE000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_VALID_SHIFT			60
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_VALID_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_VALID_SMASK			0x1000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_DVAL_SHIFT			59
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_DVAL_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_DVAL_SMASK			0x800000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_HANDLE_SHIFT		47
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_HANDLE_MASK			0xFFFull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_HANDLE_SMASK		0x7FF800000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_ELEMENT_SHIFT		31
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_ELEMENT_MASK		0xFFFFull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_ELEMENT_SMASK		0x7FFF80000000ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_OPCODE_SHIFT		30
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_OPCODE_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_OPCODE_SMASK		0x40000000ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_TMOD_SHIFT			22
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_TMOD_MASK			0xFFull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_TMOD_SMASK			0x3FC00000ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_LEN_SHIFT			15
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_LEN_MASK			0x7Full
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_LEN_SMASK			0x3F8000ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_TID_SHIFT			7
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_TID_MASK			0xFFull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_TID_SMASK			0x7F80ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_NI_SHIFT			5
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_NI_MASK			0x3ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_NI_SMASK			0x60ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_REGION_SHIFT		2
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_REGION_MASK			0x7ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_REGION_SMASK		0x1Cull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_CHINT_SHIFT			0
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_CHINT_MASK			0x3ull
#define FXR_RXHIARB_DBG_XTRIG_HP_IN_MSK_REQ_CHINT_SMASK			0x3ull
/*
* Table #151 of fxr_top - RXHIARB_DBG_XTRIG_ET_IN
* Provides extended triggering capabilities to the DFD logic by allowing for 
* more precise triggering without consuming too many bits. This provides the 
* value that will be compared against when monitoring the RxET input interface. 
* For detailed information, refer to corresponding interface description,
*/
#define FXR_RXHIARB_DBG_XTRIG_ET_IN					(FXR_RX_HIARB_CSRS + 0x00000004A060)
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_RESERVED_63_61_SHIFT		61
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_RESERVED_63_61_MASK			0x7ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_RESERVED_63_61_SMASK		0xE000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_VALID_SHIFT			60
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_VALID_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_VALID_SMASK			0x1000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_DVAL_SHIFT			59
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_DVAL_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_DVAL_SMASK			0x800000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_HANDLE_SHIFT			47
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_HANDLE_MASK			0xFFFull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_HANDLE_SMASK			0x7FF800000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_ELEMENT_SHIFT			31
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_ELEMENT_MASK			0xFFFFull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_ELEMENT_SMASK			0x7FFF80000000ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_OPCODE_SHIFT			30
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_OPCODE_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_OPCODE_SMASK			0x40000000ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_TMOD_SHIFT			22
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_TMOD_MASK			0xFFull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_TMOD_SMASK			0x3FC00000ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_LEN_SHIFT			15
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_LEN_MASK			0x7Full
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_LEN_SMASK			0x3F8000ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_TID_SHIFT			7
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_TID_MASK			0xFFull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_TID_SMASK			0x7F80ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_NI_SHIFT			5
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_NI_MASK				0x3ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_NI_SMASK			0x60ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_REGION_SHIFT			2
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_REGION_MASK			0x7ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_REGION_SMASK			0x1Cull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_CHINT_SHIFT			0
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_CHINT_MASK			0x3ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_REQ_CHINT_SMASK			0x3ull
/*
* Table #152 of fxr_top - RXHIARB_DBG_XTRIG_ET_IN_MSK
* Provides extended triggering capabilities to the DFD logic by allowing for 
* more precise triggering without consuming too many bits. This provides the 
* mask that will be compared against when monitoring the RxET input interface. A 
* mask bit value of 1 indicates that the bit position will be used in the 
* comparison, else a value of 0 it will be ignored. For detailed information, 
* refer to corresponding interface description,
*/
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK					(FXR_RX_HIARB_CSRS + 0x00000004A068)
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_RESERVED_63_61_SHIFT		61
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_RESERVED_63_61_MASK		0x7ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_RESERVED_63_61_SMASK		0xE000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_VALID_SHIFT			60
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_VALID_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_VALID_SMASK			0x1000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_DVAL_SHIFT			59
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_DVAL_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_DVAL_SMASK			0x800000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_HANDLE_SHIFT		47
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_HANDLE_MASK			0xFFFull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_HANDLE_SMASK		0x7FF800000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_ELEMENT_SHIFT		31
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_ELEMENT_MASK		0xFFFFull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_ELEMENT_SMASK		0x7FFF80000000ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_OPCODE_SHIFT		30
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_OPCODE_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_OPCODE_SMASK		0x40000000ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_TMOD_SHIFT			22
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_TMOD_MASK			0xFFull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_TMOD_SMASK			0x3FC00000ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_LEN_SHIFT			15
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_LEN_MASK			0x7Full
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_LEN_SMASK			0x3F8000ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_TID_SHIFT			7
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_TID_MASK			0xFFull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_TID_SMASK			0x7F80ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_NI_SHIFT			5
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_NI_MASK			0x3ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_NI_SMASK			0x60ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_REGION_SHIFT		2
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_REGION_MASK			0x7ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_REGION_SMASK		0x1Cull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_CHINT_SHIFT			0
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_CHINT_MASK			0x3ull
#define FXR_RXHIARB_DBG_XTRIG_ET_IN_MSK_REQ_CHINT_SMASK			0x3ull
/*
* Table #153 of fxr_top - RXHIARB_DBG_XTRIG_E2E_IN
* Provides extended triggering capabilities to the DFD logic by allowing for 
* more precise triggering without consuming too many bits. This provides the 
* value that will be compared against when monitoring the RxE2E input interface. 
* For detailed information, refer to corresponding interface description,
*/
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN					(FXR_RX_HIARB_CSRS + 0x00000004A070)
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_REQ_VALID_SHIFT			63
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_REQ_VALID_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_REQ_VALID_SMASK			0x8000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_REQ_ADDRESS_SHIFT			9
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_REQ_ADDRESS_MASK			0x3FFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_REQ_ADDRESS_SMASK			0x7FFFFFFFFFFFFE00ull
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_REQ_READ_SHIFT			8
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_REQ_READ_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_REQ_READ_SMASK			0x100ull
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_REQ_TID_SHIFT			2
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_REQ_TID_MASK			0x3Full
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_REQ_TID_SMASK			0xFCull
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_REQ_CHINT_SHIFT			0
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_REQ_CHINT_MASK			0x3ull
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_REQ_CHINT_SMASK			0x3ull
/*
* Table #154 of fxr_top - RXHIARB_DBG_XTRIG_E2E_IN_MSK
* Provides extended triggering capabilities to the DFD logic by allowing for 
* more precise triggering without consuming too many bits. This provides the 
* mask that will be compared against when monitoring the RxE2E input interface. 
* A mask bit value of 1 indicates that the bit position will be used in the 
* comparison, else a value of 0 it will be ignored. For detailed information, 
* refer to corresponding interface description,
*/
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_MSK				(FXR_RX_HIARB_CSRS + 0x00000004A078)
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_MSK_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_MSK_REQ_VALID_SHIFT		63
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_MSK_REQ_VALID_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_MSK_REQ_VALID_SMASK		0x8000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_MSK_REQ_ADDRESS_SHIFT		9
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_MSK_REQ_ADDRESS_MASK		0x3FFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_MSK_REQ_ADDRESS_SMASK		0x7FFFFFFFFFFFFE00ull
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_MSK_REQ_READ_SHIFT			8
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_MSK_REQ_READ_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_MSK_REQ_READ_SMASK			0x100ull
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_MSK_REQ_TID_SHIFT			2
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_MSK_REQ_TID_MASK			0x3Full
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_MSK_REQ_TID_SMASK			0xFCull
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_MSK_REQ_CHINT_SHIFT		0
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_MSK_REQ_CHINT_MASK			0x3ull
#define FXR_RXHIARB_DBG_XTRIG_E2E_IN_MSK_REQ_CHINT_SMASK		0x3ull
/*
* Table #155 of fxr_top - RXHIARB_DBG_XTRIG_ARBMUX0
* Provides extended triggering capabilities to the DFD logic by allowing for 
* more precise triggering without consuming too many bits. This provides the 
* value that will be compared against when monitoring the ARB MUX internal 
* interface. Since the interface is wider than 64-bits, it is spread across 2 
* CSRs. For detailed information, refer to corresponding internal interface 
* description,
*/
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX0					(FXR_RX_HIARB_CSRS + 0x00000004A080)
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX0_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX0_RESERVED_63_61_SHIFT		61
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX0_RESERVED_63_61_MASK		0x7ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX0_RESERVED_63_61_SMASK		0xE000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX0_HVAL_SHIFT			60
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX0_HVAL_MASK				0x1ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX0_HVAL_SMASK			0x1000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX0_TVAL_SHIFT			59
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX0_TVAL_MASK				0x1ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX0_TVAL_SMASK			0x800000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX0_DVAL0_SHIFT			58
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX0_DVAL0_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX0_DVAL0_SMASK			0x400000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX0_DVAL1_SHIFT			57
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX0_DVAL1_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX0_DVAL1_SMASK			0x200000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX0_ADDR_SHIFT			0
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX0_ADDR_MASK				0x1FFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX0_ADDR_SMASK			0x1FFFFFFFFFFFFFFull
/*
* Table #156 of fxr_top - RXHIARB_DBG_XTRIG_ARBMUX1
* Provides extended triggering capabilities to the DFD logic by allowing for 
* more precise triggering without consuming too many bits. This provides the 
* value that will be compared against when monitoring the ARB MUX internal 
* interface. Since the interface is wider than 64-bits, it is spread across 2 
* CSRs. For detailed information, refer to corresponding internal interface 
* description,
*/
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1					(FXR_RX_HIARB_CSRS + 0x00000004A088)
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_RESERVED_63_SHIFT			63
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_RESERVED_63_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_RESERVED_63_SMASK			0x8000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_PID_SHIFT				51
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_PID_MASK				0xFFFull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_PID_SMASK				0x7FF8000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_OPCODE_SHIFT			48
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_OPCODE_MASK			0x7ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_OPCODE_SMASK			0x7000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_ASOP_SHIFT			43
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_ASOP_MASK				0x1Full
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_ASOP_SMASK			0xF80000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_ADT_SHIFT				38
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_ADT_MASK				0x1Full
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_ADT_SMASK				0x7C000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_ART_SHIFT				37
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_ART_MASK				0x1ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_ART_SMASK				0x2000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_TMOD_SHIFT			29
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_TMOD_MASK				0xFFull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_TMOD_SMASK			0x1FE0000000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_CHINT_SHIFT			27
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_CHINT_MASK			0x3ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_CHINT_SMASK			0x18000000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_LEN_SHIFT				20
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_LEN_MASK				0x7Full
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_LEN_SMASK				0x7F00000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_TID_SHIFT				8
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_TID_MASK				0xFFFull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_TID_SMASK				0xFFF00ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_TC_SHIFT				4
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_TC_MASK				0xFull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_TC_SMASK				0xF0ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_RX_SRC_ID_SHIFT			0
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_RX_SRC_ID_MASK			0xFull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX1_RX_SRC_ID_SMASK			0xFull
/*
* Table #157 of fxr_top - RXHIARB_DBG_XTRIG_ARBMUX_MSK0
* Provides extended triggering capabilities to the DFD logic by allowing for 
* more precise triggering without consuming too many bits. This provides the 
* mask that will be compared against when monitoring the ARB MUX internal 
* interface. A mask bit value of 1 indicates that the bit position will be used 
* in the comparison, else a value of 0 it will be ignored. Since the interface 
* is wider than 64-bits, it is spread across 2 CSRs. For detailed information, 
* refer to corresponding internal interface description,
*/
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK0				(FXR_RX_HIARB_CSRS + 0x00000004A090)
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK0_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK0_RESERVED_63_61_SHIFT		61
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK0_RESERVED_63_61_MASK		0x7ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK0_RESERVED_63_61_SMASK		0xE000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK0_HVAL_SHIFT			60
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK0_HVAL_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK0_HVAL_SMASK			0x1000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK0_TVAL_SHIFT			59
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK0_TVAL_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK0_TVAL_SMASK			0x800000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK0_DVAL0_SHIFT			58
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK0_DVAL0_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK0_DVAL0_SMASK			0x400000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK0_DVAL1_SHIFT			57
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK0_DVAL1_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK0_DVAL1_SMASK			0x200000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK0_ADDR_SHIFT			0
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK0_ADDR_MASK			0x1FFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK0_ADDR_SMASK			0x1FFFFFFFFFFFFFFull
/*
* Table #158 of fxr_top - RXHIARB_DBG_XTRIG_ARBMUX_MSK1
* Provides extended triggering capabilities to the DFD logic by allowing for 
* more precise triggering without consuming too many bits. This provides the 
* mask that will be compared against when monitoring the ARB MUX internal 
* interface. A mask bit value of 1 indicates that the bit position will be used 
* in the comparison, else a value of 0 it will be ignored. Since the interface 
* is wider than 64-bits, it is spread across 2 CSRs. For detailed information, 
* refer to corresponding internal interface description,
*/
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1				(FXR_RX_HIARB_CSRS + 0x00000004A098)
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_RESERVED_63_SHIFT		63
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_RESERVED_63_MASK		0x1ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_RESERVED_63_SMASK		0x8000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_PID_SHIFT			51
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_PID_MASK			0xFFFull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_PID_SMASK			0x7FF8000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_OPCODE_SHIFT			48
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_OPCODE_MASK			0x7ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_OPCODE_SMASK			0x7000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_ASOP_SHIFT			43
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_ASOP_MASK			0x1Full
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_ASOP_SMASK			0xF80000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_ADT_SHIFT			38
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_ADT_MASK			0x1Full
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_ADT_SMASK			0x7C000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_ART_SHIFT			37
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_ART_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_ART_SMASK			0x2000000000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_TMOD_SHIFT			29
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_TMOD_MASK			0xFFull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_TMOD_SMASK			0x1FE0000000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_CHINT_SHIFT			27
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_CHINT_MASK			0x3ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_CHINT_SMASK			0x18000000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_LEN_SHIFT			20
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_LEN_MASK			0x7Full
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_LEN_SMASK			0x7F00000ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_TID_SHIFT			8
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_TID_MASK			0xFFFull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_TID_SMASK			0xFFF00ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_TC_SHIFT			4
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_TC_MASK			0xFull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_TC_SMASK			0xF0ull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_RX_SRC_ID_SHIFT		0
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_RX_SRC_ID_MASK		0xFull
#define FXR_RXHIARB_DBG_XTRIG_ARBMUX_MSK1_RX_SRC_ID_SMASK		0xFull
/*
* Table #159 of fxr_top - RXHIARB_DBG_XTRIG_HI_OUT0
* Provides extended triggering capabilities to the DFD logic by allowing for 
* more precise triggering without consuming too many bits. This provides the 
* value that will be compared against when monitoring the HIFIs output 
* interface. Since the interface is wider than 64-bits, it is spread across 2 
* CSRs. For detailed information, refer to corresponding internal interface 
* description,
*/
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT0					(FXR_RX_HIARB_CSRS + 0x00000004A0A0)
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT0_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT0_RESERVED_63_59_SHIFT		59
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT0_RESERVED_63_59_MASK		0x1Full
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT0_RESERVED_63_59_SMASK		0xF800000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT0_HVAL_SHIFT			58
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT0_HVAL_MASK				0x1ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT0_HVAL_SMASK			0x400000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT0_TVAL_SHIFT			57
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT0_TVAL_MASK				0x1ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT0_TVAL_SMASK			0x200000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT0_DVAL_SHIFT			56
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT0_DVAL_MASK				0x1ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT0_DVAL_SMASK			0x100000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT0_TTYPE_SHIFT			55
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT0_TTYPE_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT0_TTYPE_SMASK			0x80000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT0_ADDR_SHIFT			3
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT0_ADDR_MASK				0xFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT0_ADDR_SMASK			0x7FFFFFFFFFFFF8ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT0_TOP_SHIFT				0
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT0_TOP_MASK				0x7ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT0_TOP_SMASK				0x7ull
/*
* Table #160 of fxr_top - RXHIARB_DBG_XTRIG_HI_OUT1
* Provides extended triggering capabilities to the DFD logic by allowing for 
* more precise triggering without consuming too many bits. This provides the 
* value that will be compared against when monitoring the HIFIs output 
* interface. Since the interface is wider than 64-bits, it is spread across 2 
* CSRs. For detailed information, refer to corresponding internal interface 
* description,
*/
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT1					(FXR_RX_HIARB_CSRS + 0x00000004A0A8)
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT1_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT1_RESERVED_63_40_SHIFT		40
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT1_RESERVED_63_40_MASK		0xFFFFFFull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT1_RESERVED_63_40_SMASK		0xFFFFFF0000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT1_TID_SHIFT				28
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT1_TID_MASK				0xFFFull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT1_TID_SMASK				0xFFF0000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT1_TMOD_SHIFT			20
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT1_TMOD_MASK				0xFFull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT1_TMOD_SMASK			0xFF00000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT1_CHINT_SHIFT			18
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT1_CHINT_MASK			0x3ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT1_CHINT_SMASK			0xC0000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT1_BLEN_SHIFT			11
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT1_BLEN_MASK				0x7Full
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT1_BLEN_SMASK			0x3F800ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT1_ASOP_SHIFT			6
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT1_ASOP_MASK				0x1Full
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT1_ASOP_SMASK			0x7C0ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT1_ADT_SHIFT				1
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT1_ADT_MASK				0x1Full
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT1_ADT_SMASK				0x3Eull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT1_ART_SHIFT				0
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT1_ART_MASK				0x1ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT1_ART_SMASK				0x1ull
/*
* Table #161 of fxr_top - RXHIARB_DBG_XTRIG_HI_OUT_MSK0
* Provides extended triggering capabilities to the DFD logic by allowing for 
* more precise triggering without consuming too many bits. This provides the 
* mask that will be compared against when monitoring the HIFIs output interface. 
* A mask bit value of 1 indicates that the bit position will be used in the 
* comparison, else a value of 0 it will be ignored. Since the interface is wider 
* than 64-bits, it is spread across 2 CSRs. For detailed information, refer to 
* corresponding internal interface description,
*/
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK0				(FXR_RX_HIARB_CSRS + 0x00000004A0B0)
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK0_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK0_RESERVED_63_59_SHIFT		59
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK0_RESERVED_63_59_MASK		0x1Full
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK0_RESERVED_63_59_SMASK		0xF800000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK0_HVAL_SHIFT			58
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK0_HVAL_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK0_HVAL_SMASK			0x400000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK0_TVAL_SHIFT			57
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK0_TVAL_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK0_TVAL_SMASK			0x200000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK0_DVAL_SHIFT			56
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK0_DVAL_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK0_DVAL_SMASK			0x100000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK0_TTYPE_SHIFT			55
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK0_TTYPE_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK0_TTYPE_SMASK			0x80000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK0_ADDR_SHIFT			3
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK0_ADDR_MASK			0xFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK0_ADDR_SMASK			0x7FFFFFFFFFFFF8ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK0_TOP_SHIFT			0
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK0_TOP_MASK			0x7ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK0_TOP_SMASK			0x7ull
/*
* Table #162 of fxr_top - RXHIARB_DBG_XTRIG_HI_OUT_MSK1
* Provides extended triggering capabilities to the DFD logic by allowing for 
* more precise triggering without consuming too many bits. This provides the 
* mask that will be compared against when monitoring the HIFIs output interface. 
* A mask bit value of 1 indicates that the bit position will be used in the 
* comparison, else a value of 0 it will be ignored. Since the interface is wider 
* than 64-bits, it is spread across 2 CSRs. For detailed information, refer to 
* corresponding internal interface description,
*/
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK1				(FXR_RX_HIARB_CSRS + 0x00000004A0B8)
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK1_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK1_RESERVED_63_40_SHIFT		40
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK1_RESERVED_63_40_MASK		0xFFFFFFull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK1_RESERVED_63_40_SMASK		0xFFFFFF0000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK1_TID_SHIFT			28
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK1_TID_MASK			0xFFFull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK1_TID_SMASK			0xFFF0000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK1_TMOD_SHIFT			20
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK1_TMOD_MASK			0xFFull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK1_TMOD_SMASK			0xFF00000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK1_CHINT_SHIFT			18
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK1_CHINT_MASK			0x3ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK1_CHINT_SMASK			0xC0000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK1_BLEN_SHIFT			11
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK1_BLEN_MASK			0x7Full
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK1_BLEN_SMASK			0x3F800ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK1_ASOP_SHIFT			6
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK1_ASOP_MASK			0x1Full
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK1_ASOP_SMASK			0x7C0ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK1_ADT_SHIFT			1
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK1_ADT_MASK			0x1Full
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK1_ADT_SMASK			0x3Eull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK1_ART_SHIFT			0
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK1_ART_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_HI_OUT_MSK1_ART_SMASK			0x1ull
/*
* Table #163 of fxr_top - RXHIARB_DBG_XTRIG_HI_IN0
* Provides extended triggering capabilities to the DFD logic by allowing for 
* more precise triggering without consuming too many bits. This provides the 
* value that will be compared against when monitoring the HIFIs input interface. 
* Since the interface is wider than 64-bits, it is spread across 2 CSRs. For 
* detailed information, refer to corresponding internal interface 
* description,
*/
#define FXR_RXHIARB_DBG_XTRIG_HI_IN0					(FXR_RX_HIARB_CSRS + 0x00000004A0C0)
#define FXR_RXHIARB_DBG_XTRIG_HI_IN0_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN0_RESERVED_63_59_SHIFT		59
#define FXR_RXHIARB_DBG_XTRIG_HI_IN0_RESERVED_63_59_MASK		0x1Full
#define FXR_RXHIARB_DBG_XTRIG_HI_IN0_RESERVED_63_59_SMASK		0xF800000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN0_HVAL_SHIFT				58
#define FXR_RXHIARB_DBG_XTRIG_HI_IN0_HVAL_MASK				0x1ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN0_HVAL_SMASK				0x400000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN0_TVAL_SHIFT				57
#define FXR_RXHIARB_DBG_XTRIG_HI_IN0_TVAL_MASK				0x1ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN0_TVAL_SMASK				0x200000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN0_DVAL_SHIFT				56
#define FXR_RXHIARB_DBG_XTRIG_HI_IN0_DVAL_MASK				0x1ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN0_DVAL_SMASK				0x100000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN0_TTYPE_SHIFT			55
#define FXR_RXHIARB_DBG_XTRIG_HI_IN0_TTYPE_MASK				0x1ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN0_TTYPE_SMASK			0x80000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN0_ADDR_SHIFT				3
#define FXR_RXHIARB_DBG_XTRIG_HI_IN0_ADDR_MASK				0xFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN0_ADDR_SMASK				0x7FFFFFFFFFFFF8ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN0_TOP_SHIFT				0
#define FXR_RXHIARB_DBG_XTRIG_HI_IN0_TOP_MASK				0x7ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN0_TOP_SMASK				0x7ull
/*
* Table #164 of fxr_top - RXHIARB_DBG_XTRIG_HI_IN1
* Provides extended triggering capabilities to the DFD logic by allowing for 
* more precise triggering without consuming too many bits. This provides the 
* value that will be compared against when monitoring the HIFIs input interface. 
* Since the interface is wider than 64-bits, it is spread across 2 CSRs. For 
* detailed information, refer to corresponding internal interface 
* description,
*/
#define FXR_RXHIARB_DBG_XTRIG_HI_IN1					(FXR_RX_HIARB_CSRS + 0x00000004A0C8)
#define FXR_RXHIARB_DBG_XTRIG_HI_IN1_RESETCSR				0x0000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN1_RESERVED_63_40_SHIFT		40
#define FXR_RXHIARB_DBG_XTRIG_HI_IN1_RESERVED_63_40_MASK		0xFFFFFFull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN1_RESERVED_63_40_SMASK		0xFFFFFF0000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN1_TID_SHIFT				28
#define FXR_RXHIARB_DBG_XTRIG_HI_IN1_TID_MASK				0xFFFull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN1_TID_SMASK				0xFFF0000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN1_TMOD_SHIFT				20
#define FXR_RXHIARB_DBG_XTRIG_HI_IN1_TMOD_MASK				0xFFull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN1_TMOD_SMASK				0xFF00000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN1_CHINT_SHIFT			18
#define FXR_RXHIARB_DBG_XTRIG_HI_IN1_CHINT_MASK				0x3ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN1_CHINT_SMASK			0xC0000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN1_BLEN_SHIFT				11
#define FXR_RXHIARB_DBG_XTRIG_HI_IN1_BLEN_MASK				0x7Full
#define FXR_RXHIARB_DBG_XTRIG_HI_IN1_BLEN_SMASK				0x3F800ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN1_ASOP_SHIFT				6
#define FXR_RXHIARB_DBG_XTRIG_HI_IN1_ASOP_MASK				0x1Full
#define FXR_RXHIARB_DBG_XTRIG_HI_IN1_ASOP_SMASK				0x7C0ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN1_ADT_SHIFT				1
#define FXR_RXHIARB_DBG_XTRIG_HI_IN1_ADT_MASK				0x1Full
#define FXR_RXHIARB_DBG_XTRIG_HI_IN1_ADT_SMASK				0x3Eull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN1_ART_SHIFT				0
#define FXR_RXHIARB_DBG_XTRIG_HI_IN1_ART_MASK				0x1ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN1_ART_SMASK				0x1ull
/*
* Table #165 of fxr_top - RXHIARB_DBG_XTRIG_HI_IN_MSK0
* Provides extended triggering capabilities to the DFD logic by allowing for 
* more precise triggering without consuming too many bits. This provides the 
* mask that will be compared against when monitoring the HIFIs input interface. 
* A mask bit value of 1 indicates that the bit position will be used in the 
* comparison, else a value of 0 it will be ignored. Since the interface is wider 
* than 64-bits, it is spread across 2 CSRs. For detailed information, refer to 
* corresponding internal interface description,
*/
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK0				(FXR_RX_HIARB_CSRS + 0x00000004A0D0)
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK0_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK0_RESERVED_63_59_SHIFT		59
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK0_RESERVED_63_59_MASK		0x1Full
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK0_RESERVED_63_59_SMASK		0xF800000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK0_HVAL_SHIFT			58
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK0_HVAL_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK0_HVAL_SMASK			0x400000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK0_TVAL_SHIFT			57
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK0_TVAL_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK0_TVAL_SMASK			0x200000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK0_DVAL_SHIFT			56
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK0_DVAL_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK0_DVAL_SMASK			0x100000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK0_TTYPE_SHIFT			55
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK0_TTYPE_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK0_TTYPE_SMASK			0x80000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK0_ADDR_SHIFT			3
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK0_ADDR_MASK			0xFFFFFFFFFFFFFull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK0_ADDR_SMASK			0x7FFFFFFFFFFFF8ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK0_TOP_SHIFT			0
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK0_TOP_MASK			0x7ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK0_TOP_SMASK			0x7ull
/*
* Table #166 of fxr_top - RXHIARB_DBG_XTRIG_HI_IN_MSK1
* Provides extended triggering capabilities to the DFD logic by allowing for 
* more precise triggering without consuming too many bits. This provides the 
* mask that will be compared against when monitoring the HIFIs input interface. 
* A mask bit value of 1 indicates that the bit position will be used in the 
* comparison, else a value of 0 it will be ignored. Since the interface is wider 
* than 64-bits, it is spread across 2 CSRs. For detailed information, refer to 
* corresponding internal interface description,
*/
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK1				(FXR_RX_HIARB_CSRS + 0x00000004A0D8)
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK1_RESETCSR			0x0000000000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK1_RESERVED_63_40_SHIFT		40
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK1_RESERVED_63_40_MASK		0xFFFFFFull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK1_RESERVED_63_40_SMASK		0xFFFFFF0000000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK1_TID_SHIFT			28
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK1_TID_MASK			0xFFFull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK1_TID_SMASK			0xFFF0000000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK1_TMOD_SHIFT			20
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK1_TMOD_MASK			0xFFull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK1_TMOD_SMASK			0xFF00000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK1_CHINT_SHIFT			18
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK1_CHINT_MASK			0x3ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK1_CHINT_SMASK			0xC0000ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK1_BLEN_SHIFT			11
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK1_BLEN_MASK			0x7Full
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK1_BLEN_SMASK			0x3F800ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK1_ASOP_SHIFT			6
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK1_ASOP_MASK			0x1Full
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK1_ASOP_SMASK			0x7C0ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK1_ADT_SHIFT			1
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK1_ADT_MASK			0x1Full
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK1_ADT_SMASK			0x3Eull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK1_ART_SHIFT			0
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK1_ART_MASK			0x1ull
#define FXR_RXHIARB_DBG_XTRIG_HI_IN_MSK1_ART_SMASK			0x1ull

#endif 		/* DEF_FXR_RX_HIARB_SW_DEF */

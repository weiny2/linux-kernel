/*
*------------------------------------------------------------------------------
*                                                                              
*  INTEL CONFIDENTIAL                                                          
*                                                                              
*  Copyright 2018 Intel Corporation All Rights Reserved.                 
*                                                                              
*  The source code contained or described herein and all documents related     
*  to the source code ("Material") are owned by Intel Corporation or its    
*  suppliers or licensors. Title to the Material remains with Intel            
*  Corporation or its suppliers and licensors. The Material contains trade     
*  secrets and proprietary and confidential information of Intel or its        
*  suppliers and licensors. The Material is protected by worldwide copyright   
*  and trade secret laws and treaty provisions. No part of the Material may    
*  be used, copied, reproduced, modified, published, uploaded, posted,         
*  transmitted, distributed, or disclosed in any way without Intel's prior     
*  express written permission.                                                 
*                                                                              
*  No license under any patent, copyright, trade secret or other intellectual  
*  property right is granted to or conferred upon you by disclosure or         
*  delivery of the Materials, either expressly, by implication, inducement,    
*  estoppel or otherwise. Any license under such intellectual property rights  
*  must be express and approved by Intel in writing.                           
*                                                                              
*------------------------------------------------------------------------------
*  Auto-generated by /p/hdk/rtl/proj_tools/sl2_tools/sl2_tools-srvr10nm-18ww21b/scripts/i_csrs/i_csrs.pl
*  i_csrs.pl Version 1.5 last modified on Thursday 5/24/18 14:54:42
*  /p/hdk/rtl/proj_tools/sl2_tools/sl2_tools-srvr10nm-18ww21b/scripts/i_csrs/i_csrs.pl -C -RVREGS -ST fxr_rx_hp -o /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/fxr /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/repo_xml/300_Memory_Map.xml /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/repo_xml/331_Memory_Map_RX_HP.xml
*------------------------------------------------------------------------------
*/

#ifndef DEF_FXR_RX_HP_SW_DEF
#define DEF_FXR_RX_HP_SW_DEF

#ifndef FXR_RX_HP_CSRS
#define FXR_RX_HP_CSRS									0x000000000000
#endif
#define FXR_NUM_CONTEXTS								256
#define FXR_NUM_PIDS									4096
#define FXR_MAX_CONTEXT									255
#define FXR_TX_CONTEXT_ENTRIES								128
#define FXR_TX_CONTEXT_MAX								127
#define FXR_RX_CONTEXT_ENTRIES								32
#define FXR_RX_CONTEXT_MAX								31
#define FXR_NUM_SL									32
#define FXR_MAX_SL									31
#define RX_HP_BASE									0
#define RX_HP_ENTRY_POINT_CNT								128
#define RX_HP_EP_MSB									127
#define RX_HP_OPCODE_MAP_DEPTH								16
#define RX_HP_MAP_MSB									15
#define RX_HP_CODE_ARRAY_DEPTH								32768
#define RX_HP_CODE_MSB									32767
#define RX_HP_VTPID_CAM_DEPTH								16
#define RX_HP_VTPID_CAM_MSB								15
#define RX_HP_NPTL_MAX_CONTEXTS								160
/*
* Table #4 of fxr_top - RXHP_CFG_CTL
* This is the general configuration and control register for RXHP. The register 
* resets to the expected value, so setting a bit here indicates that some 
* expected mode of operation is being overridden.
*/
#define FXR_RXHP_CFG_CTL								(FXR_RX_HP_CSRS + 0x000000060000)
#define FXR_RXHP_CFG_CTL_RESETCSR							0x3210000000007000ull
#define FXR_RXHP_CFG_CTL_CHINT_MAP_SHIFT						48
#define FXR_RXHP_CFG_CTL_CHINT_MAP_MASK							0xFFFFull
#define FXR_RXHP_CFG_CTL_CHINT_MAP_SMASK						0xFFFF000000000000ull
#define FXR_RXHP_CFG_CTL_DEFAULT_8B_PKEY_SHIFT						32
#define FXR_RXHP_CFG_CTL_DEFAULT_8B_PKEY_MASK						0xFFFFull
#define FXR_RXHP_CFG_CTL_DEFAULT_8B_PKEY_SMASK						0xFFFF00000000ull
#define FXR_RXHP_CFG_CTL_RESERVED_31_15_SHIFT						15
#define FXR_RXHP_CFG_CTL_RESERVED_31_15_MASK						0x1FFFFull
#define FXR_RXHP_CFG_CTL_RESERVED_31_15_SMASK						0xFFFF8000ull
#define FXR_RXHP_CFG_CTL_PSC_RND_REPLACE_SHIFT						14
#define FXR_RXHP_CFG_CTL_PSC_RND_REPLACE_MASK						0x1ull
#define FXR_RXHP_CFG_CTL_PSC_RND_REPLACE_SMASK						0x4000ull
#define FXR_RXHP_CFG_CTL_ARB_GOLDEN_ITEM_DELAY_SHIFT					11
#define FXR_RXHP_CFG_CTL_ARB_GOLDEN_ITEM_DELAY_MASK					0x7ull
#define FXR_RXHP_CFG_CTL_ARB_GOLDEN_ITEM_DELAY_SMASK					0x3800ull
#define FXR_RXHP_CFG_CTL_DFD_SELECT_SHIFT						8
#define FXR_RXHP_CFG_CTL_DFD_SELECT_MASK						0x7ull
#define FXR_RXHP_CFG_CTL_DFD_SELECT_SMASK						0x700ull
#define FXR_RXHP_CFG_CTL_DMA_STALL_Y_SHIFT						5
#define FXR_RXHP_CFG_CTL_DMA_STALL_Y_MASK						0x7ull
#define FXR_RXHP_CFG_CTL_DMA_STALL_Y_SMASK						0xE0ull
#define FXR_RXHP_CFG_CTL_DMA_STALL_X_SHIFT						2
#define FXR_RXHP_CFG_CTL_DMA_STALL_X_MASK						0x7ull
#define FXR_RXHP_CFG_CTL_DMA_STALL_X_SMASK						0x1Cull
#define FXR_RXHP_CFG_CTL_DISABLE_VTPID_MATCHING_SHIFT					1
#define FXR_RXHP_CFG_CTL_DISABLE_VTPID_MATCHING_MASK					0x1ull
#define FXR_RXHP_CFG_CTL_DISABLE_VTPID_MATCHING_SMASK					0x2ull
#define FXR_RXHP_CFG_CTL_DISABLE_VTPID_NONMATCHING_SHIFT				0
#define FXR_RXHP_CFG_CTL_DISABLE_VTPID_NONMATCHING_MASK					0x1ull
#define FXR_RXHP_CFG_CTL_DISABLE_VTPID_NONMATCHING_SMASK				0x1ull
/*
* Table #5 of fxr_top - RXHP_CFG_VTPID_CAM
* This is the vTPID to TPID remapping CAM. UID is used to find a match in the 
* CAM. If an entry exists with that UID, The TPID in the packet (now considered 
* a vTPID) is added to the TPID_BASE provided in the CAM entry to yield a 
* remapped TPID. If the UID does not match in the CAM, the TPID in the packet is 
* used without any remapping.
*/
#define FXR_RXHP_CFG_VTPID_CAM								(FXR_RX_HP_CSRS + 0x000000060800)
#define FXR_RXHP_CFG_VTPID_CAM_RESETCSR							0x0000000000000000ull
#define FXR_RXHP_CFG_VTPID_CAM_RESERVED_63_45_SHIFT					45
#define FXR_RXHP_CFG_VTPID_CAM_RESERVED_63_45_MASK					0x7FFFFull
#define FXR_RXHP_CFG_VTPID_CAM_RESERVED_63_45_SMASK					0xFFFFE00000000000ull
#define FXR_RXHP_CFG_VTPID_CAM_TPID_BASE_SHIFT						33
#define FXR_RXHP_CFG_VTPID_CAM_TPID_BASE_MASK						0xFFFull
#define FXR_RXHP_CFG_VTPID_CAM_TPID_BASE_SMASK						0x1FFE00000000ull
#define FXR_RXHP_CFG_VTPID_CAM_VALID_SHIFT						32
#define FXR_RXHP_CFG_VTPID_CAM_VALID_MASK						0x1ull
#define FXR_RXHP_CFG_VTPID_CAM_VALID_SMASK						0x100000000ull
#define FXR_RXHP_CFG_VTPID_CAM_UID_SHIFT						0
#define FXR_RXHP_CFG_VTPID_CAM_UID_MASK							0xFFFFFFFFull
#define FXR_RXHP_CFG_VTPID_CAM_UID_SMASK						0xFFFFFFFFull
/*
* Table #6 of fxr_top - RXHP_CFG_HDR_PE
* Controls PE firmware authentication, enabling PEs, and PE issue mode. The 
* header PEs are divided into two clusters consisting of PE 0-1 and PE 2-3. In 
* order for the hardware to schedule packets to a PE, it must be enabled and 
* authenticated. At least one PE must be enabled per cluster that will process 
* packets.
*/
#define FXR_RXHP_CFG_HDR_PE								(FXR_RX_HP_CSRS + 0x000000060880)
#define FXR_RXHP_CFG_HDR_PE_RESETCSR							0x0000000000FF0000ull
#define FXR_RXHP_CFG_HDR_PE_USE_FIRMWARE_SHIFT						32
#define FXR_RXHP_CFG_HDR_PE_USE_FIRMWARE_MASK						0xFFFFFFFFull
#define FXR_RXHP_CFG_HDR_PE_USE_FIRMWARE_SMASK						0xFFFFFFFF00000000ull
#define FXR_RXHP_CFG_HDR_PE_RESERVED_31_24_SHIFT					24
#define FXR_RXHP_CFG_HDR_PE_RESERVED_31_24_MASK						0xFFull
#define FXR_RXHP_CFG_HDR_PE_RESERVED_31_24_SMASK					0xFF000000ull
#define FXR_RXHP_CFG_HDR_PE_PE_RAM_RESET_MASK_SHIFT					20
#define FXR_RXHP_CFG_HDR_PE_PE_RAM_RESET_MASK_MASK					0xFull
#define FXR_RXHP_CFG_HDR_PE_PE_RAM_RESET_MASK_SMASK					0xF00000ull
#define FXR_RXHP_CFG_HDR_PE_PE_RAM_WRITE_MASK_SHIFT					16
#define FXR_RXHP_CFG_HDR_PE_PE_RAM_WRITE_MASK_MASK					0xFull
#define FXR_RXHP_CFG_HDR_PE_PE_RAM_WRITE_MASK_SMASK					0xF0000ull
#define FXR_RXHP_CFG_HDR_PE_AUTHENTICATION_SUCCESS_SHIFT				12
#define FXR_RXHP_CFG_HDR_PE_AUTHENTICATION_SUCCESS_MASK					0xFull
#define FXR_RXHP_CFG_HDR_PE_AUTHENTICATION_SUCCESS_SMASK				0xF000ull
#define FXR_RXHP_CFG_HDR_PE_AUTHENTICATION_COMPLETE_SHIFT				8
#define FXR_RXHP_CFG_HDR_PE_AUTHENTICATION_COMPLETE_MASK				0xFull
#define FXR_RXHP_CFG_HDR_PE_AUTHENTICATION_COMPLETE_SMASK				0xF00ull
#define FXR_RXHP_CFG_HDR_PE_START_AUTHENTICATION_SHIFT					4
#define FXR_RXHP_CFG_HDR_PE_START_AUTHENTICATION_MASK					0xFull
#define FXR_RXHP_CFG_HDR_PE_START_AUTHENTICATION_SMASK					0xF0ull
#define FXR_RXHP_CFG_HDR_PE_PE_ENABLE_SHIFT						0
#define FXR_RXHP_CFG_HDR_PE_PE_ENABLE_MASK						0xFull
#define FXR_RXHP_CFG_HDR_PE_PE_ENABLE_SMASK						0xFull
/*
* Table #7 of fxr_top - RXHP_CFG_E2E_CREDIT_FUND_MAX
* This CSR contains the configuration parameters necessary to configure the max 
* number of credit funds outstanding to the RXE2E. Any value > reset value will 
* be clamped to the reset value to prevent RXHP input fifo overrun, i.e. the 
* effective credit max = min(csr value, reset value). These credit funds will be 
* used by RXE2E to send header flits and packet status to RXHP. It is ok to 
* write these while system is running. Note that 0 will shut off an interface 
* 
*/
#define FXR_RXHP_CFG_E2E_CREDIT_FUND_MAX						(FXR_RX_HP_CSRS + 0x000000060888)
#define FXR_RXHP_CFG_E2E_CREDIT_FUND_MAX_RESETCSR					0x0000820820820820ull
#define FXR_RXHP_CFG_E2E_CREDIT_FUND_MAX_RESERVED_63_48_SHIFT				48
#define FXR_RXHP_CFG_E2E_CREDIT_FUND_MAX_RESERVED_63_48_MASK				0xFFFFull
#define FXR_RXHP_CFG_E2E_CREDIT_FUND_MAX_RESERVED_63_48_SMASK				0xFFFF000000000000ull
#define FXR_RXHP_CFG_E2E_CREDIT_FUND_MAX_TC3_PKT_STATUS_CRDT_FUND_MAX_SHIFT		42
#define FXR_RXHP_CFG_E2E_CREDIT_FUND_MAX_TC3_PKT_STATUS_CRDT_FUND_MAX_MASK		0x3Full
#define FXR_RXHP_CFG_E2E_CREDIT_FUND_MAX_TC3_PKT_STATUS_CRDT_FUND_MAX_SMASK		0xFC0000000000ull
#define FXR_RXHP_CFG_E2E_CREDIT_FUND_MAX_TC2_PKT_STATUS_CRDT_FUND_MAX_SHIFT		36
#define FXR_RXHP_CFG_E2E_CREDIT_FUND_MAX_TC2_PKT_STATUS_CRDT_FUND_MAX_MASK		0x3Full
#define FXR_RXHP_CFG_E2E_CREDIT_FUND_MAX_TC2_PKT_STATUS_CRDT_FUND_MAX_SMASK		0x3F000000000ull
#define FXR_RXHP_CFG_E2E_CREDIT_FUND_MAX_TC1_PKT_STATUS_CRDT_FUND_MAX_SHIFT		30
#define FXR_RXHP_CFG_E2E_CREDIT_FUND_MAX_TC1_PKT_STATUS_CRDT_FUND_MAX_MASK		0x3Full
#define FXR_RXHP_CFG_E2E_CREDIT_FUND_MAX_TC1_PKT_STATUS_CRDT_FUND_MAX_SMASK		0xFC0000000ull
#define FXR_RXHP_CFG_E2E_CREDIT_FUND_MAX_TC0_PKT_STATUS_CRDT_FUND_MAX_SHIFT		24
#define FXR_RXHP_CFG_E2E_CREDIT_FUND_MAX_TC0_PKT_STATUS_CRDT_FUND_MAX_MASK		0x3Full
#define FXR_RXHP_CFG_E2E_CREDIT_FUND_MAX_TC0_PKT_STATUS_CRDT_FUND_MAX_SMASK		0x3F000000ull
#define FXR_RXHP_CFG_E2E_CREDIT_FUND_MAX_TC3_HDR_FLIT_CRDT_FUND_MAX_SHIFT		18
#define FXR_RXHP_CFG_E2E_CREDIT_FUND_MAX_TC3_HDR_FLIT_CRDT_FUND_MAX_MASK		0x3Full
#define FXR_RXHP_CFG_E2E_CREDIT_FUND_MAX_TC3_HDR_FLIT_CRDT_FUND_MAX_SMASK		0xFC0000ull
#define FXR_RXHP_CFG_E2E_CREDIT_FUND_MAX_TC2_HDR_FLIT_CRDT_FUND_MAX_SHIFT		12
#define FXR_RXHP_CFG_E2E_CREDIT_FUND_MAX_TC2_HDR_FLIT_CRDT_FUND_MAX_MASK		0x3Full
#define FXR_RXHP_CFG_E2E_CREDIT_FUND_MAX_TC2_HDR_FLIT_CRDT_FUND_MAX_SMASK		0x3F000ull
#define FXR_RXHP_CFG_E2E_CREDIT_FUND_MAX_TC1_HDR_FLIT_CRDT_FUND_MAX_SHIFT		6
#define FXR_RXHP_CFG_E2E_CREDIT_FUND_MAX_TC1_HDR_FLIT_CRDT_FUND_MAX_MASK		0x3Full
#define FXR_RXHP_CFG_E2E_CREDIT_FUND_MAX_TC1_HDR_FLIT_CRDT_FUND_MAX_SMASK		0xFC0ull
#define FXR_RXHP_CFG_E2E_CREDIT_FUND_MAX_TC0_HDR_FLIT_CRDT_FUND_MAX_SHIFT		0
#define FXR_RXHP_CFG_E2E_CREDIT_FUND_MAX_TC0_HDR_FLIT_CRDT_FUND_MAX_MASK		0x3Full
#define FXR_RXHP_CFG_E2E_CREDIT_FUND_MAX_TC0_HDR_FLIT_CRDT_FUND_MAX_SMASK		0x3Full
/*
* Table #8 of fxr_top - RXHP_CFG_CREDIT_DISABLE
* This CSR contains the disable bits for credits for HIARB and RXDMA commands. 
* Setting a disable to 1 will make it appear that there are no credit funds for 
* a transfer, so no further transfer requests will be initiated. These bits do 
* not affect the number of credit funds nor the accumulation of more credit 
* funds while the disable is 1. Disabling and then enabling an interface with 
* these bits looks just like a transmission pause. 
*/
#define FXR_RXHP_CFG_CREDIT_DISABLE							(FXR_RX_HP_CSRS + 0x000000060890)
#define FXR_RXHP_CFG_CREDIT_DISABLE_RESETCSR						0x0000000000000000ull
#define FXR_RXHP_CFG_CREDIT_DISABLE_RESERVED_63_5_SHIFT					5
#define FXR_RXHP_CFG_CREDIT_DISABLE_RESERVED_63_5_MASK					0x7FFFFFFFFFFFFFFull
#define FXR_RXHP_CFG_CREDIT_DISABLE_RESERVED_63_5_SMASK					0xFFFFFFFFFFFFFFE0ull
#define FXR_RXHP_CFG_CREDIT_DISABLE_HIARB_CREDIT_DISABLE_SHIFT				4
#define FXR_RXHP_CFG_CREDIT_DISABLE_HIARB_CREDIT_DISABLE_MASK				0x1ull
#define FXR_RXHP_CFG_CREDIT_DISABLE_HIARB_CREDIT_DISABLE_SMASK				0x10ull
#define FXR_RXHP_CFG_CREDIT_DISABLE_RXDMA_CREDIT_DISABLE_SHIFT				0
#define FXR_RXHP_CFG_CREDIT_DISABLE_RXDMA_CREDIT_DISABLE_MASK				0xFull
#define FXR_RXHP_CFG_CREDIT_DISABLE_RXDMA_CREDIT_DISABLE_SMASK				0xFull
/*
* Table #9 of fxr_top - RXHP_CFG_PTE_CACHE_CLIENT_DISABLE
* This CSR contains the disable bit for client pte cache requests. A one value 
* will hold off any client requests. This has no effect on csr pte cache 
* requests. 
*/
#define FXR_RXHP_CFG_PTE_CACHE_CLIENT_DISABLE						(FXR_RX_HP_CSRS + 0x000000060898)
#define FXR_RXHP_CFG_PTE_CACHE_CLIENT_DISABLE_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_CFG_PTE_CACHE_CLIENT_DISABLE_RESERVED_63_1_SHIFT			1
#define FXR_RXHP_CFG_PTE_CACHE_CLIENT_DISABLE_RESERVED_63_1_MASK			0x7FFFFFFFFFFFFFFFull
#define FXR_RXHP_CFG_PTE_CACHE_CLIENT_DISABLE_RESERVED_63_1_SMASK			0xFFFFFFFFFFFFFFFEull
#define FXR_RXHP_CFG_PTE_CACHE_CLIENT_DISABLE_CLIENT_PTE_CACHE_REQUEST_DISABLE_SHIFT	0
#define FXR_RXHP_CFG_PTE_CACHE_CLIENT_DISABLE_CLIENT_PTE_CACHE_REQUEST_DISABLE_MASK	0x1ull
#define FXR_RXHP_CFG_PTE_CACHE_CLIENT_DISABLE_CLIENT_PTE_CACHE_REQUEST_DISABLE_SMASK	0x1ull
/*
* Table #10 of fxr_top - RXHP_CFG_CACHE_HASH_SELECT
* This CSR is used to select an address hash function for the PTE and PSC Caches 
* from a set of 4 pre-defined hash functions optimized for different traffic 
* patterns.
*/
#define FXR_RXHP_CFG_CACHE_HASH_SELECT							(FXR_RX_HP_CSRS + 0x0000000608A0)
#define FXR_RXHP_CFG_CACHE_HASH_SELECT_RESETCSR						0x0000000000000000ull
#define FXR_RXHP_CFG_CACHE_HASH_SELECT_RESERVED_63_4_SHIFT				4
#define FXR_RXHP_CFG_CACHE_HASH_SELECT_RESERVED_63_4_MASK				0xFFFFFFFFFFFFFFFull
#define FXR_RXHP_CFG_CACHE_HASH_SELECT_RESERVED_63_4_SMASK				0xFFFFFFFFFFFFFFF0ull
#define FXR_RXHP_CFG_CACHE_HASH_SELECT_PSC_HASH_SELECT_SHIFT				2
#define FXR_RXHP_CFG_CACHE_HASH_SELECT_PSC_HASH_SELECT_MASK				0x3ull
#define FXR_RXHP_CFG_CACHE_HASH_SELECT_PSC_HASH_SELECT_SMASK				0xCull
#define FXR_RXHP_CFG_CACHE_HASH_SELECT_PTE_HASH_SELECT_SHIFT				0
#define FXR_RXHP_CFG_CACHE_HASH_SELECT_PTE_HASH_SELECT_MASK				0x3ull
#define FXR_RXHP_CFG_CACHE_HASH_SELECT_PTE_HASH_SELECT_SMASK				0x3ull
/*
* Table #11 of fxr_top - RXHP_CFG_PTE_CACHE_ACCESS_CTL
* The PTE Cache access control can be used to write or read, PTE cache data and 
* tag memories as well as invalidate tag entries and flush cache data to host 
* memory. For reads, if the requested address is not in cache, a fill request is 
* sent to hiarb with possibly an evict request. For writes, if the requested 
* address is not in cache, an evict request is sent to hiarb (assuming no 
* invalid entries in tag line) and then the PTE Cache Data is written.
*/
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_CTL						(FXR_RX_HP_CSRS + 0x0000000608A8)
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_CTL_RESETCSR					0x0063FFFFFE000000ull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_CTL_RESERVED_63_55_SHIFT				55
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_CTL_RESERVED_63_55_MASK				0x1FFull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_CTL_RESERVED_63_55_SMASK				0xFF80000000000000ull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_CTL_BUSY_SHIFT					54
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_CTL_BUSY_MASK					0x1ull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_CTL_BUSY_SMASK					0x40000000000000ull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_CTL_CMD_SHIFT					50
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_CTL_CMD_MASK					0xFull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_CTL_CMD_SMASK					0x3C000000000000ull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_CTL_MASK_ADDRESS_SHIFT				25
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_CTL_MASK_ADDRESS_MASK				0x1FFFFFFull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_CTL_MASK_ADDRESS_SMASK				0x3FFFFFE000000ull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_CTL_ADDRESS_SHIFT					0
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_CTL_ADDRESS_MASK					0x1FFFFFFull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_CTL_ADDRESS_SMASK					0x1FFFFFFull
/*
* Table #12 of fxr_top - RXHP_CFG_PTE_CACHE_ACCESS_DATA
* This csr is used to read, write (warmup/teardown) the PTE Cache. See 
* #%%#RXHP_CFG_PTE_CACHE_ACCESS_CTL#%%# for proper technique. .
*/
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_DATA						(FXR_RX_HP_CSRS + 0x0000000608B0)
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_DATA_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_DATA_DATA_SHIFT					0
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_DATA_DATA_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_DATA_DATA_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #13 of fxr_top - RXHP_CFG_PTE_CACHE_ACCESS_DATA3
* This csr is used to read, write (warmup/teardown) the PTE Cache. See 
* #%%#RXHP_CFG_PTE_CACHE_ACCESS_CTL#%%# for proper technique. .
*/
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_DATA3						(FXR_RX_HP_CSRS + 0x0000000608D0)
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_DATA3_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_DATA3_RESERVED_63_11_SHIFT			11
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_DATA3_RESERVED_63_11_MASK				0x1FFFFFFFFFFFFFull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_DATA3_RESERVED_63_11_SMASK			0xFFFFFFFFFFFFF800ull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_DATA3_DATA_SHIFT					0
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_DATA3_DATA_MASK					0x7FFull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_DATA3_DATA_SMASK					0x7FFull
/*
* Table #14 of fxr_top - RXHP_CFG_PTE_CACHE_ACCESS_DATA_BIT_ENABLE
* This csr is used for bit enable writes to the PTE Cache. This csr is only used 
* with CACHE_CMD_WR. If this csr is all 1's, no read or fill is necessary. If 
* this csr is not all 1's, we need to do a read-modify-write which may require a 
* fill from host memory. See #%%#RXHP_CFG_PTE_CACHE_ACCESS_CTL#%%# for proper 
* technique. .
*/
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_DATA_BIT_ENABLE					(FXR_RX_HP_CSRS + 0x0000000608E0)
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_DATA_BIT_ENABLE_RESETCSR				0xFFFFFFFFFFFFFFFFull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_DATA_BIT_ENABLE_BIT_ENABLE_SHIFT			0
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_DATA_BIT_ENABLE_BIT_ENABLE_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_DATA_BIT_ENABLE_BIT_ENABLE_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #15 of fxr_top - RXHP_CFG_PTE_CACHE_ACCESS_DATA_BIT_ENABLE3
* This csr is used for bit enable writes to the PTE Cache. This csr is only used 
* with CACHE_CMD_WR. If this csr is all 1's, no read or fill is necessary. If 
* this csr is not all 1's, we need to do a read-modify-write which may require a 
* fill from host memory. See #%%#RXHP_CFG_PTE_CACHE_ACCESS_CTL#%%# for proper 
* technique. .
*/
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_DATA_BIT_ENABLE3					(FXR_RX_HP_CSRS + 0x000000060900)
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_DATA_BIT_ENABLE3_RESETCSR				0x00000000000007FFull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_DATA_BIT_ENABLE3_RESERVED_63_11_SHIFT		11
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_DATA_BIT_ENABLE3_RESERVED_63_11_MASK		0x1FFFFFFFFFFFFFull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_DATA_BIT_ENABLE3_RESERVED_63_11_SMASK		0xFFFFFFFFFFFFF800ull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_DATA_BIT_ENABLE3_BIT_ENABLE_SHIFT			0
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_DATA_BIT_ENABLE3_BIT_ENABLE_MASK			0x7FFull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_DATA_BIT_ENABLE3_BIT_ENABLE_SMASK			0x7FFull
/*
* Table #16 of fxr_top - RXHP_CFG_PTE_CACHE_ACCESS_TAG
* This is the pte cache tag data csr. This csr is used to read, write the PTE 
* Cache Tag. See #%%#RXHP_CFG_PTE_CACHE_ACCESS_CTL#%%# for proper technique. 
* This layout is for two ways. There are 2 of these regs for a total of 4 
* ways.
*/
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_TAG						(FXR_RX_HP_CSRS + 0x000000060910)
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_TAG_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_TAG_RESERVE_HI_SHIFT				58
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_TAG_RESERVE_HI_MASK				0x3Full
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_TAG_RESERVE_HI_SMASK				0xFC00000000000000ull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_TAG_TAG_WAY_VALID_HI_SHIFT			57
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_TAG_TAG_WAY_VALID_HI_MASK				0x1ull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_TAG_TAG_WAY_VALID_HI_SMASK			0x200000000000000ull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_TAG_TAG_WAY_ADDR_HI_SHIFT				32
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_TAG_TAG_WAY_ADDR_HI_MASK				0x1FFFFFFull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_TAG_TAG_WAY_ADDR_HI_SMASK				0x1FFFFFF00000000ull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_TAG_RESERVE_LO_SHIFT				26
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_TAG_RESERVE_LO_MASK				0x3Full
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_TAG_RESERVE_LO_SMASK				0xFC000000ull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_TAG_TAG_WAY_VALID_LO_SHIFT			25
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_TAG_TAG_WAY_VALID_LO_MASK				0x1ull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_TAG_TAG_WAY_VALID_LO_SMASK			0x2000000ull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_TAG_TAG_WAY_ADDR_LO_SHIFT				0
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_TAG_TAG_WAY_ADDR_LO_MASK				0x1FFFFFFull
#define FXR_RXHP_CFG_PTE_CACHE_ACCESS_TAG_TAG_WAY_ADDR_LO_SMASK				0x1FFFFFFull
/*
* Table #17 of fxr_top - RXHP_CFG_MAX_PSN_DISTANCE
* Periodically, the packet status from RXE2E will have the rxe2e_mc0_packet_status.psn_non_e2e_ctl_connect_union.non_e2e_ctl_connect.special_ack 
* bit set to indicate OTR gets a special ack containing the expected ordered psn 
* and the max PSN distance. This csr contains 2 values for max_psn_distance. If 
* the big_scoreboard_available bit is set in the packet status, RXHP will use 
* big_max_psn_dist, otherwise it will use small_max_psn_dist.
*/
#define FXR_RXHP_CFG_MAX_PSN_DISTANCE							(FXR_RX_HP_CSRS + 0x000000060920)
#define FXR_RXHP_CFG_MAX_PSN_DISTANCE_RESETCSR						0x0000000003FF001Dull
#define FXR_RXHP_CFG_MAX_PSN_DISTANCE_RESERVED_63_32_SHIFT				32
#define FXR_RXHP_CFG_MAX_PSN_DISTANCE_RESERVED_63_32_MASK				0xFFFFFFFFull
#define FXR_RXHP_CFG_MAX_PSN_DISTANCE_RESERVED_63_32_SMASK				0xFFFFFFFF00000000ull
#define FXR_RXHP_CFG_MAX_PSN_DISTANCE_BIG_MAX_PSN_DIST_SHIFT				16
#define FXR_RXHP_CFG_MAX_PSN_DISTANCE_BIG_MAX_PSN_DIST_MASK				0xFFFFull
#define FXR_RXHP_CFG_MAX_PSN_DISTANCE_BIG_MAX_PSN_DIST_SMASK				0xFFFF0000ull
#define FXR_RXHP_CFG_MAX_PSN_DISTANCE_SMALL_MAX_PSN_DIST_SHIFT				0
#define FXR_RXHP_CFG_MAX_PSN_DISTANCE_SMALL_MAX_PSN_DIST_MASK				0xFFFFull
#define FXR_RXHP_CFG_MAX_PSN_DISTANCE_SMALL_MAX_PSN_DIST_SMASK				0xFFFFull
/*
* Table #18 of fxr_top - RXHP_CFG_NPTL_CTL
* This CSR is used for control and configuration of the non-portal 
* engine.
*/
#define FXR_RXHP_CFG_NPTL_CTL								(FXR_RX_HP_CSRS + 0x000000060928)
#define FXR_RXHP_CFG_NPTL_CTL_RESETCSR							0x0000000000000000ull
#define FXR_RXHP_CFG_NPTL_CTL_RESERVED_63_6_SHIFT					6
#define FXR_RXHP_CFG_NPTL_CTL_RESERVED_63_6_MASK					0x3FFFFFFFFFFFFFFull
#define FXR_RXHP_CFG_NPTL_CTL_RESERVED_63_6_SMASK					0xFFFFFFFFFFFFFFC0ull
#define FXR_RXHP_CFG_NPTL_CTL_RCV_RSM_ENABLE_SHIFT					5
#define FXR_RXHP_CFG_NPTL_CTL_RCV_RSM_ENABLE_MASK					0x1ull
#define FXR_RXHP_CFG_NPTL_CTL_RCV_RSM_ENABLE_SMASK					0x20ull
#define FXR_RXHP_CFG_NPTL_CTL_RCV_BYPASS_ENABLE_SHIFT					4
#define FXR_RXHP_CFG_NPTL_CTL_RCV_BYPASS_ENABLE_MASK					0x1ull
#define FXR_RXHP_CFG_NPTL_CTL_RCV_BYPASS_ENABLE_SMASK					0x10ull
#define FXR_RXHP_CFG_NPTL_CTL_RESERVED_3_2_SHIFT					2
#define FXR_RXHP_CFG_NPTL_CTL_RESERVED_3_2_MASK						0x3ull
#define FXR_RXHP_CFG_NPTL_CTL_RESERVED_3_2_SMASK					0xCull
#define FXR_RXHP_CFG_NPTL_CTL_RCV_QP_MAP_ENABLE_SHIFT					1
#define FXR_RXHP_CFG_NPTL_CTL_RCV_QP_MAP_ENABLE_MASK					0x1ull
#define FXR_RXHP_CFG_NPTL_CTL_RCV_QP_MAP_ENABLE_SMASK					0x2ull
#define FXR_RXHP_CFG_NPTL_CTL_RESERVED_0_SHIFT						0
#define FXR_RXHP_CFG_NPTL_CTL_RESERVED_0_MASK						0x1ull
#define FXR_RXHP_CFG_NPTL_CTL_RESERVED_0_SMASK						0x1ull
/*
* Table #19 of fxr_top - RXHP_CFG_NPTL_MAX_CONTEXTS
* This CSR is used by software for determining the number of receive 
* contexts.
*/
#define FXR_RXHP_CFG_NPTL_MAX_CONTEXTS							(FXR_RX_HP_CSRS + 0x000000060930)
#define FXR_RXHP_CFG_NPTL_MAX_CONTEXTS_RESETCSR						0x00000000000000A0ull
#define FXR_RXHP_CFG_NPTL_MAX_CONTEXTS_RESERVED_63_8_SHIFT				8
#define FXR_RXHP_CFG_NPTL_MAX_CONTEXTS_RESERVED_63_8_MASK				0xFFFFFFFFFFFFFFull
#define FXR_RXHP_CFG_NPTL_MAX_CONTEXTS_RESERVED_63_8_SMASK				0xFFFFFFFFFFFFFF00ull
#define FXR_RXHP_CFG_NPTL_MAX_CONTEXTS_CNT_SHIFT					0
#define FXR_RXHP_CFG_NPTL_MAX_CONTEXTS_CNT_MASK						0xFFull
#define FXR_RXHP_CFG_NPTL_MAX_CONTEXTS_CNT_SMASK					0xFFull
/*
* Table #20 of fxr_top - RXHP_CFG_NPTL_BTH_QP
* This CSR is used to specify the QP value used for identifying KDETH packets on 
* the receive side. In normal use, software should program this to the same 
* value as SendBthQP. The reason for having two CSRs for the same value is to 
* separate TX and RX implementation.
*/
#define FXR_RXHP_CFG_NPTL_BTH_QP							(FXR_RX_HP_CSRS + 0x000000060938)
#define FXR_RXHP_CFG_NPTL_BTH_QP_RESETCSR						0x0000000000000000ull
#define FXR_RXHP_CFG_NPTL_BTH_QP_RESERVED_63_24_SHIFT					24
#define FXR_RXHP_CFG_NPTL_BTH_QP_RESERVED_63_24_MASK					0xFFFFFFFFFFull
#define FXR_RXHP_CFG_NPTL_BTH_QP_RESERVED_63_24_SMASK					0xFFFFFFFFFF000000ull
#define FXR_RXHP_CFG_NPTL_BTH_QP_KDETH_QP_SHIFT						16
#define FXR_RXHP_CFG_NPTL_BTH_QP_KDETH_QP_MASK						0xFFull
#define FXR_RXHP_CFG_NPTL_BTH_QP_KDETH_QP_SMASK						0xFF0000ull
#define FXR_RXHP_CFG_NPTL_BTH_QP_RESERVED_15_0_SHIFT					0
#define FXR_RXHP_CFG_NPTL_BTH_QP_RESERVED_15_0_MASK					0xFFFFull
#define FXR_RXHP_CFG_NPTL_BTH_QP_RESERVED_15_0_SMASK					0xFFFFull
/*
* Table #21 of fxr_top - RXHP_CFG_NPTL_MULTICAST
* This CSR is used to specify the context used for multicast packets. Multicast 
* 9B packets are identified by the LRH.DLID field being in the range of 0xC000 
* to 0xFFFE inclusive. Receive context numbers are in the range of 0 to 159 
* inclusive. Values in the range 160 to 255 inclusive are invalid, and cause 
* packets to be dropped.
*/
#define FXR_RXHP_CFG_NPTL_MULTICAST							(FXR_RX_HP_CSRS + 0x000000060940)
#define FXR_RXHP_CFG_NPTL_MULTICAST_RESETCSR						0x0000000000000000ull
#define FXR_RXHP_CFG_NPTL_MULTICAST_RESERVED_63_8_SHIFT					8
#define FXR_RXHP_CFG_NPTL_MULTICAST_RESERVED_63_8_MASK					0xFFFFFFFFFFFFFFull
#define FXR_RXHP_CFG_NPTL_MULTICAST_RESERVED_63_8_SMASK					0xFFFFFFFFFFFFFF00ull
#define FXR_RXHP_CFG_NPTL_MULTICAST_MULTICAST_CONTEXT_SHIFT				0
#define FXR_RXHP_CFG_NPTL_MULTICAST_MULTICAST_CONTEXT_MASK				0xFFull
#define FXR_RXHP_CFG_NPTL_MULTICAST_MULTICAST_CONTEXT_SMASK				0xFFull
/*
* Table #22 of fxr_top - RXHP_CFG_NPTL_BYPASS
* This CSR is used to specify the context used for bypass packets. Receive 
* context numbers are in the range of 0 to 159 inclusive. Values in the range 
* 160 to 255 inclusive are invalid, and cause packets to be dropped.
*/
#define FXR_RXHP_CFG_NPTL_BYPASS							(FXR_RX_HP_CSRS + 0x000000060948)
#define FXR_RXHP_CFG_NPTL_BYPASS_RESETCSR						0x0000000000000000ull
#define FXR_RXHP_CFG_NPTL_BYPASS_RESERVED_63_21_SHIFT					21
#define FXR_RXHP_CFG_NPTL_BYPASS_RESERVED_63_21_MASK					0x7FFFFFFFFFFull
#define FXR_RXHP_CFG_NPTL_BYPASS_RESERVED_63_21_SMASK					0xFFFFFFFFFFE00000ull
#define FXR_RXHP_CFG_NPTL_BYPASS_HDR_SIZE_SHIFT						16
#define FXR_RXHP_CFG_NPTL_BYPASS_HDR_SIZE_MASK						0x1Full
#define FXR_RXHP_CFG_NPTL_BYPASS_HDR_SIZE_SMASK						0x1F0000ull
#define FXR_RXHP_CFG_NPTL_BYPASS_RESERVED_15_8_SHIFT					8
#define FXR_RXHP_CFG_NPTL_BYPASS_RESERVED_15_8_MASK					0xFFull
#define FXR_RXHP_CFG_NPTL_BYPASS_RESERVED_15_8_SMASK					0xFF00ull
#define FXR_RXHP_CFG_NPTL_BYPASS_BYPASS_CONTEXT_SHIFT					0
#define FXR_RXHP_CFG_NPTL_BYPASS_BYPASS_CONTEXT_MASK					0xFFull
#define FXR_RXHP_CFG_NPTL_BYPASS_BYPASS_CONTEXT_SMASK					0xFFull
/*
* Table #23 of fxr_top - RXHP_CFG_NPTL_VL15
* This CSR is used to specify the receive context used for VL15 packets. VL15 
* packets are identified by the 4-bit VL sideband signal from Duncan Creek 
* having the value of 15. For STL 9B packets this is the result of translating 
* the SC field through the SC2VL_r table inside Duncan Creek. Bypass packets are 
* handled separately and do not use the value in this CSR. Receive context 
* numbers are in the range of 0 to 159 inclusive. Values in the range 160 to 255 
* inclusive are invalid, and cause packets to be dropped.
*/
#define FXR_RXHP_CFG_NPTL_VL15								(FXR_RX_HP_CSRS + 0x000000060950)
#define FXR_RXHP_CFG_NPTL_VL15_RESETCSR							0x0000000000000000ull
#define FXR_RXHP_CFG_NPTL_VL15_RESERVED_63_8_SHIFT					8
#define FXR_RXHP_CFG_NPTL_VL15_RESERVED_63_8_MASK					0xFFFFFFFFFFFFFFull
#define FXR_RXHP_CFG_NPTL_VL15_RESERVED_63_8_SMASK					0xFFFFFFFFFFFFFF00ull
#define FXR_RXHP_CFG_NPTL_VL15_VL15_CONTEXT_SHIFT					0
#define FXR_RXHP_CFG_NPTL_VL15_VL15_CONTEXT_MASK					0xFFull
#define FXR_RXHP_CFG_NPTL_VL15_VL15_CONTEXT_SMASK					0xFFull
/*
* Table #24 of fxr_top - RXHP_CFG_PSC_CACHE_ACCESS_CTL
* The PSC Cache access control can be used to write or read, PSC cache data and 
* tag memories as well as invalidate tag entries and flush cache data to host 
* memory. For reads, if the requested address is not in cache, a fill request is 
* sent to hiarb with possibly an evict request. For writes, if the requested 
* address is not in cache, an evict request is sent to hiarb if current entry is 
* valid and then the PSC Cache Data is written.
*/
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_CTL						(FXR_RX_HP_CSRS + 0x000000060958)
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_CTL_RESETCSR					0x23FFFFFFE0000000ull
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_CTL_RESERVED_63_SHIFT				63
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_CTL_RESERVED_63_MASK				0x1ull
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_CTL_RESERVED_63_SMASK				0x8000000000000000ull
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_CTL_BUSY_SHIFT					62
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_CTL_BUSY_MASK					0x1ull
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_CTL_BUSY_SMASK					0x4000000000000000ull
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_CTL_CMD_SHIFT					58
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_CTL_CMD_MASK					0xFull
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_CTL_CMD_SMASK					0x3C00000000000000ull
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_CTL_MASK_ADDRESS_SHIFT				29
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_CTL_MASK_ADDRESS_MASK				0x1FFFFFFFull
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_CTL_MASK_ADDRESS_SMASK				0x3FFFFFFE0000000ull
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_CTL_ADDRESS_SHIFT					0
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_CTL_ADDRESS_MASK					0x1FFFFFFFull
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_CTL_ADDRESS_SMASK					0x1FFFFFFFull
/*
* Table #25 of fxr_top - RXHP_CFG_PSC_CACHE_ACCESS_DATA_SIDE
* This csr is used to read, write (warmup/teardown) the PSC Cache. See 
* #%%#RXHP_CFG_PSC_CACHE_ACCESS_CTL#%%# for proper technique.This is non-ME 
* piece of PSC data. 
*/
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_DATA_SIDE						(FXR_RX_HP_CSRS + 0x000000060A00)
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_DATA_SIDE_RESETCSR				0x0000000000000000ull
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_DATA_SIDE_NEXT_SHIFT				48
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_DATA_SIDE_NEXT_MASK				0xFFFFull
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_DATA_SIDE_NEXT_SMASK				0xFFFF000000000000ull
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_DATA_SIDE_PREV_SHIFT				32
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_DATA_SIDE_PREV_MASK				0xFFFFull
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_DATA_SIDE_PREV_SMASK				0xFFFF00000000ull
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_DATA_SIDE_RESERVED_31_30_SHIFT			30
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_DATA_SIDE_RESERVED_31_30_MASK			0x3ull
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_DATA_SIDE_RESERVED_31_30_SMASK			0xC0000000ull
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_DATA_SIDE_VALID_SHIFT				29
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_DATA_SIDE_VALID_MASK				0x1ull
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_DATA_SIDE_VALID_SMASK				0x20000000ull
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_DATA_SIDE_HANDLE_SHIFT				13
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_DATA_SIDE_HANDLE_MASK				0xFFFFull
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_DATA_SIDE_HANDLE_SMASK				0x1FFFE000ull
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_DATA_SIDE_TPID_SHIFT				1
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_DATA_SIDE_TPID_MASK				0xFFFull
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_DATA_SIDE_TPID_SMASK				0x1FFEull
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_DATA_SIDE_ME_SHIFT				0
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_DATA_SIDE_ME_MASK					0x1ull
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_DATA_SIDE_ME_SMASK				0x1ull
/*
* Table #26 of fxr_top - RXHP_CFG_PSC_CACHE_ACCESS_DATA_ME
* This csr is used to read, write (warmup/teardown) the PSC Cache. See 
* #%%#RXHP_CFG_PSC_CACHE_ACCESS_CTL#%%# for proper technique. .
*/
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_DATA_ME						(FXR_RX_HP_CSRS + 0x000000060A08)
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_DATA_ME_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_DATA_ME_DATA_SHIFT				0
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_DATA_ME_DATA_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_RXHP_CFG_PSC_CACHE_ACCESS_DATA_ME_DATA_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #27 of fxr_top - RXHP_CFG_CHINTS
* This CSR contains the Cache Hints to be used for commands to the HI. These are 
* muxed to the HI for the specified command. Hints are 00=Non-Allocating, 
* Non-Temporal, 01=Non-Allocating, Temporal LLC, 10=Allocating L1, Non-Temporal 
* L1, 11=Allocating L1, Temporal L1. 
*/
#define FXR_RXHP_CFG_CHINTS								(FXR_RX_HP_CSRS + 0x000000060AA0)
#define FXR_RXHP_CFG_CHINTS_RESETCSR							0x0000000000200200ull
#define FXR_RXHP_CFG_CHINTS_RESERVED_63_24_SHIFT					24
#define FXR_RXHP_CFG_CHINTS_RESERVED_63_24_MASK						0xFFFFFFFFFFull
#define FXR_RXHP_CFG_CHINTS_RESERVED_63_24_SMASK					0xFFFFFFFFFF000000ull
#define FXR_RXHP_CFG_CHINTS_CH_PSC_VICTIM_WR_SHIFT					20
#define FXR_RXHP_CFG_CHINTS_CH_PSC_VICTIM_WR_MASK					0xFull
#define FXR_RXHP_CFG_CHINTS_CH_PSC_VICTIM_WR_SMASK					0xF00000ull
#define FXR_RXHP_CFG_CHINTS_CH_PSC_FLUSH_WR_SHIFT					16
#define FXR_RXHP_CFG_CHINTS_CH_PSC_FLUSH_WR_MASK					0xFull
#define FXR_RXHP_CFG_CHINTS_CH_PSC_FLUSH_WR_SMASK					0xF0000ull
#define FXR_RXHP_CFG_CHINTS_CH_PSC_RD_SHIFT						12
#define FXR_RXHP_CFG_CHINTS_CH_PSC_RD_MASK						0xFull
#define FXR_RXHP_CFG_CHINTS_CH_PSC_RD_SMASK						0xF000ull
#define FXR_RXHP_CFG_CHINTS_CH_PTE_VICTIM_WR_SHIFT					8
#define FXR_RXHP_CFG_CHINTS_CH_PTE_VICTIM_WR_MASK					0xFull
#define FXR_RXHP_CFG_CHINTS_CH_PTE_VICTIM_WR_SMASK					0xF00ull
#define FXR_RXHP_CFG_CHINTS_CH_PTE_FLUSH_WR_SHIFT					4
#define FXR_RXHP_CFG_CHINTS_CH_PTE_FLUSH_WR_MASK					0xFull
#define FXR_RXHP_CFG_CHINTS_CH_PTE_FLUSH_WR_SMASK					0xF0ull
#define FXR_RXHP_CFG_CHINTS_CH_PTE_RD_SHIFT						0
#define FXR_RXHP_CFG_CHINTS_CH_PTE_RD_MASK						0xFull
#define FXR_RXHP_CFG_CHINTS_CH_PTE_RD_SMASK						0xFull
/*
* Table #28 of fxr_top - RXHP_CFG_NPTL_QP_MAP_TABLE
* This array of CSRs is used to specify the mapping of QP space to receive 
* contexts. There are eight 8-bit receive context values packets into each CSR. 
* Receive context numbers are in the range of 0 to 159 inclusive. Values in the 
* range 160 to 255 inclusive are invalid, and cause packets to be 
* dropped.
*/
#define FXR_RXHP_CFG_NPTL_QP_MAP_TABLE							(FXR_RX_HP_CSRS + 0x000000060B00)
#define FXR_RXHP_CFG_NPTL_QP_MAP_TABLE_RESETCSR						0x0000000000000000ull
#define FXR_RXHP_CFG_NPTL_QP_MAP_TABLE_RCV_CONTEXT_H_SHIFT				56
#define FXR_RXHP_CFG_NPTL_QP_MAP_TABLE_RCV_CONTEXT_H_MASK				0xFFull
#define FXR_RXHP_CFG_NPTL_QP_MAP_TABLE_RCV_CONTEXT_H_SMASK				0xFF00000000000000ull
#define FXR_RXHP_CFG_NPTL_QP_MAP_TABLE_RCV_CONTEXT_G_SHIFT				48
#define FXR_RXHP_CFG_NPTL_QP_MAP_TABLE_RCV_CONTEXT_G_MASK				0xFFull
#define FXR_RXHP_CFG_NPTL_QP_MAP_TABLE_RCV_CONTEXT_G_SMASK				0xFF000000000000ull
#define FXR_RXHP_CFG_NPTL_QP_MAP_TABLE_RCV_CONTEXT_F_SHIFT				40
#define FXR_RXHP_CFG_NPTL_QP_MAP_TABLE_RCV_CONTEXT_F_MASK				0xFFull
#define FXR_RXHP_CFG_NPTL_QP_MAP_TABLE_RCV_CONTEXT_F_SMASK				0xFF0000000000ull
#define FXR_RXHP_CFG_NPTL_QP_MAP_TABLE_RCV_CONTEXT_E_SHIFT				32
#define FXR_RXHP_CFG_NPTL_QP_MAP_TABLE_RCV_CONTEXT_E_MASK				0xFFull
#define FXR_RXHP_CFG_NPTL_QP_MAP_TABLE_RCV_CONTEXT_E_SMASK				0xFF00000000ull
#define FXR_RXHP_CFG_NPTL_QP_MAP_TABLE_RCV_CONTEXT_D_SHIFT				24
#define FXR_RXHP_CFG_NPTL_QP_MAP_TABLE_RCV_CONTEXT_D_MASK				0xFFull
#define FXR_RXHP_CFG_NPTL_QP_MAP_TABLE_RCV_CONTEXT_D_SMASK				0xFF000000ull
#define FXR_RXHP_CFG_NPTL_QP_MAP_TABLE_RCV_CONTEXT_C_SHIFT				16
#define FXR_RXHP_CFG_NPTL_QP_MAP_TABLE_RCV_CONTEXT_C_MASK				0xFFull
#define FXR_RXHP_CFG_NPTL_QP_MAP_TABLE_RCV_CONTEXT_C_SMASK				0xFF0000ull
#define FXR_RXHP_CFG_NPTL_QP_MAP_TABLE_RCV_CONTEXT_B_SHIFT				8
#define FXR_RXHP_CFG_NPTL_QP_MAP_TABLE_RCV_CONTEXT_B_MASK				0xFFull
#define FXR_RXHP_CFG_NPTL_QP_MAP_TABLE_RCV_CONTEXT_B_SMASK				0xFF00ull
#define FXR_RXHP_CFG_NPTL_QP_MAP_TABLE_RCV_CONTEXT_A_SHIFT				0
#define FXR_RXHP_CFG_NPTL_QP_MAP_TABLE_RCV_CONTEXT_A_MASK				0xFFull
#define FXR_RXHP_CFG_NPTL_QP_MAP_TABLE_RCV_CONTEXT_A_SMASK				0xFFull
/*
* Table #29 of fxr_top - RXHP_CFG_NPTL_RSM_CFG
* This CSR is used for configuring an RSM instance.
*/
#define FXR_RXHP_CFG_NPTL_RSM_CFG							(FXR_RX_HP_CSRS + 0x000000060C00)
#define FXR_RXHP_CFG_NPTL_RSM_CFG_RESETCSR						0x0000000000000000ull
#define FXR_RXHP_CFG_NPTL_RSM_CFG_RESERVED_63_SHIFT					63
#define FXR_RXHP_CFG_NPTL_RSM_CFG_RESERVED_63_MASK					0x1ull
#define FXR_RXHP_CFG_NPTL_RSM_CFG_RESERVED_63_SMASK					0x8000000000000000ull
#define FXR_RXHP_CFG_NPTL_RSM_CFG_PACKET_TYPE_SHIFT					60
#define FXR_RXHP_CFG_NPTL_RSM_CFG_PACKET_TYPE_MASK					0x7ull
#define FXR_RXHP_CFG_NPTL_RSM_CFG_PACKET_TYPE_SMASK					0x7000000000000000ull
#define FXR_RXHP_CFG_NPTL_RSM_CFG_RESERVED_59_53_SHIFT					53
#define FXR_RXHP_CFG_NPTL_RSM_CFG_RESERVED_59_53_MASK					0x7Full
#define FXR_RXHP_CFG_NPTL_RSM_CFG_RESERVED_59_53_SMASK					0xFE0000000000000ull
#define FXR_RXHP_CFG_NPTL_RSM_CFG_BYPASS_HDR_SIZE_SHIFT					48
#define FXR_RXHP_CFG_NPTL_RSM_CFG_BYPASS_HDR_SIZE_MASK					0x1Full
#define FXR_RXHP_CFG_NPTL_RSM_CFG_BYPASS_HDR_SIZE_SMASK					0x1F000000000000ull
#define FXR_RXHP_CFG_NPTL_RSM_CFG_RESERVED_47_40_SHIFT					40
#define FXR_RXHP_CFG_NPTL_RSM_CFG_RESERVED_47_40_MASK					0xFFull
#define FXR_RXHP_CFG_NPTL_RSM_CFG_RESERVED_47_40_SMASK					0xFF0000000000ull
#define FXR_RXHP_CFG_NPTL_RSM_CFG_OFFSET_SHIFT						32
#define FXR_RXHP_CFG_NPTL_RSM_CFG_OFFSET_MASK						0xFFull
#define FXR_RXHP_CFG_NPTL_RSM_CFG_OFFSET_SMASK						0xFF00000000ull
#define FXR_RXHP_CFG_NPTL_RSM_CFG_RESERVED_31_4_SHIFT					4
#define FXR_RXHP_CFG_NPTL_RSM_CFG_RESERVED_31_4_MASK					0xFFFFFFFull
#define FXR_RXHP_CFG_NPTL_RSM_CFG_RESERVED_31_4_SMASK					0xFFFFFFF0ull
#define FXR_RXHP_CFG_NPTL_RSM_CFG_ENABLE_OR_CHAIN_RSM3_SHIFT				3
#define FXR_RXHP_CFG_NPTL_RSM_CFG_ENABLE_OR_CHAIN_RSM3_MASK				0x1ull
#define FXR_RXHP_CFG_NPTL_RSM_CFG_ENABLE_OR_CHAIN_RSM3_SMASK				0x8ull
#define FXR_RXHP_CFG_NPTL_RSM_CFG_ENABLE_OR_CHAIN_RSM2_SHIFT				2
#define FXR_RXHP_CFG_NPTL_RSM_CFG_ENABLE_OR_CHAIN_RSM2_MASK				0x1ull
#define FXR_RXHP_CFG_NPTL_RSM_CFG_ENABLE_OR_CHAIN_RSM2_SMASK				0x4ull
#define FXR_RXHP_CFG_NPTL_RSM_CFG_ENABLE_OR_CHAIN_RSM1_SHIFT				1
#define FXR_RXHP_CFG_NPTL_RSM_CFG_ENABLE_OR_CHAIN_RSM1_MASK				0x1ull
#define FXR_RXHP_CFG_NPTL_RSM_CFG_ENABLE_OR_CHAIN_RSM1_SMASK				0x2ull
#define FXR_RXHP_CFG_NPTL_RSM_CFG_ENABLE_OR_CHAIN_RSM0_SHIFT				0
#define FXR_RXHP_CFG_NPTL_RSM_CFG_ENABLE_OR_CHAIN_RSM0_MASK				0x1ull
#define FXR_RXHP_CFG_NPTL_RSM_CFG_ENABLE_OR_CHAIN_RSM0_SMASK				0x1ull
/*
* Table #30 of fxr_top - RXHP_CFG_NPTL_RSM_SELECT
* This CSR is used for configuring the match field and index field selection for 
* an RSM instance.
*/
#define FXR_RXHP_CFG_NPTL_RSM_SELECT							(FXR_RX_HP_CSRS + 0x000000060C20)
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_RESETCSR						0x0000000000000000ull
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_INDEX2_WIDTH_SHIFT					60
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_INDEX2_WIDTH_MASK					0xFull
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_INDEX2_WIDTH_SMASK					0xF000000000000000ull
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_RESERVED_59_57_SHIFT				57
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_RESERVED_59_57_MASK				0x7ull
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_RESERVED_59_57_SMASK				0xE00000000000000ull
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_INDEX2_OFFSET_SHIFT				48
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_INDEX2_OFFSET_MASK					0x1FFull
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_INDEX2_OFFSET_SMASK				0x1FF000000000000ull
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_INDEX1_WIDTH_SHIFT					44
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_INDEX1_WIDTH_MASK					0xFull
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_INDEX1_WIDTH_SMASK					0xF00000000000ull
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_RESERVED_43_41_SHIFT				41
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_RESERVED_43_41_MASK				0x7ull
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_RESERVED_43_41_SMASK				0xE0000000000ull
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_INDEX1_OFFSET_SHIFT				32
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_INDEX1_OFFSET_MASK					0x1FFull
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_INDEX1_OFFSET_SMASK				0x1FF00000000ull
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_RESERVED_31_25_SHIFT				25
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_RESERVED_31_25_MASK				0x7Full
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_RESERVED_31_25_SMASK				0xFE000000ull
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_FIELD2_OFFSET_SHIFT				16
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_FIELD2_OFFSET_MASK					0x1FFull
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_FIELD2_OFFSET_SMASK				0x1FF0000ull
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_RESERVED_15_9_SHIFT				9
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_RESERVED_15_9_MASK					0x7Full
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_RESERVED_15_9_SMASK				0xFE00ull
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_FIELD1_OFFSET_SHIFT				0
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_FIELD1_OFFSET_MASK					0x1FFull
#define FXR_RXHP_CFG_NPTL_RSM_SELECT_FIELD1_OFFSET_SMASK				0x1FFull
/*
* Table #31 of fxr_top - RXHP_CFG_NPTL_RSM_MATCH
* This CSR is used for configuring the match criteria for an RSM 
* instance.
*/
#define FXR_RXHP_CFG_NPTL_RSM_MATCH							(FXR_RX_HP_CSRS + 0x000000060C40)
#define FXR_RXHP_CFG_NPTL_RSM_MATCH_RESETCSR						0x0000000000000000ull
#define FXR_RXHP_CFG_NPTL_RSM_MATCH_RESERVED_63_32_SHIFT				32
#define FXR_RXHP_CFG_NPTL_RSM_MATCH_RESERVED_63_32_MASK					0xFFFFFFFFull
#define FXR_RXHP_CFG_NPTL_RSM_MATCH_RESERVED_63_32_SMASK				0xFFFFFFFF00000000ull
#define FXR_RXHP_CFG_NPTL_RSM_MATCH_VALUE2_SHIFT					24
#define FXR_RXHP_CFG_NPTL_RSM_MATCH_VALUE2_MASK						0xFFull
#define FXR_RXHP_CFG_NPTL_RSM_MATCH_VALUE2_SMASK					0xFF000000ull
#define FXR_RXHP_CFG_NPTL_RSM_MATCH_MASK2_SHIFT						16
#define FXR_RXHP_CFG_NPTL_RSM_MATCH_MASK2_MASK						0xFFull
#define FXR_RXHP_CFG_NPTL_RSM_MATCH_MASK2_SMASK						0xFF0000ull
#define FXR_RXHP_CFG_NPTL_RSM_MATCH_VALUE1_SHIFT					8
#define FXR_RXHP_CFG_NPTL_RSM_MATCH_VALUE1_MASK						0xFFull
#define FXR_RXHP_CFG_NPTL_RSM_MATCH_VALUE1_SMASK					0xFF00ull
#define FXR_RXHP_CFG_NPTL_RSM_MATCH_MASK1_SHIFT						0
#define FXR_RXHP_CFG_NPTL_RSM_MATCH_MASK1_MASK						0xFFull
#define FXR_RXHP_CFG_NPTL_RSM_MATCH_MASK1_SMASK						0xFFull
/*
* Table #32 of fxr_top - RXHP_CFG_NPTL_RSM_MAP_TABLE
* This array of CSRs is used to specify the mapping of RSM indices to receive 
* contexts. There are eight 8-bit receive context values packets into each CSR. 
* Receive context numbers are in the range of 0 to 159 inclusive. Values in the 
* range 160 to 255 inclusive are invalid, and cause packets to be 
* dropped.
*/
#define FXR_RXHP_CFG_NPTL_RSM_MAP_TABLE							(FXR_RX_HP_CSRS + 0x000000060D00)
#define FXR_RXHP_CFG_NPTL_RSM_MAP_TABLE_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_CFG_NPTL_RSM_MAP_TABLE_RCV_CONTEXT_H_SHIFT				56
#define FXR_RXHP_CFG_NPTL_RSM_MAP_TABLE_RCV_CONTEXT_H_MASK				0xFFull
#define FXR_RXHP_CFG_NPTL_RSM_MAP_TABLE_RCV_CONTEXT_H_SMASK				0xFF00000000000000ull
#define FXR_RXHP_CFG_NPTL_RSM_MAP_TABLE_RCV_CONTEXT_G_SHIFT				48
#define FXR_RXHP_CFG_NPTL_RSM_MAP_TABLE_RCV_CONTEXT_G_MASK				0xFFull
#define FXR_RXHP_CFG_NPTL_RSM_MAP_TABLE_RCV_CONTEXT_G_SMASK				0xFF000000000000ull
#define FXR_RXHP_CFG_NPTL_RSM_MAP_TABLE_RCV_CONTEXT_F_SHIFT				40
#define FXR_RXHP_CFG_NPTL_RSM_MAP_TABLE_RCV_CONTEXT_F_MASK				0xFFull
#define FXR_RXHP_CFG_NPTL_RSM_MAP_TABLE_RCV_CONTEXT_F_SMASK				0xFF0000000000ull
#define FXR_RXHP_CFG_NPTL_RSM_MAP_TABLE_RCV_CONTEXT_E_SHIFT				32
#define FXR_RXHP_CFG_NPTL_RSM_MAP_TABLE_RCV_CONTEXT_E_MASK				0xFFull
#define FXR_RXHP_CFG_NPTL_RSM_MAP_TABLE_RCV_CONTEXT_E_SMASK				0xFF00000000ull
#define FXR_RXHP_CFG_NPTL_RSM_MAP_TABLE_RCV_CONTEXT_D_SHIFT				24
#define FXR_RXHP_CFG_NPTL_RSM_MAP_TABLE_RCV_CONTEXT_D_MASK				0xFFull
#define FXR_RXHP_CFG_NPTL_RSM_MAP_TABLE_RCV_CONTEXT_D_SMASK				0xFF000000ull
#define FXR_RXHP_CFG_NPTL_RSM_MAP_TABLE_RCV_CONTEXT_C_SHIFT				16
#define FXR_RXHP_CFG_NPTL_RSM_MAP_TABLE_RCV_CONTEXT_C_MASK				0xFFull
#define FXR_RXHP_CFG_NPTL_RSM_MAP_TABLE_RCV_CONTEXT_C_SMASK				0xFF0000ull
#define FXR_RXHP_CFG_NPTL_RSM_MAP_TABLE_RCV_CONTEXT_B_SHIFT				8
#define FXR_RXHP_CFG_NPTL_RSM_MAP_TABLE_RCV_CONTEXT_B_MASK				0xFFull
#define FXR_RXHP_CFG_NPTL_RSM_MAP_TABLE_RCV_CONTEXT_B_SMASK				0xFF00ull
#define FXR_RXHP_CFG_NPTL_RSM_MAP_TABLE_RCV_CONTEXT_A_SHIFT				0
#define FXR_RXHP_CFG_NPTL_RSM_MAP_TABLE_RCV_CONTEXT_A_MASK				0xFFull
#define FXR_RXHP_CFG_NPTL_RSM_MAP_TABLE_RCV_CONTEXT_A_SMASK				0xFFull
/*
* Table #33 of fxr_top - RXHP_STS_NPTL_RCV_DROPPED_PKT_CNT
* This CSR contains the count of packets dropped because the receive port was 
* disabled or certain non-Portals header decode checks failed.
*/
#define FXR_RXHP_STS_NPTL_RCV_DROPPED_PKT_CNT						(FXR_RX_HP_CSRS + 0x000000060E00)
#define FXR_RXHP_STS_NPTL_RCV_DROPPED_PKT_CNT_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_STS_NPTL_RCV_DROPPED_PKT_CNT_COUNT_SHIFT				0
#define FXR_RXHP_STS_NPTL_RCV_DROPPED_PKT_CNT_COUNT_MASK				0xFFFFFFFFFFFFFFFFull
#define FXR_RXHP_STS_NPTL_RCV_DROPPED_PKT_CNT_COUNT_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #34 of fxr_top - RXHP_STS_NPTL_RCV_INVALID_CONTEXT_CNT
* This register contains the count of non Portals packets that were received 
* with an invalid context (context > 159).
*/
#define FXR_RXHP_STS_NPTL_RCV_INVALID_CONTEXT_CNT					(FXR_RX_HP_CSRS + 0x000000060E08)
#define FXR_RXHP_STS_NPTL_RCV_INVALID_CONTEXT_CNT_RESETCSR				0x0000000000000000ull
#define FXR_RXHP_STS_NPTL_RCV_INVALID_CONTEXT_CNT_COUNT_SHIFT				0
#define FXR_RXHP_STS_NPTL_RCV_INVALID_CONTEXT_CNT_COUNT_MASK				0xFFFFFFFFFFFFFFFFull
#define FXR_RXHP_STS_NPTL_RCV_INVALID_CONTEXT_CNT_COUNT_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #35 of fxr_top - RXHP_STS_NPTL_RCV_JKEY_MISMATCH_CNT
* This register contains the count of packets that were dropped because the Job 
* Key mismatched.
*/
#define FXR_RXHP_STS_NPTL_RCV_JKEY_MISMATCH_CNT						(FXR_RX_HP_CSRS + 0x000000060E10)
#define FXR_RXHP_STS_NPTL_RCV_JKEY_MISMATCH_CNT_RESETCSR				0x0000000000000000ull
#define FXR_RXHP_STS_NPTL_RCV_JKEY_MISMATCH_CNT_COUNT_SHIFT				0
#define FXR_RXHP_STS_NPTL_RCV_JKEY_MISMATCH_CNT_COUNT_MASK				0xFFFFFFFFFFFFFFFFull
#define FXR_RXHP_STS_NPTL_RCV_JKEY_MISMATCH_CNT_COUNT_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #36 of fxr_top - RXHP_STS_NPTL_RCV_DISABLED_CONTEXT_CNT
* This register contains the count of packets that were received to a context 
* that was disabled.
*/
#define FXR_RXHP_STS_NPTL_RCV_DISABLED_CONTEXT_CNT					(FXR_RX_HP_CSRS + 0x000000060E18)
#define FXR_RXHP_STS_NPTL_RCV_DISABLED_CONTEXT_CNT_RESETCSR				0x0000000000000000ull
#define FXR_RXHP_STS_NPTL_RCV_DISABLED_CONTEXT_CNT_COUNT_SHIFT				0
#define FXR_RXHP_STS_NPTL_RCV_DISABLED_CONTEXT_CNT_COUNT_MASK				0xFFFFFFFFFFFFFFFFull
#define FXR_RXHP_STS_NPTL_RCV_DISABLED_CONTEXT_CNT_COUNT_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #37 of fxr_top - RXHP_CFG_PID_FLUSH
* This CSR is used to guarantee that a packet or command on a given pid can not 
* change the state in rxhp. While pid flush is active, headers with the 
* specified pid will appear to have invalid PTEs. These PTEs may continue to 
* appear invalid until traffic targeting these PTEs has completely 
* stopped.
*/
#define FXR_RXHP_CFG_PID_FLUSH								(FXR_RX_HP_CSRS + 0x000000060E20)
#define FXR_RXHP_CFG_PID_FLUSH_RESETCSR							0x0000000000000000ull
#define FXR_RXHP_CFG_PID_FLUSH_RESERVED_63_14_SHIFT					14
#define FXR_RXHP_CFG_PID_FLUSH_RESERVED_63_14_MASK					0x3FFFFFFFFFFFFull
#define FXR_RXHP_CFG_PID_FLUSH_RESERVED_63_14_SMASK					0xFFFFFFFFFFFFC000ull
#define FXR_RXHP_CFG_PID_FLUSH_ACK_SHIFT						13
#define FXR_RXHP_CFG_PID_FLUSH_ACK_MASK							0x1ull
#define FXR_RXHP_CFG_PID_FLUSH_ACK_SMASK						0x2000ull
#define FXR_RXHP_CFG_PID_FLUSH_VALID_SHIFT						12
#define FXR_RXHP_CFG_PID_FLUSH_VALID_MASK						0x1ull
#define FXR_RXHP_CFG_PID_FLUSH_VALID_SMASK						0x1000ull
#define FXR_RXHP_CFG_PID_FLUSH_PID_SHIFT						0
#define FXR_RXHP_CFG_PID_FLUSH_PID_MASK							0xFFFull
#define FXR_RXHP_CFG_PID_FLUSH_PID_SMASK						0xFFFull
/*
* Table #38 of fxr_top - RXHP_CFG_TRANSMIT_DELAY_1
* These CSRs control how much transmit delay should go up after a CTS and go 
* down over time.
*/
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1							(FXR_RX_HP_CSRS + 0x000000060E28)
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_RESETCSR						0x6A8355AAD506AB55ull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_RESERVED_63_SHIFT					63
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_RESERVED_63_MASK					0x1ull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_RESERVED_63_SMASK					0x8000000000000000ull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_SHARE_BW_SHIFT					62
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_SHARE_BW_MASK					0x1ull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_SHARE_BW_SMASK					0x4000000000000000ull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_MIN_LENGTH_COUNT_TC1_SHIFT			61
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_MIN_LENGTH_COUNT_TC1_MASK				0x1ull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_MIN_LENGTH_COUNT_TC1_SMASK			0x2000000000000000ull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_MIN_LENGTH_TC1_SHIFT				52
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_MIN_LENGTH_TC1_MASK				0x1FFull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_MIN_LENGTH_TC1_SMASK				0x1FF0000000000000ull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_NS_PER_CYCLE_TC1_SHIFT				42
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_NS_PER_CYCLE_TC1_MASK				0x3FFull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_NS_PER_CYCLE_TC1_SMASK				0xFFC0000000000ull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_NS_PER_1KB_TC1_SHIFT				31
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_NS_PER_1KB_TC1_MASK				0x7FFull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_NS_PER_1KB_TC1_SMASK				0x3FF80000000ull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_MIN_LENGTH_COUNT_TC0_SHIFT			30
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_MIN_LENGTH_COUNT_TC0_MASK				0x1ull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_MIN_LENGTH_COUNT_TC0_SMASK			0x40000000ull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_MIN_LENGTH_TC0_SHIFT				21
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_MIN_LENGTH_TC0_MASK				0x1FFull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_MIN_LENGTH_TC0_SMASK				0x3FE00000ull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_NS_PER_CYCLE_TC0_SHIFT				11
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_NS_PER_CYCLE_TC0_MASK				0x3FFull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_NS_PER_CYCLE_TC0_SMASK				0x1FF800ull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_NS_PER_1KB_TC0_SHIFT				0
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_NS_PER_1KB_TC0_MASK				0x7FFull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_1_NS_PER_1KB_TC0_SMASK				0x7FFull
/*
* Table #39 of fxr_top - RXHP_CFG_TRANSMIT_DELAY_2
* These CSRs control how much transmit delay should go up after a CTS and go 
* down over time.
*/
#define FXR_RXHP_CFG_TRANSMIT_DELAY_2							(FXR_RX_HP_CSRS + 0x000000060E30)
#define FXR_RXHP_CFG_TRANSMIT_DELAY_2_RESETCSR						0x2A8355AAD506AB55ull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_2_RESERVED_63_62_SHIFT				62
#define FXR_RXHP_CFG_TRANSMIT_DELAY_2_RESERVED_63_62_MASK				0x3ull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_2_RESERVED_63_62_SMASK				0xC000000000000000ull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_2_MIN_LENGTH_COUNT_TC3_SHIFT			61
#define FXR_RXHP_CFG_TRANSMIT_DELAY_2_MIN_LENGTH_COUNT_TC3_MASK				0x1ull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_2_MIN_LENGTH_COUNT_TC3_SMASK			0x2000000000000000ull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_2_MIN_LENGTH_TC3_SHIFT				52
#define FXR_RXHP_CFG_TRANSMIT_DELAY_2_MIN_LENGTH_TC3_MASK				0x1FFull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_2_MIN_LENGTH_TC3_SMASK				0x1FF0000000000000ull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_2_NS_PER_CYCLE_TC3_SHIFT				42
#define FXR_RXHP_CFG_TRANSMIT_DELAY_2_NS_PER_CYCLE_TC3_MASK				0x3FFull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_2_NS_PER_CYCLE_TC3_SMASK				0xFFC0000000000ull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_2_NS_PER_1KB_TC3_SHIFT				31
#define FXR_RXHP_CFG_TRANSMIT_DELAY_2_NS_PER_1KB_TC3_MASK				0x7FFull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_2_NS_PER_1KB_TC3_SMASK				0x3FF80000000ull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_2_MIN_LENGTH_COUNT_TC2_SHIFT			30
#define FXR_RXHP_CFG_TRANSMIT_DELAY_2_MIN_LENGTH_COUNT_TC2_MASK				0x1ull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_2_MIN_LENGTH_COUNT_TC2_SMASK			0x40000000ull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_2_MIN_LENGTH_TC2_SHIFT				21
#define FXR_RXHP_CFG_TRANSMIT_DELAY_2_MIN_LENGTH_TC2_MASK				0x1FFull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_2_MIN_LENGTH_TC2_SMASK				0x3FE00000ull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_2_NS_PER_CYCLE_TC2_SHIFT				11
#define FXR_RXHP_CFG_TRANSMIT_DELAY_2_NS_PER_CYCLE_TC2_MASK				0x3FFull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_2_NS_PER_CYCLE_TC2_SMASK				0x1FF800ull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_2_NS_PER_1KB_TC2_SHIFT				0
#define FXR_RXHP_CFG_TRANSMIT_DELAY_2_NS_PER_1KB_TC2_MASK				0x7FFull
#define FXR_RXHP_CFG_TRANSMIT_DELAY_2_NS_PER_1KB_TC2_SMASK				0x7FFull
/*
* Table #40 of fxr_top - RXHP_CFG_RC
* This CSR contains the mapping of the packet rc[2:0] field to ordered needed 
* for psn checking. It is reset to 0xF to agree with Stormlake #%%#<blue 
* text>Section 8.2.4.7, 'Routing Control'#%%#. This CSR also contains the RC 
* assignments for replies and acknowledgments on the 4 traffic classes. For 
* replies, if downstream logic promotes a reply to a nack, the routing class 
* will remain that of a reply.
*/
#define FXR_RXHP_CFG_RC									(FXR_RX_HP_CSRS + 0x000000060E38)
#define FXR_RXHP_CFG_RC_RESETCSR							0x000000000000000Full
#define FXR_RXHP_CFG_RC_RESERVED_63_32_SHIFT						32
#define FXR_RXHP_CFG_RC_RESERVED_63_32_MASK						0xFFFFFFFFull
#define FXR_RXHP_CFG_RC_RESERVED_63_32_SMASK						0xFFFFFFFF00000000ull
#define FXR_RXHP_CFG_RC_RC_REPLY_TC3_SHIFT						29
#define FXR_RXHP_CFG_RC_RC_REPLY_TC3_MASK						0x7ull
#define FXR_RXHP_CFG_RC_RC_REPLY_TC3_SMASK						0xE0000000ull
#define FXR_RXHP_CFG_RC_RC_REPLY_TC2_SHIFT						26
#define FXR_RXHP_CFG_RC_RC_REPLY_TC2_MASK						0x7ull
#define FXR_RXHP_CFG_RC_RC_REPLY_TC2_SMASK						0x1C000000ull
#define FXR_RXHP_CFG_RC_RC_REPLY_TC1_SHIFT						23
#define FXR_RXHP_CFG_RC_RC_REPLY_TC1_MASK						0x7ull
#define FXR_RXHP_CFG_RC_RC_REPLY_TC1_SMASK						0x3800000ull
#define FXR_RXHP_CFG_RC_RC_REPLY_TC0_SHIFT						20
#define FXR_RXHP_CFG_RC_RC_REPLY_TC0_MASK						0x7ull
#define FXR_RXHP_CFG_RC_RC_REPLY_TC0_SMASK						0x700000ull
#define FXR_RXHP_CFG_RC_RC_ACK_TC3_SHIFT						17
#define FXR_RXHP_CFG_RC_RC_ACK_TC3_MASK							0x7ull
#define FXR_RXHP_CFG_RC_RC_ACK_TC3_SMASK						0xE0000ull
#define FXR_RXHP_CFG_RC_RC_ACK_TC2_SHIFT						14
#define FXR_RXHP_CFG_RC_RC_ACK_TC2_MASK							0x7ull
#define FXR_RXHP_CFG_RC_RC_ACK_TC2_SMASK						0x1C000ull
#define FXR_RXHP_CFG_RC_RC_ACK_TC1_SHIFT						11
#define FXR_RXHP_CFG_RC_RC_ACK_TC1_MASK							0x7ull
#define FXR_RXHP_CFG_RC_RC_ACK_TC1_SMASK						0x3800ull
#define FXR_RXHP_CFG_RC_RC_ACK_TC0_SHIFT						8
#define FXR_RXHP_CFG_RC_RC_ACK_TC0_MASK							0x7ull
#define FXR_RXHP_CFG_RC_RC_ACK_TC0_SMASK						0x700ull
#define FXR_RXHP_CFG_RC_ORDERED_SHIFT							0
#define FXR_RXHP_CFG_RC_ORDERED_MASK							0xFFull
#define FXR_RXHP_CFG_RC_ORDERED_SMASK							0xFFull
/*
* Table #41 of fxr_top - RXHP_CFG_EAGER_BLOCK
* This array of CSRs is used to specify which PIDs (from 0xF00 to 0xFFF) are 
* blocking eager packets. A 1 indicates that the PID is blocked.
*/
#define FXR_RXHP_CFG_EAGER_BLOCK							(FXR_RX_HP_CSRS + 0x000000060E40)
#define FXR_RXHP_CFG_EAGER_BLOCK_RESETCSR						0x0000000000000000ull
#define FXR_RXHP_CFG_EAGER_BLOCK_PID_BLOCK_BITS_SHIFT					0
#define FXR_RXHP_CFG_EAGER_BLOCK_PID_BLOCK_BITS_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_RXHP_CFG_EAGER_BLOCK_PID_BLOCK_BITS_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #42 of fxr_top - RXHP_CFG_PORT_MIRROR_PAYLOAD_START
* This array of CSRs is used to specify the start addresses for four payload 
* buffers for port mirroring.
*/
#define FXR_RXHP_CFG_PORT_MIRROR_PAYLOAD_START						(FXR_RX_HP_CSRS + 0x000000060E60)
#define FXR_RXHP_CFG_PORT_MIRROR_PAYLOAD_START_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_CFG_PORT_MIRROR_PAYLOAD_START_RESERVED_63_57_SHIFT			57
#define FXR_RXHP_CFG_PORT_MIRROR_PAYLOAD_START_RESERVED_63_57_MASK			0x7Full
#define FXR_RXHP_CFG_PORT_MIRROR_PAYLOAD_START_RESERVED_63_57_SMASK			0xFE00000000000000ull
#define FXR_RXHP_CFG_PORT_MIRROR_PAYLOAD_START_ADDRESS_SHIFT				0
#define FXR_RXHP_CFG_PORT_MIRROR_PAYLOAD_START_ADDRESS_MASK				0x1FFFFFFFFFFFFFFull
#define FXR_RXHP_CFG_PORT_MIRROR_PAYLOAD_START_ADDRESS_SMASK				0x1FFFFFFFFFFFFFFull
/*
* Table #43 of fxr_top - RXHP_CFG_PORT_MIRROR_PAYLOAD_END
* This array of CSRs is used to specify the end addresses for four payload 
* buffers for port mirroring.
*/
#define FXR_RXHP_CFG_PORT_MIRROR_PAYLOAD_END						(FXR_RX_HP_CSRS + 0x000000060E80)
#define FXR_RXHP_CFG_PORT_MIRROR_PAYLOAD_END_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_CFG_PORT_MIRROR_PAYLOAD_END_RESERVED_63_57_SHIFT			57
#define FXR_RXHP_CFG_PORT_MIRROR_PAYLOAD_END_RESERVED_63_57_MASK			0x7Full
#define FXR_RXHP_CFG_PORT_MIRROR_PAYLOAD_END_RESERVED_63_57_SMASK			0xFE00000000000000ull
#define FXR_RXHP_CFG_PORT_MIRROR_PAYLOAD_END_ADDRESS_SHIFT				0
#define FXR_RXHP_CFG_PORT_MIRROR_PAYLOAD_END_ADDRESS_MASK				0x1FFFFFFFFFFFFFFull
#define FXR_RXHP_CFG_PORT_MIRROR_PAYLOAD_END_ADDRESS_SMASK				0x1FFFFFFFFFFFFFFull
/*
* Table #44 of fxr_top - RXHP_CFG_PORT_MIRROR_HEADER_START
* This array of CSRs is used to specify the start addresses for four header 
* buffers for port mirroring.
*/
#define FXR_RXHP_CFG_PORT_MIRROR_HEADER_START						(FXR_RX_HP_CSRS + 0x000000060EA0)
#define FXR_RXHP_CFG_PORT_MIRROR_HEADER_START_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_CFG_PORT_MIRROR_HEADER_START_RESERVED_63_57_SHIFT			57
#define FXR_RXHP_CFG_PORT_MIRROR_HEADER_START_RESERVED_63_57_MASK			0x7Full
#define FXR_RXHP_CFG_PORT_MIRROR_HEADER_START_RESERVED_63_57_SMASK			0xFE00000000000000ull
#define FXR_RXHP_CFG_PORT_MIRROR_HEADER_START_ADDRESS_SHIFT				0
#define FXR_RXHP_CFG_PORT_MIRROR_HEADER_START_ADDRESS_MASK				0x1FFFFFFFFFFFFFFull
#define FXR_RXHP_CFG_PORT_MIRROR_HEADER_START_ADDRESS_SMASK				0x1FFFFFFFFFFFFFFull
/*
* Table #45 of fxr_top - RXHP_CFG_PORT_MIRROR_HEADER_END
* This array of CSRs is used to specify the end addresses for four header 
* buffers for port mirroring.
*/
#define FXR_RXHP_CFG_PORT_MIRROR_HEADER_END						(FXR_RX_HP_CSRS + 0x000000060EC0)
#define FXR_RXHP_CFG_PORT_MIRROR_HEADER_END_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_CFG_PORT_MIRROR_HEADER_END_RESERVED_63_57_SHIFT			57
#define FXR_RXHP_CFG_PORT_MIRROR_HEADER_END_RESERVED_63_57_MASK				0x7Full
#define FXR_RXHP_CFG_PORT_MIRROR_HEADER_END_RESERVED_63_57_SMASK			0xFE00000000000000ull
#define FXR_RXHP_CFG_PORT_MIRROR_HEADER_END_ADDRESS_SHIFT				0
#define FXR_RXHP_CFG_PORT_MIRROR_HEADER_END_ADDRESS_MASK				0x1FFFFFFFFFFFFFFull
#define FXR_RXHP_CFG_PORT_MIRROR_HEADER_END_ADDRESS_SMASK				0x1FFFFFFFFFFFFFFull
/*
* Table #46 of fxr_top - RXHP_CFG_PORT_MIRROR
* Main configuration for port mirroring.
*/
#define FXR_RXHP_CFG_PORT_MIRROR							(FXR_RX_HP_CSRS + 0x000000060EE0)
#define FXR_RXHP_CFG_PORT_MIRROR_RESETCSR						0x0000000000000000ull
#define FXR_RXHP_CFG_PORT_MIRROR_RESERVED_63_17_SHIFT					17
#define FXR_RXHP_CFG_PORT_MIRROR_RESERVED_63_17_MASK					0x7FFFFFFFFFFFull
#define FXR_RXHP_CFG_PORT_MIRROR_RESERVED_63_17_SMASK					0xFFFFFFFFFFFE0000ull
#define FXR_RXHP_CFG_PORT_MIRROR_PORT_MIRROR_EN_SHIFT					16
#define FXR_RXHP_CFG_PORT_MIRROR_PORT_MIRROR_EN_MASK					0x1ull
#define FXR_RXHP_CFG_PORT_MIRROR_PORT_MIRROR_EN_SMASK					0x10000ull
#define FXR_RXHP_CFG_PORT_MIRROR_PORT_MIRROR_BUFFER_READY_SHIFT				12
#define FXR_RXHP_CFG_PORT_MIRROR_PORT_MIRROR_BUFFER_READY_MASK				0xFull
#define FXR_RXHP_CFG_PORT_MIRROR_PORT_MIRROR_BUFFER_READY_SMASK				0xF000ull
#define FXR_RXHP_CFG_PORT_MIRROR_PORT_MIRROR_PID_SHIFT					0
#define FXR_RXHP_CFG_PORT_MIRROR_PORT_MIRROR_PID_MASK					0xFFFull
#define FXR_RXHP_CFG_PORT_MIRROR_PORT_MIRROR_PID_SMASK					0xFFFull
/*
* Table #47 of fxr_top - RXHP_CFG_PD_IRAM
* This is the Processor Designer instruction rams.
*/
#define FXR_RXHP_CFG_PD_IRAM								(FXR_RX_HP_CSRS + 0x000000000000)
#define FXR_RXHP_CFG_PD_IRAM_RESETCSR							0x0000000000000000ull
#define FXR_RXHP_CFG_PD_IRAM_DATA_SHIFT							0
#define FXR_RXHP_CFG_PD_IRAM_DATA_MASK							0xFFFFFFFFFFFFFFFFull
#define FXR_RXHP_CFG_PD_IRAM_DATA_SMASK							0xFFFFFFFFFFFFFFFFull
/*
* Table #48 of fxr_top - RXHP_CFG_PD_DRAM
* This is the Processor Designer data rams.
*/
#define FXR_RXHP_CFG_PD_DRAM								(FXR_RX_HP_CSRS + 0x000000008000)
#define FXR_RXHP_CFG_PD_DRAM_RESETCSR							0x0000000000000000ull
#define FXR_RXHP_CFG_PD_DRAM_DATA_SHIFT							0
#define FXR_RXHP_CFG_PD_DRAM_DATA_MASK							0xFFFFFFFFFFFFFFFFull
#define FXR_RXHP_CFG_PD_DRAM_DATA_SMASK							0xFFFFFFFFFFFFFFFFull
/*
* Table #49 of fxr_top - RXHP_ERR_STS_1
* This is the Error Status CSR. Bits are set by hardware or by writing to the 
* #%%#RXHP_ERR_FRC_1#%%# CSR. Bits are cleared by writing to the 
* #%%#RXHP_ERR_CLR_1#%%# CSR.
*/
#define FXR_RXHP_ERR_STS_1								(FXR_RX_HP_CSRS + 0x000000051000)
#define FXR_RXHP_ERR_STS_1_RESETCSR							0x0000000000000000ull
#define FXR_RXHP_ERR_STS_1_RESERVED_63_38_SHIFT						38
#define FXR_RXHP_ERR_STS_1_RESERVED_63_38_MASK						0x3FFFFFFull
#define FXR_RXHP_ERR_STS_1_RESERVED_63_38_SMASK						0xFFFFFFC000000000ull
#define FXR_RXHP_ERR_STS_1_RECEIVED_RESPONSE_PKT_SHIFT					37
#define FXR_RXHP_ERR_STS_1_RECEIVED_RESPONSE_PKT_MASK					0x1ull
#define FXR_RXHP_ERR_STS_1_RECEIVED_RESPONSE_PKT_SMASK					0x2000000000ull
#define FXR_RXHP_ERR_STS_1_PKT_STATUS_MBE_SHIFT						36
#define FXR_RXHP_ERR_STS_1_PKT_STATUS_MBE_MASK						0x1ull
#define FXR_RXHP_ERR_STS_1_PKT_STATUS_MBE_SMASK						0x1000000000ull
#define FXR_RXHP_ERR_STS_1_PKT_STATUS_SBE_SHIFT						35
#define FXR_RXHP_ERR_STS_1_PKT_STATUS_SBE_MASK						0x1ull
#define FXR_RXHP_ERR_STS_1_PKT_STATUS_SBE_SMASK						0x800000000ull
#define FXR_RXHP_ERR_STS_1_TRIGOP_DATA_MBE_SHIFT					34
#define FXR_RXHP_ERR_STS_1_TRIGOP_DATA_MBE_MASK						0x1ull
#define FXR_RXHP_ERR_STS_1_TRIGOP_DATA_MBE_SMASK					0x400000000ull
#define FXR_RXHP_ERR_STS_1_TRIGOP_DATA_SBE_SHIFT					33
#define FXR_RXHP_ERR_STS_1_TRIGOP_DATA_SBE_MASK						0x1ull
#define FXR_RXHP_ERR_STS_1_TRIGOP_DATA_SBE_SMASK					0x200000000ull
#define FXR_RXHP_ERR_STS_1_CI_DATA_MBE_SHIFT						32
#define FXR_RXHP_ERR_STS_1_CI_DATA_MBE_MASK						0x1ull
#define FXR_RXHP_ERR_STS_1_CI_DATA_MBE_SMASK						0x100000000ull
#define FXR_RXHP_ERR_STS_1_CI_DATA_SBE_SHIFT						31
#define FXR_RXHP_ERR_STS_1_CI_DATA_SBE_MASK						0x1ull
#define FXR_RXHP_ERR_STS_1_CI_DATA_SBE_SMASK						0x80000000ull
#define FXR_RXHP_ERR_STS_1_FLIT_DATA_MBE_SHIFT						30
#define FXR_RXHP_ERR_STS_1_FLIT_DATA_MBE_MASK						0x1ull
#define FXR_RXHP_ERR_STS_1_FLIT_DATA_MBE_SMASK						0x40000000ull
#define FXR_RXHP_ERR_STS_1_FLIT_DATA_SBE_SHIFT						29
#define FXR_RXHP_ERR_STS_1_FLIT_DATA_SBE_MASK						0x1ull
#define FXR_RXHP_ERR_STS_1_FLIT_DATA_SBE_SMASK						0x20000000ull
#define FXR_RXHP_ERR_STS_1_PTQ_MBE_SHIFT						28
#define FXR_RXHP_ERR_STS_1_PTQ_MBE_MASK							0x1ull
#define FXR_RXHP_ERR_STS_1_PTQ_MBE_SMASK						0x10000000ull
#define FXR_RXHP_ERR_STS_1_PTQ_SBE_SHIFT						27
#define FXR_RXHP_ERR_STS_1_PTQ_SBE_MASK							0x1ull
#define FXR_RXHP_ERR_STS_1_PTQ_SBE_SMASK						0x8000000ull
#define FXR_RXHP_ERR_STS_1_HIARB_DATA_MBE_SHIFT						26
#define FXR_RXHP_ERR_STS_1_HIARB_DATA_MBE_MASK						0x1ull
#define FXR_RXHP_ERR_STS_1_HIARB_DATA_MBE_SMASK						0x4000000ull
#define FXR_RXHP_ERR_STS_1_HIARB_DATA_SBE_SHIFT						25
#define FXR_RXHP_ERR_STS_1_HIARB_DATA_SBE_MASK						0x1ull
#define FXR_RXHP_ERR_STS_1_HIARB_DATA_SBE_SMASK						0x2000000ull
#define FXR_RXHP_ERR_STS_1_PSC1_CACHE_SBE_SHIFT						24
#define FXR_RXHP_ERR_STS_1_PSC1_CACHE_SBE_MASK						0x1ull
#define FXR_RXHP_ERR_STS_1_PSC1_CACHE_SBE_SMASK						0x1000000ull
#define FXR_RXHP_ERR_STS_1_PSC1_CACHE_MBE_SHIFT						23
#define FXR_RXHP_ERR_STS_1_PSC1_CACHE_MBE_MASK						0x1ull
#define FXR_RXHP_ERR_STS_1_PSC1_CACHE_MBE_SMASK						0x800000ull
#define FXR_RXHP_ERR_STS_1_PSC0_CACHE_SBE_SHIFT						22
#define FXR_RXHP_ERR_STS_1_PSC0_CACHE_SBE_MASK						0x1ull
#define FXR_RXHP_ERR_STS_1_PSC0_CACHE_SBE_SMASK						0x400000ull
#define FXR_RXHP_ERR_STS_1_PSC0_CACHE_MBE_SHIFT						21
#define FXR_RXHP_ERR_STS_1_PSC0_CACHE_MBE_MASK						0x1ull
#define FXR_RXHP_ERR_STS_1_PSC0_CACHE_MBE_SMASK						0x200000ull
#define FXR_RXHP_ERR_STS_1_PTE_CACHE_DATA_SBE_SHIFT					20
#define FXR_RXHP_ERR_STS_1_PTE_CACHE_DATA_SBE_MASK					0x1ull
#define FXR_RXHP_ERR_STS_1_PTE_CACHE_DATA_SBE_SMASK					0x100000ull
#define FXR_RXHP_ERR_STS_1_PTE_CACHE_DATA_MBE_SHIFT					19
#define FXR_RXHP_ERR_STS_1_PTE_CACHE_DATA_MBE_MASK					0x1ull
#define FXR_RXHP_ERR_STS_1_PTE_CACHE_DATA_MBE_SMASK					0x80000ull
#define FXR_RXHP_ERR_STS_1_PTE_CACHE_TAG_SBE_SHIFT					18
#define FXR_RXHP_ERR_STS_1_PTE_CACHE_TAG_SBE_MASK					0x1ull
#define FXR_RXHP_ERR_STS_1_PTE_CACHE_TAG_SBE_SMASK					0x40000ull
#define FXR_RXHP_ERR_STS_1_PTE_CACHE_TAG_MBE_SHIFT					17
#define FXR_RXHP_ERR_STS_1_PTE_CACHE_TAG_MBE_MASK					0x1ull
#define FXR_RXHP_ERR_STS_1_PTE_CACHE_TAG_MBE_SMASK					0x20000ull
#define FXR_RXHP_ERR_STS_1_DIAGNOSTIC_SHIFT						16
#define FXR_RXHP_ERR_STS_1_DIAGNOSTIC_MASK						0x1ull
#define FXR_RXHP_ERR_STS_1_DIAGNOSTIC_SMASK						0x10000ull
#define FXR_RXHP_ERR_STS_1_PE_DATA_MBE_SHIFT						12
#define FXR_RXHP_ERR_STS_1_PE_DATA_MBE_MASK						0xFull
#define FXR_RXHP_ERR_STS_1_PE_DATA_MBE_SMASK						0xF000ull
#define FXR_RXHP_ERR_STS_1_PE_DATA_SBE_SHIFT						8
#define FXR_RXHP_ERR_STS_1_PE_DATA_SBE_MASK						0xFull
#define FXR_RXHP_ERR_STS_1_PE_DATA_SBE_SMASK						0xF00ull
#define FXR_RXHP_ERR_STS_1_PE_INST_MBE_SHIFT						4
#define FXR_RXHP_ERR_STS_1_PE_INST_MBE_MASK						0xFull
#define FXR_RXHP_ERR_STS_1_PE_INST_MBE_SMASK						0xF0ull
#define FXR_RXHP_ERR_STS_1_PE_INST_SBE_SHIFT						0
#define FXR_RXHP_ERR_STS_1_PE_INST_SBE_MASK						0xFull
#define FXR_RXHP_ERR_STS_1_PE_INST_SBE_SMASK						0xFull
/*
* Table #50 of fxr_top - RXHP_ERR_CLR_1
* This is the Error Clear CSR. Writing a 1 to a valid bit will clear the 
* corresponding bit in the #%%#RXHP_ERR_STS_1#%%# CSR.
*/
#define FXR_RXHP_ERR_CLR_1								(FXR_RX_HP_CSRS + 0x000000051008)
#define FXR_RXHP_ERR_CLR_1_RESETCSR							0x0000000000000000ull
#define FXR_RXHP_ERR_CLR_1_RESERVED_63_38_SHIFT						38
#define FXR_RXHP_ERR_CLR_1_RESERVED_63_38_MASK						0x3FFFFFFull
#define FXR_RXHP_ERR_CLR_1_RESERVED_63_38_SMASK						0xFFFFFFC000000000ull
#define FXR_RXHP_ERR_CLR_1_EVENTS_SHIFT							0
#define FXR_RXHP_ERR_CLR_1_EVENTS_MASK							0x3FFFFFFFFFull
#define FXR_RXHP_ERR_CLR_1_EVENTS_SMASK							0x3FFFFFFFFFull
/*
* Table #51 of fxr_top - RXHP_ERR_FRC_1
* This is the Error Force CSR. Writing a 1 to a valid bit will set the 
* corresponding bit in the #%%#RXHP_ERR_STS_1#%%# CSR.
*/
#define FXR_RXHP_ERR_FRC_1								(FXR_RX_HP_CSRS + 0x000000051010)
#define FXR_RXHP_ERR_FRC_1_RESETCSR							0x0000000000000000ull
#define FXR_RXHP_ERR_FRC_1_RESERVED_63_38_SHIFT						38
#define FXR_RXHP_ERR_FRC_1_RESERVED_63_38_MASK						0x3FFFFFFull
#define FXR_RXHP_ERR_FRC_1_RESERVED_63_38_SMASK						0xFFFFFFC000000000ull
#define FXR_RXHP_ERR_FRC_1_EVENTS_SHIFT							0
#define FXR_RXHP_ERR_FRC_1_EVENTS_MASK							0x3FFFFFFFFFull
#define FXR_RXHP_ERR_FRC_1_EVENTS_SMASK							0x3FFFFFFFFFull
/*
* Table #52 of fxr_top - RXHP_ERR_EN_HOST_1
* This is the Error Enable for the Host Interrupt. If a bit is set, the 
* corresponding error bit in #%%#RXHP_ERR_STS_1#%%# will cause an interrupt on 
* the HOST interrupt signal.
*/
#define FXR_RXHP_ERR_EN_HOST_1								(FXR_RX_HP_CSRS + 0x000000051018)
#define FXR_RXHP_ERR_EN_HOST_1_RESETCSR							0x0000000000000000ull
#define FXR_RXHP_ERR_EN_HOST_1_RESERVED_63_38_SHIFT					38
#define FXR_RXHP_ERR_EN_HOST_1_RESERVED_63_38_MASK					0x3FFFFFFull
#define FXR_RXHP_ERR_EN_HOST_1_RESERVED_63_38_SMASK					0xFFFFFFC000000000ull
#define FXR_RXHP_ERR_EN_HOST_1_EVENTS_SHIFT						0
#define FXR_RXHP_ERR_EN_HOST_1_EVENTS_MASK						0x3FFFFFFFFFull
#define FXR_RXHP_ERR_EN_HOST_1_EVENTS_SMASK						0x3FFFFFFFFFull
/*
* Table #53 of fxr_top - RXHP_ERR_FIRST_HOST_1
* This is the First Error CSR for the Host Interrupt. When this CSR is clear, it 
* will capture the next #%%#RXHP_ERR_STS_1#%%# value when a new HOST Interrupt 
* occurs.
*/
#define FXR_RXHP_ERR_FIRST_HOST_1							(FXR_RX_HP_CSRS + 0x000000051020)
#define FXR_RXHP_ERR_FIRST_HOST_1_RESETCSR						0x0000000000000000ull
#define FXR_RXHP_ERR_FIRST_HOST_1_RESERVED_63_38_SHIFT					38
#define FXR_RXHP_ERR_FIRST_HOST_1_RESERVED_63_38_MASK					0x3FFFFFFull
#define FXR_RXHP_ERR_FIRST_HOST_1_RESERVED_63_38_SMASK					0xFFFFFFC000000000ull
#define FXR_RXHP_ERR_FIRST_HOST_1_EVENTS_SHIFT						0
#define FXR_RXHP_ERR_FIRST_HOST_1_EVENTS_MASK						0x3FFFFFFFFFull
#define FXR_RXHP_ERR_FIRST_HOST_1_EVENTS_SMASK						0x3FFFFFFFFFull
/*
* Table #54 of fxr_top - RXHP_ERR_EN_BMC_1
* This is the Error Enable for the BMC Interrupt. If a bit is set, the 
* corresponding error bit in #%%#RXHP_ERR_STS_1#%%# will cause an interrupt on 
* the BMC interrupt signal.
*/
#define FXR_RXHP_ERR_EN_BMC_1								(FXR_RX_HP_CSRS + 0x000000051028)
#define FXR_RXHP_ERR_EN_BMC_1_RESETCSR							0x0000000000000000ull
#define FXR_RXHP_ERR_EN_BMC_1_RESERVED_63_38_SHIFT					38
#define FXR_RXHP_ERR_EN_BMC_1_RESERVED_63_38_MASK					0x3FFFFFFull
#define FXR_RXHP_ERR_EN_BMC_1_RESERVED_63_38_SMASK					0xFFFFFFC000000000ull
#define FXR_RXHP_ERR_EN_BMC_1_EVENTS_SHIFT						0
#define FXR_RXHP_ERR_EN_BMC_1_EVENTS_MASK						0x3FFFFFFFFFull
#define FXR_RXHP_ERR_EN_BMC_1_EVENTS_SMASK						0x3FFFFFFFFFull
/*
* Table #55 of fxr_top - RXHP_ERR_FIRST_BMC_1
* 
*/
#define FXR_RXHP_ERR_FIRST_BMC_1							(FXR_RX_HP_CSRS + 0x000000051030)
#define FXR_RXHP_ERR_FIRST_BMC_1_RESETCSR						0x0000000000000000ull
#define FXR_RXHP_ERR_FIRST_BMC_1_RESERVED_63_38_SHIFT					38
#define FXR_RXHP_ERR_FIRST_BMC_1_RESERVED_63_38_MASK					0x3FFFFFFull
#define FXR_RXHP_ERR_FIRST_BMC_1_RESERVED_63_38_SMASK					0xFFFFFFC000000000ull
#define FXR_RXHP_ERR_FIRST_BMC_1_EVENTS_SHIFT						0
#define FXR_RXHP_ERR_FIRST_BMC_1_EVENTS_MASK						0x3FFFFFFFFFull
#define FXR_RXHP_ERR_FIRST_BMC_1_EVENTS_SMASK						0x3FFFFFFFFFull
/*
* Table #56 of fxr_top - RXHP_ERR_EN_QUAR_1
* This is the Error Enable for the Quarantine Interrupt. If a bit is set, the 
* corresponding error bit in #%%#RXHP_ERR_STS_1#%%# will cause an interrupt on 
* the QUAR interrupt signal.
*/
#define FXR_RXHP_ERR_EN_QUAR_1								(FXR_RX_HP_CSRS + 0x000000051038)
#define FXR_RXHP_ERR_EN_QUAR_1_RESETCSR							0x0000000000000000ull
#define FXR_RXHP_ERR_EN_QUAR_1_RESERVED_63_38_SHIFT					38
#define FXR_RXHP_ERR_EN_QUAR_1_RESERVED_63_38_MASK					0x3FFFFFFull
#define FXR_RXHP_ERR_EN_QUAR_1_RESERVED_63_38_SMASK					0xFFFFFFC000000000ull
#define FXR_RXHP_ERR_EN_QUAR_1_EVENTS_SHIFT						0
#define FXR_RXHP_ERR_EN_QUAR_1_EVENTS_MASK						0x3FFFFFFFFFull
#define FXR_RXHP_ERR_EN_QUAR_1_EVENTS_SMASK						0x3FFFFFFFFFull
/*
* Table #57 of fxr_top - RXHP_ERR_FIRST_QUAR_1
* This is the First Error CSR for the Quarantine Interrupt. When this CSR is 
* clear, it will capture the next #%%#RXHP_ERR_STS_1#%%# value when a new QUAR 
* Interrupt occurs.
*/
#define FXR_RXHP_ERR_FIRST_QUAR_1							(FXR_RX_HP_CSRS + 0x000000051040)
#define FXR_RXHP_ERR_FIRST_QUAR_1_RESETCSR						0x0000000000000000ull
#define FXR_RXHP_ERR_FIRST_QUAR_1_RESERVED_63_38_SHIFT					38
#define FXR_RXHP_ERR_FIRST_QUAR_1_RESERVED_63_38_MASK					0x3FFFFFFull
#define FXR_RXHP_ERR_FIRST_QUAR_1_RESERVED_63_38_SMASK					0xFFFFFFC000000000ull
#define FXR_RXHP_ERR_FIRST_QUAR_1_EVENTS_54_0_SHIFT					0
#define FXR_RXHP_ERR_FIRST_QUAR_1_EVENTS_54_0_MASK					0x3FFFFFFFFFull
#define FXR_RXHP_ERR_FIRST_QUAR_1_EVENTS_54_0_SMASK					0x3FFFFFFFFFull
/*
* Table #58 of fxr_top - RXHP_ERR_INFO_PTE_CACHE_TAG_SBE
* Error Info for the PTE Cache tag #%%#pte_cache_tag_sbe#%%# events. There are 
* 2ecc domains. Each domain covers two tag ways. tag_mem[105:0] = 
* {tag_ecc[1:0][6:0],tag_way_data[1:0][1:0][22:0]}
*/
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_SBE						(FXR_RX_HP_CSRS + 0x000000051048)
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_SBE_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_SBE_RESERVED_63_35_SHIFT			35
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_SBE_RESERVED_63_35_MASK				0x1FFFFFFFull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_SBE_RESERVED_63_35_SMASK			0xFFFFFFF800000000ull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_SBE_SBE_LAST_ADDRESS_SHIFT			22
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_SBE_SBE_LAST_ADDRESS_MASK			0x1FFFull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_SBE_SBE_LAST_ADDRESS_SMASK			0x7FFC00000ull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_SBE_SBE_COUNT_SHIFT				10
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_SBE_SBE_COUNT_MASK				0xFFFull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_SBE_SBE_COUNT_SMASK				0x3FFC00ull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_SBE_SBE_SHIFT					8
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_SBE_SBE_MASK					0x3ull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_SBE_SBE_SMASK					0x300ull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_SBE_SBE_LAST_DOMAIN_SHIFT			7
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_SBE_SBE_LAST_DOMAIN_MASK			0x1ull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_SBE_SBE_LAST_DOMAIN_SMASK			0x80ull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_SBE_SBE_LAST_SYNDROME_SHIFT			0
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_SBE_SBE_LAST_SYNDROME_MASK			0x7Full
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_SBE_SBE_LAST_SYNDROME_SMASK			0x7Full
/*
* Table #59 of fxr_top - RXHP_ERR_INFO_PTE_CACHE_TAG_MBE
* Error Info for the PTE Cache tag #%%#pte_cache_tag_mbe#%%# events. There are 
* 2ecc domains. Each domain covers two tag ways. tag_mem[105:0] = 
* {tag_ecc[1:0][6:0],tag_way_data[1:0][1:0][22:0]}
*/
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_MBE						(FXR_RX_HP_CSRS + 0x000000051050)
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_MBE_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_MBE_RESERVED_63_35_SHIFT			35
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_MBE_RESERVED_63_35_MASK				0x1FFFFFFFull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_MBE_RESERVED_63_35_SMASK			0xFFFFFFF800000000ull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_MBE_MBE_LAST_ADDRESS_SHIFT			22
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_MBE_MBE_LAST_ADDRESS_MASK			0x1FFFull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_MBE_MBE_LAST_ADDRESS_SMASK			0x7FFC00000ull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_MBE_MBE_COUNT_SHIFT				10
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_MBE_MBE_COUNT_MASK				0xFFFull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_MBE_MBE_COUNT_SMASK				0x3FFC00ull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_MBE_MBE_SHIFT					8
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_MBE_MBE_MASK					0x3ull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_MBE_MBE_SMASK					0x300ull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_MBE_MBE_LAST_DOMAIN_SHIFT			7
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_MBE_MBE_LAST_DOMAIN_MASK			0x1ull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_MBE_MBE_LAST_DOMAIN_SMASK			0x80ull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_MBE_MBE_LAST_SYNDROME_SHIFT			0
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_MBE_MBE_LAST_SYNDROME_MASK			0x7Full
#define FXR_RXHP_ERR_INFO_PTE_CACHE_TAG_MBE_MBE_LAST_SYNDROME_SMASK			0x7Full
/*
* Table #60 of fxr_top - RXHP_ERR_INFO_PTE_CACHE_DATA_SBE_MBE
* Error Info for the PTE Cache Data #%%#pte_cache_data_sbe#%%# and 
* #%%#pte_cache_data_mbe#%%# events. There is no address associated with these. 
* There are 3 ecc domains. data mem[223:0]= {ecc[2:0][7:0],data}. Domains 1:0 
* cover data[133:0] (67 bits each) and domain 2 covers data[199:134] (66 
* bits).
*/
#define FXR_RXHP_ERR_INFO_PTE_CACHE_DATA_SBE_MBE					(FXR_RX_HP_CSRS + 0x000000051058)
#define FXR_RXHP_ERR_INFO_PTE_CACHE_DATA_SBE_MBE_RESETCSR				0x0000000000000000ull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_DATA_SBE_MBE_RESERVED_63_42_SHIFT			42
#define FXR_RXHP_ERR_INFO_PTE_CACHE_DATA_SBE_MBE_RESERVED_63_42_MASK			0x3FFFFFull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_DATA_SBE_MBE_RESERVED_63_42_SMASK			0xFFFFFC0000000000ull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_DATA_SBE_MBE_SBE_LAST_DOMAIN_SHIFT			40
#define FXR_RXHP_ERR_INFO_PTE_CACHE_DATA_SBE_MBE_SBE_LAST_DOMAIN_MASK			0x3ull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_DATA_SBE_MBE_SBE_LAST_DOMAIN_SMASK			0x30000000000ull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_DATA_SBE_MBE_SBE_COUNT_SHIFT			28
#define FXR_RXHP_ERR_INFO_PTE_CACHE_DATA_SBE_MBE_SBE_COUNT_MASK				0xFFFull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_DATA_SBE_MBE_SBE_COUNT_SMASK			0xFFF0000000ull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_DATA_SBE_MBE_SBE_SHIFT				25
#define FXR_RXHP_ERR_INFO_PTE_CACHE_DATA_SBE_MBE_SBE_MASK				0x7ull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_DATA_SBE_MBE_SBE_SMASK				0xE000000ull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_DATA_SBE_MBE_SBE_LAST_SYNDROME_SHIFT		17
#define FXR_RXHP_ERR_INFO_PTE_CACHE_DATA_SBE_MBE_SBE_LAST_SYNDROME_MASK			0xFFull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_DATA_SBE_MBE_SBE_LAST_SYNDROME_SMASK		0x1FE0000ull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_DATA_SBE_MBE_MBE_LAST_DOMAIN_SHIFT			15
#define FXR_RXHP_ERR_INFO_PTE_CACHE_DATA_SBE_MBE_MBE_LAST_DOMAIN_MASK			0x3ull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_DATA_SBE_MBE_MBE_LAST_DOMAIN_SMASK			0x18000ull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_DATA_SBE_MBE_MBE_COUNT_SHIFT			11
#define FXR_RXHP_ERR_INFO_PTE_CACHE_DATA_SBE_MBE_MBE_COUNT_MASK				0xFull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_DATA_SBE_MBE_MBE_COUNT_SMASK			0x7800ull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_DATA_SBE_MBE_MBE_SHIFT				8
#define FXR_RXHP_ERR_INFO_PTE_CACHE_DATA_SBE_MBE_MBE_MASK				0x7ull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_DATA_SBE_MBE_MBE_SMASK				0x700ull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_DATA_SBE_MBE_MBE_LAST_SYNDROME_SHIFT		0
#define FXR_RXHP_ERR_INFO_PTE_CACHE_DATA_SBE_MBE_MBE_LAST_SYNDROME_MASK			0xFFull
#define FXR_RXHP_ERR_INFO_PTE_CACHE_DATA_SBE_MBE_MBE_LAST_SYNDROME_SMASK		0xFFull
/*
* Table #61 of fxr_top - RXHP_ERR_INFO_PSC0_CACHE_SBE
* Error Info for the PSC0 Cache #%%#PSC0 Cache sbe#%%# events. There are 12 ecc 
* domains.
*/
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_SBE						(FXR_RX_HP_CSRS + 0x000000051060)
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_SBE_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_SBE_RESERVED_63_63_SHIFT				63
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_SBE_RESERVED_63_63_MASK				0x1ull
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_SBE_RESERVED_63_63_SMASK				0x8000000000000000ull
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_SBE_SBE_LAST_ADDRESS_SHIFT				34
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_SBE_SBE_LAST_ADDRESS_MASK				0x1FFFFFFFull
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_SBE_SBE_LAST_ADDRESS_SMASK				0x7FFFFFFC00000000ull
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_SBE_SBE_COUNT_SHIFT				22
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_SBE_SBE_COUNT_MASK					0xFFFull
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_SBE_SBE_COUNT_SMASK				0x3FFC00000ull
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_SBE_SBE_SHIFT					12
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_SBE_SBE_MASK					0x3FFull
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_SBE_SBE_SMASK					0x3FF000ull
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_SBE_SBE_LAST_DOMAIN_SHIFT				8
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_SBE_SBE_LAST_DOMAIN_MASK				0xFull
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_SBE_SBE_LAST_DOMAIN_SMASK				0xF00ull
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_SBE_SBE_LAST_SYNDROME_SHIFT			0
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_SBE_SBE_LAST_SYNDROME_MASK				0xFFull
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_SBE_SBE_LAST_SYNDROME_SMASK			0xFFull
/*
* Table #62 of fxr_top - RXHP_ERR_INFO_PSC0_CACHE_MBE
* Error Info for the PTE Cache tag #%%#PSC0 Cache mbe#%%# events. There are 12 
* ecc domains.
*/
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_MBE						(FXR_RX_HP_CSRS + 0x000000051068)
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_MBE_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_MBE_RESERVED_63_63_SHIFT				63
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_MBE_RESERVED_63_63_MASK				0x1ull
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_MBE_RESERVED_63_63_SMASK				0x8000000000000000ull
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_MBE_MBE_LAST_ADDRESS_SHIFT				34
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_MBE_MBE_LAST_ADDRESS_MASK				0x1FFFFFFFull
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_MBE_MBE_LAST_ADDRESS_SMASK				0x7FFFFFFC00000000ull
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_MBE_MBE_COUNT_SHIFT				22
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_MBE_MBE_COUNT_MASK					0xFFFull
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_MBE_MBE_COUNT_SMASK				0x3FFC00000ull
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_MBE_MBE_SHIFT					12
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_MBE_MBE_MASK					0x3FFull
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_MBE_MBE_SMASK					0x3FF000ull
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_MBE_MBE_LAST_DOMAIN_SHIFT				8
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_MBE_MBE_LAST_DOMAIN_MASK				0xFull
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_MBE_MBE_LAST_DOMAIN_SMASK				0xF00ull
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_MBE_MBE_LAST_SYNDROME_SHIFT			0
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_MBE_MBE_LAST_SYNDROME_MASK				0xFFull
#define FXR_RXHP_ERR_INFO_PSC0_CACHE_MBE_MBE_LAST_SYNDROME_SMASK			0xFFull
/*
* Table #63 of fxr_top - RXHP_ERR_INFO_PSC1_CACHE_SBE
* Error Info for the PTE Cache tag #%%#PSC1 Cache sbe#%%# events. There are 10 
* ecc domains.
*/
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_SBE						(FXR_RX_HP_CSRS + 0x000000051070)
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_SBE_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_SBE_RESERVED_63_63_SHIFT				63
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_SBE_RESERVED_63_63_MASK				0x1ull
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_SBE_RESERVED_63_63_SMASK				0x8000000000000000ull
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_SBE_SBE_LAST_ADDRESS_SHIFT				34
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_SBE_SBE_LAST_ADDRESS_MASK				0x1FFFFFFFull
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_SBE_SBE_LAST_ADDRESS_SMASK				0x7FFFFFFC00000000ull
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_SBE_SBE_COUNT_SHIFT				22
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_SBE_SBE_COUNT_MASK					0xFFFull
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_SBE_SBE_COUNT_SMASK				0x3FFC00000ull
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_SBE_SBE_SHIFT					12
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_SBE_SBE_MASK					0x3FFull
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_SBE_SBE_SMASK					0x3FF000ull
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_SBE_SBE_LAST_DOMAIN_SHIFT				8
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_SBE_SBE_LAST_DOMAIN_MASK				0xFull
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_SBE_SBE_LAST_DOMAIN_SMASK				0xF00ull
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_SBE_SBE_LAST_SYNDROME_SHIFT			0
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_SBE_SBE_LAST_SYNDROME_MASK				0xFFull
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_SBE_SBE_LAST_SYNDROME_SMASK			0xFFull
/*
* Table #64 of fxr_top - RXHP_ERR_INFO_PSC1_CACHE_MBE
* Error Info for the PTE Cache tag #%%#PSC1 Cache mbe#%%# events. There are 10 
* ecc domains.
*/
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_MBE						(FXR_RX_HP_CSRS + 0x000000051078)
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_MBE_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_MBE_RESERVED_63_63_SHIFT				63
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_MBE_RESERVED_63_63_MASK				0x1ull
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_MBE_RESERVED_63_63_SMASK				0x8000000000000000ull
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_MBE_MBE_LAST_ADDRESS_SHIFT				34
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_MBE_MBE_LAST_ADDRESS_MASK				0x1FFFFFFFull
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_MBE_MBE_LAST_ADDRESS_SMASK				0x7FFFFFFC00000000ull
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_MBE_MBE_COUNT_SHIFT				22
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_MBE_MBE_COUNT_MASK					0xFFFull
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_MBE_MBE_COUNT_SMASK				0x3FFC00000ull
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_MBE_MBE_SHIFT					12
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_MBE_MBE_MASK					0x3FFull
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_MBE_MBE_SMASK					0x3FF000ull
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_MBE_MBE_LAST_DOMAIN_SHIFT				8
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_MBE_MBE_LAST_DOMAIN_MASK				0xFull
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_MBE_MBE_LAST_DOMAIN_SMASK				0xF00ull
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_MBE_MBE_LAST_SYNDROME_SHIFT			0
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_MBE_MBE_LAST_SYNDROME_MASK				0xFFull
#define FXR_RXHP_ERR_INFO_PSC1_CACHE_MBE_MBE_LAST_SYNDROME_SMASK			0xFFull
/*
* Table #65 of fxr_top - RXHP_ERR_INFO_FLIT_DATA_SBE_MBE
* Error Info for the #%%#flit_data_sbe#%%# and #%%#flit_data_mbe#%%# events. 
* There is no address associated with these. There are 4 ecc domains.
*/
#define FXR_RXHP_ERR_INFO_FLIT_DATA_SBE_MBE						(FXR_RX_HP_CSRS + 0x000000051080)
#define FXR_RXHP_ERR_INFO_FLIT_DATA_SBE_MBE_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_ERR_INFO_FLIT_DATA_SBE_MBE_RESERVED_63_44_SHIFT			44
#define FXR_RXHP_ERR_INFO_FLIT_DATA_SBE_MBE_RESERVED_63_44_MASK				0xFFFFFull
#define FXR_RXHP_ERR_INFO_FLIT_DATA_SBE_MBE_RESERVED_63_44_SMASK			0xFFFFF00000000000ull
#define FXR_RXHP_ERR_INFO_FLIT_DATA_SBE_MBE_SBE_LAST_DOMAIN_SHIFT			42
#define FXR_RXHP_ERR_INFO_FLIT_DATA_SBE_MBE_SBE_LAST_DOMAIN_MASK			0x3ull
#define FXR_RXHP_ERR_INFO_FLIT_DATA_SBE_MBE_SBE_LAST_DOMAIN_SMASK			0xC0000000000ull
#define FXR_RXHP_ERR_INFO_FLIT_DATA_SBE_MBE_SBE_COUNT_SHIFT				30
#define FXR_RXHP_ERR_INFO_FLIT_DATA_SBE_MBE_SBE_COUNT_MASK				0xFFFull
#define FXR_RXHP_ERR_INFO_FLIT_DATA_SBE_MBE_SBE_COUNT_SMASK				0x3FFC0000000ull
#define FXR_RXHP_ERR_INFO_FLIT_DATA_SBE_MBE_SBE_SHIFT					26
#define FXR_RXHP_ERR_INFO_FLIT_DATA_SBE_MBE_SBE_MASK					0xFull
#define FXR_RXHP_ERR_INFO_FLIT_DATA_SBE_MBE_SBE_SMASK					0x3C000000ull
#define FXR_RXHP_ERR_INFO_FLIT_DATA_SBE_MBE_SBE_LAST_SYNDROME_SHIFT			18
#define FXR_RXHP_ERR_INFO_FLIT_DATA_SBE_MBE_SBE_LAST_SYNDROME_MASK			0xFFull
#define FXR_RXHP_ERR_INFO_FLIT_DATA_SBE_MBE_SBE_LAST_SYNDROME_SMASK			0x3FC0000ull
#define FXR_RXHP_ERR_INFO_FLIT_DATA_SBE_MBE_MBE_LAST_DOMAIN_SHIFT			16
#define FXR_RXHP_ERR_INFO_FLIT_DATA_SBE_MBE_MBE_LAST_DOMAIN_MASK			0x3ull
#define FXR_RXHP_ERR_INFO_FLIT_DATA_SBE_MBE_MBE_LAST_DOMAIN_SMASK			0x30000ull
#define FXR_RXHP_ERR_INFO_FLIT_DATA_SBE_MBE_MBE_COUNT_SHIFT				12
#define FXR_RXHP_ERR_INFO_FLIT_DATA_SBE_MBE_MBE_COUNT_MASK				0xFull
#define FXR_RXHP_ERR_INFO_FLIT_DATA_SBE_MBE_MBE_COUNT_SMASK				0xF000ull
#define FXR_RXHP_ERR_INFO_FLIT_DATA_SBE_MBE_MBE_SHIFT					8
#define FXR_RXHP_ERR_INFO_FLIT_DATA_SBE_MBE_MBE_MASK					0xFull
#define FXR_RXHP_ERR_INFO_FLIT_DATA_SBE_MBE_MBE_SMASK					0xF00ull
#define FXR_RXHP_ERR_INFO_FLIT_DATA_SBE_MBE_MBE_LAST_SYNDROME_SHIFT			0
#define FXR_RXHP_ERR_INFO_FLIT_DATA_SBE_MBE_MBE_LAST_SYNDROME_MASK			0xFFull
#define FXR_RXHP_ERR_INFO_FLIT_DATA_SBE_MBE_MBE_LAST_SYNDROME_SMASK			0xFFull
/*
* Table #66 of fxr_top - RXHP_ERR_INFO_PACKET_STATUS_SBE_MBE
* Error Info for the #%%#pkt_status_sbe#%%# and #%%#pkt_status_mbe#%%# events. 
* There is no address associated with these.
*/
#define FXR_RXHP_ERR_INFO_PACKET_STATUS_SBE_MBE						(FXR_RX_HP_CSRS + 0x000000051088)
#define FXR_RXHP_ERR_INFO_PACKET_STATUS_SBE_MBE_RESETCSR				0x0000000000000000ull
#define FXR_RXHP_ERR_INFO_PACKET_STATUS_SBE_MBE_RESERVED_63_34_SHIFT			34
#define FXR_RXHP_ERR_INFO_PACKET_STATUS_SBE_MBE_RESERVED_63_34_MASK			0x3FFFFFFFull
#define FXR_RXHP_ERR_INFO_PACKET_STATUS_SBE_MBE_RESERVED_63_34_SMASK			0xFFFFFFFC00000000ull
#define FXR_RXHP_ERR_INFO_PACKET_STATUS_SBE_MBE_SBE_COUNT_SHIFT				22
#define FXR_RXHP_ERR_INFO_PACKET_STATUS_SBE_MBE_SBE_COUNT_MASK				0xFFFull
#define FXR_RXHP_ERR_INFO_PACKET_STATUS_SBE_MBE_SBE_COUNT_SMASK				0x3FFC00000ull
#define FXR_RXHP_ERR_INFO_PACKET_STATUS_SBE_MBE_SBE_SHIFT				21
#define FXR_RXHP_ERR_INFO_PACKET_STATUS_SBE_MBE_SBE_MASK				0x1ull
#define FXR_RXHP_ERR_INFO_PACKET_STATUS_SBE_MBE_SBE_SMASK				0x200000ull
#define FXR_RXHP_ERR_INFO_PACKET_STATUS_SBE_MBE_SBE_LAST_SYNDROME_SHIFT			13
#define FXR_RXHP_ERR_INFO_PACKET_STATUS_SBE_MBE_SBE_LAST_SYNDROME_MASK			0xFFull
#define FXR_RXHP_ERR_INFO_PACKET_STATUS_SBE_MBE_SBE_LAST_SYNDROME_SMASK			0x1FE000ull
#define FXR_RXHP_ERR_INFO_PACKET_STATUS_SBE_MBE_MBE_COUNT_SHIFT				9
#define FXR_RXHP_ERR_INFO_PACKET_STATUS_SBE_MBE_MBE_COUNT_MASK				0xFull
#define FXR_RXHP_ERR_INFO_PACKET_STATUS_SBE_MBE_MBE_COUNT_SMASK				0x1E00ull
#define FXR_RXHP_ERR_INFO_PACKET_STATUS_SBE_MBE_MBE_SHIFT				8
#define FXR_RXHP_ERR_INFO_PACKET_STATUS_SBE_MBE_MBE_MASK				0x1ull
#define FXR_RXHP_ERR_INFO_PACKET_STATUS_SBE_MBE_MBE_SMASK				0x100ull
#define FXR_RXHP_ERR_INFO_PACKET_STATUS_SBE_MBE_MBE_LAST_SYNDROME_SHIFT			0
#define FXR_RXHP_ERR_INFO_PACKET_STATUS_SBE_MBE_MBE_LAST_SYNDROME_MASK			0xFFull
#define FXR_RXHP_ERR_INFO_PACKET_STATUS_SBE_MBE_MBE_LAST_SYNDROME_SMASK			0xFFull
/*
* Table #67 of fxr_top - RXHP_ERR_INFO_TRIGOP_DATA_SBE_MBE
* Error Info for the #%%#trigop_data_sbe#%%# and #%%#trigop_data_mbe#%%# events. 
* There is no address associated with these. There are 4 ecc domains.
*/
#define FXR_RXHP_ERR_INFO_TRIGOP_DATA_SBE_MBE						(FXR_RX_HP_CSRS + 0x000000051090)
#define FXR_RXHP_ERR_INFO_TRIGOP_DATA_SBE_MBE_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_ERR_INFO_TRIGOP_DATA_SBE_MBE_RESERVED_63_44_SHIFT			44
#define FXR_RXHP_ERR_INFO_TRIGOP_DATA_SBE_MBE_RESERVED_63_44_MASK			0xFFFFFull
#define FXR_RXHP_ERR_INFO_TRIGOP_DATA_SBE_MBE_RESERVED_63_44_SMASK			0xFFFFF00000000000ull
#define FXR_RXHP_ERR_INFO_TRIGOP_DATA_SBE_MBE_SBE_LAST_DOMAIN_SHIFT			42
#define FXR_RXHP_ERR_INFO_TRIGOP_DATA_SBE_MBE_SBE_LAST_DOMAIN_MASK			0x3ull
#define FXR_RXHP_ERR_INFO_TRIGOP_DATA_SBE_MBE_SBE_LAST_DOMAIN_SMASK			0xC0000000000ull
#define FXR_RXHP_ERR_INFO_TRIGOP_DATA_SBE_MBE_SBE_COUNT_SHIFT				30
#define FXR_RXHP_ERR_INFO_TRIGOP_DATA_SBE_MBE_SBE_COUNT_MASK				0xFFFull
#define FXR_RXHP_ERR_INFO_TRIGOP_DATA_SBE_MBE_SBE_COUNT_SMASK				0x3FFC0000000ull
#define FXR_RXHP_ERR_INFO_TRIGOP_DATA_SBE_MBE_SBE_SHIFT					26
#define FXR_RXHP_ERR_INFO_TRIGOP_DATA_SBE_MBE_SBE_MASK					0xFull
#define FXR_RXHP_ERR_INFO_TRIGOP_DATA_SBE_MBE_SBE_SMASK					0x3C000000ull
#define FXR_RXHP_ERR_INFO_TRIGOP_DATA_SBE_MBE_SBE_LAST_SYNDROME_SHIFT			18
#define FXR_RXHP_ERR_INFO_TRIGOP_DATA_SBE_MBE_SBE_LAST_SYNDROME_MASK			0xFFull
#define FXR_RXHP_ERR_INFO_TRIGOP_DATA_SBE_MBE_SBE_LAST_SYNDROME_SMASK			0x3FC0000ull
#define FXR_RXHP_ERR_INFO_TRIGOP_DATA_SBE_MBE_MBE_LAST_DOMAIN_SHIFT			16
#define FXR_RXHP_ERR_INFO_TRIGOP_DATA_SBE_MBE_MBE_LAST_DOMAIN_MASK			0x3ull
#define FXR_RXHP_ERR_INFO_TRIGOP_DATA_SBE_MBE_MBE_LAST_DOMAIN_SMASK			0x30000ull
#define FXR_RXHP_ERR_INFO_TRIGOP_DATA_SBE_MBE_MBE_COUNT_SHIFT				12
#define FXR_RXHP_ERR_INFO_TRIGOP_DATA_SBE_MBE_MBE_COUNT_MASK				0xFull
#define FXR_RXHP_ERR_INFO_TRIGOP_DATA_SBE_MBE_MBE_COUNT_SMASK				0xF000ull
#define FXR_RXHP_ERR_INFO_TRIGOP_DATA_SBE_MBE_MBE_SHIFT					8
#define FXR_RXHP_ERR_INFO_TRIGOP_DATA_SBE_MBE_MBE_MASK					0xFull
#define FXR_RXHP_ERR_INFO_TRIGOP_DATA_SBE_MBE_MBE_SMASK					0xF00ull
#define FXR_RXHP_ERR_INFO_TRIGOP_DATA_SBE_MBE_MBE_LAST_SYNDROME_SHIFT			0
#define FXR_RXHP_ERR_INFO_TRIGOP_DATA_SBE_MBE_MBE_LAST_SYNDROME_MASK			0xFFull
#define FXR_RXHP_ERR_INFO_TRIGOP_DATA_SBE_MBE_MBE_LAST_SYNDROME_SMASK			0xFFull
/*
* Table #68 of fxr_top - RXHP_ERR_INFO_CI_DATA_SBE_MBE
* Error Info for the #%%#ci_data_sbe#%%# and #%%#ci_data_mbe#%%# events. There 
* is no address associated with these. There are 4 ecc domains.
*/
#define FXR_RXHP_ERR_INFO_CI_DATA_SBE_MBE						(FXR_RX_HP_CSRS + 0x000000051098)
#define FXR_RXHP_ERR_INFO_CI_DATA_SBE_MBE_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_ERR_INFO_CI_DATA_SBE_MBE_RESERVED_63_44_SHIFT				44
#define FXR_RXHP_ERR_INFO_CI_DATA_SBE_MBE_RESERVED_63_44_MASK				0xFFFFFull
#define FXR_RXHP_ERR_INFO_CI_DATA_SBE_MBE_RESERVED_63_44_SMASK				0xFFFFF00000000000ull
#define FXR_RXHP_ERR_INFO_CI_DATA_SBE_MBE_SBE_LAST_DOMAIN_SHIFT				42
#define FXR_RXHP_ERR_INFO_CI_DATA_SBE_MBE_SBE_LAST_DOMAIN_MASK				0x3ull
#define FXR_RXHP_ERR_INFO_CI_DATA_SBE_MBE_SBE_LAST_DOMAIN_SMASK				0xC0000000000ull
#define FXR_RXHP_ERR_INFO_CI_DATA_SBE_MBE_SBE_COUNT_SHIFT				30
#define FXR_RXHP_ERR_INFO_CI_DATA_SBE_MBE_SBE_COUNT_MASK				0xFFFull
#define FXR_RXHP_ERR_INFO_CI_DATA_SBE_MBE_SBE_COUNT_SMASK				0x3FFC0000000ull
#define FXR_RXHP_ERR_INFO_CI_DATA_SBE_MBE_SBE_SHIFT					26
#define FXR_RXHP_ERR_INFO_CI_DATA_SBE_MBE_SBE_MASK					0xFull
#define FXR_RXHP_ERR_INFO_CI_DATA_SBE_MBE_SBE_SMASK					0x3C000000ull
#define FXR_RXHP_ERR_INFO_CI_DATA_SBE_MBE_SBE_LAST_SYNDROME_SHIFT			18
#define FXR_RXHP_ERR_INFO_CI_DATA_SBE_MBE_SBE_LAST_SYNDROME_MASK			0xFFull
#define FXR_RXHP_ERR_INFO_CI_DATA_SBE_MBE_SBE_LAST_SYNDROME_SMASK			0x3FC0000ull
#define FXR_RXHP_ERR_INFO_CI_DATA_SBE_MBE_MBE_LAST_DOMAIN_SHIFT				16
#define FXR_RXHP_ERR_INFO_CI_DATA_SBE_MBE_MBE_LAST_DOMAIN_MASK				0x3ull
#define FXR_RXHP_ERR_INFO_CI_DATA_SBE_MBE_MBE_LAST_DOMAIN_SMASK				0x30000ull
#define FXR_RXHP_ERR_INFO_CI_DATA_SBE_MBE_MBE_COUNT_SHIFT				12
#define FXR_RXHP_ERR_INFO_CI_DATA_SBE_MBE_MBE_COUNT_MASK				0xFull
#define FXR_RXHP_ERR_INFO_CI_DATA_SBE_MBE_MBE_COUNT_SMASK				0xF000ull
#define FXR_RXHP_ERR_INFO_CI_DATA_SBE_MBE_MBE_SHIFT					8
#define FXR_RXHP_ERR_INFO_CI_DATA_SBE_MBE_MBE_MASK					0xFull
#define FXR_RXHP_ERR_INFO_CI_DATA_SBE_MBE_MBE_SMASK					0xF00ull
#define FXR_RXHP_ERR_INFO_CI_DATA_SBE_MBE_MBE_LAST_SYNDROME_SHIFT			0
#define FXR_RXHP_ERR_INFO_CI_DATA_SBE_MBE_MBE_LAST_SYNDROME_MASK			0xFFull
#define FXR_RXHP_ERR_INFO_CI_DATA_SBE_MBE_MBE_LAST_SYNDROME_SMASK			0xFFull
/*
* Table #69 of fxr_top - RXHP_ERR_INFO_HIARB_DATA_SBE_MBE
* Error Info for the #%%#hiarb_data_sbe#%%# and #%%#hiarb_data_mbe#%%# events. 
* There is no address associated with these.
*/
#define FXR_RXHP_ERR_INFO_HIARB_DATA_SBE_MBE						(FXR_RX_HP_CSRS + 0x0000000510A0)
#define FXR_RXHP_ERR_INFO_HIARB_DATA_SBE_MBE_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_ERR_INFO_HIARB_DATA_SBE_MBE_RESERVED_63_34_SHIFT			34
#define FXR_RXHP_ERR_INFO_HIARB_DATA_SBE_MBE_RESERVED_63_34_MASK			0x3FFFFFFFull
#define FXR_RXHP_ERR_INFO_HIARB_DATA_SBE_MBE_RESERVED_63_34_SMASK			0xFFFFFFFC00000000ull
#define FXR_RXHP_ERR_INFO_HIARB_DATA_SBE_MBE_SBE_COUNT_SHIFT				22
#define FXR_RXHP_ERR_INFO_HIARB_DATA_SBE_MBE_SBE_COUNT_MASK				0xFFFull
#define FXR_RXHP_ERR_INFO_HIARB_DATA_SBE_MBE_SBE_COUNT_SMASK				0x3FFC00000ull
#define FXR_RXHP_ERR_INFO_HIARB_DATA_SBE_MBE_SBE_SHIFT					21
#define FXR_RXHP_ERR_INFO_HIARB_DATA_SBE_MBE_SBE_MASK					0x1ull
#define FXR_RXHP_ERR_INFO_HIARB_DATA_SBE_MBE_SBE_SMASK					0x200000ull
#define FXR_RXHP_ERR_INFO_HIARB_DATA_SBE_MBE_SBE_LAST_SYNDROME_SHIFT			13
#define FXR_RXHP_ERR_INFO_HIARB_DATA_SBE_MBE_SBE_LAST_SYNDROME_MASK			0xFFull
#define FXR_RXHP_ERR_INFO_HIARB_DATA_SBE_MBE_SBE_LAST_SYNDROME_SMASK			0x1FE000ull
#define FXR_RXHP_ERR_INFO_HIARB_DATA_SBE_MBE_MBE_COUNT_SHIFT				9
#define FXR_RXHP_ERR_INFO_HIARB_DATA_SBE_MBE_MBE_COUNT_MASK				0xFull
#define FXR_RXHP_ERR_INFO_HIARB_DATA_SBE_MBE_MBE_COUNT_SMASK				0x1E00ull
#define FXR_RXHP_ERR_INFO_HIARB_DATA_SBE_MBE_MBE_SHIFT					8
#define FXR_RXHP_ERR_INFO_HIARB_DATA_SBE_MBE_MBE_MASK					0x1ull
#define FXR_RXHP_ERR_INFO_HIARB_DATA_SBE_MBE_MBE_SMASK					0x100ull
#define FXR_RXHP_ERR_INFO_HIARB_DATA_SBE_MBE_MBE_LAST_SYNDROME_SHIFT			0
#define FXR_RXHP_ERR_INFO_HIARB_DATA_SBE_MBE_MBE_LAST_SYNDROME_MASK			0xFFull
#define FXR_RXHP_ERR_INFO_HIARB_DATA_SBE_MBE_MBE_LAST_SYNDROME_SMASK			0xFFull
/*
* Table #70 of fxr_top - RXHP_ERR_INFO_PTQ_SBE_MBE
* Error Info for the #%%#ptq_sbe#%%# and #%%#ptq_mbe#%%# events. There is an 
* index associated with these. There are 3 ecc domains.
*/
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE							(FXR_RX_HP_CSRS + 0x0000000510A8)
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_RESETCSR						0x0000000000000000ull
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_RESERVED_63_52_SHIFT				52
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_RESERVED_63_52_MASK				0xFFFull
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_RESERVED_63_52_SMASK				0xFFF0000000000000ull
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_SBE_LAST_INDEX_SHIFT				47
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_SBE_LAST_INDEX_MASK				0x1Full
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_SBE_LAST_INDEX_SMASK				0xF800000000000ull
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_SBE_LAST_DOMAIN_SHIFT				45
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_SBE_LAST_DOMAIN_MASK				0x3ull
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_SBE_LAST_DOMAIN_SMASK				0x600000000000ull
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_SBE_COUNT_SHIFT					33
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_SBE_COUNT_MASK					0xFFFull
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_SBE_COUNT_SMASK					0x1FFE00000000ull
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_SBE_SHIFT						30
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_SBE_MASK						0x7ull
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_SBE_SMASK						0x1C0000000ull
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_SBE_LAST_SYNDROME_SHIFT				22
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_SBE_LAST_SYNDROME_MASK				0xFFull
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_SBE_LAST_SYNDROME_SMASK				0x3FC00000ull
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_MBE_LAST_INDEX_SHIFT				17
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_MBE_LAST_INDEX_MASK				0x1Full
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_MBE_LAST_INDEX_SMASK				0x3E0000ull
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_MBE_LAST_DOMAIN_SHIFT				15
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_MBE_LAST_DOMAIN_MASK				0x3ull
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_MBE_LAST_DOMAIN_SMASK				0x18000ull
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_MBE_COUNT_SHIFT					11
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_MBE_COUNT_MASK					0xFull
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_MBE_COUNT_SMASK					0x7800ull
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_MBE_SHIFT						8
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_MBE_MASK						0x7ull
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_MBE_SMASK						0x700ull
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_MBE_LAST_SYNDROME_SHIFT				0
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_MBE_LAST_SYNDROME_MASK				0xFFull
#define FXR_RXHP_ERR_INFO_PTQ_SBE_MBE_MBE_LAST_SYNDROME_SMASK				0xFFull
/*
* Table #71 of fxr_top - RXHP_ERR_INFO_PE_INST_CACHE_SBE
* Error Info for the PE Instruction Cache #%%#pe_inst_sbe#%%# events.
*/
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_SBE						(FXR_RX_HP_CSRS + 0x0000000510B8)
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_SBE_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_SBE_RESERVED_63_42_SHIFT			42
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_SBE_RESERVED_63_42_MASK				0x3FFFFFull
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_SBE_RESERVED_63_42_SMASK			0xFFFFFC0000000000ull
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_SBE_SBE_LAST_ADDRESS_SHIFT			30
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_SBE_SBE_LAST_ADDRESS_MASK			0xFFFull
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_SBE_SBE_LAST_ADDRESS_SMASK			0x3FFC0000000ull
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_SBE_SBE_COUNT_SHIFT				18
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_SBE_SBE_COUNT_MASK				0xFFFull
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_SBE_SBE_COUNT_SMASK				0x3FFC0000ull
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_SBE_SBE_SHIFT					10
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_SBE_SBE_MASK					0xFFull
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_SBE_SBE_SMASK					0x3FC00ull
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_SBE_SBE_LAST_CORE_SHIFT				7
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_SBE_SBE_LAST_CORE_MASK				0x7ull
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_SBE_SBE_LAST_CORE_SMASK				0x380ull
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_SBE_SBE_LAST_SYNDROME_SHIFT			0
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_SBE_SBE_LAST_SYNDROME_MASK			0x7Full
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_SBE_SBE_LAST_SYNDROME_SMASK			0x7Full
/*
* Table #72 of fxr_top - RXHP_ERR_INFO_PE_INST_CACHE_MBE
* Error Info for the PE Instruction Cache #%%#pe_inst_mbe#%%# events.
*/
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_MBE						(FXR_RX_HP_CSRS + 0x0000000510C0)
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_MBE_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_MBE_RESERVED_63_42_SHIFT			42
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_MBE_RESERVED_63_42_MASK				0x3FFFFFull
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_MBE_RESERVED_63_42_SMASK			0xFFFFFC0000000000ull
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_MBE_MBE_LAST_ADDRESS_SHIFT			30
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_MBE_MBE_LAST_ADDRESS_MASK			0xFFFull
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_MBE_MBE_LAST_ADDRESS_SMASK			0x3FFC0000000ull
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_MBE_MBE_COUNT_SHIFT				18
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_MBE_MBE_COUNT_MASK				0xFFFull
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_MBE_MBE_COUNT_SMASK				0x3FFC0000ull
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_MBE_MBE_SHIFT					10
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_MBE_MBE_MASK					0xFFull
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_MBE_MBE_SMASK					0x3FC00ull
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_MBE_MBE_LAST_CORE_SHIFT				7
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_MBE_MBE_LAST_CORE_MASK				0x7ull
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_MBE_MBE_LAST_CORE_SMASK				0x380ull
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_MBE_MBE_LAST_SYNDROME_SHIFT			0
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_MBE_MBE_LAST_SYNDROME_MASK			0x7Full
#define FXR_RXHP_ERR_INFO_PE_INST_CACHE_MBE_MBE_LAST_SYNDROME_SMASK			0x7Full
/*
* Table #73 of fxr_top - RXHP_ERR_INFO_PE_DATA_CACHE_SBE
* Error Info for the PE Data Cache #%%#pe_data_sbe#%%# events.
*/
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_SBE						(FXR_RX_HP_CSRS + 0x0000000510C8)
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_SBE_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_SBE_RESERVED_63_43_SHIFT			43
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_SBE_RESERVED_63_43_MASK				0x1FFFFFull
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_SBE_RESERVED_63_43_SMASK			0xFFFFF80000000000ull
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_SBE_SBE_LAST_ADDRESS_SHIFT			31
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_SBE_SBE_LAST_ADDRESS_MASK			0xFFFull
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_SBE_SBE_LAST_ADDRESS_SMASK			0x7FF80000000ull
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_SBE_SBE_COUNT_SHIFT				19
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_SBE_SBE_COUNT_MASK				0xFFFull
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_SBE_SBE_COUNT_SMASK				0x7FF80000ull
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_SBE_SBE_SHIFT					11
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_SBE_SBE_MASK					0xFFull
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_SBE_SBE_SMASK					0x7F800ull
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_SBE_SBE_LAST_CORE_SHIFT				8
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_SBE_SBE_LAST_CORE_MASK				0x7ull
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_SBE_SBE_LAST_CORE_SMASK				0x700ull
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_SBE_SBE_LAST_SYNDROME_SHIFT			0
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_SBE_SBE_LAST_SYNDROME_MASK			0xFFull
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_SBE_SBE_LAST_SYNDROME_SMASK			0xFFull
/*
* Table #74 of fxr_top - RXHP_ERR_INFO_PE_DATA_CACHE_MBE
* Error Info for the PE Data Cache #%%#pe_data_mbe#%%# events.
*/
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_MBE						(FXR_RX_HP_CSRS + 0x0000000510D0)
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_MBE_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_MBE_RESERVED_63_43_SHIFT			43
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_MBE_RESERVED_63_43_MASK				0x1FFFFFull
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_MBE_RESERVED_63_43_SMASK			0xFFFFF80000000000ull
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_MBE_MBE_LAST_ADDRESS_SHIFT			31
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_MBE_MBE_LAST_ADDRESS_MASK			0xFFFull
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_MBE_MBE_LAST_ADDRESS_SMASK			0x7FF80000000ull
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_MBE_MBE_COUNT_SHIFT				19
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_MBE_MBE_COUNT_MASK				0xFFFull
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_MBE_MBE_COUNT_SMASK				0x7FF80000ull
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_MBE_MBE_SHIFT					11
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_MBE_MBE_MASK					0xFFull
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_MBE_MBE_SMASK					0x7F800ull
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_MBE_MBE_LAST_CORE_SHIFT				8
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_MBE_MBE_LAST_CORE_MASK				0x7ull
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_MBE_MBE_LAST_CORE_SMASK				0x700ull
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_MBE_MBE_LAST_SYNDROME_SHIFT			0
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_MBE_MBE_LAST_SYNDROME_MASK			0xFFull
#define FXR_RXHP_ERR_INFO_PE_DATA_CACHE_MBE_MBE_LAST_SYNDROME_SMASK			0xFFull
/*
* Table #75 of fxr_top - RXHP_CACHE_ERR_INJECT_SBE_MBE
* Error Injection for the various sbe/mbe fields. Setting a single bit will 
* cause an sbe in the ecc field and cause that bit to be flipped, no data bits 
* will be flipped. Setting 2 bits will cause an mbe. An even number of bits > 2 
* may or may not cause an mbe. Setting an odd number of bits that is a legal 
* syndrome for that data width will cause an sbe and the corresponding data bit 
* to be flipped. See shrtl_ecc_correct.sv for legal syndromes for each data 
* width.
*/
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE						(FXR_RX_HP_CSRS + 0x0000000510D8)
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_RESERVED_63_46_SHIFT				46
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_RESERVED_63_46_MASK				0x3FFFFull
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_RESERVED_63_46_SMASK				0xFFFFC00000000000ull
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PSC1_CACHE_ERR_INJ_ENABLE_SHIFT		45
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PSC1_CACHE_ERR_INJ_ENABLE_MASK		0x1ull
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PSC1_CACHE_ERR_INJ_ENABLE_SMASK		0x200000000000ull
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PSC1_CACHE_ERR_INJ_DOMAIN_SHIFT		41
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PSC1_CACHE_ERR_INJ_DOMAIN_MASK		0xFull
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PSC1_CACHE_ERR_INJ_DOMAIN_SMASK		0x1E0000000000ull
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PSC1_CACHE_ERR_INJ_MASK_SHIFT			33
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PSC1_CACHE_ERR_INJ_MASK_MASK			0xFFull
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PSC1_CACHE_ERR_INJ_MASK_SMASK			0x1FE00000000ull
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PSC0_CACHE_ERR_INJ_ENABLE_SHIFT		32
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PSC0_CACHE_ERR_INJ_ENABLE_MASK		0x1ull
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PSC0_CACHE_ERR_INJ_ENABLE_SMASK		0x100000000ull
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PSC0_CACHE_ERR_INJ_DOMAIN_SHIFT		28
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PSC0_CACHE_ERR_INJ_DOMAIN_MASK		0xFull
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PSC0_CACHE_ERR_INJ_DOMAIN_SMASK		0xF0000000ull
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PSC0_CACHE_ERR_INJ_MASK_SHIFT			20
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PSC0_CACHE_ERR_INJ_MASK_MASK			0xFFull
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PSC0_CACHE_ERR_INJ_MASK_SMASK			0xFF00000ull
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PTE_CACHE_DATA_ERR_INJ_ENABLE_SHIFT		19
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PTE_CACHE_DATA_ERR_INJ_ENABLE_MASK		0x1ull
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PTE_CACHE_DATA_ERR_INJ_ENABLE_SMASK		0x80000ull
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PTE_CACHE_DATA_ERR_INJ_DOMAIN_SHIFT		17
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PTE_CACHE_DATA_ERR_INJ_DOMAIN_MASK		0x3ull
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PTE_CACHE_DATA_ERR_INJ_DOMAIN_SMASK		0x60000ull
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PTE_CACHE_DATA_ERR_INJ_MASK_SHIFT		9
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PTE_CACHE_DATA_ERR_INJ_MASK_MASK		0xFFull
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PTE_CACHE_DATA_ERR_INJ_MASK_SMASK		0x1FE00ull
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PTE_CACHE_TAG_ERR_INJ_ENABLE_SHIFT		8
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PTE_CACHE_TAG_ERR_INJ_ENABLE_MASK		0x1ull
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PTE_CACHE_TAG_ERR_INJ_ENABLE_SMASK		0x100ull
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PTE_CACHE_TAG_ERR_INJ_DOMAIN_SHIFT		7
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PTE_CACHE_TAG_ERR_INJ_DOMAIN_MASK		0x1ull
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PTE_CACHE_TAG_ERR_INJ_DOMAIN_SMASK		0x80ull
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PTE_CACHE_TAG_ERR_INJ_MASK_SHIFT		0
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PTE_CACHE_TAG_ERR_INJ_MASK_MASK		0x7Full
#define FXR_RXHP_CACHE_ERR_INJECT_SBE_MBE_PTE_CACHE_TAG_ERR_INJ_MASK_SMASK		0x7Full
/*
* Table #76 of fxr_top - RXHP_DATA_PATH_ERR_INJECT_SBE_MBE
* Error Injection for the various sbe/mbe fields. Setting a single bit will 
* cause an sbe in the ecc field and cause that bit to be flipped, no data bits 
* will be flipped. Setting 2 bits will cause an mbe. An even number of bits > 2 
* may or may not cause an mbe. Setting an odd number of bits that is a legal 
* syndrome for that data width will cause an sbe and the corresponding data bit 
* to be flipped. See shrtl_ecc_correct.sv for legal syndromes for each data 
* width.
*/
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE						(FXR_RX_HP_CSRS + 0x0000000510E0)
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_HI_ERR_INJ_ENABLE_SHIFT			63
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_HI_ERR_INJ_ENABLE_MASK			0x1ull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_HI_ERR_INJ_ENABLE_SMASK			0x8000000000000000ull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_PTQ_ERR_INJ_ENABLE_SHIFT			62
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_PTQ_ERR_INJ_ENABLE_MASK			0x1ull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_PTQ_ERR_INJ_ENABLE_SMASK			0x4000000000000000ull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_CI_DATA_ERR_INJ_ENABLE_SHIFT		61
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_CI_DATA_ERR_INJ_ENABLE_MASK		0x1ull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_CI_DATA_ERR_INJ_ENABLE_SMASK		0x2000000000000000ull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_TRIG_OP_DATA_ERR_INJ_ENABLE_SHIFT		60
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_TRIG_OP_DATA_ERR_INJ_ENABLE_MASK		0x1ull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_TRIG_OP_DATA_ERR_INJ_ENABLE_SMASK		0x1000000000000000ull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_PKT_STATUS_ERR_INJ_ENABLE_SHIFT		59
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_PKT_STATUS_ERR_INJ_ENABLE_MASK		0x1ull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_PKT_STATUS_ERR_INJ_ENABLE_SMASK		0x800000000000000ull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_E2E_FLIT_ERR_INJ_ENABLE_SHIFT		58
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_E2E_FLIT_ERR_INJ_ENABLE_MASK		0x1ull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_E2E_FLIT_ERR_INJ_ENABLE_SMASK		0x400000000000000ull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_PTQ_ERR_INJ_DOMAIN_SHIFT			56
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_PTQ_ERR_INJ_DOMAIN_MASK			0x3ull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_PTQ_ERR_INJ_DOMAIN_SMASK			0x300000000000000ull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_CI_DATA_ERR_INJ_DOMAIN_SHIFT		54
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_CI_DATA_ERR_INJ_DOMAIN_MASK		0x3ull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_CI_DATA_ERR_INJ_DOMAIN_SMASK		0xC0000000000000ull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_TRIG_OP_DATA_ERR_INJ_DOMAIN_SHIFT		52
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_TRIG_OP_DATA_ERR_INJ_DOMAIN_MASK		0x3ull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_TRIG_OP_DATA_ERR_INJ_DOMAIN_SMASK		0x30000000000000ull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_PKT_STATUS_ERR_INJ_DOMAIN_SHIFT		50
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_PKT_STATUS_ERR_INJ_DOMAIN_MASK		0x3ull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_PKT_STATUS_ERR_INJ_DOMAIN_SMASK		0xC000000000000ull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_E2E_FLIT_ERR_INJ_DOMAIN_SHIFT		48
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_E2E_FLIT_ERR_INJ_DOMAIN_MASK		0x3ull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_E2E_FLIT_ERR_INJ_DOMAIN_SMASK		0x3000000000000ull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_HI_ERR_INJ_MASK_SHIFT			40
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_HI_ERR_INJ_MASK_MASK			0xFFull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_HI_ERR_INJ_MASK_SMASK			0xFF0000000000ull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_PTQ_ERR_INJ_MASK_SHIFT			32
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_PTQ_ERR_INJ_MASK_MASK			0xFFull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_PTQ_ERR_INJ_MASK_SMASK			0xFF00000000ull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_CI_DATA_ERR_INJ_MASK_SHIFT		24
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_CI_DATA_ERR_INJ_MASK_MASK			0xFFull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_CI_DATA_ERR_INJ_MASK_SMASK		0xFF000000ull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_TRIG_OP_DATA_ERR_INJ_MASK_SHIFT		16
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_TRIG_OP_DATA_ERR_INJ_MASK_MASK		0xFFull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_TRIG_OP_DATA_ERR_INJ_MASK_SMASK		0xFF0000ull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_PKT_STATUS_ERR_INJ_MASK_SHIFT		8
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_PKT_STATUS_ERR_INJ_MASK_MASK		0xFFull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_PKT_STATUS_ERR_INJ_MASK_SMASK		0xFF00ull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_E2E_FLIT_ERR_INJ_MASK_SHIFT		0
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_E2E_FLIT_ERR_INJ_MASK_MASK		0xFFull
#define FXR_RXHP_DATA_PATH_ERR_INJECT_SBE_MBE_E2E_FLIT_ERR_INJ_MASK_SMASK		0xFFull
/*
* Table #77 of fxr_top - RXHP_CONFIG_ERR_INJECT_SBE_MBE
* Error Injection for the various sbe/mbe fields. Setting a single bit will 
* cause an sbe in the ecc field and cause that bit to be flipped, no data bits 
* will be flipped. Setting 2 bits will cause an mbe. An even number of bits > 2 
* may or may not cause an mbe. Setting an odd number of bits that is a legal 
* syndrome for that data width will cause an sbe and the corresponding data bit 
* to be flipped. See shrtl_ecc_correct.sv for legal syndromes for each data 
* width.
*/
#define FXR_RXHP_CONFIG_ERR_INJECT_SBE_MBE						(FXR_RX_HP_CSRS + 0x0000000510E8)
#define FXR_RXHP_CONFIG_ERR_INJECT_SBE_MBE_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_CONFIG_ERR_INJECT_SBE_MBE_RESERVED_63_30_SHIFT				30
#define FXR_RXHP_CONFIG_ERR_INJECT_SBE_MBE_RESERVED_63_30_MASK				0x3FFFFFFFFull
#define FXR_RXHP_CONFIG_ERR_INJECT_SBE_MBE_RESERVED_63_30_SMASK				0xFFFFFFFFC0000000ull
#define FXR_RXHP_CONFIG_ERR_INJECT_SBE_MBE_QP_MAP_ERR_INJ_ENABLE_SHIFT			29
#define FXR_RXHP_CONFIG_ERR_INJECT_SBE_MBE_QP_MAP_ERR_INJ_ENABLE_MASK			0x1ull
#define FXR_RXHP_CONFIG_ERR_INJECT_SBE_MBE_QP_MAP_ERR_INJ_ENABLE_SMASK			0x20000000ull
#define FXR_RXHP_CONFIG_ERR_INJECT_SBE_MBE_QP_MAP_ERR_INJ_MASK_SHIFT			21
#define FXR_RXHP_CONFIG_ERR_INJECT_SBE_MBE_QP_MAP_ERR_INJ_MASK_MASK			0xFFull
#define FXR_RXHP_CONFIG_ERR_INJECT_SBE_MBE_QP_MAP_ERR_INJ_MASK_SMASK			0x1FE00000ull
#define FXR_RXHP_CONFIG_ERR_INJECT_SBE_MBE_PE_DMEM_ERR_INJ_ENABLE_SHIFT			20
#define FXR_RXHP_CONFIG_ERR_INJECT_SBE_MBE_PE_DMEM_ERR_INJ_ENABLE_MASK			0x1ull
#define FXR_RXHP_CONFIG_ERR_INJECT_SBE_MBE_PE_DMEM_ERR_INJ_ENABLE_SMASK			0x100000ull
#define FXR_RXHP_CONFIG_ERR_INJECT_SBE_MBE_PE_DMEM_ERR_INJ_CORE_SHIFT			18
#define FXR_RXHP_CONFIG_ERR_INJECT_SBE_MBE_PE_DMEM_ERR_INJ_CORE_MASK			0x3ull
#define FXR_RXHP_CONFIG_ERR_INJECT_SBE_MBE_PE_DMEM_ERR_INJ_CORE_SMASK			0xC0000ull
#define FXR_RXHP_CONFIG_ERR_INJECT_SBE_MBE_PE_DMEM_ERR_INJ_MASK_SHIFT			10
#define FXR_RXHP_CONFIG_ERR_INJECT_SBE_MBE_PE_DMEM_ERR_INJ_MASK_MASK			0xFFull
#define FXR_RXHP_CONFIG_ERR_INJECT_SBE_MBE_PE_DMEM_ERR_INJ_MASK_SMASK			0x3FC00ull
#define FXR_RXHP_CONFIG_ERR_INJECT_SBE_MBE_PE_IMEM_ERR_INJ_ENABLE_SHIFT			9
#define FXR_RXHP_CONFIG_ERR_INJECT_SBE_MBE_PE_IMEM_ERR_INJ_ENABLE_MASK			0x1ull
#define FXR_RXHP_CONFIG_ERR_INJECT_SBE_MBE_PE_IMEM_ERR_INJ_ENABLE_SMASK			0x200ull
#define FXR_RXHP_CONFIG_ERR_INJECT_SBE_MBE_PE_IMEM_ERR_INJ_CORE_SHIFT			7
#define FXR_RXHP_CONFIG_ERR_INJECT_SBE_MBE_PE_IMEM_ERR_INJ_CORE_MASK			0x3ull
#define FXR_RXHP_CONFIG_ERR_INJECT_SBE_MBE_PE_IMEM_ERR_INJ_CORE_SMASK			0x180ull
#define FXR_RXHP_CONFIG_ERR_INJECT_SBE_MBE_PE_IMEM_ERR_INJ_MASK_SHIFT			0
#define FXR_RXHP_CONFIG_ERR_INJECT_SBE_MBE_PE_IMEM_ERR_INJ_MASK_MASK			0x7Full
#define FXR_RXHP_CONFIG_ERR_INJECT_SBE_MBE_PE_IMEM_ERR_INJ_MASK_SMASK			0x7Full
/*
* Table #78 of fxr_top - RXHP_ERR_MALFORMED_PACKET_COUNT
* This counter is the number of packets which have been dropped because they 
* were malformed. This usually means that the packet was too short to contain 
* the entire header.
*/
#define FXR_RXHP_ERR_MALFORMED_PACKET_COUNT						(FXR_RX_HP_CSRS + 0x0000000510F0)
#define FXR_RXHP_ERR_MALFORMED_PACKET_COUNT_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_ERR_MALFORMED_PACKET_COUNT_COUNT_SHIFT					0
#define FXR_RXHP_ERR_MALFORMED_PACKET_COUNT_COUNT_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_RXHP_ERR_MALFORMED_PACKET_COUNT_COUNT_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #79 of fxr_top - RXHP_DBG_PORTALS_TBL_ADDR
* This is an RX HP debug CSR. It allows indirect access to the Portals Table 
* State. This array can not be written to during normal operation. This register 
* is for debug use only. Note that this register is 288 bits wide. The data for 
* the read or write to this register is contained in the next five 
* CSR's
*/
#define FXR_RXHP_DBG_PORTALS_TBL_ADDR							(FXR_RX_HP_CSRS + 0x000000040000)
#define FXR_RXHP_DBG_PORTALS_TBL_ADDR_RESETCSR						0x0000000000000000ull
#define FXR_RXHP_DBG_PORTALS_TBL_ADDR_RESERVED_63_18_SHIFT				18
#define FXR_RXHP_DBG_PORTALS_TBL_ADDR_RESERVED_63_18_MASK				0x3FFFFFFFFFFFull
#define FXR_RXHP_DBG_PORTALS_TBL_ADDR_RESERVED_63_18_SMASK				0xFFFFFFFFFFFC0000ull
#define FXR_RXHP_DBG_PORTALS_TBL_ADDR_NEW_CMD_SHIFT					17
#define FXR_RXHP_DBG_PORTALS_TBL_ADDR_NEW_CMD_MASK					0x1ull
#define FXR_RXHP_DBG_PORTALS_TBL_ADDR_NEW_CMD_SMASK					0x20000ull
#define FXR_RXHP_DBG_PORTALS_TBL_ADDR_CMD_COMPLETE_SHIFT				16
#define FXR_RXHP_DBG_PORTALS_TBL_ADDR_CMD_COMPLETE_MASK					0x1ull
#define FXR_RXHP_DBG_PORTALS_TBL_ADDR_CMD_COMPLETE_SMASK				0x10000ull
#define FXR_RXHP_DBG_PORTALS_TBL_ADDR_RESERVED_15_13_SHIFT				13
#define FXR_RXHP_DBG_PORTALS_TBL_ADDR_RESERVED_15_13_MASK				0x7ull
#define FXR_RXHP_DBG_PORTALS_TBL_ADDR_RESERVED_15_13_SMASK				0xE000ull
#define FXR_RXHP_DBG_PORTALS_TBL_ADDR_WRITE_CMD_SHIFT					12
#define FXR_RXHP_DBG_PORTALS_TBL_ADDR_WRITE_CMD_MASK					0x1ull
#define FXR_RXHP_DBG_PORTALS_TBL_ADDR_WRITE_CMD_SMASK					0x1000ull
#define FXR_RXHP_DBG_PORTALS_TBL_ADDR_ADDRESS_SHIFT					0
#define FXR_RXHP_DBG_PORTALS_TBL_ADDR_ADDRESS_MASK					0xFFFull
#define FXR_RXHP_DBG_PORTALS_TBL_ADDR_ADDRESS_SMASK					0xFFFull
/*
* Table #80 of fxr_top - RXHP_DBG_PORTALS_TBL_DATA
* This is an RX HP debug CSR.This is the data for bits [63:0] of the Portals 
* Table being accessed with the RXHP_DBG_PORTALS_TBL_ADDR register. The data 
* from this CSR is written to the Table if the write bit is active in that CSR, 
* or this data will contain the read data if the write bit is not active. 
* 
*/
#define FXR_RXHP_DBG_PORTALS_TBL_DATA							(FXR_RX_HP_CSRS + 0x000000040020)
#define FXR_RXHP_DBG_PORTALS_TBL_DATA_RESETCSR						0x0000000000000000ull
#define FXR_RXHP_DBG_PORTALS_TBL_DATA_DATA_SHIFT					0
#define FXR_RXHP_DBG_PORTALS_TBL_DATA_DATA_MASK						0xFFFFFFFFFFFFFFFFull
#define FXR_RXHP_DBG_PORTALS_TBL_DATA_DATA_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #81 of fxr_top - RXHP_DBG_PORTALS_TBL_DATA_ECC
* This is an RX HP debug CSR.This is the ecc for data bits [255:0] of the 
* Portals Table being accessed with the RXHP_DBG_PORTALS_TBL_ADDR register. The 
* data from this CSR is written to the Table if the write bit is active in that 
* CSR, or this data will contain the read data if the write bit is not active. 
* 
*/
#define FXR_RXHP_DBG_PORTALS_TBL_DATA_ECC						(FXR_RX_HP_CSRS + 0x000000040040)
#define FXR_RXHP_DBG_PORTALS_TBL_DATA_ECC_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_DBG_PORTALS_TBL_DATA_ECC_ECC_SHIFT					0
#define FXR_RXHP_DBG_PORTALS_TBL_DATA_ECC_ECC_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_RXHP_DBG_PORTALS_TBL_DATA_ECC_ECC_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #82 of fxr_top - RXHP_DBG_PORTALS_LIST_ADDR
* This is an RX HP debug CSR. It allows indirect access to the Portals LIST 
* State. This array can not be written to during normal operation. This register 
* is for debug use only. Note that this register is 632 bits wide. The data for 
* the read or write to this register is contained in the next ten 
* CSR's
*/
#define FXR_RXHP_DBG_PORTALS_LIST_ADDR							(FXR_RX_HP_CSRS + 0x000000040048)
#define FXR_RXHP_DBG_PORTALS_LIST_ADDR_RESETCSR						0x0000000000000000ull
#define FXR_RXHP_DBG_PORTALS_LIST_ADDR_RESERVED_63_18_SHIFT				18
#define FXR_RXHP_DBG_PORTALS_LIST_ADDR_RESERVED_63_18_MASK				0x3FFFFFFFFFFFull
#define FXR_RXHP_DBG_PORTALS_LIST_ADDR_RESERVED_63_18_SMASK				0xFFFFFFFFFFFC0000ull
#define FXR_RXHP_DBG_PORTALS_LIST_ADDR_NEW_CMD_SHIFT					17
#define FXR_RXHP_DBG_PORTALS_LIST_ADDR_NEW_CMD_MASK					0x1ull
#define FXR_RXHP_DBG_PORTALS_LIST_ADDR_NEW_CMD_SMASK					0x20000ull
#define FXR_RXHP_DBG_PORTALS_LIST_ADDR_CMD_COMPLETE_SHIFT				16
#define FXR_RXHP_DBG_PORTALS_LIST_ADDR_CMD_COMPLETE_MASK				0x1ull
#define FXR_RXHP_DBG_PORTALS_LIST_ADDR_CMD_COMPLETE_SMASK				0x10000ull
#define FXR_RXHP_DBG_PORTALS_LIST_ADDR_WRITE_CMD_SHIFT					15
#define FXR_RXHP_DBG_PORTALS_LIST_ADDR_WRITE_CMD_MASK					0x1ull
#define FXR_RXHP_DBG_PORTALS_LIST_ADDR_WRITE_CMD_SMASK					0x8000ull
#define FXR_RXHP_DBG_PORTALS_LIST_ADDR_ADDRESS_SHIFT					0
#define FXR_RXHP_DBG_PORTALS_LIST_ADDR_ADDRESS_MASK					0x7FFFull
#define FXR_RXHP_DBG_PORTALS_LIST_ADDR_ADDRESS_SMASK					0x7FFFull
/*
* Table #83 of fxr_top - RXHP_DBG_PORTALS_LIST_DATA
* This is an RX HP debug CSR. This is the data for bits [511:0] of the Portals 
* List State being accessed with the RXHP_DBG_PORTALS_LIST_ADDR register. The 
* data from this CSR is written to the Table if the write bit is active in that 
* CSR, or this data will contain the read data if the write bit is not 
* active
*/
#define FXR_RXHP_DBG_PORTALS_LIST_DATA							(FXR_RX_HP_CSRS + 0x000000040100)
#define FXR_RXHP_DBG_PORTALS_LIST_DATA_RESETCSR						0x0000000000000000ull
#define FXR_RXHP_DBG_PORTALS_LIST_DATA_DATA_SHIFT					0
#define FXR_RXHP_DBG_PORTALS_LIST_DATA_DATA_MASK					0xFFFFFFFFFFFFFFFFull
#define FXR_RXHP_DBG_PORTALS_LIST_DATA_DATA_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #84 of fxr_top - RXHP_DBG_PORTALS_LIST_DATA_ECC1
* This is an RX HP debug CSR. This is the data for bits [559:512] of the Portals 
* List State and the first 16 bits of ECC being accessed with the 
* RXHP_DBG_PORTALS_LIST_ADDR register. The data from this CSR is written to the 
* Table if the write bit is active in that CSR, or this data will contain the 
* read data if the write bit is not active.
*/
#define FXR_RXHP_DBG_PORTALS_LIST_DATA_ECC1						(FXR_RX_HP_CSRS + 0x000000040140)
#define FXR_RXHP_DBG_PORTALS_LIST_DATA_ECC1_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_DBG_PORTALS_LIST_DATA_ECC1_ECC_SHIFT					48
#define FXR_RXHP_DBG_PORTALS_LIST_DATA_ECC1_ECC_MASK					0xFFFFull
#define FXR_RXHP_DBG_PORTALS_LIST_DATA_ECC1_ECC_SMASK					0xFFFF000000000000ull
#define FXR_RXHP_DBG_PORTALS_LIST_DATA_ECC1_DATA_SHIFT					0
#define FXR_RXHP_DBG_PORTALS_LIST_DATA_ECC1_DATA_MASK					0xFFFFFFFFFFFFull
#define FXR_RXHP_DBG_PORTALS_LIST_DATA_ECC1_DATA_SMASK					0xFFFFFFFFFFFFull
/*
* Table #85 of fxr_top - RXHP_DBG_PORTALS_LIST_DATA_ECC2
* This is an RX HP debug CSR. This is the data for bits [632:576] which are all 
* ECC bits of the Portals List State being accessed with the RXHP_DBG_PORTALS_LIST_ADDR 
* register. The data from this CSR is written to the Table if the write bit is 
* active in that CSR, or this data will contain the read data if the write bit 
* is not active.
*/
#define FXR_RXHP_DBG_PORTALS_LIST_DATA_ECC2						(FXR_RX_HP_CSRS + 0x000000040148)
#define FXR_RXHP_DBG_PORTALS_LIST_DATA_ECC2_RESETCSR					0x0000000000000000ull
#define FXR_RXHP_DBG_PORTALS_LIST_DATA_ECC2_RESERVED_63_56_SHIFT			56
#define FXR_RXHP_DBG_PORTALS_LIST_DATA_ECC2_RESERVED_63_56_MASK				0xFFull
#define FXR_RXHP_DBG_PORTALS_LIST_DATA_ECC2_RESERVED_63_56_SMASK			0xFF00000000000000ull
#define FXR_RXHP_DBG_PORTALS_LIST_DATA_ECC2_ECC_SHIFT					0
#define FXR_RXHP_DBG_PORTALS_LIST_DATA_ECC2_ECC_MASK					0xFFFFFFFFFFFFFFull
#define FXR_RXHP_DBG_PORTALS_LIST_DATA_ECC2_ECC_SMASK					0xFFFFFFFFFFFFFFull
/*
* Table #86 of fxr_top - RXHP_DBG_PTE_CACHE_TAG_WAY_ENABLE
* These bits enable the 4 PTE Cache Tag Ways for filling and evicting. Set bits 
* to 0 to remove them from being an evict or fill candidate. For example, 
* setting to 3 will only enable ways 1 and 0. This will stress the cache causing 
* more evicts and fills. This can be useful for testing the cache. Every bit 
* cleared will decrease the cache capacity by 1/4th. Any valid cache entries 
* that are in a disabled way will be invisible so another request for that entry 
* will result in a fill from memory, with possibly stale data, to one of the 
* enabled ways.
*/
#define FXR_RXHP_DBG_PTE_CACHE_TAG_WAY_ENABLE						(FXR_RX_HP_CSRS + 0x000000040150)
#define FXR_RXHP_DBG_PTE_CACHE_TAG_WAY_ENABLE_RESETCSR					0x000000000000000Full
#define FXR_RXHP_DBG_PTE_CACHE_TAG_WAY_ENABLE_RESERVED_63_4_SHIFT			4
#define FXR_RXHP_DBG_PTE_CACHE_TAG_WAY_ENABLE_RESERVED_63_4_MASK			0xFFFFFFFFFFFFFFFull
#define FXR_RXHP_DBG_PTE_CACHE_TAG_WAY_ENABLE_RESERVED_63_4_SMASK			0xFFFFFFFFFFFFFFF0ull
#define FXR_RXHP_DBG_PTE_CACHE_TAG_WAY_ENABLE_WAY_ENABLE_SHIFT				0
#define FXR_RXHP_DBG_PTE_CACHE_TAG_WAY_ENABLE_WAY_ENABLE_MASK				0xFull
#define FXR_RXHP_DBG_PTE_CACHE_TAG_WAY_ENABLE_WAY_ENABLE_SMASK				0xFull
/*
* Table #87 of fxr_top - RXHP_DBG_FW_TRACE_ADDRESS
* This is the base address destination for firmware trace messages.
*/
#define FXR_RXHP_DBG_FW_TRACE_ADDRESS							(FXR_RX_HP_CSRS + 0x000000040158)
#define FXR_RXHP_DBG_FW_TRACE_ADDRESS_RESETCSR						0x0000000000000000ull
#define FXR_RXHP_DBG_FW_TRACE_ADDRESS_TRACE_ADDRESS_SHIFT				0
#define FXR_RXHP_DBG_FW_TRACE_ADDRESS_TRACE_ADDRESS_MASK				0xFFFFFFFFFFFFFFFFull
#define FXR_RXHP_DBG_FW_TRACE_ADDRESS_TRACE_ADDRESS_SMASK				0xFFFFFFFFFFFFFFFFull

#endif 		/* DEF_FXR_RX_HP_SW_DEF */

/*
*------------------------------------------------------------------------------
*                                                                              
*  INTEL CONFIDENTIAL                                                          
*                                                                              
*  Copyright 2016 Intel Corporation All Rights Reserved.                 
*                                                                              
*  The source code contained or described herein and all documents related     
*  to the source code ("Material") are owned by Intel Corporation or its    
*  suppliers or licensors. Title to the Material remains with Intel            
*  Corporation or its suppliers and licensors. The Material contains trade     
*  secrets and proprietary and confidential information of Intel or its        
*  suppliers and licensors. The Material is protected by worldwide copyright   
*  and trade secret laws and treaty provisions. No part of the Material may    
*  be used, copied, reproduced, modified, published, uploaded, posted,         
*  transmitted, distributed, or disclosed in any way without Intel's prior     
*  express written permission.                                                 
*                                                                              
*  No license under any patent, copyright, trade secret or other intellectual  
*  property right is granted to or conferred upon you by disclosure or         
*  delivery of the Materials, either expressly, by implication, inducement,    
*  estoppel or otherwise. Any license under such intellectual property rights  
*  must be express and approved by Intel in writing.                           
*                                                                              
*------------------------------------------------------------------------------
*  Auto-generated by /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/i_csrs.pl
*  i_csrs.pl Version 1.5 last modified on Monday 12/19/16 11:42:34
*  /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/i_csrs.pl -C -RVREGS -ST fxr_fw -o /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/fxr /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/repo_xml/300_Memory_Map.xml /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/repo_xml/348_Memory_Map_FW.xml
*------------------------------------------------------------------------------
*/

#ifndef DEF_FXR_FW_SW_DEF
#define DEF_FXR_FW_SW_DEF

#ifndef FXR_FW_CSRS
#define FXR_FW_CSRS						0x000000000000ULL
#endif
#define FXR_NUM_CONTEXTS					256
#define FXR_NUM_PIDS						4096
#define FXR_MAX_CONTEXT						255
#define FXR_TX_CONTEXT_ENTRIES					128
#define FXR_TX_CONTEXT_MAX					127
#define FXR_RX_CONTEXT_ENTRIES					16
#define FXR_RX_CONTEXT_MAX					15
#define FXR_NUM_SL						32
#define FXR_MAX_SL						31
#define FW_CSR_OFFSET						0
/*
* Table #4 of fxr_top - FW_MSC_RSA_R2
* RSA helper variable, R squared, derived from modulus - 2048 bits in 32 
* entries.
*/
#define FXR_FW_MSC_RSA_R2					(FXR_FW_CSRS + 0x000000000000)
#define FXR_FW_MSC_RSA_R2_RESETCSR				0x0000000000000000ull
#define FXR_FW_MSC_RSA_R2_DATA_SHIFT				0
#define FXR_FW_MSC_RSA_R2_DATA_MASK				0xFFFFFFFFFFFFFFFFull
#define FXR_FW_MSC_RSA_R2_DATA_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #5 of fxr_top - FW_MSC_RSA_SIGNATURE
* RSA signature - 2048 bits in 32 entries.
*/
#define FXR_FW_MSC_RSA_SIGNATURE				(FXR_FW_CSRS + 0x000000000200)
#define FXR_FW_MSC_RSA_SIGNATURE_RESETCSR			0x0000000000000000ull
#define FXR_FW_MSC_RSA_SIGNATURE_DATA_SHIFT			0
#define FXR_FW_MSC_RSA_SIGNATURE_DATA_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_FW_MSC_RSA_SIGNATURE_DATA_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #6 of fxr_top - FW_MSC_RSA_MODULUS
* RSA modulus - 2048 bits in 32 entries.
*/
#define FXR_FW_MSC_RSA_MODULUS					(FXR_FW_CSRS + 0x000000000400)
#define FXR_FW_MSC_RSA_MODULUS_RESETCSR				0x0000000000000000ull
#define FXR_FW_MSC_RSA_MODULUS_DATA_SHIFT			0
#define FXR_FW_MSC_RSA_MODULUS_DATA_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_FW_MSC_RSA_MODULUS_DATA_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #7 of fxr_top - FW_MSC_SHA_PRELOAD
* This register provides an interface to preload data directly to the SHA engine 
* prior to loading firmware. This register can be written multiple times to 
* preload data one QW at a time. Notably, the Code Signing System (CSS) flow 
* requires a CSS-formatted header to be processed in addition to the actual 
* firmware.
*/
#define FXR_FW_MSC_SHA_PRELOAD					(FXR_FW_CSRS + 0x000000000A00)
#define FXR_FW_MSC_SHA_PRELOAD_RESETCSR				0x0000000000000000ull
#define FXR_FW_MSC_SHA_PRELOAD_DATA_SHIFT			0
#define FXR_FW_MSC_SHA_PRELOAD_DATA_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_FW_MSC_SHA_PRELOAD_DATA_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #8 of fxr_top - FW_MSC_RSA_CMD
* RSA engine command interface.
*/
#define FXR_FW_MSC_RSA_CMD					(FXR_FW_CSRS + 0x000000000A08)
#define FXR_FW_MSC_RSA_CMD_RESETCSR				0x0000000000000000ull
#define FXR_FW_MSC_RSA_CMD_RESERVED_63_2_SHIFT			2
#define FXR_FW_MSC_RSA_CMD_RESERVED_63_2_MASK			0x3FFFFFFFFFFFFFFFull
#define FXR_FW_MSC_RSA_CMD_RESERVED_63_2_SMASK			0xFFFFFFFFFFFFFFFCull
#define FXR_FW_MSC_RSA_CMD_CMD_SHIFT				0
#define FXR_FW_MSC_RSA_CMD_CMD_MASK				0x3ull
#define FXR_FW_MSC_RSA_CMD_CMD_SMASK				0x3ull
/*
* Table #9 of fxr_top - FW_MSC_RSA_MU
* RSA helper variable, mu, derived from modulus - 64 bits.
*/
#define FXR_FW_MSC_RSA_MU					(FXR_FW_CSRS + 0x000000000A10)
#define FXR_FW_MSC_RSA_MU_RESETCSR				0x0000000000000000ull
#define FXR_FW_MSC_RSA_MU_DATA_SHIFT				0
#define FXR_FW_MSC_RSA_MU_DATA_MASK				0xFFFFFFFFFFFFFFFFull
#define FXR_FW_MSC_RSA_MU_DATA_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #10 of fxr_top - FW_CFG_FW_CTRL
* Firmware-related control bits.
*/
#define FXR_FW_CFG_FW_CTRL					(FXR_FW_CSRS + 0x000000001000)
#define FXR_FW_CFG_FW_CTRL_RESETCSR				0x0000000000000000ull
#define FXR_FW_CFG_FW_CTRL_RESERVED_63_2_SHIFT			2
#define FXR_FW_CFG_FW_CTRL_RESERVED_63_2_MASK			0x3FFFFFFFFFFFFFFFull
#define FXR_FW_CFG_FW_CTRL_RESERVED_63_2_SMASK			0xFFFFFFFFFFFFFFFCull
#define FXR_FW_CFG_FW_CTRL_FW_8051_LOADED_SHIFT			1
#define FXR_FW_CFG_FW_CTRL_FW_8051_LOADED_MASK			0x1ull
#define FXR_FW_CFG_FW_CTRL_FW_8051_LOADED_SMASK			0x2ull
#define FXR_FW_CFG_FW_CTRL_FW_VALIDATION_ENABLE_SHIFT		0
#define FXR_FW_CFG_FW_CTRL_FW_VALIDATION_ENABLE_MASK		0x1ull
#define FXR_FW_CFG_FW_CTRL_FW_VALIDATION_ENABLE_SMASK		0x1ull
/*
* Table #11 of fxr_top - FW_STS_FW
* Firmware-related status bits.
*/
#define FXR_FW_STS_FW						(FXR_FW_CSRS + 0x000000001008)
#define FXR_FW_STS_FW_RESETCSR					0x0000000000000000ull
#define FXR_FW_STS_FW_RESERVED_63_4_SHIFT			4
#define FXR_FW_STS_FW_RESERVED_63_4_MASK			0xFFFFFFFFFFFFFFFull
#define FXR_FW_STS_FW_RESERVED_63_4_SMASK			0xFFFFFFFFFFFFFFF0ull
#define FXR_FW_STS_FW_FW_AUTH_FAILED_SHIFT			3
#define FXR_FW_STS_FW_FW_AUTH_FAILED_MASK			0x1ull
#define FXR_FW_STS_FW_FW_AUTH_FAILED_SMASK			0x8ull
#define FXR_FW_STS_FW_KEY_MISMATCH_SHIFT			2
#define FXR_FW_STS_FW_KEY_MISMATCH_MASK				0x1ull
#define FXR_FW_STS_FW_KEY_MISMATCH_SMASK			0x4ull
#define FXR_FW_STS_FW_RSA_STATUS_SHIFT				0
#define FXR_FW_STS_FW_RSA_STATUS_MASK				0x3ull
#define FXR_FW_STS_FW_RSA_STATUS_SMASK				0x3ull
/*
* Table #12 of fxr_top - FW_STS_8051_DIGEST
* 8051 firmware digest - 256 bits in 4 entries.
*/
#define FXR_FW_STS_8051_DIGEST					(FXR_FW_CSRS + 0x000000001010)
#define FXR_FW_STS_8051_DIGEST_RESETCSR				0x0000000000000000ull
#define FXR_FW_STS_8051_DIGEST_DATA_SHIFT			0
#define FXR_FW_STS_8051_DIGEST_DATA_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_FW_STS_8051_DIGEST_DATA_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #13 of fxr_top - FW_STS_FAB_DIGEST
* Fabric SerDes Spico firmware digest - 256 bits in 4 entries.
*/
#define FXR_FW_STS_FAB_DIGEST					(FXR_FW_CSRS + 0x000000001030)
#define FXR_FW_STS_FAB_DIGEST_RESETCSR				0x0000000000000000ull
#define FXR_FW_STS_FAB_DIGEST_DATA_SHIFT			0
#define FXR_FW_STS_FAB_DIGEST_DATA_MASK				0xFFFFFFFFFFFFFFFFull
#define FXR_FW_STS_FAB_DIGEST_DATA_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #14 of fxr_top - FW_STS_BSM_DIGEST
* BSM firmware digest - 256 bits in 4 entries.
*/
#define FXR_FW_STS_BSM_DIGEST					(FXR_FW_CSRS + 0x000000001050)
#define FXR_FW_STS_BSM_DIGEST_RESETCSR				0x0000000000000000ull
#define FXR_FW_STS_BSM_DIGEST_DATA_SHIFT			0
#define FXR_FW_STS_BSM_DIGEST_DATA_MASK				0xFFFFFFFFFFFFFFFFull
#define FXR_FW_STS_BSM_DIGEST_DATA_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #15 of fxr_top - FW_CFG_SBUS_REQUEST
* SBus request interface (see SBus Master Specification). This register directly 
* controls the corresponding inputs of the SBus Master Core Interface.
*/
#define FXR_FW_CFG_SBUS_REQUEST					(FXR_FW_CSRS + 0x000000001090)
#define FXR_FW_CFG_SBUS_REQUEST_RESETCSR			0x0000000000000000ull
#define FXR_FW_CFG_SBUS_REQUEST_DATA_IN_SHIFT			32
#define FXR_FW_CFG_SBUS_REQUEST_DATA_IN_MASK			0xFFFFFFFFull
#define FXR_FW_CFG_SBUS_REQUEST_DATA_IN_SMASK			0xFFFFFFFF00000000ull
#define FXR_FW_CFG_SBUS_REQUEST_RESERVED_31_24_SHIFT		24
#define FXR_FW_CFG_SBUS_REQUEST_RESERVED_31_24_MASK		0xFFull
#define FXR_FW_CFG_SBUS_REQUEST_RESERVED_31_24_SMASK		0xFF000000ull
#define FXR_FW_CFG_SBUS_REQUEST_COMMAND_SHIFT			16
#define FXR_FW_CFG_SBUS_REQUEST_COMMAND_MASK			0xFFull
#define FXR_FW_CFG_SBUS_REQUEST_COMMAND_SMASK			0xFF0000ull
#define FXR_FW_CFG_SBUS_REQUEST_DATA_ADDR_SHIFT			8
#define FXR_FW_CFG_SBUS_REQUEST_DATA_ADDR_MASK			0xFFull
#define FXR_FW_CFG_SBUS_REQUEST_DATA_ADDR_SMASK			0xFF00ull
#define FXR_FW_CFG_SBUS_REQUEST_RECEIVER_ADDR_SHIFT		0
#define FXR_FW_CFG_SBUS_REQUEST_RECEIVER_ADDR_MASK		0xFFull
#define FXR_FW_CFG_SBUS_REQUEST_RECEIVER_ADDR_SMASK		0xFFull
/*
* Table #16 of fxr_top - FW_CFG_SBUS_EXECUTE
* SBus request interface execution bit (see SBus Master Specification). This 
* register directly controls the EXECUTE input of the SBus Master Core 
* Interface.
*/
#define FXR_FW_CFG_SBUS_EXECUTE					(FXR_FW_CSRS + 0x000000001098)
#define FXR_FW_CFG_SBUS_EXECUTE_RESETCSR			0x0000000000000000ull
#define FXR_FW_CFG_SBUS_EXECUTE_RESERVED_63_1_SHIFT		1
#define FXR_FW_CFG_SBUS_EXECUTE_RESERVED_63_1_MASK		0x7FFFFFFFFFFFFFFFull
#define FXR_FW_CFG_SBUS_EXECUTE_RESERVED_63_1_SMASK		0xFFFFFFFFFFFFFFFEull
#define FXR_FW_CFG_SBUS_EXECUTE_EXECUTE_SHIFT			0
#define FXR_FW_CFG_SBUS_EXECUTE_EXECUTE_MASK			0x1ull
#define FXR_FW_CFG_SBUS_EXECUTE_EXECUTE_SMASK			0x1ull
/*
* Table #17 of fxr_top - FW_STS_SBUS_RESULT
* SBus request interface result data (see SBus Master Specification).
*/
#define FXR_FW_STS_SBUS_RESULT					(FXR_FW_CSRS + 0x0000000010A0)
#define FXR_FW_STS_SBUS_RESULT_RESETCSR				0x0000000000000000ull
#define FXR_FW_STS_SBUS_RESULT_DATA_OUT_SHIFT			32
#define FXR_FW_STS_SBUS_RESULT_DATA_OUT_MASK			0xFFFFFFFFull
#define FXR_FW_STS_SBUS_RESULT_DATA_OUT_SMASK			0xFFFFFFFF00000000ull
#define FXR_FW_STS_SBUS_RESULT_RESERVED_31_5_SHIFT		5
#define FXR_FW_STS_SBUS_RESULT_RESERVED_31_5_MASK		0x7FFFFFFull
#define FXR_FW_STS_SBUS_RESULT_RESERVED_31_5_SMASK		0xFFFFFFE0ull
#define FXR_FW_STS_SBUS_RESULT_RESULT_CODE_SHIFT		2
#define FXR_FW_STS_SBUS_RESULT_RESULT_CODE_MASK			0x7ull
#define FXR_FW_STS_SBUS_RESULT_RESULT_CODE_SMASK		0x1Cull
#define FXR_FW_STS_SBUS_RESULT_RCV_DATA_VALID_SHIFT		1
#define FXR_FW_STS_SBUS_RESULT_RCV_DATA_VALID_MASK		0x1ull
#define FXR_FW_STS_SBUS_RESULT_RCV_DATA_VALID_SMASK		0x2ull
#define FXR_FW_STS_SBUS_RESULT_DONE_SHIFT			0
#define FXR_FW_STS_SBUS_RESULT_DONE_MASK			0x1ull
#define FXR_FW_STS_SBUS_RESULT_DONE_SMASK			0x1ull
/*
* Table #18 of fxr_top - FW_STS_SBUS_COUNTERS
* Counters for SBus EXECUTE and RCV_DATA_VALID bits.
*/
#define FXR_FW_STS_SBUS_COUNTERS				(FXR_FW_CSRS + 0x0000000010A8)
#define FXR_FW_STS_SBUS_COUNTERS_RESETCSR			0x0000000100000000ull
#define FXR_FW_STS_SBUS_COUNTERS_RESERVED_63_33_SHIFT		33
#define FXR_FW_STS_SBUS_COUNTERS_RESERVED_63_33_MASK		0x7FFFFFFFull
#define FXR_FW_STS_SBUS_COUNTERS_RESERVED_63_33_SMASK		0xFFFFFFFE00000000ull
#define FXR_FW_STS_SBUS_COUNTERS_EQ_SHIFT			32
#define FXR_FW_STS_SBUS_COUNTERS_EQ_MASK			0x1ull
#define FXR_FW_STS_SBUS_COUNTERS_EQ_SMASK			0x100000000ull
#define FXR_FW_STS_SBUS_COUNTERS_RCV_DATA_VALID_CNT_SHIFT	16
#define FXR_FW_STS_SBUS_COUNTERS_RCV_DATA_VALID_CNT_MASK	0xFFFFull
#define FXR_FW_STS_SBUS_COUNTERS_RCV_DATA_VALID_CNT_SMASK	0xFFFF0000ull
#define FXR_FW_STS_SBUS_COUNTERS_EXECUTE_CNT_SHIFT		0
#define FXR_FW_STS_SBUS_COUNTERS_EXECUTE_CNT_MASK		0xFFFFull
#define FXR_FW_STS_SBUS_COUNTERS_EXECUTE_CNT_SMASK		0xFFFFull
/*
* Table #19 of fxr_top - FW_CFG_THERM
* Configuration parameters for thermal polling logic. See #%%#Section 16.3.1, 
* 'On-die Thermal Monitoring,' on page 307#%%#.
*/
#define FXR_FW_CFG_THERM					(FXR_FW_CSRS + 0x0000000010B0)
#define FXR_FW_CFG_THERM_RESETCSR				0x0000000A003D0173ull
#define FXR_FW_CFG_THERM_RESERVED_63_38_SHIFT			38
#define FXR_FW_CFG_THERM_RESERVED_63_38_MASK			0x3FFFFFFull
#define FXR_FW_CFG_THERM_RESERVED_63_38_SMASK			0xFFFFFFC000000000ull
#define FXR_FW_CFG_THERM_HYSTERESIS_SHIFT			32
#define FXR_FW_CFG_THERM_HYSTERESIS_MASK			0x3Full
#define FXR_FW_CFG_THERM_HYSTERESIS_SMASK			0x3F00000000ull
#define FXR_FW_CFG_THERM_RESERVED_31_26_SHIFT			26
#define FXR_FW_CFG_THERM_RESERVED_31_26_MASK			0x3Full
#define FXR_FW_CFG_THERM_RESERVED_31_26_SMASK			0xFC000000ull
#define FXR_FW_CFG_THERM_REMOTE_POLL_PERIOD_SHIFT		16
#define FXR_FW_CFG_THERM_REMOTE_POLL_PERIOD_MASK		0x3FFull
#define FXR_FW_CFG_THERM_REMOTE_POLL_PERIOD_SMASK		0x3FF0000ull
#define FXR_FW_CFG_THERM_RESERVED_15_14_SHIFT			14
#define FXR_FW_CFG_THERM_RESERVED_15_14_MASK			0x3ull
#define FXR_FW_CFG_THERM_RESERVED_15_14_SMASK			0xC000ull
#define FXR_FW_CFG_THERM_MAIN_POLL_PERIOD_SHIFT			4
#define FXR_FW_CFG_THERM_MAIN_POLL_PERIOD_MASK			0x3FFull
#define FXR_FW_CFG_THERM_MAIN_POLL_PERIOD_SMASK			0x3FF0ull
#define FXR_FW_CFG_THERM_RESERVED_3_2_SHIFT			2
#define FXR_FW_CFG_THERM_RESERVED_3_2_MASK			0x3ull
#define FXR_FW_CFG_THERM_RESERVED_3_2_SMASK			0xCull
#define FXR_FW_CFG_THERM_SENSOR_ENABLE_SHIFT			0
#define FXR_FW_CFG_THERM_SENSOR_ENABLE_MASK			0x3ull
#define FXR_FW_CFG_THERM_SENSOR_ENABLE_SMASK			0x3ull
/*
* Table #20 of fxr_top - FW_STS_THERM
* Miscellaneous status for thermal polling logic. See #%%#Section 16.3.1, 
* 'On-die Thermal Monitoring,' on page 307#%%#.
*/
#define FXR_FW_STS_THERM					(FXR_FW_CSRS + 0x0000000010B8)
#define FXR_FW_STS_THERM_RESETCSR				0x0000000000000000ull
#define FXR_FW_STS_THERM_RESERVED_63_62_SHIFT			62
#define FXR_FW_STS_THERM_RESERVED_63_62_MASK			0x3ull
#define FXR_FW_STS_THERM_RESERVED_63_62_SMASK			0xC000000000000000ull
#define FXR_FW_STS_THERM_SBUS_RESULT_CODE_SHIFT			59
#define FXR_FW_STS_THERM_SBUS_RESULT_CODE_MASK			0x7ull
#define FXR_FW_STS_THERM_SBUS_RESULT_CODE_SMASK			0x3800000000000000ull
#define FXR_FW_STS_THERM_SBUS_RCV_DATA_VALID_SHIFT		58
#define FXR_FW_STS_THERM_SBUS_RCV_DATA_VALID_MASK		0x1ull
#define FXR_FW_STS_THERM_SBUS_RCV_DATA_VALID_SMASK		0x400000000000000ull
#define FXR_FW_STS_THERM_SBUS_DONE_SHIFT			57
#define FXR_FW_STS_THERM_SBUS_DONE_MASK				0x1ull
#define FXR_FW_STS_THERM_SBUS_DONE_SMASK			0x200000000000000ull
#define FXR_FW_STS_THERM_SBUS_EXECUTE_SHIFT			56
#define FXR_FW_STS_THERM_SBUS_EXECUTE_MASK			0x1ull
#define FXR_FW_STS_THERM_SBUS_EXECUTE_SMASK			0x100000000000000ull
#define FXR_FW_STS_THERM_SBUS_DATA_SHIFT			24
#define FXR_FW_STS_THERM_SBUS_DATA_MASK				0xFFFFFFFFull
#define FXR_FW_STS_THERM_SBUS_DATA_SMASK			0xFFFFFFFF000000ull
#define FXR_FW_STS_THERM_SBUS_DATA_ADDRESS_SHIFT		16
#define FXR_FW_STS_THERM_SBUS_DATA_ADDRESS_MASK			0xFFull
#define FXR_FW_STS_THERM_SBUS_DATA_ADDRESS_SMASK		0xFF0000ull
#define FXR_FW_STS_THERM_SBUS_COMMAND_SHIFT			8
#define FXR_FW_STS_THERM_SBUS_COMMAND_MASK			0xFFull
#define FXR_FW_STS_THERM_SBUS_COMMAND_SMASK			0xFF00ull
#define FXR_FW_STS_THERM_SENSOR_SELECTED_SHIFT			7
#define FXR_FW_STS_THERM_SENSOR_SELECTED_MASK			0x1ull
#define FXR_FW_STS_THERM_SENSOR_SELECTED_SMASK			0x80ull
#define FXR_FW_STS_THERM_STATE_SHIFT				4
#define FXR_FW_STS_THERM_STATE_MASK				0x7ull
#define FXR_FW_STS_THERM_STATE_SMASK				0x70ull
#define FXR_FW_STS_THERM_RESERVED_3_2_SHIFT			2
#define FXR_FW_STS_THERM_RESERVED_3_2_MASK			0x3ull
#define FXR_FW_STS_THERM_RESERVED_3_2_SMASK			0xCull
#define FXR_FW_STS_THERM_LOW_ALERT_SHIFT			1
#define FXR_FW_STS_THERM_LOW_ALERT_MASK				0x1ull
#define FXR_FW_STS_THERM_LOW_ALERT_SMASK			0x2ull
#define FXR_FW_STS_THERM_HIGH_ALERT_SHIFT			0
#define FXR_FW_STS_THERM_HIGH_ALERT_MASK			0x1ull
#define FXR_FW_STS_THERM_HIGH_ALERT_SMASK			0x1ull
/*
* Table #21 of fxr_top - FW_STS_TEMPERATURE
* Temperature readings from main and remote sensors. See #%%#Section 16.3.1, 
* 'On-die Thermal Monitoring,' on page 307#%%#.
*/
#define FXR_FW_STS_TEMPERATURE					(FXR_FW_CSRS + 0x0000000010C0)
#define FXR_FW_STS_TEMPERATURE_RESETCSR				0x0000000000000000ull
#define FXR_FW_STS_TEMPERATURE_RESERVED_63_32_SHIFT		32
#define FXR_FW_STS_TEMPERATURE_RESERVED_63_32_MASK		0xFFFFFFFFull
#define FXR_FW_STS_TEMPERATURE_RESERVED_63_32_SMASK		0xFFFFFFFF00000000ull
#define FXR_FW_STS_TEMPERATURE_VALID0_SHIFT			31
#define FXR_FW_STS_TEMPERATURE_VALID0_MASK			0x1ull
#define FXR_FW_STS_TEMPERATURE_VALID0_SMASK			0x80000000ull
#define FXR_FW_STS_TEMPERATURE_VALID1_SHIFT			30
#define FXR_FW_STS_TEMPERATURE_VALID1_MASK			0x1ull
#define FXR_FW_STS_TEMPERATURE_VALID1_SMASK			0x40000000ull
#define FXR_FW_STS_TEMPERATURE_RESERVED_29_18_SHIFT		18
#define FXR_FW_STS_TEMPERATURE_RESERVED_29_18_MASK		0xFFFull
#define FXR_FW_STS_TEMPERATURE_RESERVED_29_18_SMASK		0x3FFC0000ull
#define FXR_FW_STS_TEMPERATURE_TEMPERATURE1_SHIFT		9
#define FXR_FW_STS_TEMPERATURE_TEMPERATURE1_MASK		0x1FFull
#define FXR_FW_STS_TEMPERATURE_TEMPERATURE1_SMASK		0x3FE00ull
#define FXR_FW_STS_TEMPERATURE_TEMPERATURE0_SHIFT		0
#define FXR_FW_STS_TEMPERATURE_TEMPERATURE0_MASK		0x1FFull
#define FXR_FW_STS_TEMPERATURE_TEMPERATURE0_SMASK		0x1FFull
/*
* Table #22 of fxr_top - FW_CFG_BSM_SCRATCH
* Available for general scratch memory use.
*/
#define FXR_FW_CFG_BSM_SCRATCH					(FXR_FW_CSRS + 0x000000004000)
#define FXR_FW_CFG_BSM_SCRATCH_RESETCSR				0x0000000000000000ull
#define FXR_FW_CFG_BSM_SCRATCH_DATA_SHIFT			0
#define FXR_FW_CFG_BSM_SCRATCH_DATA_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_FW_CFG_BSM_SCRATCH_DATA_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #23 of fxr_top - FW_CFG_BSM_CTRL
* 
*/
#define FXR_FW_CFG_BSM_CTRL					(FXR_FW_CSRS + 0x000000006000)
#define FXR_FW_CFG_BSM_CTRL_RESETCSR				0x0000000000000000ull
#define FXR_FW_CFG_BSM_CTRL_RESERVED_63_32_SHIFT		32
#define FXR_FW_CFG_BSM_CTRL_RESERVED_63_32_MASK			0xFFFFFFFFull
#define FXR_FW_CFG_BSM_CTRL_RESERVED_63_32_SMASK		0xFFFFFFFF00000000ull
#define FXR_FW_CFG_BSM_CTRL_EEPROM_ADDR_SHIFT			8
#define FXR_FW_CFG_BSM_CTRL_EEPROM_ADDR_MASK			0xFFFFFFull
#define FXR_FW_CFG_BSM_CTRL_EEPROM_ADDR_SMASK			0xFFFFFF00ull
#define FXR_FW_CFG_BSM_CTRL_EEPROM_ENABLE_SHIFT			7
#define FXR_FW_CFG_BSM_CTRL_EEPROM_ENABLE_MASK			0x1ull
#define FXR_FW_CFG_BSM_CTRL_EEPROM_ENABLE_SMASK			0x80ull
#define FXR_FW_CFG_BSM_CTRL_EEPROM_ERROR_SHIFT			6
#define FXR_FW_CFG_BSM_CTRL_EEPROM_ERROR_MASK			0x1ull
#define FXR_FW_CFG_BSM_CTRL_EEPROM_ERROR_SMASK			0x40ull
#define FXR_FW_CFG_BSM_CTRL_EEPROM_LOAD_DONE_SHIFT		5
#define FXR_FW_CFG_BSM_CTRL_EEPROM_LOAD_DONE_MASK		0x1ull
#define FXR_FW_CFG_BSM_CTRL_EEPROM_LOAD_DONE_SMASK		0x20ull
#define FXR_FW_CFG_BSM_CTRL_COMMAND_DONE_SHIFT			4
#define FXR_FW_CFG_BSM_CTRL_COMMAND_DONE_MASK			0x1ull
#define FXR_FW_CFG_BSM_CTRL_COMMAND_DONE_SMASK			0x10ull
#define FXR_FW_CFG_BSM_CTRL_COMMAND_SHIFT			0
#define FXR_FW_CFG_BSM_CTRL_COMMAND_MASK			0xFull
#define FXR_FW_CFG_BSM_CTRL_COMMAND_SMASK			0xFull
/*
* Table #24 of fxr_top - FW_CFG_BSM_ARGS
* Defines extra data to be used for BSM_CTRL commands.
*/
#define FXR_FW_CFG_BSM_ARGS					(FXR_FW_CSRS + 0x000000006008)
#define FXR_FW_CFG_BSM_ARGS_RESETCSR				0x0000000000000000ull
#define FXR_FW_CFG_BSM_ARGS_RESERVED_63_32_SHIFT		32
#define FXR_FW_CFG_BSM_ARGS_RESERVED_63_32_MASK			0xFFFFFFFFull
#define FXR_FW_CFG_BSM_ARGS_RESERVED_63_32_SMASK		0xFFFFFFFF00000000ull
#define FXR_FW_CFG_BSM_ARGS_DATA_SHIFT				0
#define FXR_FW_CFG_BSM_ARGS_DATA_MASK				0xFFFFFFFFull
#define FXR_FW_CFG_BSM_ARGS_DATA_SMASK				0xFFFFFFFFull
/*
* Table #25 of fxr_top - FW_CFG_BSM_ADDR_OFFSET
* Configurable base address for BSM. Index 0 is unused. There are 3 programmable 
* offsets: BSM_ADDR_OFFSET[1..3]. BSM_ADDR_OFFSET[0] is read-only and always 
* treated as 0x0.
*/
#define FXR_FW_CFG_BSM_ADDR_OFFSET				(FXR_FW_CSRS + 0x000000006020)
#define FXR_FW_CFG_BSM_ADDR_OFFSET_RESETCSR			0x0000000000000000ull
#define FXR_FW_CFG_BSM_ADDR_OFFSET_RESERVED_63_24_SHIFT		24
#define FXR_FW_CFG_BSM_ADDR_OFFSET_RESERVED_63_24_MASK		0xFFFFFFFFFFull
#define FXR_FW_CFG_BSM_ADDR_OFFSET_RESERVED_63_24_SMASK		0xFFFFFFFFFF000000ull
#define FXR_FW_CFG_BSM_ADDR_OFFSET_OFFSET_SHIFT			0
#define FXR_FW_CFG_BSM_ADDR_OFFSET_OFFSET_MASK			0xFFFFFFull
#define FXR_FW_CFG_BSM_ADDR_OFFSET_OFFSET_SMASK			0xFFFFFFull
/*
* Table #26 of fxr_top - FW_CFG_BSM_COUNTER
* 
*/
#define FXR_FW_CFG_BSM_COUNTER					(FXR_FW_CSRS + 0x000000006040)
#define FXR_FW_CFG_BSM_COUNTER_RESETCSR				0x0000000000000000ull
#define FXR_FW_CFG_BSM_COUNTER_RESERVED_63_16_SHIFT		16
#define FXR_FW_CFG_BSM_COUNTER_RESERVED_63_16_MASK		0xFFFFFFFFFFFFull
#define FXR_FW_CFG_BSM_COUNTER_RESERVED_63_16_SMASK		0xFFFFFFFFFFFF0000ull
#define FXR_FW_CFG_BSM_COUNTER_COUNTER_SHIFT			0
#define FXR_FW_CFG_BSM_COUNTER_COUNTER_MASK			0xFFFFull
#define FXR_FW_CFG_BSM_COUNTER_COUNTER_SMASK			0xFFFFull
/*
* Table #27 of fxr_top - FW_CFG_BSM_SRAM_CTRL
* Boot State Machine memory error injection and BIST status reporting register. 
* There is only one memory in BSM used for BSM_SCRATCH.
*/
#define FXR_FW_CFG_BSM_SRAM_CTRL				(FXR_FW_CSRS + 0x000000006050)
#define FXR_FW_CFG_BSM_SRAM_CTRL_RESETCSR			0x0000000000000000ull
#define FXR_FW_CFG_BSM_SRAM_CTRL_RESERVED_63_6_SHIFT		6
#define FXR_FW_CFG_BSM_SRAM_CTRL_RESERVED_63_6_MASK		0x3FFFFFFFFFFFFFFull
#define FXR_FW_CFG_BSM_SRAM_CTRL_RESERVED_63_6_SMASK		0xFFFFFFFFFFFFFFC0ull
#define FXR_FW_CFG_BSM_SRAM_CTRL_BIST_DONE_FAIL_SHIFT		5
#define FXR_FW_CFG_BSM_SRAM_CTRL_BIST_DONE_FAIL_MASK		0x1ull
#define FXR_FW_CFG_BSM_SRAM_CTRL_BIST_DONE_FAIL_SMASK		0x20ull
#define FXR_FW_CFG_BSM_SRAM_CTRL_BIST_DONE_PASS_SHIFT		4
#define FXR_FW_CFG_BSM_SRAM_CTRL_BIST_DONE_PASS_MASK		0x1ull
#define FXR_FW_CFG_BSM_SRAM_CTRL_BIST_DONE_PASS_SMASK		0x10ull
#define FXR_FW_CFG_BSM_SRAM_CTRL_UERR_SHIFT			3
#define FXR_FW_CFG_BSM_SRAM_CTRL_UERR_MASK			0x1ull
#define FXR_FW_CFG_BSM_SRAM_CTRL_UERR_SMASK			0x8ull
#define FXR_FW_CFG_BSM_SRAM_CTRL_CERR_SHIFT			2
#define FXR_FW_CFG_BSM_SRAM_CTRL_CERR_MASK			0x1ull
#define FXR_FW_CFG_BSM_SRAM_CTRL_CERR_SMASK			0x4ull
#define FXR_FW_CFG_BSM_SRAM_CTRL_ERR_WRITE_SHIFT		0
#define FXR_FW_CFG_BSM_SRAM_CTRL_ERR_WRITE_MASK			0x3ull
#define FXR_FW_CFG_BSM_SRAM_CTRL_ERR_WRITE_SMASK		0x3ull
/*
* Table #28 of fxr_top - FW_CFG_BSM_IP
* BSM interrupts
*/
#define FXR_FW_CFG_BSM_IP					(FXR_FW_CSRS + 0x000000006058)
#define FXR_FW_CFG_BSM_IP_RESETCSR				0x0000000000000000ull
#define FXR_FW_CFG_BSM_IP_RESERVED_63_2_SHIFT			2
#define FXR_FW_CFG_BSM_IP_RESERVED_63_2_MASK			0x3FFFFFFFFFFFFFFFull
#define FXR_FW_CFG_BSM_IP_RESERVED_63_2_SMASK			0xFFFFFFFFFFFFFFFCull
#define FXR_FW_CFG_BSM_IP_SRAM_ERR_SHIFT			0
#define FXR_FW_CFG_BSM_IP_SRAM_ERR_MASK				0x3ull
#define FXR_FW_CFG_BSM_IP_SRAM_ERR_SMASK			0x3ull
/*
* Table #29 of fxr_top - FW_CFG_BSM_IM
* The interrupt mask register controls whether the corresponding interrupt 
* source in BSM_IP is presented to the interrupt hierarchy (bit is set to 0) or 
* masked out (bit is set to 1).
*/
#define FXR_FW_CFG_BSM_IM					(FXR_FW_CSRS + 0x000000006060)
#define FXR_FW_CFG_BSM_IM_RESETCSR				0x0000000000000003ull
#define FXR_FW_CFG_BSM_IM_RESERVED_63_2_SHIFT			2
#define FXR_FW_CFG_BSM_IM_RESERVED_63_2_MASK			0x3FFFFFFFFFFFFFFFull
#define FXR_FW_CFG_BSM_IM_RESERVED_63_2_SMASK			0xFFFFFFFFFFFFFFFCull
#define FXR_FW_CFG_BSM_IM_SRAM_ERR_SHIFT			0
#define FXR_FW_CFG_BSM_IM_SRAM_ERR_MASK				0x3ull
#define FXR_FW_CFG_BSM_IM_SRAM_ERR_SMASK			0x3ull
/*
* Table #30 of fxr_top - FW_CFG_SPI_TX_DATA
* Contains the data to send to attached SPI device.
*/
#define FXR_FW_CFG_SPI_TX_DATA					(FXR_FW_CSRS + 0x000000006130)
#define FXR_FW_CFG_SPI_TX_DATA_RESETCSR				0x0000000000000000ull
#define FXR_FW_CFG_SPI_TX_DATA_RESERVED_63_32_SHIFT		32
#define FXR_FW_CFG_SPI_TX_DATA_RESERVED_63_32_MASK		0xFFFFFFFFull
#define FXR_FW_CFG_SPI_TX_DATA_RESERVED_63_32_SMASK		0xFFFFFFFF00000000ull
#define FXR_FW_CFG_SPI_TX_DATA_DATA_SHIFT			0
#define FXR_FW_CFG_SPI_TX_DATA_DATA_MASK			0xFFFFFFFFull
#define FXR_FW_CFG_SPI_TX_DATA_DATA_SMASK			0xFFFFFFFFull
/*
* Table #31 of fxr_top - FW_STS_SPI_RX_DATA
* Contains the data received from attached SPI device.
*/
#define FXR_FW_STS_SPI_RX_DATA					(FXR_FW_CSRS + 0x000000006138)
#define FXR_FW_STS_SPI_RX_DATA_RESETCSR				0x0000000000000000ull
#define FXR_FW_STS_SPI_RX_DATA_RESERVED_63_32_SHIFT		32
#define FXR_FW_STS_SPI_RX_DATA_RESERVED_63_32_MASK		0xFFFFFFFFull
#define FXR_FW_STS_SPI_RX_DATA_RESERVED_63_32_SMASK		0xFFFFFFFF00000000ull
#define FXR_FW_STS_SPI_RX_DATA_DATA_SHIFT			0
#define FXR_FW_STS_SPI_RX_DATA_DATA_MASK			0xFFFFFFFFull
#define FXR_FW_STS_SPI_RX_DATA_DATA_SMASK			0xFFFFFFFFull
/*
* Table #32 of fxr_top - FW_CFG_SPI_HEADER
* Contains the header to send to the device. Typically include a one byte 
* instruction and possibly a 3-byte
*/
#define FXR_FW_CFG_SPI_HEADER					(FXR_FW_CSRS + 0x000000006140)
#define FXR_FW_CFG_SPI_HEADER_RESETCSR				0x0000000000000000ull
#define FXR_FW_CFG_SPI_HEADER_RESERVED_63_32_SHIFT		32
#define FXR_FW_CFG_SPI_HEADER_RESERVED_63_32_MASK		0xFFFFFFFFull
#define FXR_FW_CFG_SPI_HEADER_RESERVED_63_32_SMASK		0xFFFFFFFF00000000ull
#define FXR_FW_CFG_SPI_HEADER_DATA_SHIFT			0
#define FXR_FW_CFG_SPI_HEADER_DATA_MASK				0xFFFFFFFFull
#define FXR_FW_CFG_SPI_HEADER_DATA_SMASK			0xFFFFFFFFull
/*
* Table #33 of fxr_top - FW_CFG_SPI_CTRL
* Control access to SPI device. All values can be set simultaneously with the 
* command.
*/
#define FXR_FW_CFG_SPI_CTRL					(FXR_FW_CSRS + 0x000000006148)
#define FXR_FW_CFG_SPI_CTRL_RESETCSR				0x0000000000000031ull
#define FXR_FW_CFG_SPI_CTRL_RESERVED_63_27_SHIFT		27
#define FXR_FW_CFG_SPI_CTRL_RESERVED_63_27_MASK			0x1FFFFFFFFFull
#define FXR_FW_CFG_SPI_CTRL_RESERVED_63_27_SMASK		0xFFFFFFFFF8000000ull
#define FXR_FW_CFG_SPI_CTRL_PIN_IO3_SHIFT			26
#define FXR_FW_CFG_SPI_CTRL_PIN_IO3_MASK			0x1ull
#define FXR_FW_CFG_SPI_CTRL_PIN_IO3_SMASK			0x4000000ull
#define FXR_FW_CFG_SPI_CTRL_PIN_IO2_SHIFT			25
#define FXR_FW_CFG_SPI_CTRL_PIN_IO2_MASK			0x1ull
#define FXR_FW_CFG_SPI_CTRL_PIN_IO2_SMASK			0x2000000ull
#define FXR_FW_CFG_SPI_CTRL_DIR_IO3_SHIFT			24
#define FXR_FW_CFG_SPI_CTRL_DIR_IO3_MASK			0x1ull
#define FXR_FW_CFG_SPI_CTRL_DIR_IO3_SMASK			0x1000000ull
#define FXR_FW_CFG_SPI_CTRL_DIR_IO2_SHIFT			23
#define FXR_FW_CFG_SPI_CTRL_DIR_IO2_MASK			0x1ull
#define FXR_FW_CFG_SPI_CTRL_DIR_IO2_SMASK			0x800000ull
#define FXR_FW_CFG_SPI_CTRL_SELECTED_SHIFT			22
#define FXR_FW_CFG_SPI_CTRL_SELECTED_MASK			0x1ull
#define FXR_FW_CFG_SPI_CTRL_SELECTED_SMASK			0x400000ull
#define FXR_FW_CFG_SPI_CTRL_BUSY_SHIFT				21
#define FXR_FW_CFG_SPI_CTRL_BUSY_MASK				0x1ull
#define FXR_FW_CFG_SPI_CTRL_BUSY_SMASK				0x200000ull
#define FXR_FW_CFG_SPI_CTRL_DATA_SHIFT_METHOD_SHIFT		19
#define FXR_FW_CFG_SPI_CTRL_DATA_SHIFT_METHOD_MASK		0x3ull
#define FXR_FW_CFG_SPI_CTRL_DATA_SHIFT_METHOD_SMASK		0x180000ull
#define FXR_FW_CFG_SPI_CTRL_DATA_SIZE_SHIFT			17
#define FXR_FW_CFG_SPI_CTRL_DATA_SIZE_MASK			0x3ull
#define FXR_FW_CFG_SPI_CTRL_DATA_SIZE_SMASK			0x60000ull
#define FXR_FW_CFG_SPI_CTRL_HEADER_SIZE_SHIFT			15
#define FXR_FW_CFG_SPI_CTRL_HEADER_SIZE_MASK			0x3ull
#define FXR_FW_CFG_SPI_CTRL_HEADER_SIZE_SMASK			0x18000ull
#define FXR_FW_CFG_SPI_CTRL_COMMAND_SHIFT			11
#define FXR_FW_CFG_SPI_CTRL_COMMAND_MASK			0xFull
#define FXR_FW_CFG_SPI_CTRL_COMMAND_SMASK			0x7800ull
#define FXR_FW_CFG_SPI_CTRL_ENABLE_SHIFT			10
#define FXR_FW_CFG_SPI_CTRL_ENABLE_MASK				0x1ull
#define FXR_FW_CFG_SPI_CTRL_ENABLE_SMASK			0x400ull
#define FXR_FW_CFG_SPI_CTRL_FREQ_SHIFT				0
#define FXR_FW_CFG_SPI_CTRL_FREQ_MASK				0x3FFull
#define FXR_FW_CFG_SPI_CTRL_FREQ_SMASK				0x3FFull
/*
* Table #34 of fxr_top - FW_DBG_SPI_FSM_DEBUG
* DEBUG ONLY. Reserved in normal operation.
*/
#define FXR_FW_DBG_SPI_FSM_DEBUG				(FXR_FW_CSRS + 0x000000006150)
#define FXR_FW_DBG_SPI_FSM_DEBUG_RESETCSR			0x0000000000000000ull
#define FXR_FW_DBG_SPI_FSM_DEBUG_RESERVED_63_6_SHIFT		6
#define FXR_FW_DBG_SPI_FSM_DEBUG_RESERVED_63_6_MASK		0x3FFFFFFFFFFFFFFull
#define FXR_FW_DBG_SPI_FSM_DEBUG_RESERVED_63_6_SMASK		0xFFFFFFFFFFFFFFC0ull
#define FXR_FW_DBG_SPI_FSM_DEBUG_SPI_NEXT_STATE_SHIFT		3
#define FXR_FW_DBG_SPI_FSM_DEBUG_SPI_NEXT_STATE_MASK		0x7ull
#define FXR_FW_DBG_SPI_FSM_DEBUG_SPI_NEXT_STATE_SMASK		0x38ull
#define FXR_FW_DBG_SPI_FSM_DEBUG_SPI_PRESENT_STATE_SHIFT	0
#define FXR_FW_DBG_SPI_FSM_DEBUG_SPI_PRESENT_STATE_MASK		0x7ull
#define FXR_FW_DBG_SPI_FSM_DEBUG_SPI_PRESENT_STATE_SMASK	0x7ull

#endif 		/* DEF_FXR_FW_SW_DEF */

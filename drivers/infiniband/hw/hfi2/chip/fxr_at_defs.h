/*
*------------------------------------------------------------------------------
*                                                                              
*  INTEL CONFIDENTIAL                                                          
*                                                                              
*  Copyright 2018 Intel Corporation All Rights Reserved.                 
*                                                                              
*  The source code contained or described herein and all documents related     
*  to the source code ("Material") are owned by Intel Corporation or its    
*  suppliers or licensors. Title to the Material remains with Intel            
*  Corporation or its suppliers and licensors. The Material contains trade     
*  secrets and proprietary and confidential information of Intel or its        
*  suppliers and licensors. The Material is protected by worldwide copyright   
*  and trade secret laws and treaty provisions. No part of the Material may    
*  be used, copied, reproduced, modified, published, uploaded, posted,         
*  transmitted, distributed, or disclosed in any way without Intel's prior     
*  express written permission.                                                 
*                                                                              
*  No license under any patent, copyright, trade secret or other intellectual  
*  property right is granted to or conferred upon you by disclosure or         
*  delivery of the Materials, either expressly, by implication, inducement,    
*  estoppel or otherwise. Any license under such intellectual property rights  
*  must be express and approved by Intel in writing.                           
*                                                                              
*------------------------------------------------------------------------------
*  Auto-generated by /p/hdk/rtl/proj_tools/sl2_tools/sl2_tools-srvr10nm-18ww21b/scripts/i_csrs/i_csrs.pl
*  i_csrs.pl Version 1.5 last modified on Thursday 5/24/18 14:54:42
*  /p/hdk/rtl/proj_tools/sl2_tools/sl2_tools-srvr10nm-18ww21b/scripts/i_csrs/i_csrs.pl -C -RVREGS -ST fxr_at -o /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/fxr /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/repo_xml/300_Memory_Map.xml /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/repo_xml/360_Memory_Map_AT.xml
*------------------------------------------------------------------------------
*/

#ifndef DEF_FXR_AT_SW_DEF
#define DEF_FXR_AT_SW_DEF

#ifndef FXR_AT_CSRS
#define FXR_AT_CSRS						0x000000000000
#endif
#define FXR_NUM_CONTEXTS					256
#define FXR_NUM_PIDS						4096
#define FXR_MAX_CONTEXT						255
#define FXR_TX_CONTEXT_ENTRIES					128
#define FXR_TX_CONTEXT_MAX					127
#define FXR_RX_CONTEXT_ENTRIES					32
#define FXR_RX_CONTEXT_MAX					31
#define FXR_NUM_SL						32
#define FXR_MAX_SL						31
#define FXR_AT_ASSOCIATIVITY					16
#define FXR_AT_TLB_ENTRIES					65536
#define FXR_AT_BASE						0
#define FXR_AT_PASID_LUT_OFFSET					32768
#define FXR_AT_INDIRECT_ARRAY_OFFSET				65536
#define FXR_AT_TLB_DATA_OFFSET					524288
#define FXR_AT_PW_ID_BUF_OFFSET					1048576
#define FXR_AT_PW_ID_OF_BUF_OFFSET				1056768
#define FXR_AT_LRU1G_SETS_OFFSET				1057792
/*
* Table #4 of fxr_top - FXR_AT_CFG_CACHE
* This CSR controls the number of ways allocated to 1G pages,2M pages, and 4K 
* pages. If the CACHE_SEG_MODE=0, the PTE Cache is segmented by page size 
* entries, where NUM_1G_WAYS, NUM_2M_WAYS, and NUM_4K_WAYS parameters must sum 
* to 16 or less. If the CACHE_SEG_MODE=1, the PTE Cache is segmented by a 1G 
* Page segment, and a 2M/4K Page Segment, where NUM_1G_WAYS and NUM_4K_WAYS must 
* sum to 16 or less.
*/
#define FXR_AT_CFG_CACHE					(FXR_AT_CSRS + 0x000000000000)
#define FXR_AT_CFG_CACHE_RESETCSR				0x0000000001000F01ull
#define FXR_AT_CFG_CACHE_RESERVED_63_26_SHIFT			26
#define FXR_AT_CFG_CACHE_RESERVED_63_26_MASK			0x3FFFFFFFFFull
#define FXR_AT_CFG_CACHE_RESERVED_63_26_SMASK			0xFFFFFFFFFC000000ull
#define FXR_AT_CFG_CACHE_NUM_1G_WAYS_SHIFT			24
#define FXR_AT_CFG_CACHE_NUM_1G_WAYS_MASK			0x3ull
#define FXR_AT_CFG_CACHE_NUM_1G_WAYS_SMASK			0x3000000ull
#define FXR_AT_CFG_CACHE_RESERVED_23_21_SHIFT			21
#define FXR_AT_CFG_CACHE_RESERVED_23_21_MASK			0x7ull
#define FXR_AT_CFG_CACHE_RESERVED_23_21_SMASK			0xE00000ull
#define FXR_AT_CFG_CACHE_NUM_2M_WAYS_SHIFT			16
#define FXR_AT_CFG_CACHE_NUM_2M_WAYS_MASK			0x1Full
#define FXR_AT_CFG_CACHE_NUM_2M_WAYS_SMASK			0x1F0000ull
#define FXR_AT_CFG_CACHE_RESERVED_15_13_SHIFT			13
#define FXR_AT_CFG_CACHE_RESERVED_15_13_MASK			0x7ull
#define FXR_AT_CFG_CACHE_RESERVED_15_13_SMASK			0xE000ull
#define FXR_AT_CFG_CACHE_NUM_4K_WAYS_SHIFT			8
#define FXR_AT_CFG_CACHE_NUM_4K_WAYS_MASK			0x1Full
#define FXR_AT_CFG_CACHE_NUM_4K_WAYS_SMASK			0x1F00ull
#define FXR_AT_CFG_CACHE_RESERVED_7_1_SHIFT			1
#define FXR_AT_CFG_CACHE_RESERVED_7_1_MASK			0x7Full
#define FXR_AT_CFG_CACHE_RESERVED_7_1_SMASK			0xFEull
#define FXR_AT_CFG_CACHE_CACHE_SEG_MODE_SHIFT			0
#define FXR_AT_CFG_CACHE_CACHE_SEG_MODE_MASK			0x1ull
#define FXR_AT_CFG_CACHE_CACHE_SEG_MODE_SMASK			0x1ull
/*
* Table #5 of fxr_top - FXR_AT_CFG_REQ_MAX
* The Address Translation block has a limit of 128 concurrent Page Walks, with 4 
* concurrent Page Walk entries are dedicated to PCIM, for Interrupt Remapping, 
* or legacy GPA Write translations. The remaining 124 concurrent Page Walk 
* entries can be divided between the three Translation, with PASID, clients: 
* TXDMA, RXDMA, and TXOTR. The intent of this configuration register is to 
* prevent starvation of page walk resources between clients. All client requests 
* can allocate a page walk resource until a configuration limit is reached, then 
* credits are returned to clients, only as responses to previous translation 
* requests, take that clients outstanding request count below the configured 
* maximum. The default for each client is 124, so in the default configuration, 
* there is no throttling of a given clients request stream. 
*/
#define FXR_AT_CFG_REQ_MAX					(FXR_AT_CSRS + 0x000000000008)
#define FXR_AT_CFG_REQ_MAX_RESETCSR				0x00000000007C7C7Cull
#define FXR_AT_CFG_REQ_MAX_RESERVED_63_23_SHIFT			23
#define FXR_AT_CFG_REQ_MAX_RESERVED_63_23_MASK			0x1FFFFFFFFFFull
#define FXR_AT_CFG_REQ_MAX_RESERVED_63_23_SMASK			0xFFFFFFFFFF800000ull
#define FXR_AT_CFG_REQ_MAX_RXDMA_REQ_MAX_SHIFT			16
#define FXR_AT_CFG_REQ_MAX_RXDMA_REQ_MAX_MASK			0x7Full
#define FXR_AT_CFG_REQ_MAX_RXDMA_REQ_MAX_SMASK			0x7F0000ull
#define FXR_AT_CFG_REQ_MAX_RESERVED_15_SHIFT			15
#define FXR_AT_CFG_REQ_MAX_RESERVED_15_MASK			0x1ull
#define FXR_AT_CFG_REQ_MAX_RESERVED_15_SMASK			0x8000ull
#define FXR_AT_CFG_REQ_MAX_TXOTR_REQ_MAX_SHIFT			8
#define FXR_AT_CFG_REQ_MAX_TXOTR_REQ_MAX_MASK			0x7Full
#define FXR_AT_CFG_REQ_MAX_TXOTR_REQ_MAX_SMASK			0x7F00ull
#define FXR_AT_CFG_REQ_MAX_RESERVED_7_SHIFT			7
#define FXR_AT_CFG_REQ_MAX_RESERVED_7_MASK			0x1ull
#define FXR_AT_CFG_REQ_MAX_RESERVED_7_SMASK			0x80ull
#define FXR_AT_CFG_REQ_MAX_TXDMA_REQ_MAX_SHIFT			0
#define FXR_AT_CFG_REQ_MAX_TXDMA_REQ_MAX_MASK			0x7Full
#define FXR_AT_CFG_REQ_MAX_TXDMA_REQ_MAX_SMASK			0x7Full
/*
* Table #6 of fxr_top - FXR_AT_CFG_INPUT_CREDIT
* Client request credits for input request queues. Hardware has storage for a 
* maximum of four, and will treat any parameter value greater than four, as the 
* maximum. A parameter value of Zero will disable requests from the client 
* associated with that parameter.
*/
#define FXR_AT_CFG_INPUT_CREDIT					(FXR_AT_CSRS + 0x000000000010)
#define FXR_AT_CFG_INPUT_CREDIT_RESETCSR			0x00000000040C0C0Cull
#define FXR_AT_CFG_INPUT_CREDIT_RESERVED_63_27_SHIFT		27
#define FXR_AT_CFG_INPUT_CREDIT_RESERVED_63_27_MASK		0x1FFFFFFFFFull
#define FXR_AT_CFG_INPUT_CREDIT_RESERVED_63_27_SMASK		0xFFFFFFFFF8000000ull
#define FXR_AT_CFG_INPUT_CREDIT_PCIM_REQ_CREDITS_SHIFT		24
#define FXR_AT_CFG_INPUT_CREDIT_PCIM_REQ_CREDITS_MASK		0x7ull
#define FXR_AT_CFG_INPUT_CREDIT_PCIM_REQ_CREDITS_SMASK		0x7000000ull
#define FXR_AT_CFG_INPUT_CREDIT_RESERVED_23_20_SHIFT		20
#define FXR_AT_CFG_INPUT_CREDIT_RESERVED_23_20_MASK		0xFull
#define FXR_AT_CFG_INPUT_CREDIT_RESERVED_23_20_SMASK		0xF00000ull
#define FXR_AT_CFG_INPUT_CREDIT_RXHIARB_REQ_CREDITS_SHIFT	16
#define FXR_AT_CFG_INPUT_CREDIT_RXHIARB_REQ_CREDITS_MASK	0xFull
#define FXR_AT_CFG_INPUT_CREDIT_RXHIARB_REQ_CREDITS_SMASK	0xF0000ull
#define FXR_AT_CFG_INPUT_CREDIT_RESERVED_15_12_SHIFT		12
#define FXR_AT_CFG_INPUT_CREDIT_RESERVED_15_12_MASK		0xFull
#define FXR_AT_CFG_INPUT_CREDIT_RESERVED_15_12_SMASK		0xF000ull
#define FXR_AT_CFG_INPUT_CREDIT_TXOTR_REQ_CREDITS_SHIFT		8
#define FXR_AT_CFG_INPUT_CREDIT_TXOTR_REQ_CREDITS_MASK		0xFull
#define FXR_AT_CFG_INPUT_CREDIT_TXOTR_REQ_CREDITS_SMASK		0xF00ull
#define FXR_AT_CFG_INPUT_CREDIT_RESERVED_7_4_SHIFT		4
#define FXR_AT_CFG_INPUT_CREDIT_RESERVED_7_4_MASK		0xFull
#define FXR_AT_CFG_INPUT_CREDIT_RESERVED_7_4_SMASK		0xF0ull
#define FXR_AT_CFG_INPUT_CREDIT_TXDMA_REQ_CREDITS_SHIFT		0
#define FXR_AT_CFG_INPUT_CREDIT_TXDMA_REQ_CREDITS_MASK		0xFull
#define FXR_AT_CFG_INPUT_CREDIT_TXDMA_REQ_CREDITS_SMASK		0xFull
/*
* Table #7 of fxr_top - FXR_AT_CFG_USE_SYSTEM_PASID
* Force privileged translation requests to use the system PASID and ignore the 
* result of the PID to PASID translation table.
*/
#define FXR_AT_CFG_USE_SYSTEM_PASID				(FXR_AT_CSRS + 0x000000000018)
#define FXR_AT_CFG_USE_SYSTEM_PASID_RESETCSR			0x0000000000000001ull
#define FXR_AT_CFG_USE_SYSTEM_PASID_RESERVED_63_21_SHIFT	21
#define FXR_AT_CFG_USE_SYSTEM_PASID_RESERVED_63_21_MASK		0x7FFFFFFFFFFull
#define FXR_AT_CFG_USE_SYSTEM_PASID_RESERVED_63_21_SMASK	0xFFFFFFFFFFE00000ull
#define FXR_AT_CFG_USE_SYSTEM_PASID_SYSTEM_PASID_SHIFT		1
#define FXR_AT_CFG_USE_SYSTEM_PASID_SYSTEM_PASID_MASK		0xFFFFFull
#define FXR_AT_CFG_USE_SYSTEM_PASID_SYSTEM_PASID_SMASK		0x1FFFFEull
#define FXR_AT_CFG_USE_SYSTEM_PASID_ENABLE_SHIFT		0
#define FXR_AT_CFG_USE_SYSTEM_PASID_ENABLE_MASK			0x1ull
#define FXR_AT_CFG_USE_SYSTEM_PASID_ENABLE_SMASK		0x1ull
/*
* Table #8 of fxr_top - FXR_AT_CFG_DRAIN_PASID
* This CSR provides a mechanism to ensure that there are no outstanding page 
* requests for a given PASID. This CSR must be used before the OS/driver can 
* release a PASID.
*/
#define FXR_AT_CFG_DRAIN_PASID					(FXR_AT_CSRS + 0x000000000020)
#define FXR_AT_CFG_DRAIN_PASID_RESETCSR				0x0000000000000000ull
#define FXR_AT_CFG_DRAIN_PASID_RESERVED_63_21_SHIFT		21
#define FXR_AT_CFG_DRAIN_PASID_RESERVED_63_21_MASK		0x7FFFFFFFFFFull
#define FXR_AT_CFG_DRAIN_PASID_RESERVED_63_21_SMASK		0xFFFFFFFFFFE00000ull
#define FXR_AT_CFG_DRAIN_PASID_PASID_SHIFT			1
#define FXR_AT_CFG_DRAIN_PASID_PASID_MASK			0xFFFFFull
#define FXR_AT_CFG_DRAIN_PASID_PASID_SMASK			0x1FFFFEull
#define FXR_AT_CFG_DRAIN_PASID_BUSY_SHIFT			0
#define FXR_AT_CFG_DRAIN_PASID_BUSY_MASK			0x1ull
#define FXR_AT_CFG_DRAIN_PASID_BUSY_SMASK			0x1ull
/*
* Table #9 of fxr_top - FXR_AT_CFG_GENPROT_BASE
* This CSR configures the Generic Protected Memory Range check base 
* address.
*/
#define FXR_AT_CFG_GENPROT_BASE					(FXR_AT_CSRS + 0x000000000030)
#define FXR_AT_CFG_GENPROT_BASE_RESETCSR			0x0007FFFFFFFF0000ull
#define FXR_AT_CFG_GENPROT_BASE_RESERVED_63_52_SHIFT		52
#define FXR_AT_CFG_GENPROT_BASE_RESERVED_63_52_MASK		0xFFFull
#define FXR_AT_CFG_GENPROT_BASE_RESERVED_63_52_SMASK		0xFFF0000000000000ull
#define FXR_AT_CFG_GENPROT_BASE_ADDR_SHIFT			16
#define FXR_AT_CFG_GENPROT_BASE_ADDR_MASK			0xFFFFFFFFFull
#define FXR_AT_CFG_GENPROT_BASE_ADDR_SMASK			0xFFFFFFFFF0000ull
#define FXR_AT_CFG_GENPROT_BASE_RESERVED_15_0_SHIFT		0
#define FXR_AT_CFG_GENPROT_BASE_RESERVED_15_0_MASK		0xFFFFull
#define FXR_AT_CFG_GENPROT_BASE_RESERVED_15_0_SMASK		0xFFFFull
/*
* Table #10 of fxr_top - FXR_AT_CFG_GENPROT_LIMIT
* This CSR configures the Generic Protected Memory Range check limit 
* address.
*/
#define FXR_AT_CFG_GENPROT_LIMIT				(FXR_AT_CSRS + 0x000000000038)
#define FXR_AT_CFG_GENPROT_LIMIT_RESETCSR			0x0000000000000000ull
#define FXR_AT_CFG_GENPROT_LIMIT_RESERVED_63_52_SHIFT		52
#define FXR_AT_CFG_GENPROT_LIMIT_RESERVED_63_52_MASK		0xFFFull
#define FXR_AT_CFG_GENPROT_LIMIT_RESERVED_63_52_SMASK		0xFFF0000000000000ull
#define FXR_AT_CFG_GENPROT_LIMIT_ADDR_SHIFT			16
#define FXR_AT_CFG_GENPROT_LIMIT_ADDR_MASK			0xFFFFFFFFFull
#define FXR_AT_CFG_GENPROT_LIMIT_ADDR_SMASK			0xFFFFFFFFF0000ull
#define FXR_AT_CFG_GENPROT_LIMIT_RESERVED_15_0_SHIFT		0
#define FXR_AT_CFG_GENPROT_LIMIT_RESERVED_15_0_MASK		0xFFFFull
#define FXR_AT_CFG_GENPROT_LIMIT_RESERVED_15_0_SMASK		0xFFFFull
/*
* Table #11 of fxr_top - FXR_AT_CFG_PASID_LUT
* This is an AT configuration CSR.It allows access to the Address Translation 
* PID to PASID Look Up Table. These arrays can be written to during normal 
* operation, with the exception that any entry written, changing the PID to 
* PASID mapping, while a PID/PASID still has transactions active in the system, 
* will have undefined effects. PID to PASID Look Up Table entries are 22 bits, 
* with 4096 entries.
*/
#define FXR_AT_CFG_PASID_LUT					(FXR_AT_CSRS + 0x000000008000)
#define FXR_AT_CFG_PASID_LUT_RESETCSR				0x0000000000000000ull
#define FXR_AT_CFG_PASID_LUT_RESERVED_63_22_SHIFT		22
#define FXR_AT_CFG_PASID_LUT_RESERVED_63_22_MASK		0x3FFFFFFFFFFull
#define FXR_AT_CFG_PASID_LUT_RESERVED_63_22_SMASK		0xFFFFFFFFFFC00000ull
#define FXR_AT_CFG_PASID_LUT_PASID_SHIFT			2
#define FXR_AT_CFG_PASID_LUT_PASID_MASK				0xFFFFFull
#define FXR_AT_CFG_PASID_LUT_PASID_SMASK			0x3FFFFCull
#define FXR_AT_CFG_PASID_LUT_PRIVILEGE_LEVEL_SHIFT		1
#define FXR_AT_CFG_PASID_LUT_PRIVILEGE_LEVEL_MASK		0x1ull
#define FXR_AT_CFG_PASID_LUT_PRIVILEGE_LEVEL_SMASK		0x2ull
#define FXR_AT_CFG_PASID_LUT_ENABLE_SHIFT			0
#define FXR_AT_CFG_PASID_LUT_ENABLE_MASK			0x1ull
#define FXR_AT_CFG_PASID_LUT_ENABLE_SMASK			0x1ull
/*
* Table #12 of fxr_top - FXR_AT_ERR_STS_1
* This is the Error Status CSR. Bits are set by hardware or by writing to the 
* #%%#FXR_AT_ERR_FRC_1#%%# CSR. Bits are cleared by writing to the 
* #%%#FXR_AT_ERR_CLR_1#%%# CSR.
*/
#define FXR_AT_ERR_STS_1					(FXR_AT_CSRS + 0x000000004000)
#define FXR_AT_ERR_STS_1_RESETCSR				0x0000000000000000ull
#define FXR_AT_ERR_STS_1_RESERVED_63_28_SHIFT			28
#define FXR_AT_ERR_STS_1_RESERVED_63_28_MASK			0xFFFFFFFFFull
#define FXR_AT_ERR_STS_1_RESERVED_63_28_SMASK			0xFFFFFFFFF0000000ull
#define FXR_AT_ERR_STS_1_PTE_LRU_2M4K_SBE_SHIFT			27
#define FXR_AT_ERR_STS_1_PTE_LRU_2M4K_SBE_MASK			0x1ull
#define FXR_AT_ERR_STS_1_PTE_LRU_2M4K_SBE_SMASK			0x8000000ull
#define FXR_AT_ERR_STS_1_PID_PASID_SBE_SHIFT			26
#define FXR_AT_ERR_STS_1_PID_PASID_SBE_MASK			0x1ull
#define FXR_AT_ERR_STS_1_PID_PASID_SBE_SMASK			0x4000000ull
#define FXR_AT_ERR_STS_1_PW_RESP_SBE_SHIFT			25
#define FXR_AT_ERR_STS_1_PW_RESP_SBE_MASK			0x1ull
#define FXR_AT_ERR_STS_1_PW_RESP_SBE_SMASK			0x2000000ull
#define FXR_AT_ERR_STS_1_PW_TRID_OF_SBE_SHIFT			24
#define FXR_AT_ERR_STS_1_PW_TRID_OF_SBE_MASK			0x1ull
#define FXR_AT_ERR_STS_1_PW_TRID_OF_SBE_SMASK			0x1000000ull
#define FXR_AT_ERR_STS_1_PW_TRID_SBE_SHIFT			23
#define FXR_AT_ERR_STS_1_PW_TRID_SBE_MASK			0x1ull
#define FXR_AT_ERR_STS_1_PW_TRID_SBE_SMASK			0x800000ull
#define FXR_AT_ERR_STS_1_TR_SBE_SHIFT				22
#define FXR_AT_ERR_STS_1_TR_SBE_MASK				0x1ull
#define FXR_AT_ERR_STS_1_TR_SBE_SMASK				0x400000ull
#define FXR_AT_ERR_STS_1_PTEC_DATA_SBE_SHIFT			21
#define FXR_AT_ERR_STS_1_PTEC_DATA_SBE_MASK			0x1ull
#define FXR_AT_ERR_STS_1_PTEC_DATA_SBE_SMASK			0x200000ull
#define FXR_AT_ERR_STS_1_PTEC_TAG_SBE_SHIFT			20
#define FXR_AT_ERR_STS_1_PTEC_TAG_SBE_MASK			0x1ull
#define FXR_AT_ERR_STS_1_PTEC_TAG_SBE_SMASK			0x100000ull
#define FXR_AT_ERR_STS_1_PTE_LRU_1G_MBE_SHIFT			19
#define FXR_AT_ERR_STS_1_PTE_LRU_1G_MBE_MASK			0x1ull
#define FXR_AT_ERR_STS_1_PTE_LRU_1G_MBE_SMASK			0x80000ull
#define FXR_AT_ERR_STS_1_PTE_LRU_2M4K_MBE_SHIFT			18
#define FXR_AT_ERR_STS_1_PTE_LRU_2M4K_MBE_MASK			0x1ull
#define FXR_AT_ERR_STS_1_PTE_LRU_2M4K_MBE_SMASK			0x40000ull
#define FXR_AT_ERR_STS_1_PID_PASID_MBE_SHIFT			17
#define FXR_AT_ERR_STS_1_PID_PASID_MBE_MASK			0x1ull
#define FXR_AT_ERR_STS_1_PID_PASID_MBE_SMASK			0x20000ull
#define FXR_AT_ERR_STS_1_PW_RESP_MBE_SHIFT			16
#define FXR_AT_ERR_STS_1_PW_RESP_MBE_MASK			0x1ull
#define FXR_AT_ERR_STS_1_PW_RESP_MBE_SMASK			0x10000ull
#define FXR_AT_ERR_STS_1_PW_TRID_OF_MBE_SHIFT			15
#define FXR_AT_ERR_STS_1_PW_TRID_OF_MBE_MASK			0x1ull
#define FXR_AT_ERR_STS_1_PW_TRID_OF_MBE_SMASK			0x8000ull
#define FXR_AT_ERR_STS_1_PW_TRID_MBE_SHIFT			14
#define FXR_AT_ERR_STS_1_PW_TRID_MBE_MASK			0x1ull
#define FXR_AT_ERR_STS_1_PW_TRID_MBE_SMASK			0x4000ull
#define FXR_AT_ERR_STS_1_TR_MBE_SHIFT				13
#define FXR_AT_ERR_STS_1_TR_MBE_MASK				0x1ull
#define FXR_AT_ERR_STS_1_TR_MBE_SMASK				0x2000ull
#define FXR_AT_ERR_STS_1_PTEC_DATA_MBE_SHIFT			12
#define FXR_AT_ERR_STS_1_PTEC_DATA_MBE_MASK			0x1ull
#define FXR_AT_ERR_STS_1_PTEC_DATA_MBE_SMASK			0x1000ull
#define FXR_AT_ERR_STS_1_PTEC_TAG_MBE_SHIFT			11
#define FXR_AT_ERR_STS_1_PTEC_TAG_MBE_MASK			0x1ull
#define FXR_AT_ERR_STS_1_PTEC_TAG_MBE_SMASK			0x800ull
#define FXR_AT_ERR_STS_1_IOMMU_RSP_ERR_SHIFT			10
#define FXR_AT_ERR_STS_1_IOMMU_RSP_ERR_MASK			0x1ull
#define FXR_AT_ERR_STS_1_IOMMU_RSP_ERR_SMASK			0x400ull
#define FXR_AT_ERR_STS_1_PGR_RSP_ERR_OF_SHIFT			9
#define FXR_AT_ERR_STS_1_PGR_RSP_ERR_OF_MASK			0x1ull
#define FXR_AT_ERR_STS_1_PGR_RSP_ERR_OF_SMASK			0x200ull
#define FXR_AT_ERR_STS_1_PGR_RSP_ERR_SHIFT			8
#define FXR_AT_ERR_STS_1_PGR_RSP_ERR_MASK			0x1ull
#define FXR_AT_ERR_STS_1_PGR_RSP_ERR_SMASK			0x100ull
#define FXR_AT_ERR_STS_1_GENPROT_ERR_SHIFT			7
#define FXR_AT_ERR_STS_1_GENPROT_ERR_MASK			0x1ull
#define FXR_AT_ERR_STS_1_GENPROT_ERR_SMASK			0x80ull
#define FXR_AT_ERR_STS_1_VA_CANONICAL_ERR_SHIFT			6
#define FXR_AT_ERR_STS_1_VA_CANONICAL_ERR_MASK			0x1ull
#define FXR_AT_ERR_STS_1_VA_CANONICAL_ERR_SMASK			0x40ull
#define FXR_AT_ERR_STS_1_PF_PGR_DISABLED_SHIFT			5
#define FXR_AT_ERR_STS_1_PF_PGR_DISABLED_MASK			0x1ull
#define FXR_AT_ERR_STS_1_PF_PGR_DISABLED_SMASK			0x20ull
#define FXR_AT_ERR_STS_1_PASID_PRIV_FAIL_SHIFT			4
#define FXR_AT_ERR_STS_1_PASID_PRIV_FAIL_MASK			0x1ull
#define FXR_AT_ERR_STS_1_PASID_PRIV_FAIL_SMASK			0x10ull
#define FXR_AT_ERR_STS_1_PASID_MAP_FAIL_SHIFT			3
#define FXR_AT_ERR_STS_1_PASID_MAP_FAIL_MASK			0x1ull
#define FXR_AT_ERR_STS_1_PASID_MAP_FAIL_SMASK			0x8ull
#define FXR_AT_ERR_STS_1_PASID_DISABLED_SHIFT			2
#define FXR_AT_ERR_STS_1_PASID_DISABLED_MASK			0x1ull
#define FXR_AT_ERR_STS_1_PASID_DISABLED_SMASK			0x4ull
#define FXR_AT_ERR_STS_1_ATS_DISABLED_SHIFT			1
#define FXR_AT_ERR_STS_1_ATS_DISABLED_MASK			0x1ull
#define FXR_AT_ERR_STS_1_ATS_DISABLED_SMASK			0x2ull
#define FXR_AT_ERR_STS_1_IOMMU_DISABLED_SHIFT			0
#define FXR_AT_ERR_STS_1_IOMMU_DISABLED_MASK			0x1ull
#define FXR_AT_ERR_STS_1_IOMMU_DISABLED_SMASK			0x1ull
/*
* Table #13 of fxr_top - FXR_AT_ERR_CLR_1
* This is the Error Clear CSR. Writing a 1 to a valid bit will clear the 
* corresponding bit in the #%%#FXR_AT_ERR_STS_1#%%# CSR.
*/
#define FXR_AT_ERR_CLR_1					(FXR_AT_CSRS + 0x000000004008)
#define FXR_AT_ERR_CLR_1_RESETCSR				0x0000000000000000ull
#define FXR_AT_ERR_CLR_1_RESERVED_63_28_SHIFT			28
#define FXR_AT_ERR_CLR_1_RESERVED_63_28_MASK			0xFFFFFFFFFull
#define FXR_AT_ERR_CLR_1_RESERVED_63_28_SMASK			0xFFFFFFFFF0000000ull
#define FXR_AT_ERR_CLR_1_EVENTS_SHIFT				0
#define FXR_AT_ERR_CLR_1_EVENTS_MASK				0xFFFFFFFull
#define FXR_AT_ERR_CLR_1_EVENTS_SMASK				0xFFFFFFFull
/*
* Table #14 of fxr_top - FXR_AT_ERR_FRC_1
* This is the Error Force CSR. Writing a 1 to a valid bit will set the 
* corresponding bit in the #%%#FXR_AT_ERR_STS_1#%%# CSR.
*/
#define FXR_AT_ERR_FRC_1					(FXR_AT_CSRS + 0x000000004010)
#define FXR_AT_ERR_FRC_1_RESETCSR				0x0000000000000000ull
#define FXR_AT_ERR_FRC_1_RESERVED_63_28_SHIFT			28
#define FXR_AT_ERR_FRC_1_RESERVED_63_28_MASK			0xFFFFFFFFFull
#define FXR_AT_ERR_FRC_1_RESERVED_63_28_SMASK			0xFFFFFFFFF0000000ull
#define FXR_AT_ERR_FRC_1_EVENTS_SHIFT				0
#define FXR_AT_ERR_FRC_1_EVENTS_MASK				0xFFFFFFFull
#define FXR_AT_ERR_FRC_1_EVENTS_SMASK				0xFFFFFFFull
/*
* Table #15 of fxr_top - FXR_AT_ERR_EN_HOST_1
* This is the Error Enable for the Host Interrupt. If a bit is set, the 
* corresponding error bit in #%%#FXR_AT_ERR_STS_1#%%# will cause an interrupt on 
* the HOST interrupt signal.
*/
#define FXR_AT_ERR_EN_HOST_1					(FXR_AT_CSRS + 0x000000004018)
#define FXR_AT_ERR_EN_HOST_1_RESETCSR				0x0000000000000000ull
#define FXR_AT_ERR_EN_HOST_1_RESERVED_63_28_SHIFT		28
#define FXR_AT_ERR_EN_HOST_1_RESERVED_63_28_MASK		0xFFFFFFFFFull
#define FXR_AT_ERR_EN_HOST_1_RESERVED_63_28_SMASK		0xFFFFFFFFF0000000ull
#define FXR_AT_ERR_EN_HOST_1_EVENTS_SHIFT			0
#define FXR_AT_ERR_EN_HOST_1_EVENTS_MASK			0xFFFFFFFull
#define FXR_AT_ERR_EN_HOST_1_EVENTS_SMASK			0xFFFFFFFull
/*
* Table #16 of fxr_top - FXR_AT_ERR_FIRST_HOST_1
* This is the First Error CSR for the Host Interrupt. When this CSR is clear, it 
* will capture the next #%%#FXR_AT_ERR_STS_1#%%# value when a new HOST Interrupt 
* occurs.
*/
#define FXR_AT_ERR_FIRST_HOST_1					(FXR_AT_CSRS + 0x000000004020)
#define FXR_AT_ERR_FIRST_HOST_1_RESETCSR			0x0000000000000000ull
#define FXR_AT_ERR_FIRST_HOST_1_RESERVED_63_28_SHIFT		28
#define FXR_AT_ERR_FIRST_HOST_1_RESERVED_63_28_MASK		0xFFFFFFFFFull
#define FXR_AT_ERR_FIRST_HOST_1_RESERVED_63_28_SMASK		0xFFFFFFFFF0000000ull
#define FXR_AT_ERR_FIRST_HOST_1_EVENTS_SHIFT			0
#define FXR_AT_ERR_FIRST_HOST_1_EVENTS_MASK			0xFFFFFFFull
#define FXR_AT_ERR_FIRST_HOST_1_EVENTS_SMASK			0xFFFFFFFull
/*
* Table #17 of fxr_top - FXR_AT_ERR_EN_BMC_1
* This is the Error Enable for the BMC Interrupt. If a bit is set, the 
* corresponding error bit in #%%#FXR_AT_ERR_STS_1#%%# will cause an interrupt on 
* the BMC interrupt signal.
*/
#define FXR_AT_ERR_EN_BMC_1					(FXR_AT_CSRS + 0x000000004028)
#define FXR_AT_ERR_EN_BMC_1_RESETCSR				0x0000000000000000ull
#define FXR_AT_ERR_EN_BMC_1_RESERVED_63_28_SHIFT		28
#define FXR_AT_ERR_EN_BMC_1_RESERVED_63_28_MASK			0xFFFFFFFFFull
#define FXR_AT_ERR_EN_BMC_1_RESERVED_63_28_SMASK		0xFFFFFFFFF0000000ull
#define FXR_AT_ERR_EN_BMC_1_EVENTS_SHIFT			0
#define FXR_AT_ERR_EN_BMC_1_EVENTS_MASK				0xFFFFFFFull
#define FXR_AT_ERR_EN_BMC_1_EVENTS_SMASK			0xFFFFFFFull
/*
* Table #18 of fxr_top - FXR_AT_ERR_FIRST_BMC_1
* This is the First Error CSR for the BMC Interrupt. When this CSR is clear, it 
* will capture the next #%%#FXR_AT_ERR_STS_1#%%# value when a new BMC Interrupt 
* occurs.
*/
#define FXR_AT_ERR_FIRST_BMC_1					(FXR_AT_CSRS + 0x000000004030)
#define FXR_AT_ERR_FIRST_BMC_1_RESETCSR				0x0000000000000000ull
#define FXR_AT_ERR_FIRST_BMC_1_RESERVED_63_28_SHIFT		28
#define FXR_AT_ERR_FIRST_BMC_1_RESERVED_63_28_MASK		0xFFFFFFFFFull
#define FXR_AT_ERR_FIRST_BMC_1_RESERVED_63_28_SMASK		0xFFFFFFFFF0000000ull
#define FXR_AT_ERR_FIRST_BMC_1_EVENTS_SHIFT			0
#define FXR_AT_ERR_FIRST_BMC_1_EVENTS_MASK			0xFFFFFFFull
#define FXR_AT_ERR_FIRST_BMC_1_EVENTS_SMASK			0xFFFFFFFull
/*
* Table #19 of fxr_top - FXR_AT_ERR_EN_QUAR_1
* This is the Error Enable for the Quarantine Interrupt. If a bit is set, the 
* corresponding error bit in #%%#FXR_AT_ERR_STS_1#%%# will cause an interrupt on 
* the QUAR interrupt signal.
*/
#define FXR_AT_ERR_EN_QUAR_1					(FXR_AT_CSRS + 0x000000004038)
#define FXR_AT_ERR_EN_QUAR_1_RESETCSR				0x0000000000000000ull
#define FXR_AT_ERR_EN_QUAR_1_RESERVED_63_28_SHIFT		28
#define FXR_AT_ERR_EN_QUAR_1_RESERVED_63_28_MASK		0xFFFFFFFFFull
#define FXR_AT_ERR_EN_QUAR_1_RESERVED_63_28_SMASK		0xFFFFFFFFF0000000ull
#define FXR_AT_ERR_EN_QUAR_1_EVENTS_SHIFT			0
#define FXR_AT_ERR_EN_QUAR_1_EVENTS_MASK			0xFFFFFFFull
#define FXR_AT_ERR_EN_QUAR_1_EVENTS_SMASK			0xFFFFFFFull
/*
* Table #20 of fxr_top - FXR_AT_ERR_FIRST_QUAR_1
* This is the First Error CSR for the Quarantine Interrupt. When this CSR is 
* clear, it will capture the next #%%#FXR_AT_ERR_STS_1#%%# value when a new QUAR 
* Interrupt occurs.
*/
#define FXR_AT_ERR_FIRST_QUAR_1					(FXR_AT_CSRS + 0x000000004040)
#define FXR_AT_ERR_FIRST_QUAR_1_RESETCSR			0x0000000000000000ull
#define FXR_AT_ERR_FIRST_QUAR_1_RESERVED_63_28_SHIFT		28
#define FXR_AT_ERR_FIRST_QUAR_1_RESERVED_63_28_MASK		0xFFFFFFFFFull
#define FXR_AT_ERR_FIRST_QUAR_1_RESERVED_63_28_SMASK		0xFFFFFFFFF0000000ull
#define FXR_AT_ERR_FIRST_QUAR_1_EVENTS_SHIFT			0
#define FXR_AT_ERR_FIRST_QUAR_1_EVENTS_MASK			0xFFFFFFFull
#define FXR_AT_ERR_FIRST_QUAR_1_EVENTS_SMASK			0xFFFFFFFull
/*
* Table #21 of fxr_top - FXR_AT_ERR_INFO_1A
* Error Info for the #%%#mbe#%%# and #%%#sbe#%%# events. (There may be many 
* Error Info Registers.)
*/
#define FXR_AT_ERR_INFO_1A					(FXR_AT_CSRS + 0x000000004048)
#define FXR_AT_ERR_INFO_1A_RESETCSR				0x0000000000000000ull
#define FXR_AT_ERR_INFO_1A_DATA_SYNDROME_SBE_SHIFT		56
#define FXR_AT_ERR_INFO_1A_DATA_SYNDROME_SBE_MASK		0xFFull
#define FXR_AT_ERR_INFO_1A_DATA_SYNDROME_SBE_SMASK		0xFF00000000000000ull
#define FXR_AT_ERR_INFO_1A_DATA_SYNDROME_MBE_SHIFT		48
#define FXR_AT_ERR_INFO_1A_DATA_SYNDROME_MBE_MASK		0xFFull
#define FXR_AT_ERR_INFO_1A_DATA_SYNDROME_MBE_SMASK		0xFF000000000000ull
#define FXR_AT_ERR_INFO_1A_PTEC_ENTRY_SBE_COUNT_SHIFT		40
#define FXR_AT_ERR_INFO_1A_PTEC_ENTRY_SBE_COUNT_MASK		0xFFull
#define FXR_AT_ERR_INFO_1A_PTEC_ENTRY_SBE_COUNT_SMASK		0xFF0000000000ull
#define FXR_AT_ERR_INFO_1A_PTEC_ENTRY_MBE_COUNT_SHIFT		32
#define FXR_AT_ERR_INFO_1A_PTEC_ENTRY_MBE_COUNT_MASK		0xFFull
#define FXR_AT_ERR_INFO_1A_PTEC_ENTRY_MBE_COUNT_SMASK		0xFF00000000ull
#define FXR_AT_ERR_INFO_1A_TAG_SYNDROME_SBE_SHIFT		24
#define FXR_AT_ERR_INFO_1A_TAG_SYNDROME_SBE_MASK		0xFFull
#define FXR_AT_ERR_INFO_1A_TAG_SYNDROME_SBE_SMASK		0xFF000000ull
#define FXR_AT_ERR_INFO_1A_TAG_SYNDROME_MBE_SHIFT		16
#define FXR_AT_ERR_INFO_1A_TAG_SYNDROME_MBE_MASK		0xFFull
#define FXR_AT_ERR_INFO_1A_TAG_SYNDROME_MBE_SMASK		0xFF0000ull
#define FXR_AT_ERR_INFO_1A_PTEC_TAG_SBE_COUNT_SHIFT		8
#define FXR_AT_ERR_INFO_1A_PTEC_TAG_SBE_COUNT_MASK		0xFFull
#define FXR_AT_ERR_INFO_1A_PTEC_TAG_SBE_COUNT_SMASK		0xFF00ull
#define FXR_AT_ERR_INFO_1A_PTEC_TAG_MBE_COUNT_SHIFT		0
#define FXR_AT_ERR_INFO_1A_PTEC_TAG_MBE_COUNT_MASK		0xFFull
#define FXR_AT_ERR_INFO_1A_PTEC_TAG_MBE_COUNT_SMASK		0xFFull
/*
* Table #22 of fxr_top - FXR_AT_ERR_INFO_1B
* Error Info for the #%%#mbe#%%# and #%%#sbe#%%# events. (There may be many 
* Error Info Registers.)
*/
#define FXR_AT_ERR_INFO_1B					(FXR_AT_CSRS + 0x000000004050)
#define FXR_AT_ERR_INFO_1B_RESETCSR				0x0000000000000000ull
#define FXR_AT_ERR_INFO_1B_PWBUF_SYNDROME_SBE_SHIFT		56
#define FXR_AT_ERR_INFO_1B_PWBUF_SYNDROME_SBE_MASK		0xFFull
#define FXR_AT_ERR_INFO_1B_PWBUF_SYNDROME_SBE_SMASK		0xFF00000000000000ull
#define FXR_AT_ERR_INFO_1B_PWBUF_SYNDROME_MBE_SHIFT		48
#define FXR_AT_ERR_INFO_1B_PWBUF_SYNDROME_MBE_MASK		0xFFull
#define FXR_AT_ERR_INFO_1B_PWBUF_SYNDROME_MBE_SMASK		0xFF000000000000ull
#define FXR_AT_ERR_INFO_1B_PWBUF_SBE_COUNT_SHIFT		40
#define FXR_AT_ERR_INFO_1B_PWBUF_SBE_COUNT_MASK			0xFFull
#define FXR_AT_ERR_INFO_1B_PWBUF_SBE_COUNT_SMASK		0xFF0000000000ull
#define FXR_AT_ERR_INFO_1B_PWBUF_MBE_COUNT_SHIFT		32
#define FXR_AT_ERR_INFO_1B_PWBUF_MBE_COUNT_MASK			0xFFull
#define FXR_AT_ERR_INFO_1B_PWBUF_MBE_COUNT_SMASK		0xFF00000000ull
#define FXR_AT_ERR_INFO_1B_TRBUF_SYNDROME_SBE_SHIFT		24
#define FXR_AT_ERR_INFO_1B_TRBUF_SYNDROME_SBE_MASK		0xFFull
#define FXR_AT_ERR_INFO_1B_TRBUF_SYNDROME_SBE_SMASK		0xFF000000ull
#define FXR_AT_ERR_INFO_1B_TRBUF_SYNDROME_MBE_SHIFT		16
#define FXR_AT_ERR_INFO_1B_TRBUF_SYNDROME_MBE_MASK		0xFFull
#define FXR_AT_ERR_INFO_1B_TRBUF_SYNDROME_MBE_SMASK		0xFF0000ull
#define FXR_AT_ERR_INFO_1B_TRBUF_SBE_COUNT_SHIFT		8
#define FXR_AT_ERR_INFO_1B_TRBUF_SBE_COUNT_MASK			0xFFull
#define FXR_AT_ERR_INFO_1B_TRBUF_SBE_COUNT_SMASK		0xFF00ull
#define FXR_AT_ERR_INFO_1B_TRBUF_MBE_COUNT_SHIFT		0
#define FXR_AT_ERR_INFO_1B_TRBUF_MBE_COUNT_MASK			0xFFull
#define FXR_AT_ERR_INFO_1B_TRBUF_MBE_COUNT_SMASK		0xFFull
/*
* Table #23 of fxr_top - FXR_AT_ERR_INFO_1C
* Error Info for the #%%#mbe#%%# and #%%#sbe#%%# events. (There may be many 
* Error Info Registers.)
*/
#define FXR_AT_ERR_INFO_1C					(FXR_AT_CSRS + 0x000000004058)
#define FXR_AT_ERR_INFO_1C_RESETCSR				0x0000000000000000ull
#define FXR_AT_ERR_INFO_1C_PW_RESP_SYNDROME_SBE_SHIFT		56
#define FXR_AT_ERR_INFO_1C_PW_RESP_SYNDROME_SBE_MASK		0xFFull
#define FXR_AT_ERR_INFO_1C_PW_RESP_SYNDROME_SBE_SMASK		0xFF00000000000000ull
#define FXR_AT_ERR_INFO_1C_PW_RESP_SYNDROME_MBE_SHIFT		48
#define FXR_AT_ERR_INFO_1C_PW_RESP_SYNDROME_MBE_MASK		0xFFull
#define FXR_AT_ERR_INFO_1C_PW_RESP_SYNDROME_MBE_SMASK		0xFF000000000000ull
#define FXR_AT_ERR_INFO_1C_PW_RESP_SBE_COUNT_SHIFT		40
#define FXR_AT_ERR_INFO_1C_PW_RESP_SBE_COUNT_MASK		0xFFull
#define FXR_AT_ERR_INFO_1C_PW_RESP_SBE_COUNT_SMASK		0xFF0000000000ull
#define FXR_AT_ERR_INFO_1C_PW_RESP_MBE_COUNT_SHIFT		32
#define FXR_AT_ERR_INFO_1C_PW_RESP_MBE_COUNT_MASK		0xFFull
#define FXR_AT_ERR_INFO_1C_PW_RESP_MBE_COUNT_SMASK		0xFF00000000ull
#define FXR_AT_ERR_INFO_1C_PW_OF_SYNDROME_SBE_SHIFT		24
#define FXR_AT_ERR_INFO_1C_PW_OF_SYNDROME_SBE_MASK		0xFFull
#define FXR_AT_ERR_INFO_1C_PW_OF_SYNDROME_SBE_SMASK		0xFF000000ull
#define FXR_AT_ERR_INFO_1C_PW_OF_SYNDROME_MBE_SHIFT		16
#define FXR_AT_ERR_INFO_1C_PW_OF_SYNDROME_MBE_MASK		0xFFull
#define FXR_AT_ERR_INFO_1C_PW_OF_SYNDROME_MBE_SMASK		0xFF0000ull
#define FXR_AT_ERR_INFO_1C_PW_OF_SBE_COUNT_SHIFT		8
#define FXR_AT_ERR_INFO_1C_PW_OF_SBE_COUNT_MASK			0xFFull
#define FXR_AT_ERR_INFO_1C_PW_OF_SBE_COUNT_SMASK		0xFF00ull
#define FXR_AT_ERR_INFO_1C_PW_OF_MBE_COUNT_SHIFT		0
#define FXR_AT_ERR_INFO_1C_PW_OF_MBE_COUNT_MASK			0xFFull
#define FXR_AT_ERR_INFO_1C_PW_OF_MBE_COUNT_SMASK		0xFFull
/*
* Table #24 of fxr_top - FXR_AT_ERR_INFO_1D
* Error Info for the #%%#mbe#%%# and #%%#sbe#%%# events. (There may be many 
* Error Info Registers.)
*/
#define FXR_AT_ERR_INFO_1D					(FXR_AT_CSRS + 0x000000004060)
#define FXR_AT_ERR_INFO_1D_RESETCSR				0x0000000000000000ull
#define FXR_AT_ERR_INFO_1D_LRU_2M4K_SYNDROME_SBE_SHIFT		56
#define FXR_AT_ERR_INFO_1D_LRU_2M4K_SYNDROME_SBE_MASK		0xFFull
#define FXR_AT_ERR_INFO_1D_LRU_2M4K_SYNDROME_SBE_SMASK		0xFF00000000000000ull
#define FXR_AT_ERR_INFO_1D_LRU_2M4K_SYNDROME_MBE_SHIFT		48
#define FXR_AT_ERR_INFO_1D_LRU_2M4K_SYNDROME_MBE_MASK		0xFFull
#define FXR_AT_ERR_INFO_1D_LRU_2M4K_SYNDROME_MBE_SMASK		0xFF000000000000ull
#define FXR_AT_ERR_INFO_1D_LRU_2M4K_SBE_COUNT_SHIFT		40
#define FXR_AT_ERR_INFO_1D_LRU_2M4K_SBE_COUNT_MASK		0xFFull
#define FXR_AT_ERR_INFO_1D_LRU_2M4K_SBE_COUNT_SMASK		0xFF0000000000ull
#define FXR_AT_ERR_INFO_1D_LRU_2M4K_MBE_COUNT_SHIFT		32
#define FXR_AT_ERR_INFO_1D_LRU_2M4K_MBE_COUNT_MASK		0xFFull
#define FXR_AT_ERR_INFO_1D_LRU_2M4K_MBE_COUNT_SMASK		0xFF00000000ull
#define FXR_AT_ERR_INFO_1D_PID_PASID_SYNDROME_SBE_SHIFT		24
#define FXR_AT_ERR_INFO_1D_PID_PASID_SYNDROME_SBE_MASK		0xFFull
#define FXR_AT_ERR_INFO_1D_PID_PASID_SYNDROME_SBE_SMASK		0xFF000000ull
#define FXR_AT_ERR_INFO_1D_PID_PASID_SYNDROME_MBE_SHIFT		16
#define FXR_AT_ERR_INFO_1D_PID_PASID_SYNDROME_MBE_MASK		0xFFull
#define FXR_AT_ERR_INFO_1D_PID_PASID_SYNDROME_MBE_SMASK		0xFF0000ull
#define FXR_AT_ERR_INFO_1D_PID_PASID_SBE_COUNT_SHIFT		8
#define FXR_AT_ERR_INFO_1D_PID_PASID_SBE_COUNT_MASK		0xFFull
#define FXR_AT_ERR_INFO_1D_PID_PASID_SBE_COUNT_SMASK		0xFF00ull
#define FXR_AT_ERR_INFO_1D_PID_PASID_MBE_COUNT_SHIFT		0
#define FXR_AT_ERR_INFO_1D_PID_PASID_MBE_COUNT_MASK		0xFFull
#define FXR_AT_ERR_INFO_1D_PID_PASID_MBE_COUNT_SMASK		0xFFull
/*
* Table #25 of fxr_top - FXR_AT_ERR_INFO_1E
* Error Info for the #%%#mbe#%%# and #%%#sbe#%%# events. (There may be many 
* Error Info Registers.)
*/
#define FXR_AT_ERR_INFO_1E					(FXR_AT_CSRS + 0x000000004068)
#define FXR_AT_ERR_INFO_1E_RESETCSR				0x0000000000000000ull
#define FXR_AT_ERR_INFO_1E_RESERVED_63_8_SHIFT			8
#define FXR_AT_ERR_INFO_1E_RESERVED_63_8_MASK			0xFFFFFFFFFFFFFFull
#define FXR_AT_ERR_INFO_1E_RESERVED_63_8_SMASK			0xFFFFFFFFFFFFFF00ull
#define FXR_AT_ERR_INFO_1E_LRU_1G_MBE_COUNT_SHIFT		0
#define FXR_AT_ERR_INFO_1E_LRU_1G_MBE_COUNT_MASK		0xFFull
#define FXR_AT_ERR_INFO_1E_LRU_1G_MBE_COUNT_SMASK		0xFFull
/*
* Table #26 of fxr_top - FXR_AT_ERR_INFO_1F
* Error Info for Page Group Request Errors
*/
#define FXR_AT_ERR_INFO_1F					(FXR_AT_CSRS + 0x000000004070)
#define FXR_AT_ERR_INFO_1F_RESETCSR				0x0000000000000000ull
#define FXR_AT_ERR_INFO_1F_RESERVED_63_35_SHIFT			35
#define FXR_AT_ERR_INFO_1F_RESERVED_63_35_MASK			0x1FFFFFFFull
#define FXR_AT_ERR_INFO_1F_RESERVED_63_35_SMASK			0xFFFFFFF800000000ull
#define FXR_AT_ERR_INFO_1F_PGR_ERROR_CLIENT_SHIFT		32
#define FXR_AT_ERR_INFO_1F_PGR_ERROR_CLIENT_MASK		0x7ull
#define FXR_AT_ERR_INFO_1F_PGR_ERROR_CLIENT_SMASK		0x700000000ull
#define FXR_AT_ERR_INFO_1F_RESERVED_31_20_SHIFT			20
#define FXR_AT_ERR_INFO_1F_RESERVED_31_20_MASK			0xFFFull
#define FXR_AT_ERR_INFO_1F_RESERVED_31_20_SMASK			0xFFF00000ull
#define FXR_AT_ERR_INFO_1F_PGR_ERROR_PASID_SHIFT		0
#define FXR_AT_ERR_INFO_1F_PGR_ERROR_PASID_MASK			0xFFFFFull
#define FXR_AT_ERR_INFO_1F_PGR_ERROR_PASID_SMASK		0xFFFFFull
/*
* Table #27 of fxr_top - FXR_AT_ERR_INFO_1G
* Error Info for Page Group Request Errors
*/
#define FXR_AT_ERR_INFO_1G					(FXR_AT_CSRS + 0x000000004078)
#define FXR_AT_ERR_INFO_1G_RESETCSR				0x0000000000000000ull
#define FXR_AT_ERR_INFO_1G_RESERVED_63_52_SHIFT			52
#define FXR_AT_ERR_INFO_1G_RESERVED_63_52_MASK			0xFFFull
#define FXR_AT_ERR_INFO_1G_RESERVED_63_52_SMASK			0xFFF0000000000000ull
#define FXR_AT_ERR_INFO_1G_PGR_ERROR_VA_SHIFT			12
#define FXR_AT_ERR_INFO_1G_PGR_ERROR_VA_MASK			0xFFFFFFFFFFull
#define FXR_AT_ERR_INFO_1G_PGR_ERROR_VA_SMASK			0xFFFFFFFFFF000ull
#define FXR_AT_ERR_INFO_1G_RESERVED_11_4_SHIFT			4
#define FXR_AT_ERR_INFO_1G_RESERVED_11_4_MASK			0xFFull
#define FXR_AT_ERR_INFO_1G_RESERVED_11_4_SMASK			0xFF0ull
#define FXR_AT_ERR_INFO_1G_PGR_ERROR_PA_SHIFT			3
#define FXR_AT_ERR_INFO_1G_PGR_ERROR_PA_MASK			0x1ull
#define FXR_AT_ERR_INFO_1G_PGR_ERROR_PA_SMASK			0x8ull
#define FXR_AT_ERR_INFO_1G_PGR_ERROR_W_SHIFT			2
#define FXR_AT_ERR_INFO_1G_PGR_ERROR_W_MASK			0x1ull
#define FXR_AT_ERR_INFO_1G_PGR_ERROR_W_SMASK			0x4ull
#define FXR_AT_ERR_INFO_1G_PGR_ERROR_R_SHIFT			1
#define FXR_AT_ERR_INFO_1G_PGR_ERROR_R_MASK			0x1ull
#define FXR_AT_ERR_INFO_1G_PGR_ERROR_R_SMASK			0x2ull
#define FXR_AT_ERR_INFO_1G_RESERVED_0_SHIFT			0
#define FXR_AT_ERR_INFO_1G_RESERVED_0_MASK			0x1ull
#define FXR_AT_ERR_INFO_1G_RESERVED_0_SMASK			0x1ull
/*
* Table #28 of fxr_top - FXR_AT_ERR_INFO_1H
* Error Info for Virtual Address Canonical Errors
*/
#define FXR_AT_ERR_INFO_1H					(FXR_AT_CSRS + 0x000000004080)
#define FXR_AT_ERR_INFO_1H_RESETCSR				0x0000000000000000ull
#define FXR_AT_ERR_INFO_1H_RESERVED_63_57_SHIFT			57
#define FXR_AT_ERR_INFO_1H_RESERVED_63_57_MASK			0x7Full
#define FXR_AT_ERR_INFO_1H_RESERVED_63_57_SMASK			0xFE00000000000000ull
#define FXR_AT_ERR_INFO_1H_CANON_ERR_VA_SHIFT			12
#define FXR_AT_ERR_INFO_1H_CANON_ERR_VA_MASK			0x1FFFFFFFFFFFull
#define FXR_AT_ERR_INFO_1H_CANON_ERR_VA_SMASK			0x1FFFFFFFFFFF000ull
#define FXR_AT_ERR_INFO_1H_RESERVED_11_1_SHIFT			1
#define FXR_AT_ERR_INFO_1H_RESERVED_11_1_MASK			0x7FFull
#define FXR_AT_ERR_INFO_1H_RESERVED_11_1_SMASK			0xFFEull
#define FXR_AT_ERR_INFO_1H_VALID_SHIFT				0
#define FXR_AT_ERR_INFO_1H_VALID_MASK				0x1ull
#define FXR_AT_ERR_INFO_1H_VALID_SMASK				0x1ull
/*
* Table #29 of fxr_top - FXR_AT_ERR_INFO_1K
* Error Info for Virtual Address Canonical Errors
*/
#define FXR_AT_ERR_INFO_1K					(FXR_AT_CSRS + 0x000000004088)
#define FXR_AT_ERR_INFO_1K_RESETCSR				0x0000000000000000ull
#define FXR_AT_ERR_INFO_1K_RESERVED_63_40_SHIFT			40
#define FXR_AT_ERR_INFO_1K_RESERVED_63_40_MASK			0xFFFFFFull
#define FXR_AT_ERR_INFO_1K_RESERVED_63_40_SMASK			0xFFFFFF0000000000ull
#define FXR_AT_ERR_INFO_1K_CANON_ERR_PASID_SHIFT		20
#define FXR_AT_ERR_INFO_1K_CANON_ERR_PASID_MASK			0xFFFFFull
#define FXR_AT_ERR_INFO_1K_CANON_ERR_PASID_SMASK		0xFFFFF00000ull
#define FXR_AT_ERR_INFO_1K_RESERVED_19_12_SHIFT			12
#define FXR_AT_ERR_INFO_1K_RESERVED_19_12_MASK			0xFFull
#define FXR_AT_ERR_INFO_1K_RESERVED_19_12_SMASK			0xFF000ull
#define FXR_AT_ERR_INFO_1K_CANON_ERR_CLIENT_SHIFT		10
#define FXR_AT_ERR_INFO_1K_CANON_ERR_CLIENT_MASK		0x3ull
#define FXR_AT_ERR_INFO_1K_CANON_ERR_CLIENT_SMASK		0xC00ull
#define FXR_AT_ERR_INFO_1K_CANON_ERR_TID_SHIFT			0
#define FXR_AT_ERR_INFO_1K_CANON_ERR_TID_MASK			0x3FFull
#define FXR_AT_ERR_INFO_1K_CANON_ERR_TID_SMASK			0x3FFull
/*
* Table #30 of fxr_top - FXR_AT_STS_GENERAL_1
* FXR_AT General status of important state(i.e. FSM states, open request slots, 
* etc.)
*/
#define FXR_AT_STS_GENERAL_1					(FXR_AT_CSRS + 0x000000004120)
#define FXR_AT_STS_GENERAL_1_RESETCSR				0x0000000000000000ull
#define FXR_AT_STS_GENERAL_1_RESERVED_63_15_SHIFT		15
#define FXR_AT_STS_GENERAL_1_RESERVED_63_15_MASK		0x1FFFFFFFFFFFFull
#define FXR_AT_STS_GENERAL_1_RESERVED_63_15_SMASK		0xFFFFFFFFFFFF8000ull
#define FXR_AT_STS_GENERAL_1_INVAL_CMD_FSM_SHIFT		12
#define FXR_AT_STS_GENERAL_1_INVAL_CMD_FSM_MASK			0x7ull
#define FXR_AT_STS_GENERAL_1_INVAL_CMD_FSM_SMASK		0x7000ull
#define FXR_AT_STS_GENERAL_1_RESERVED_11_SHIFT			11
#define FXR_AT_STS_GENERAL_1_RESERVED_11_MASK			0x1ull
#define FXR_AT_STS_GENERAL_1_RESERVED_11_SMASK			0x800ull
#define FXR_AT_STS_GENERAL_1_PW_RSP_FSM_SHIFT			8
#define FXR_AT_STS_GENERAL_1_PW_RSP_FSM_MASK			0x7ull
#define FXR_AT_STS_GENERAL_1_PW_RSP_FSM_SMASK			0x700ull
#define FXR_AT_STS_GENERAL_1_AVAILABLE_REQS_SHIFT		0
#define FXR_AT_STS_GENERAL_1_AVAILABLE_REQS_MASK		0xFFull
#define FXR_AT_STS_GENERAL_1_AVAILABLE_REQS_SMASK		0xFFull
/*
* Table #31 of fxr_top - FXR_AT_DBG_TREQ_BUF_ADDR
* This is an AT debug CSR. It allows indirect access to the AT Request Buffer. 
* These arrays cannot be written to during normal operation. This register is 
* for debug use only. Request Buffer entries are 88 bits, with 128 entries. The 
* data for the read or write to this register is contained in the next two 
* CSR's
*/
#define FXR_AT_DBG_TREQ_BUF_ADDR				(FXR_AT_CSRS + 0x000000010000)
#define FXR_AT_DBG_TREQ_BUF_ADDR_RESETCSR			0x0020000000000000ull
#define FXR_AT_DBG_TREQ_BUF_ADDR_VALID_SHIFT			63
#define FXR_AT_DBG_TREQ_BUF_ADDR_VALID_MASK			0x1ull
#define FXR_AT_DBG_TREQ_BUF_ADDR_VALID_SMASK			0x8000000000000000ull
#define FXR_AT_DBG_TREQ_BUF_ADDR_WRITE_SHIFT			62
#define FXR_AT_DBG_TREQ_BUF_ADDR_WRITE_MASK			0x1ull
#define FXR_AT_DBG_TREQ_BUF_ADDR_WRITE_SMASK			0x4000000000000000ull
#define FXR_AT_DBG_TREQ_BUF_ADDR_ECC_SHIFT			61
#define FXR_AT_DBG_TREQ_BUF_ADDR_ECC_MASK			0x1ull
#define FXR_AT_DBG_TREQ_BUF_ADDR_ECC_SMASK			0x2000000000000000ull
#define FXR_AT_DBG_TREQ_BUF_ADDR_RESERVED_60_SHIFT		60
#define FXR_AT_DBG_TREQ_BUF_ADDR_RESERVED_60_MASK		0x1ull
#define FXR_AT_DBG_TREQ_BUF_ADDR_RESERVED_60_SMASK		0x1000000000000000ull
#define FXR_AT_DBG_TREQ_BUF_ADDR_PAYLOAD_REGS_SHIFT		52
#define FXR_AT_DBG_TREQ_BUF_ADDR_PAYLOAD_REGS_MASK		0xFFull
#define FXR_AT_DBG_TREQ_BUF_ADDR_PAYLOAD_REGS_SMASK		0xFF0000000000000ull
#define FXR_AT_DBG_TREQ_BUF_ADDR_ADDRESS_SHIFT			0
#define FXR_AT_DBG_TREQ_BUF_ADDR_ADDRESS_MASK			0xFFFFFFFFFFFFFull
#define FXR_AT_DBG_TREQ_BUF_ADDR_ADDRESS_SMASK			0xFFFFFFFFFFFFFull
/*
* Table #32 of fxr_top - FXR_AT_DBG_TREQ_BUF_DATA0
* This is an AT debug CSR. This is the data for bits [63:0] of the AT Request 
* Buffer being accessed with the AT_DBG_TREQ_BUF_ADDR register. The data from 
* this CSR is written to the AT Request Buffer array if the write bit is active 
* in that CSR, or this data will contain the read data if the write bit is not 
* active.
*/
#define FXR_AT_DBG_TREQ_BUF_DATA0				(FXR_AT_CSRS + 0x000000010008)
#define FXR_AT_DBG_TREQ_BUF_DATA0_RESETCSR			0x0000000000000000ull
#define FXR_AT_DBG_TREQ_BUF_DATA0_DATA_SHIFT			0
#define FXR_AT_DBG_TREQ_BUF_DATA0_DATA_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_AT_DBG_TREQ_BUF_DATA0_DATA_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #33 of fxr_top - FXR_AT_DBG_TREQ_BUF_DATA1
* This is an AT debug CSR. This is the data for bits [79:64] of the AT Request 
* Buffer being accessed with the AT_DBG_TREQ_BUF_ADDR register. The data from 
* this CSR is written to the AT Request Buffer array if the write bit is active 
* in that CSR, or this data will contain the read data if the write bit is not 
* active.
*/
#define FXR_AT_DBG_TREQ_BUF_DATA1				(FXR_AT_CSRS + 0x000000010010)
#define FXR_AT_DBG_TREQ_BUF_DATA1_RESETCSR			0x0000000000000000ull
#define FXR_AT_DBG_TREQ_BUF_DATA1_RESERVED_63_28_SHIFT		28
#define FXR_AT_DBG_TREQ_BUF_DATA1_RESERVED_63_28_MASK		0xFFFFFFFFFull
#define FXR_AT_DBG_TREQ_BUF_DATA1_RESERVED_63_28_SMASK		0xFFFFFFFFF0000000ull
#define FXR_AT_DBG_TREQ_BUF_DATA1_ECC_SHIFT			20
#define FXR_AT_DBG_TREQ_BUF_DATA1_ECC_MASK			0xFFull
#define FXR_AT_DBG_TREQ_BUF_DATA1_ECC_SMASK			0xFF00000ull
#define FXR_AT_DBG_TREQ_BUF_DATA1_DATA_SHIFT			0
#define FXR_AT_DBG_TREQ_BUF_DATA1_DATA_MASK			0xFFFFFull
#define FXR_AT_DBG_TREQ_BUF_DATA1_DATA_SMASK			0xFFFFFull
/*
* Table #34 of fxr_top - FXR_AT_DBG_PW_RSP_BUF_ADDR
* This is an AT debug CSR. It allows indirect access to the AT Page Walk 
* Response Buffer. These arrays cannot be written to during normal operation. 
* This register is for debug use only. Note that this register is 88 bits, with 
* 128 entries. The data for the read or write to this register is contained in 
* the next two CSR's
*/
#define FXR_AT_DBG_PW_RSP_BUF_ADDR				(FXR_AT_CSRS + 0x000000010100)
#define FXR_AT_DBG_PW_RSP_BUF_ADDR_RESETCSR			0x0020000000000000ull
#define FXR_AT_DBG_PW_RSP_BUF_ADDR_VALID_SHIFT			63
#define FXR_AT_DBG_PW_RSP_BUF_ADDR_VALID_MASK			0x1ull
#define FXR_AT_DBG_PW_RSP_BUF_ADDR_VALID_SMASK			0x8000000000000000ull
#define FXR_AT_DBG_PW_RSP_BUF_ADDR_WRITE_SHIFT			62
#define FXR_AT_DBG_PW_RSP_BUF_ADDR_WRITE_MASK			0x1ull
#define FXR_AT_DBG_PW_RSP_BUF_ADDR_WRITE_SMASK			0x4000000000000000ull
#define FXR_AT_DBG_PW_RSP_BUF_ADDR_ECC_SHIFT			61
#define FXR_AT_DBG_PW_RSP_BUF_ADDR_ECC_MASK			0x1ull
#define FXR_AT_DBG_PW_RSP_BUF_ADDR_ECC_SMASK			0x2000000000000000ull
#define FXR_AT_DBG_PW_RSP_BUF_ADDR_RESERVED_60_SHIFT		60
#define FXR_AT_DBG_PW_RSP_BUF_ADDR_RESERVED_60_MASK		0x1ull
#define FXR_AT_DBG_PW_RSP_BUF_ADDR_RESERVED_60_SMASK		0x1000000000000000ull
#define FXR_AT_DBG_PW_RSP_BUF_ADDR_PAYLOAD_REGS_SHIFT		52
#define FXR_AT_DBG_PW_RSP_BUF_ADDR_PAYLOAD_REGS_MASK		0xFFull
#define FXR_AT_DBG_PW_RSP_BUF_ADDR_PAYLOAD_REGS_SMASK		0xFF0000000000000ull
#define FXR_AT_DBG_PW_RSP_BUF_ADDR_ADDRESS_SHIFT		0
#define FXR_AT_DBG_PW_RSP_BUF_ADDR_ADDRESS_MASK			0xFFFFFFFFFFFFFull
#define FXR_AT_DBG_PW_RSP_BUF_ADDR_ADDRESS_SMASK		0xFFFFFFFFFFFFFull
/*
* Table #35 of fxr_top - FXR_AT_DBG_PW_RSP_BUF_DATA0
* This is an AT debug CSR. This is the data for bits [63:0] of the AT Page Walk 
* Response Buffer being accessed with the AT_DBG_PW_RSP_BUF_ADDR register. The 
* data from this CSR is written to the AT Page Walk Response Buffer array if the 
* write bit is active in that CSR, or this data will contain the read data if 
* the write bit is not active.
*/
#define FXR_AT_DBG_PW_RSP_BUF_DATA0				(FXR_AT_CSRS + 0x000000010108)
#define FXR_AT_DBG_PW_RSP_BUF_DATA0_RESETCSR			0x0000000000000000ull
#define FXR_AT_DBG_PW_RSP_BUF_DATA0_DATA_SHIFT			0
#define FXR_AT_DBG_PW_RSP_BUF_DATA0_DATA_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_AT_DBG_PW_RSP_BUF_DATA0_DATA_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #36 of fxr_top - FXR_AT_DBG_PW_RSP_BUF_DATA1
* This is an AT debug CSR. This is the data for bits [79:64] of the AT Page Walk 
* Response Buffer being accessed with the AT_DBG_PW_RSP_BUF_ADDR register. The 
* data from this CSR is written to the AT Page Walk Response Buffer array if the 
* write bit is active in that CSR, or this data will contain the read data if 
* the write bit is not active.
*/
#define FXR_AT_DBG_PW_RSP_BUF_DATA1				(FXR_AT_CSRS + 0x000000010110)
#define FXR_AT_DBG_PW_RSP_BUF_DATA1_RESETCSR			0x0000000000000000ull
#define FXR_AT_DBG_PW_RSP_BUF_DATA1_RESERVED_63_24_SHIFT	24
#define FXR_AT_DBG_PW_RSP_BUF_DATA1_RESERVED_63_24_MASK		0xFFFFFFFFFFull
#define FXR_AT_DBG_PW_RSP_BUF_DATA1_RESERVED_63_24_SMASK	0xFFFFFFFFFF000000ull
#define FXR_AT_DBG_PW_RSP_BUF_DATA1_ECC_SHIFT			16
#define FXR_AT_DBG_PW_RSP_BUF_DATA1_ECC_MASK			0xFFull
#define FXR_AT_DBG_PW_RSP_BUF_DATA1_ECC_SMASK			0xFF0000ull
#define FXR_AT_DBG_PW_RSP_BUF_DATA1_DATA_SHIFT			0
#define FXR_AT_DBG_PW_RSP_BUF_DATA1_DATA_MASK			0xFFFFull
#define FXR_AT_DBG_PW_RSP_BUF_DATA1_DATA_SMASK			0xFFFFull
/*
* Table #37 of fxr_top - FXR_AT_DBG_LRU2M4K_SETS_ADDR
* This is an AT debug CSR. It allows indirect access to the 2M/4K Page Entry LRU 
* state array. These arrays cannot be written to during normal operation. This 
* register is for debug use only. Note that this register is 80 bits, with 4096 
* entries. The data for the read or write to this register is contained in the 
* next two CSR's
*/
#define FXR_AT_DBG_LRU2M4K_SETS_ADDR				(FXR_AT_CSRS + 0x000000010200)
#define FXR_AT_DBG_LRU2M4K_SETS_ADDR_RESETCSR			0x0020000000000000ull
#define FXR_AT_DBG_LRU2M4K_SETS_ADDR_VALID_SHIFT		63
#define FXR_AT_DBG_LRU2M4K_SETS_ADDR_VALID_MASK			0x1ull
#define FXR_AT_DBG_LRU2M4K_SETS_ADDR_VALID_SMASK		0x8000000000000000ull
#define FXR_AT_DBG_LRU2M4K_SETS_ADDR_WRITE_SHIFT		62
#define FXR_AT_DBG_LRU2M4K_SETS_ADDR_WRITE_MASK			0x1ull
#define FXR_AT_DBG_LRU2M4K_SETS_ADDR_WRITE_SMASK		0x4000000000000000ull
#define FXR_AT_DBG_LRU2M4K_SETS_ADDR_ECC_SHIFT			61
#define FXR_AT_DBG_LRU2M4K_SETS_ADDR_ECC_MASK			0x1ull
#define FXR_AT_DBG_LRU2M4K_SETS_ADDR_ECC_SMASK			0x2000000000000000ull
#define FXR_AT_DBG_LRU2M4K_SETS_ADDR_RESERVED_60_SHIFT		60
#define FXR_AT_DBG_LRU2M4K_SETS_ADDR_RESERVED_60_MASK		0x1ull
#define FXR_AT_DBG_LRU2M4K_SETS_ADDR_RESERVED_60_SMASK		0x1000000000000000ull
#define FXR_AT_DBG_LRU2M4K_SETS_ADDR_PAYLOAD_REGS_SHIFT		52
#define FXR_AT_DBG_LRU2M4K_SETS_ADDR_PAYLOAD_REGS_MASK		0xFFull
#define FXR_AT_DBG_LRU2M4K_SETS_ADDR_PAYLOAD_REGS_SMASK		0xFF0000000000000ull
#define FXR_AT_DBG_LRU2M4K_SETS_ADDR_ADDRESS_SHIFT		0
#define FXR_AT_DBG_LRU2M4K_SETS_ADDR_ADDRESS_MASK		0xFFFFFFFFFFFFFull
#define FXR_AT_DBG_LRU2M4K_SETS_ADDR_ADDRESS_SMASK		0xFFFFFFFFFFFFFull
/*
* Table #38 of fxr_top - FXR_AT_DBG_LRU2M4K_SETS_DATA0
* This is an AT debug CSR. This is the data for bits [63:0] of the 2M/4K Page 
* Entry LRU state being accessed with the AT_DBG_LRU2M4K_SETS_ADDR register. The 
* data from this CSR is written to the 2M/4K Page Entry LRU state array if the 
* write bit is active in that CSR, or this data will contain the read data if 
* the write bit is not active.
*/
#define FXR_AT_DBG_LRU2M4K_SETS_DATA0				(FXR_AT_CSRS + 0x000000010208)
#define FXR_AT_DBG_LRU2M4K_SETS_DATA0_RESETCSR			0x0000000000000000ull
#define FXR_AT_DBG_LRU2M4K_SETS_DATA0_DATA_SHIFT		0
#define FXR_AT_DBG_LRU2M4K_SETS_DATA0_DATA_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_AT_DBG_LRU2M4K_SETS_DATA0_DATA_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #39 of fxr_top - FXR_AT_DBG_LRU2M4K_SETS_DATA1
* This is an AT debug CSR. This is the data for bits [79:64] of the 2M/4K Page 
* Entry LRU state being accessed with the AT_DBG_LRU2M4K_SETS_ADDR register. The 
* data from this CSR is written to the 2M/4K Page Entry LRU state array if the 
* write bit is active in that CSR, or this data will contain the read data if 
* the write bit is not active.
*/
#define FXR_AT_DBG_LRU2M4K_SETS_DATA1				(FXR_AT_CSRS + 0x000000010210)
#define FXR_AT_DBG_LRU2M4K_SETS_DATA1_RESETCSR			0x0000000000000000ull
#define FXR_AT_DBG_LRU2M4K_SETS_DATA1_RESERVED_63_24_SHIFT	24
#define FXR_AT_DBG_LRU2M4K_SETS_DATA1_RESERVED_63_24_MASK	0xFFFFFFFFFFull
#define FXR_AT_DBG_LRU2M4K_SETS_DATA1_RESERVED_63_24_SMASK	0xFFFFFFFFFF000000ull
#define FXR_AT_DBG_LRU2M4K_SETS_DATA1_ECC_SHIFT			16
#define FXR_AT_DBG_LRU2M4K_SETS_DATA1_ECC_MASK			0xFFull
#define FXR_AT_DBG_LRU2M4K_SETS_DATA1_ECC_SMASK			0xFF0000ull
#define FXR_AT_DBG_LRU2M4K_SETS_DATA1_DATA_SHIFT		0
#define FXR_AT_DBG_LRU2M4K_SETS_DATA1_DATA_MASK			0xFFFFull
#define FXR_AT_DBG_LRU2M4K_SETS_DATA1_DATA_SMASK		0xFFFFull
/*
* Table #40 of fxr_top - FXR_AT_DBG_TLB_TAG_ADDR
* This is an AT debug CSR. It allows indirect access to the AT Translation 
* Lookup Buffer(TLB). These arrays cannot be written to during normal operation. 
* This register is for debug use only. TLB Tag entries are 72 bits, with 4096 
* entries per way, with 16 ways. The data for the read or write to this register 
* is contained in the next two CSR's
*/
#define FXR_AT_DBG_TLB_TAG_ADDR					(FXR_AT_CSRS + 0x000000010300)
#define FXR_AT_DBG_TLB_TAG_ADDR_RESETCSR			0x0020000000000000ull
#define FXR_AT_DBG_TLB_TAG_ADDR_VALID_SHIFT			63
#define FXR_AT_DBG_TLB_TAG_ADDR_VALID_MASK			0x1ull
#define FXR_AT_DBG_TLB_TAG_ADDR_VALID_SMASK			0x8000000000000000ull
#define FXR_AT_DBG_TLB_TAG_ADDR_WRITE_SHIFT			62
#define FXR_AT_DBG_TLB_TAG_ADDR_WRITE_MASK			0x1ull
#define FXR_AT_DBG_TLB_TAG_ADDR_WRITE_SMASK			0x4000000000000000ull
#define FXR_AT_DBG_TLB_TAG_ADDR_ECC_SHIFT			61
#define FXR_AT_DBG_TLB_TAG_ADDR_ECC_MASK			0x1ull
#define FXR_AT_DBG_TLB_TAG_ADDR_ECC_SMASK			0x2000000000000000ull
#define FXR_AT_DBG_TLB_TAG_ADDR_RESERVED_60_SHIFT		60
#define FXR_AT_DBG_TLB_TAG_ADDR_RESERVED_60_MASK		0x1ull
#define FXR_AT_DBG_TLB_TAG_ADDR_RESERVED_60_SMASK		0x1000000000000000ull
#define FXR_AT_DBG_TLB_TAG_ADDR_PAYLOAD_REGS_SHIFT		52
#define FXR_AT_DBG_TLB_TAG_ADDR_PAYLOAD_REGS_MASK		0xFFull
#define FXR_AT_DBG_TLB_TAG_ADDR_PAYLOAD_REGS_SMASK		0xFF0000000000000ull
#define FXR_AT_DBG_TLB_TAG_ADDR_WAY_SHIFT			48
#define FXR_AT_DBG_TLB_TAG_ADDR_WAY_MASK			0xFull
#define FXR_AT_DBG_TLB_TAG_ADDR_WAY_SMASK			0xF000000000000ull
#define FXR_AT_DBG_TLB_TAG_ADDR_ADDRESS_SHIFT			0
#define FXR_AT_DBG_TLB_TAG_ADDR_ADDRESS_MASK			0xFFFFFFFFFFFFull
#define FXR_AT_DBG_TLB_TAG_ADDR_ADDRESS_SMASK			0xFFFFFFFFFFFFull
/*
* Table #41 of fxr_top - FXR_AT_DBG_TLB_TAG_DATA0
* This is an AT debug CSR. This is the data for bits [63:0] of the AT Request 
* Buffer being accessed with the AT_DBG_TLB_TAG_ADDR register. The data from 
* this CSR is written to the TLB Tag array if the write bit is active in that 
* CSR, or this data will contain the read data if the write bit is not 
* active.
*/
#define FXR_AT_DBG_TLB_TAG_DATA0				(FXR_AT_CSRS + 0x000000010308)
#define FXR_AT_DBG_TLB_TAG_DATA0_RESETCSR			0x0000000000000000ull
#define FXR_AT_DBG_TLB_TAG_DATA0_DATA_SHIFT			0
#define FXR_AT_DBG_TLB_TAG_DATA0_DATA_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_AT_DBG_TLB_TAG_DATA0_DATA_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #42 of fxr_top - FXR_AT_DBG_TLB_TAG_DATA1
* This is an AT debug CSR. This is the data for bits [79:64] of the AT Request 
* Buffer being accessed with the AT_DBG_TLB_TAG_ADDR register. The data from 
* this CSR is written to the TLB Tag array if the write bit is active in that 
* CSR, or this data will contain the read data if the write bit is not 
* active.
*/
#define FXR_AT_DBG_TLB_TAG_DATA1				(FXR_AT_CSRS + 0x000000010310)
#define FXR_AT_DBG_TLB_TAG_DATA1_RESETCSR			0x0000000000000000ull
#define FXR_AT_DBG_TLB_TAG_DATA1_RESERVED_63_16_SHIFT		16
#define FXR_AT_DBG_TLB_TAG_DATA1_RESERVED_63_16_MASK		0xFFFFFFFFFFFFull
#define FXR_AT_DBG_TLB_TAG_DATA1_RESERVED_63_16_SMASK		0xFFFFFFFFFFFF0000ull
#define FXR_AT_DBG_TLB_TAG_DATA1_ECC_SHIFT			8
#define FXR_AT_DBG_TLB_TAG_DATA1_ECC_MASK			0xFFull
#define FXR_AT_DBG_TLB_TAG_DATA1_ECC_SMASK			0xFF00ull
#define FXR_AT_DBG_TLB_TAG_DATA1_DATA_SHIFT			0
#define FXR_AT_DBG_TLB_TAG_DATA1_DATA_MASK			0xFFull
#define FXR_AT_DBG_TLB_TAG_DATA1_DATA_SMASK			0xFFull
/*
* Table #43 of fxr_top - FXR_AT_DBG_TLB_DATA
* This is an AT debug CSR.It allows access to the TLB Data storage. These arrays 
* cannot be written to during normal operation. This register is for debug use 
* only. TLB Data entries are 64 bits, with 4096 entries per way, with 16 
* ways
*/
#define FXR_AT_DBG_TLB_DATA					(FXR_AT_CSRS + 0x000000080000)
#define FXR_AT_DBG_TLB_DATA_RESETCSR				0x0000000000000000ull
#define FXR_AT_DBG_TLB_DATA_DATA_SHIFT				0
#define FXR_AT_DBG_TLB_DATA_DATA_MASK				0xFFFFFFFFFFFFFFFFull
#define FXR_AT_DBG_TLB_DATA_DATA_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #44 of fxr_top - FXR_AT_DBG_PW_ID_BUF
* This is an AT debug CSR.It allows access to the Address Translation Request 
* Page Walk Transaction ID Buffer. These arrays cannot be written to during 
* normal operation. This register is for debug use only. PageWalk Transaction ID 
* Buffer entries are 8 bits, with 1024 entries.
*/
#define FXR_AT_DBG_PW_ID_BUF					(FXR_AT_CSRS + 0x000000100000)
#define FXR_AT_DBG_PW_ID_BUF_RESETCSR				0x0000000000000000ull
#define FXR_AT_DBG_PW_ID_BUF_RESERVED_63_8_SHIFT		8
#define FXR_AT_DBG_PW_ID_BUF_RESERVED_63_8_MASK			0xFFFFFFFFFFFFFFull
#define FXR_AT_DBG_PW_ID_BUF_RESERVED_63_8_SMASK		0xFFFFFFFFFFFFFF00ull
#define FXR_AT_DBG_PW_ID_BUF_PW_ID_ENTRY_SHIFT			0
#define FXR_AT_DBG_PW_ID_BUF_PW_ID_ENTRY_MASK			0xFFull
#define FXR_AT_DBG_PW_ID_BUF_PW_ID_ENTRY_SMASK			0xFFull
/*
* Table #45 of fxr_top - FXR_AT_DBG_PW_ID_OF_BUF
* This is an AT debug CSR.It allows access to the Address Translation PageWalk 
* Transaction ID Overflow Buffer. These arrays cannot be written to during 
* normal operation. This register is for debug use only.  Page Walk Transaction 
* ID Overflow Buffer entries are 8 bits, with 128 entries.
*/
#define FXR_AT_DBG_PW_ID_OF_BUF					(FXR_AT_CSRS + 0x000000102000)
#define FXR_AT_DBG_PW_ID_OF_BUF_RESETCSR			0x0000000000000000ull
#define FXR_AT_DBG_PW_ID_OF_BUF_RESERVED_63_8_SHIFT		8
#define FXR_AT_DBG_PW_ID_OF_BUF_RESERVED_63_8_MASK		0xFFFFFFFFFFFFFFull
#define FXR_AT_DBG_PW_ID_OF_BUF_RESERVED_63_8_SMASK		0xFFFFFFFFFFFFFF00ull
#define FXR_AT_DBG_PW_ID_OF_BUF_PW_ID_OF_ENTRY_SHIFT		0
#define FXR_AT_DBG_PW_ID_OF_BUF_PW_ID_OF_ENTRY_MASK		0xFFull
#define FXR_AT_DBG_PW_ID_OF_BUF_PW_ID_OF_ENTRY_SMASK		0xFFull
/*
* Table #46 of fxr_top - FXR_AT_DBG_LRU1G_SETS
* This CSR is used to describe the address region that is mapped to the Address 
* Translation Cache 1G page entry LRU state storage RF(Register File) and uses 
* the CSR access path. LRU state entries for 1G pages contain state for 2 of 
* 4096 sets.The 8 bit entry decodes to: Bit7-Bit4=set n+1; Bit3-Bit0=set n. The 
* 4 bit set entry decodes to: Bit3=way id; Bit2=way valid; Bit1= way id; Bit 
* 0=way valid.
*/
#define FXR_AT_DBG_LRU1G_SETS					(FXR_AT_CSRS + 0x000000108000)
#define FXR_AT_DBG_LRU1G_SETS_RESETCSR				0x0000000000000000ull
#define FXR_AT_DBG_LRU1G_SETS_RESERVED_63_8_SHIFT		8
#define FXR_AT_DBG_LRU1G_SETS_RESERVED_63_8_MASK		0xFFFFFFFFFFFFFFull
#define FXR_AT_DBG_LRU1G_SETS_RESERVED_63_8_SMASK		0xFFFFFFFFFFFFFF00ull
#define FXR_AT_DBG_LRU1G_SETS_LRU1G_ENTRY_SHIFT			0
#define FXR_AT_DBG_LRU1G_SETS_LRU1G_ENTRY_MASK			0xFFull
#define FXR_AT_DBG_LRU1G_SETS_LRU1G_ENTRY_SMASK			0xFFull
/*
* Table #47 of fxr_top - FXR_AT_DBG_ERROR_MODES
* This CSR is used to force Page Fault Errors for client(RXHIARB, TXOTR, TXDMA) 
* translation requests. THree modes are available: force all translation 
* requests to generate Page Fault responses, force any translation request with 
* priv_level access requested, to generate a Page Fault Response, or any request 
* that receives a recoverable page fault response, from IOMMU, which would 
* attempt a Page Group Request, generates a Page Fault instead.
*/
#define FXR_AT_DBG_ERROR_MODES					(FXR_AT_CSRS + 0x000000111000)
#define FXR_AT_DBG_ERROR_MODES_RESETCSR				0x0000000000000000ull
#define FXR_AT_DBG_ERROR_MODES_RESERVED_63_3_SHIFT		3
#define FXR_AT_DBG_ERROR_MODES_RESERVED_63_3_MASK		0x1FFFFFFFFFFFFFFFull
#define FXR_AT_DBG_ERROR_MODES_RESERVED_63_3_SMASK		0xFFFFFFFFFFFFFFF8ull
#define FXR_AT_DBG_ERROR_MODES_PGR_REQ_FAULT_EN_SHIFT		2
#define FXR_AT_DBG_ERROR_MODES_PGR_REQ_FAULT_EN_MASK		0x1ull
#define FXR_AT_DBG_ERROR_MODES_PGR_REQ_FAULT_EN_SMASK		0x4ull
#define FXR_AT_DBG_ERROR_MODES_PRIV_LVL_REQ_FAULT_EN_SHIFT	1
#define FXR_AT_DBG_ERROR_MODES_PRIV_LVL_REQ_FAULT_EN_MASK	0x1ull
#define FXR_AT_DBG_ERROR_MODES_PRIV_LVL_REQ_FAULT_EN_SMASK	0x2ull
#define FXR_AT_DBG_ERROR_MODES_ALL_REQ_FAULT_EN_SHIFT		0
#define FXR_AT_DBG_ERROR_MODES_ALL_REQ_FAULT_EN_MASK		0x1ull
#define FXR_AT_DBG_ERROR_MODES_ALL_REQ_FAULT_EN_SMASK		0x1ull

#endif 		/* DEF_FXR_AT_SW_DEF */

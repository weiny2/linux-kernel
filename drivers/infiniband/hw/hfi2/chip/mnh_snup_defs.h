/*
*------------------------------------------------------------------------------
*                                                                              
*  INTEL CONFIDENTIAL                                                          
*                                                                              
*  Copyright 2016 Intel Corporation All Rights Reserved.                 
*                                                                              
*  The source code contained or described herein and all documents related     
*  to the source code ("Material") are owned by Intel Corporation or its    
*  suppliers or licensors. Title to the Material remains with Intel            
*  Corporation or its suppliers and licensors. The Material contains trade     
*  secrets and proprietary and confidential information of Intel or its        
*  suppliers and licensors. The Material is protected by worldwide copyright   
*  and trade secret laws and treaty provisions. No part of the Material may    
*  be used, copied, reproduced, modified, published, uploaded, posted,         
*  transmitted, distributed, or disclosed in any way without Intel's prior     
*  express written permission.                                                 
*                                                                              
*  No license under any patent, copyright, trade secret or other intellectual  
*  property right is granted to or conferred upon you by disclosure or         
*  delivery of the Materials, either expressly, by implication, inducement,    
*  estoppel or otherwise. Any license under such intellectual property rights  
*  must be express and approved by Intel in writing.                           
*                                                                              
*------------------------------------------------------------------------------
*  Auto-generated by /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/i_csrs.pl
*  i_csrs.pl Version 1.5 last modified on Monday 12/19/16 11:42:34
*  /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/i_csrs.pl -C -RVREGS -ST mnh_snup -o /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/fxr Manor_Hill/Product_HAS/Manor Hill/xml/148_Snoop_Up_Registers.xml
*------------------------------------------------------------------------------
*/

#ifndef DEF_MNH_SNUP_SW_DEF
#define DEF_MNH_SNUP_SW_DEF

#ifndef MNH_SNUP_CSRS
#define MNH_SNUP_CSRS								0x000000000000
#endif
#define MNH_SNUP_CSRS_BASE							0
#define MNH_DP_UPSTRM_CFG_OFFSET						0
#define MNH_SNUP_CFG_OFFSET							32
#define MNH_SNUP_DBG_OFFSET							296
#define MNH_SNUP_ERR_FLG_OFFSET							512
#define MNH_SNUP_ERR_INFO_OFFSET						560
#define MNH_SNUP_PRF_OFFSET							1024
#define MNH_SNUP_STS_OFFSET							1056
#define MNH_SERDES_PART_CFG_OFFSET						1152
#define MNH_SERDES_PART_STS_OFFSET						1184
/*
* Table #3 of 148_Snoop_Up_Registers.xml - DP_UPSTRM_CFG_FIFOS_RESET
* Reset the upstream (from the serdes) FIFO read and write pointers.
*/
#define MNH_DP_UPSTRM_CFG_FIFOS_RESET						(MNH_SNUP_CSRS + 0x000000000000)
#define MNH_DP_UPSTRM_CFG_FIFOS_RESET_RESETCSR					0x0000000000000001ull
#define MNH_DP_UPSTRM_CFG_FIFOS_RESET_UNUSED_63_1_SHIFT				1
#define MNH_DP_UPSTRM_CFG_FIFOS_RESET_UNUSED_63_1_MASK				0x7FFFFFFFFFFFFFFFull
#define MNH_DP_UPSTRM_CFG_FIFOS_RESET_UNUSED_63_1_SMASK				0xFFFFFFFFFFFFFFFEull
#define MNH_DP_UPSTRM_CFG_FIFOS_RESET_VAL_SHIFT					0
#define MNH_DP_UPSTRM_CFG_FIFOS_RESET_VAL_MASK					0x1ull
#define MNH_DP_UPSTRM_CFG_FIFOS_RESET_VAL_SMASK					0x1ull
/*
* Table #4 of 148_Snoop_Up_Registers.xml - DP_UPSTRM_CFG_LOOPBACK
* Loopback downstream data at the input to the SerDes over to the upstream FIFO 
* that normally receives data from the SerDes.
*/
#define MNH_DP_UPSTRM_CFG_LOOPBACK						(MNH_SNUP_CSRS + 0x000000000008)
#define MNH_DP_UPSTRM_CFG_LOOPBACK_RESETCSR					0x0000000000000000ull
#define MNH_DP_UPSTRM_CFG_LOOPBACK_UNUSED_63_1_SHIFT				1
#define MNH_DP_UPSTRM_CFG_LOOPBACK_UNUSED_63_1_MASK				0x7FFFFFFFFFFFFFFFull
#define MNH_DP_UPSTRM_CFG_LOOPBACK_UNUSED_63_1_SMASK				0xFFFFFFFFFFFFFFFEull
#define MNH_DP_UPSTRM_CFG_LOOPBACK_VAL_SHIFT					0
#define MNH_DP_UPSTRM_CFG_LOOPBACK_VAL_MASK					0x1ull
#define MNH_DP_UPSTRM_CFG_LOOPBACK_VAL_SMASK					0x1ull
/*
* Table #5 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_CFG_FRAMING_RESET
* Reset the upstream (away from the serdes) snooper.
*/
#define MNH_SNP_UPSTRM_CFG_FRAMING_RESET					(MNH_SNUP_CSRS + 0x000000000020)
#define MNH_SNP_UPSTRM_CFG_FRAMING_RESET_RESETCSR				0x0000000000000001ull
#define MNH_SNP_UPSTRM_CFG_FRAMING_RESET_UNUSED_63_1_SHIFT			1
#define MNH_SNP_UPSTRM_CFG_FRAMING_RESET_UNUSED_63_1_MASK			0x7FFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_CFG_FRAMING_RESET_UNUSED_63_1_SMASK			0xFFFFFFFFFFFFFFFEull
#define MNH_SNP_UPSTRM_CFG_FRAMING_RESET_VAL_SHIFT				0
#define MNH_SNP_UPSTRM_CFG_FRAMING_RESET_VAL_MASK				0x1ull
#define MNH_SNP_UPSTRM_CFG_FRAMING_RESET_VAL_SMASK				0x1ull
/*
* Table #6 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_CFG_FIFOS_RADR
* This register provides the read address reset value for the upstream 
* snooper.
*/
#define MNH_SNP_UPSTRM_CFG_FIFOS_RADR						(MNH_SNUP_CSRS + 0x000000000028)
#define MNH_SNP_UPSTRM_CFG_FIFOS_RADR_RESETCSR					0x0000000000000CBBull
#define MNH_SNP_UPSTRM_CFG_FIFOS_RADR_UNUSED_63_12_SHIFT			12
#define MNH_SNP_UPSTRM_CFG_FIFOS_RADR_UNUSED_63_12_MASK				0xFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_CFG_FIFOS_RADR_UNUSED_63_12_SMASK			0xFFFFFFFFFFFFF000ull
#define MNH_SNP_UPSTRM_CFG_FIFOS_RADR_DO_NOT_JUMP_VAL_SHIFT			8
#define MNH_SNP_UPSTRM_CFG_FIFOS_RADR_DO_NOT_JUMP_VAL_MASK			0xFull
#define MNH_SNP_UPSTRM_CFG_FIFOS_RADR_DO_NOT_JUMP_VAL_SMASK			0xF00ull
#define MNH_SNP_UPSTRM_CFG_FIFOS_RADR_OK_TO_JUMP_VAL_SHIFT			4
#define MNH_SNP_UPSTRM_CFG_FIFOS_RADR_OK_TO_JUMP_VAL_MASK			0xFull
#define MNH_SNP_UPSTRM_CFG_FIFOS_RADR_OK_TO_JUMP_VAL_SMASK			0xF0ull
#define MNH_SNP_UPSTRM_CFG_FIFOS_RADR_RST_VAL_SHIFT				0
#define MNH_SNP_UPSTRM_CFG_FIFOS_RADR_RST_VAL_MASK				0xFull
#define MNH_SNP_UPSTRM_CFG_FIFOS_RADR_RST_VAL_SMASK				0xFull
/*
* Table #7 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_CFG_IGNORE_LOST_RCLK
* This configures the logic to ignore a lost receive clock. Useful only in pre 
* silicon validation.
*/
#define MNH_SNP_UPSTRM_CFG_IGNORE_LOST_RCLK					(MNH_SNUP_CSRS + 0x000000000030)
#define MNH_SNP_UPSTRM_CFG_IGNORE_LOST_RCLK_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_CFG_IGNORE_LOST_RCLK_UNUSED_63_1_SHIFT			1
#define MNH_SNP_UPSTRM_CFG_IGNORE_LOST_RCLK_UNUSED_63_1_MASK			0x7FFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_CFG_IGNORE_LOST_RCLK_UNUSED_63_1_SMASK			0xFFFFFFFFFFFFFFFEull
#define MNH_SNP_UPSTRM_CFG_IGNORE_LOST_RCLK_EN_SHIFT				0
#define MNH_SNP_UPSTRM_CFG_IGNORE_LOST_RCLK_EN_MASK				0x1ull
#define MNH_SNP_UPSTRM_CFG_IGNORE_LOST_RCLK_EN_SMASK				0x1ull
/*
* Table #8 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_CFG_CNT_FOR_SKIP_STALL
* This configures the skip stall counts for various ppm values.
*/
#define MNH_SNP_UPSTRM_CFG_CNT_FOR_SKIP_STALL					(MNH_SNUP_CSRS + 0x000000000050)
#define MNH_SNP_UPSTRM_CFG_CNT_FOR_SKIP_STALL_RESETCSR				0x0000000000001110ull
#define MNH_SNP_UPSTRM_CFG_CNT_FOR_SKIP_STALL_UNUSED_63_13_SHIFT		13
#define MNH_SNP_UPSTRM_CFG_CNT_FOR_SKIP_STALL_UNUSED_63_13_MASK			0x7FFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_CFG_CNT_FOR_SKIP_STALL_UNUSED_63_13_SMASK		0xFFFFFFFFFFFFE000ull
#define MNH_SNP_UPSTRM_CFG_CNT_FOR_SKIP_STALL_DISABLE_INIT_SHIFT		12
#define MNH_SNP_UPSTRM_CFG_CNT_FOR_SKIP_STALL_DISABLE_INIT_MASK			0x1ull
#define MNH_SNP_UPSTRM_CFG_CNT_FOR_SKIP_STALL_DISABLE_INIT_SMASK		0x1000ull
#define MNH_SNP_UPSTRM_CFG_CNT_FOR_SKIP_STALL_UNUSED_11_9_SHIFT			9
#define MNH_SNP_UPSTRM_CFG_CNT_FOR_SKIP_STALL_UNUSED_11_9_MASK			0x7ull
#define MNH_SNP_UPSTRM_CFG_CNT_FOR_SKIP_STALL_UNUSED_11_9_SMASK			0xE00ull
#define MNH_SNP_UPSTRM_CFG_CNT_FOR_SKIP_STALL_DISABLE_RX_SHIFT			8
#define MNH_SNP_UPSTRM_CFG_CNT_FOR_SKIP_STALL_DISABLE_RX_MASK			0x1ull
#define MNH_SNP_UPSTRM_CFG_CNT_FOR_SKIP_STALL_DISABLE_RX_SMASK			0x100ull
#define MNH_SNP_UPSTRM_CFG_CNT_FOR_SKIP_STALL_UNUSED_7_5_SHIFT			5
#define MNH_SNP_UPSTRM_CFG_CNT_FOR_SKIP_STALL_UNUSED_7_5_MASK			0x7ull
#define MNH_SNP_UPSTRM_CFG_CNT_FOR_SKIP_STALL_UNUSED_7_5_SMASK			0xE0ull
#define MNH_SNP_UPSTRM_CFG_CNT_FOR_SKIP_STALL_DISABLE_TX_SHIFT			4
#define MNH_SNP_UPSTRM_CFG_CNT_FOR_SKIP_STALL_DISABLE_TX_MASK			0x1ull
#define MNH_SNP_UPSTRM_CFG_CNT_FOR_SKIP_STALL_DISABLE_TX_SMASK			0x10ull
#define MNH_SNP_UPSTRM_CFG_CNT_FOR_SKIP_STALL_UNUSED_3_2_SHIFT			2
#define MNH_SNP_UPSTRM_CFG_CNT_FOR_SKIP_STALL_UNUSED_3_2_MASK			0x3ull
#define MNH_SNP_UPSTRM_CFG_CNT_FOR_SKIP_STALL_UNUSED_3_2_SMASK			0xCull
#define MNH_SNP_UPSTRM_CFG_CNT_FOR_SKIP_STALL_PPM_SELECT_SHIFT			0
#define MNH_SNP_UPSTRM_CFG_CNT_FOR_SKIP_STALL_PPM_SELECT_MASK			0x3ull
#define MNH_SNP_UPSTRM_CFG_CNT_FOR_SKIP_STALL_PPM_SELECT_SMASK			0x3ull
/*
* Table #9 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_CFG_RX_FSS
* This register enables the Rx side synchronous scrambler.
*/
#define MNH_SNP_UPSTRM_CFG_RX_FSS						(MNH_SNUP_CSRS + 0x000000000058)
#define MNH_SNP_UPSTRM_CFG_RX_FSS_RESETCSR					0x0000000000000001ull
#define MNH_SNP_UPSTRM_CFG_RX_FSS_UNUSED_63_1_SHIFT				1
#define MNH_SNP_UPSTRM_CFG_RX_FSS_UNUSED_63_1_MASK				0x7FFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_CFG_RX_FSS_UNUSED_63_1_SMASK				0xFFFFFFFFFFFFFFFEull
#define MNH_SNP_UPSTRM_CFG_RX_FSS_EN_SHIFT					0
#define MNH_SNP_UPSTRM_CFG_RX_FSS_EN_MASK					0x1ull
#define MNH_SNP_UPSTRM_CFG_RX_FSS_EN_SMASK					0x1ull
/*
* Table #10 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_CFG_CRC_MODE
* This register sets the CRC mode on the Tx side of the link. The Rx side is 
* informed via the initialization training pattern. Different CRC modes can be 
* set for each of the two link directions. There is a fall back capability to 
* use a configuration value on the Rx side instead of the value delivered in the 
* training pattern.
*/
#define MNH_SNP_UPSTRM_CFG_CRC_MODE						(MNH_SNUP_CSRS + 0x000000000060)
#define MNH_SNP_UPSTRM_CFG_CRC_MODE_RESETCSR					0x0000000000000000ull
#define MNH_SNP_UPSTRM_CFG_CRC_MODE_UNUSED_63_13_SHIFT				13
#define MNH_SNP_UPSTRM_CFG_CRC_MODE_UNUSED_63_13_MASK				0x7FFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_CFG_CRC_MODE_UNUSED_63_13_SMASK				0xFFFFFFFFFFFFE000ull
#define MNH_SNP_UPSTRM_CFG_CRC_MODE_DISABLE_CRC_CHK_SHIFT			12
#define MNH_SNP_UPSTRM_CFG_CRC_MODE_DISABLE_CRC_CHK_MASK			0x1ull
#define MNH_SNP_UPSTRM_CFG_CRC_MODE_DISABLE_CRC_CHK_SMASK			0x1000ull
#define MNH_SNP_UPSTRM_CFG_CRC_MODE_UNUSED_11_10_SHIFT				10
#define MNH_SNP_UPSTRM_CFG_CRC_MODE_UNUSED_11_10_MASK				0x3ull
#define MNH_SNP_UPSTRM_CFG_CRC_MODE_UNUSED_11_10_SMASK				0xC00ull
#define MNH_SNP_UPSTRM_CFG_CRC_MODE_RX_VAL_SHIFT				8
#define MNH_SNP_UPSTRM_CFG_CRC_MODE_RX_VAL_MASK					0x3ull
#define MNH_SNP_UPSTRM_CFG_CRC_MODE_RX_VAL_SMASK				0x300ull
#define MNH_SNP_UPSTRM_CFG_CRC_MODE_UNUSED_7_5_SHIFT				5
#define MNH_SNP_UPSTRM_CFG_CRC_MODE_UNUSED_7_5_MASK				0x7ull
#define MNH_SNP_UPSTRM_CFG_CRC_MODE_UNUSED_7_5_SMASK				0xE0ull
#define MNH_SNP_UPSTRM_CFG_CRC_MODE_USE_RX_CFG_VAL_SHIFT			4
#define MNH_SNP_UPSTRM_CFG_CRC_MODE_USE_RX_CFG_VAL_MASK				0x1ull
#define MNH_SNP_UPSTRM_CFG_CRC_MODE_USE_RX_CFG_VAL_SMASK			0x10ull
#define MNH_SNP_UPSTRM_CFG_CRC_MODE_UNUSED_3_2_SHIFT				2
#define MNH_SNP_UPSTRM_CFG_CRC_MODE_UNUSED_3_2_MASK				0x3ull
#define MNH_SNP_UPSTRM_CFG_CRC_MODE_UNUSED_3_2_SMASK				0xCull
#define MNH_SNP_UPSTRM_CFG_CRC_MODE_TX_VAL_SHIFT				0
#define MNH_SNP_UPSTRM_CFG_CRC_MODE_TX_VAL_MASK					0x3ull
#define MNH_SNP_UPSTRM_CFG_CRC_MODE_TX_VAL_SMASK				0x3ull
/*
* Table #11 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_CFG_LN_TEST_TIME_TO_PASS
* This register sets the time for a lane to pass testing after the first lane 
* passes.
*/
#define MNH_SNP_UPSTRM_CFG_LN_TEST_TIME_TO_PASS					(MNH_SNUP_CSRS + 0x000000000068)
#define MNH_SNP_UPSTRM_CFG_LN_TEST_TIME_TO_PASS_RESETCSR			0x0000000000000060ull
#define MNH_SNP_UPSTRM_CFG_LN_TEST_TIME_TO_PASS_UNUSED_63_12_SHIFT		12
#define MNH_SNP_UPSTRM_CFG_LN_TEST_TIME_TO_PASS_UNUSED_63_12_MASK		0xFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_CFG_LN_TEST_TIME_TO_PASS_UNUSED_63_12_SMASK		0xFFFFFFFFFFFFF000ull
#define MNH_SNP_UPSTRM_CFG_LN_TEST_TIME_TO_PASS_VAL_SHIFT			0
#define MNH_SNP_UPSTRM_CFG_LN_TEST_TIME_TO_PASS_VAL_MASK			0xFFFull
#define MNH_SNP_UPSTRM_CFG_LN_TEST_TIME_TO_PASS_VAL_SMASK			0xFFFull
/*
* Table #12 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_CFG_LN_TEST_REQ_PASS_CNT
* This register sets the number of matches (out of a total of 256) required for 
* the lane to pass testing during a reinit sequence.
*/
#define MNH_SNP_UPSTRM_CFG_LN_TEST_REQ_PASS_CNT					(MNH_SNUP_CSRS + 0x000000000070)
#define MNH_SNP_UPSTRM_CFG_LN_TEST_REQ_PASS_CNT_RESETCSR			0x0000000000000015ull
#define MNH_SNP_UPSTRM_CFG_LN_TEST_REQ_PASS_CNT_UNUSED_63_5_SHIFT		5
#define MNH_SNP_UPSTRM_CFG_LN_TEST_REQ_PASS_CNT_UNUSED_63_5_MASK		0x7FFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_CFG_LN_TEST_REQ_PASS_CNT_UNUSED_63_5_SMASK		0xFFFFFFFFFFFFFFE0ull
#define MNH_SNP_UPSTRM_CFG_LN_TEST_REQ_PASS_CNT_DISABLE_REINIT_TEST_SHIFT	4
#define MNH_SNP_UPSTRM_CFG_LN_TEST_REQ_PASS_CNT_DISABLE_REINIT_TEST_MASK	0x1ull
#define MNH_SNP_UPSTRM_CFG_LN_TEST_REQ_PASS_CNT_DISABLE_REINIT_TEST_SMASK	0x10ull
#define MNH_SNP_UPSTRM_CFG_LN_TEST_REQ_PASS_CNT_UNUSED_3_SHIFT			3
#define MNH_SNP_UPSTRM_CFG_LN_TEST_REQ_PASS_CNT_UNUSED_3_MASK			0x1ull
#define MNH_SNP_UPSTRM_CFG_LN_TEST_REQ_PASS_CNT_UNUSED_3_SMASK			0x8ull
#define MNH_SNP_UPSTRM_CFG_LN_TEST_REQ_PASS_CNT_VAL_SHIFT			0
#define MNH_SNP_UPSTRM_CFG_LN_TEST_REQ_PASS_CNT_VAL_MASK			0x7ull
#define MNH_SNP_UPSTRM_CFG_LN_TEST_REQ_PASS_CNT_VAL_SMASK			0x7ull
/*
* Table #13 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_CFG_LN_RE_ENABLE
* This register configures the ability to re-enable a lane during a reinit 
* sequence.
*/
#define MNH_SNP_UPSTRM_CFG_LN_RE_ENABLE						(MNH_SNUP_CSRS + 0x000000000078)
#define MNH_SNP_UPSTRM_CFG_LN_RE_ENABLE_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_CFG_LN_RE_ENABLE_UNUSED_63_3_SHIFT			3
#define MNH_SNP_UPSTRM_CFG_LN_RE_ENABLE_UNUSED_63_3_MASK			0x1FFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_CFG_LN_RE_ENABLE_UNUSED_63_3_SMASK			0xFFFFFFFFFFFFFFF8ull
#define MNH_SNP_UPSTRM_CFG_LN_RE_ENABLE_LTO_DEGRADE_SHIFT			2
#define MNH_SNP_UPSTRM_CFG_LN_RE_ENABLE_LTO_DEGRADE_MASK			0x1ull
#define MNH_SNP_UPSTRM_CFG_LN_RE_ENABLE_LTO_DEGRADE_SMASK			0x4ull
#define MNH_SNP_UPSTRM_CFG_LN_RE_ENABLE_LTO_REINIT_SHIFT			1
#define MNH_SNP_UPSTRM_CFG_LN_RE_ENABLE_LTO_REINIT_MASK				0x1ull
#define MNH_SNP_UPSTRM_CFG_LN_RE_ENABLE_LTO_REINIT_SMASK			0x2ull
#define MNH_SNP_UPSTRM_CFG_LN_RE_ENABLE_ON_REINIT_SHIFT				0
#define MNH_SNP_UPSTRM_CFG_LN_RE_ENABLE_ON_REINIT_MASK				0x1ull
#define MNH_SNP_UPSTRM_CFG_LN_RE_ENABLE_ON_REINIT_SMASK				0x1ull
/*
* Table #14 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_CFG_LN_EN
* This register sets the enable for each physical lane.
*/
#define MNH_SNP_UPSTRM_CFG_LN_EN						(MNH_SNUP_CSRS + 0x000000000080)
#define MNH_SNP_UPSTRM_CFG_LN_EN_RESETCSR					0x000000000000000Full
#define MNH_SNP_UPSTRM_CFG_LN_EN_UNUSED_63_4_SHIFT				4
#define MNH_SNP_UPSTRM_CFG_LN_EN_UNUSED_63_4_MASK				0xFFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_CFG_LN_EN_UNUSED_63_4_SMASK				0xFFFFFFFFFFFFFFF0ull
#define MNH_SNP_UPSTRM_CFG_LN_EN_VAL_SHIFT					0
#define MNH_SNP_UPSTRM_CFG_LN_EN_VAL_MASK					0xFull
#define MNH_SNP_UPSTRM_CFG_LN_EN_VAL_SMASK					0xFull
/*
* Table #15 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_CFG_REINITS_BEFORE_LINK_LOW
* This register sets the number of last ditch reinit attempts before the link 
* goes down. These are triggered when the link times out or a incomplete round 
* trip occurs. The corresponding error flags are set.
*/
#define MNH_SNP_UPSTRM_CFG_REINITS_BEFORE_LINK_LOW				(MNH_SNUP_CSRS + 0x000000000088)
#define MNH_SNP_UPSTRM_CFG_REINITS_BEFORE_LINK_LOW_RESETCSR			0x0000000000000003ull
#define MNH_SNP_UPSTRM_CFG_REINITS_BEFORE_LINK_LOW_UNUSED_63_2_SHIFT		2
#define MNH_SNP_UPSTRM_CFG_REINITS_BEFORE_LINK_LOW_UNUSED_63_2_MASK		0x3FFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_CFG_REINITS_BEFORE_LINK_LOW_UNUSED_63_2_SMASK		0xFFFFFFFFFFFFFFFCull
#define MNH_SNP_UPSTRM_CFG_REINITS_BEFORE_LINK_LOW_VAL_SHIFT			0
#define MNH_SNP_UPSTRM_CFG_REINITS_BEFORE_LINK_LOW_VAL_MASK			0x3ull
#define MNH_SNP_UPSTRM_CFG_REINITS_BEFORE_LINK_LOW_VAL_SMASK			0x3ull
/*
* Table #16 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_CFG_LINK_TIMER_DISABLE
* This register can be used to disable the link transfer timer.
*/
#define MNH_SNP_UPSTRM_CFG_LINK_TIMER_DISABLE					(MNH_SNUP_CSRS + 0x000000000090)
#define MNH_SNP_UPSTRM_CFG_LINK_TIMER_DISABLE_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_CFG_LINK_TIMER_DISABLE_UNUSED_63_1_SHIFT			1
#define MNH_SNP_UPSTRM_CFG_LINK_TIMER_DISABLE_UNUSED_63_1_MASK			0x7FFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_CFG_LINK_TIMER_DISABLE_UNUSED_63_1_SMASK			0xFFFFFFFFFFFFFFFEull
#define MNH_SNP_UPSTRM_CFG_LINK_TIMER_DISABLE_VAL_SHIFT				0
#define MNH_SNP_UPSTRM_CFG_LINK_TIMER_DISABLE_VAL_MASK				0x1ull
#define MNH_SNP_UPSTRM_CFG_LINK_TIMER_DISABLE_VAL_SMASK				0x1ull
/*
* Table #17 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_CFG_LINK_TIMER_MAX
* This register sets the link timer maximum value.
*/
#define MNH_SNP_UPSTRM_CFG_LINK_TIMER_MAX					(MNH_SNUP_CSRS + 0x000000000098)
#define MNH_SNP_UPSTRM_CFG_LINK_TIMER_MAX_RESETCSR				0x00000000000FFFFFull
#define MNH_SNP_UPSTRM_CFG_LINK_TIMER_MAX_UNUSED_63_32_SHIFT			32
#define MNH_SNP_UPSTRM_CFG_LINK_TIMER_MAX_UNUSED_63_32_MASK			0xFFFFFFFFull
#define MNH_SNP_UPSTRM_CFG_LINK_TIMER_MAX_UNUSED_63_32_SMASK			0xFFFFFFFF00000000ull
#define MNH_SNP_UPSTRM_CFG_LINK_TIMER_MAX_VAL_SHIFT				0
#define MNH_SNP_UPSTRM_CFG_LINK_TIMER_MAX_VAL_MASK				0xFFFFFFFFull
#define MNH_SNP_UPSTRM_CFG_LINK_TIMER_MAX_VAL_SMASK				0xFFFFFFFFull
/*
* Table #18 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_CFG_DESKEW
* This register can be used to disable deskew altogether or just the deskew 
* timer.
*/
#define MNH_SNP_UPSTRM_CFG_DESKEW						(MNH_SNUP_CSRS + 0x0000000000A0)
#define MNH_SNP_UPSTRM_CFG_DESKEW_RESETCSR					0x0000000000000000ull
#define MNH_SNP_UPSTRM_CFG_DESKEW_UNUSED_63_5_SHIFT				5
#define MNH_SNP_UPSTRM_CFG_DESKEW_UNUSED_63_5_MASK				0x7FFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_CFG_DESKEW_UNUSED_63_5_SMASK				0xFFFFFFFFFFFFFFE0ull
#define MNH_SNP_UPSTRM_CFG_DESKEW_TIMER_DISABLE_SHIFT				4
#define MNH_SNP_UPSTRM_CFG_DESKEW_TIMER_DISABLE_MASK				0x1ull
#define MNH_SNP_UPSTRM_CFG_DESKEW_TIMER_DISABLE_SMASK				0x10ull
#define MNH_SNP_UPSTRM_CFG_DESKEW_UNUSED_3_1_SHIFT				1
#define MNH_SNP_UPSTRM_CFG_DESKEW_UNUSED_3_1_MASK				0x7ull
#define MNH_SNP_UPSTRM_CFG_DESKEW_UNUSED_3_1_SMASK				0xEull
#define MNH_SNP_UPSTRM_CFG_DESKEW_ALL_DISABLE_SHIFT				0
#define MNH_SNP_UPSTRM_CFG_DESKEW_ALL_DISABLE_MASK				0x1ull
#define MNH_SNP_UPSTRM_CFG_DESKEW_ALL_DISABLE_SMASK				0x1ull
/*
* Table #19 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_CFG_CRC_INTERRUPT
* This register is used to configure which CRC error counter(s) is used to 
* monitor for a potential interrupt condition. The interrupt occurs when the 
* monitored error counter(s) reaches the number of errors in the ERR_CNT 
* field.
*/
#define MNH_SNP_UPSTRM_CFG_CRC_INTERRUPT					(MNH_SNUP_CSRS + 0x0000000000A8)
#define MNH_SNP_UPSTRM_CFG_CRC_INTERRUPT_RESETCSR				0x0000000000000004ull
#define MNH_SNP_UPSTRM_CFG_CRC_INTERRUPT_UNUSED_63_38_SHIFT			38
#define MNH_SNP_UPSTRM_CFG_CRC_INTERRUPT_UNUSED_63_38_MASK			0x3FFFFFFull
#define MNH_SNP_UPSTRM_CFG_CRC_INTERRUPT_UNUSED_63_38_SMASK			0xFFFFFFC000000000ull
#define MNH_SNP_UPSTRM_CFG_CRC_INTERRUPT_MATCH_EN_SHIFT				32
#define MNH_SNP_UPSTRM_CFG_CRC_INTERRUPT_MATCH_EN_MASK				0x3Full
#define MNH_SNP_UPSTRM_CFG_CRC_INTERRUPT_MATCH_EN_SMASK				0x3F00000000ull
#define MNH_SNP_UPSTRM_CFG_CRC_INTERRUPT_ERR_CNT_SHIFT				0
#define MNH_SNP_UPSTRM_CFG_CRC_INTERRUPT_ERR_CNT_MASK				0xFFFFFFFFull
#define MNH_SNP_UPSTRM_CFG_CRC_INTERRUPT_ERR_CNT_SMASK				0xFFFFFFFFull
/*
* Table #20 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_CFG_LANE_WIDTH
* Set the width of the interface to the lanes.
*/
#define MNH_SNP_UPSTRM_CFG_LANE_WIDTH						(MNH_SNUP_CSRS + 0x0000000000B0)
#define MNH_SNP_UPSTRM_CFG_LANE_WIDTH_RESETCSR					0x0000000000000000ull
#define MNH_SNP_UPSTRM_CFG_LANE_WIDTH_UNUSED_63_2_SHIFT				2
#define MNH_SNP_UPSTRM_CFG_LANE_WIDTH_UNUSED_63_2_MASK				0x3FFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_CFG_LANE_WIDTH_UNUSED_63_2_SMASK				0xFFFFFFFFFFFFFFFCull
#define MNH_SNP_UPSTRM_CFG_LANE_WIDTH_VAL_SHIFT					0
#define MNH_SNP_UPSTRM_CFG_LANE_WIDTH_VAL_MASK					0x3ull
#define MNH_SNP_UPSTRM_CFG_LANE_WIDTH_VAL_SMASK					0x3ull
/*
* Table #21 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_CFG_MISC
* This register is used to set miscellaneous configuration setting that are 
* unlikely to be needed. This can serve as a catch all for configuration needs 
* that arise late in the design process without adding a completely new 
* CSR.
*/
#define MNH_SNP_UPSTRM_CFG_MISC							(MNH_SNUP_CSRS + 0x0000000000B8)
#define MNH_SNP_UPSTRM_CFG_MISC_RESETCSR					0x0000000001917000ull
#define MNH_SNP_UPSTRM_CFG_MISC_UNUSED_63_25_SHIFT				25
#define MNH_SNP_UPSTRM_CFG_MISC_UNUSED_63_25_MASK				0x7FFFFFFFFFull
#define MNH_SNP_UPSTRM_CFG_MISC_UNUSED_63_25_SMASK				0xFFFFFFFFFE000000ull
#define MNH_SNP_UPSTRM_CFG_MISC_REQUIRED_STALL_CNT_SHIFT			20
#define MNH_SNP_UPSTRM_CFG_MISC_REQUIRED_STALL_CNT_MASK				0x1Full
#define MNH_SNP_UPSTRM_CFG_MISC_REQUIRED_STALL_CNT_SMASK			0x1F00000ull
#define MNH_SNP_UPSTRM_CFG_MISC_UNUSED_19_17_SHIFT				17
#define MNH_SNP_UPSTRM_CFG_MISC_UNUSED_19_17_MASK				0x7ull
#define MNH_SNP_UPSTRM_CFG_MISC_UNUSED_19_17_SMASK				0xE0000ull
#define MNH_SNP_UPSTRM_CFG_MISC_REQUIRED_TOS_CNT_SHIFT				12
#define MNH_SNP_UPSTRM_CFG_MISC_REQUIRED_TOS_CNT_MASK				0x1Full
#define MNH_SNP_UPSTRM_CFG_MISC_REQUIRED_TOS_CNT_SMASK				0x1F000ull
#define MNH_SNP_UPSTRM_CFG_MISC_UNUSED_11_10_SHIFT				10
#define MNH_SNP_UPSTRM_CFG_MISC_UNUSED_11_10_MASK				0x3ull
#define MNH_SNP_UPSTRM_CFG_MISC_UNUSED_11_10_SMASK				0xC00ull
#define MNH_SNP_UPSTRM_CFG_MISC_RX_CLK_SEL_PRIORITY_SHIFT			8
#define MNH_SNP_UPSTRM_CFG_MISC_RX_CLK_SEL_PRIORITY_MASK			0x3ull
#define MNH_SNP_UPSTRM_CFG_MISC_RX_CLK_SEL_PRIORITY_SMASK			0x300ull
#define MNH_SNP_UPSTRM_CFG_MISC_UNUSED_7_6_SHIFT				6
#define MNH_SNP_UPSTRM_CFG_MISC_UNUSED_7_6_MASK					0x3ull
#define MNH_SNP_UPSTRM_CFG_MISC_UNUSED_7_6_SMASK				0xC0ull
#define MNH_SNP_UPSTRM_CFG_MISC_BCK_CH_SEL_PRIORITY_SHIFT			4
#define MNH_SNP_UPSTRM_CFG_MISC_BCK_CH_SEL_PRIORITY_MASK			0x3ull
#define MNH_SNP_UPSTRM_CFG_MISC_BCK_CH_SEL_PRIORITY_SMASK			0x30ull
#define MNH_SNP_UPSTRM_CFG_MISC_FORCE_LN_EN_SHIFT				0
#define MNH_SNP_UPSTRM_CFG_MISC_FORCE_LN_EN_MASK				0xFull
#define MNH_SNP_UPSTRM_CFG_MISC_FORCE_LN_EN_SMASK				0xFull
/*
* Table #22 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_CFG_CRC_CNTR_RESET
* This register is used to hold and reset the CRC error counters.
*/
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET					(MNH_SNUP_CSRS + 0x0000000000C0)
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_UNUSED_63_17_SHIFT			17
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_UNUSED_63_17_MASK			0x7FFFFFFFFFFFull
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_UNUSED_63_17_SMASK			0xFFFFFFFFFFFE0000ull
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_HOLD_FEC_ERR_CNTRS_SHIFT		16
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_HOLD_FEC_ERR_CNTRS_MASK		0x1ull
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_HOLD_FEC_ERR_CNTRS_SMASK		0x10000ull
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_UNUSED_15_13_SHIFT			13
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_UNUSED_15_13_MASK			0x7ull
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_UNUSED_15_13_SMASK			0xE000ull
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_CLR_FEC_ERR_CNTRS_SHIFT		12
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_CLR_FEC_ERR_CNTRS_MASK		0x1ull
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_CLR_FEC_ERR_CNTRS_SMASK		0x1000ull
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_UNUSED_11_9_SHIFT			9
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_UNUSED_11_9_MASK			0x7ull
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_UNUSED_11_9_SMASK			0xE00ull
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_CLR_SEQ_CRC_ERR_CNTRS_SHIFT		8
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_CLR_SEQ_CRC_ERR_CNTRS_MASK		0x1ull
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_CLR_SEQ_CRC_ERR_CNTRS_SMASK		0x100ull
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_UNUSED_7_5_SHIFT			5
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_UNUSED_7_5_MASK			0x7ull
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_UNUSED_7_5_SMASK			0xE0ull
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_HOLD_CRC_ERR_CNTRS_SHIFT		4
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_HOLD_CRC_ERR_CNTRS_MASK		0x1ull
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_HOLD_CRC_ERR_CNTRS_SMASK		0x10ull
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_UNUSED_3_1_SHIFT			1
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_UNUSED_3_1_MASK			0x7ull
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_UNUSED_3_1_SMASK			0xEull
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_CLR_CRC_ERR_CNTRS_SHIFT		0
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_CLR_CRC_ERR_CNTRS_MASK		0x1ull
#define MNH_SNP_UPSTRM_CFG_CRC_CNTR_RESET_CLR_CRC_ERR_CNTRS_SMASK		0x1ull
/*
* Table #23 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_CFG_RESET_FROM_CSR
* Set this to reset everything in the snoop upstream including this CSR which 
* will cause it to auto clear.
*/
#define MNH_SNP_UPSTRM_CFG_RESET_FROM_CSR					(MNH_SNUP_CSRS + 0x0000000000C8)
#define MNH_SNP_UPSTRM_CFG_RESET_FROM_CSR_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_CFG_RESET_FROM_CSR_UNUSED_63_1_SHIFT			1
#define MNH_SNP_UPSTRM_CFG_RESET_FROM_CSR_UNUSED_63_1_MASK			0x7FFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_CFG_RESET_FROM_CSR_UNUSED_63_1_SMASK			0xFFFFFFFFFFFFFFFEull
#define MNH_SNP_UPSTRM_CFG_RESET_FROM_CSR_EN_SHIFT				0
#define MNH_SNP_UPSTRM_CFG_RESET_FROM_CSR_EN_MASK				0x1ull
#define MNH_SNP_UPSTRM_CFG_RESET_FROM_CSR_EN_SMASK				0x1ull
/*
* Table #24 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_CFG_SNDWN_RESET
* Set this to reset everything in the snoop downstream.
*/
#define MNH_SNP_UPSTRM_CFG_SNDWN_RESET						(MNH_SNUP_CSRS + 0x0000000000D0)
#define MNH_SNP_UPSTRM_CFG_SNDWN_RESET_RESETCSR					0x0000000000000000ull
#define MNH_SNP_UPSTRM_CFG_SNDWN_RESET_UNUSED_63_1_SHIFT			1
#define MNH_SNP_UPSTRM_CFG_SNDWN_RESET_UNUSED_63_1_MASK				0x7FFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_CFG_SNDWN_RESET_UNUSED_63_1_SMASK			0xFFFFFFFFFFFFFFFEull
#define MNH_SNP_UPSTRM_CFG_SNDWN_RESET_EN_SHIFT					0
#define MNH_SNP_UPSTRM_CFG_SNDWN_RESET_EN_MASK					0x1ull
#define MNH_SNP_UPSTRM_CFG_SNDWN_RESET_EN_SMASK					0x1ull
/*
* Table #25 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_CFG_BCC_RESET
* Set this to reset everything in the BCC.
*/
#define MNH_SNP_UPSTRM_CFG_BCC_RESET						(MNH_SNUP_CSRS + 0x0000000000D8)
#define MNH_SNP_UPSTRM_CFG_BCC_RESET_RESETCSR					0x0000000000000000ull
#define MNH_SNP_UPSTRM_CFG_BCC_RESET_UNUSED_63_1_SHIFT				1
#define MNH_SNP_UPSTRM_CFG_BCC_RESET_UNUSED_63_1_MASK				0x7FFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_CFG_BCC_RESET_UNUSED_63_1_SMASK				0xFFFFFFFFFFFFFFFEull
#define MNH_SNP_UPSTRM_CFG_BCC_RESET_EN_SHIFT					0
#define MNH_SNP_UPSTRM_CFG_BCC_RESET_EN_MASK					0x1ull
#define MNH_SNP_UPSTRM_CFG_BCC_RESET_EN_SMASK					0x1ull
/*
* Table #26 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_CFG_8051_RESET
* Set this to reset everything in the 8051.
*/
#define MNH_SNP_UPSTRM_CFG_8051_RESET						(MNH_SNUP_CSRS + 0x0000000000E0)
#define MNH_SNP_UPSTRM_CFG_8051_RESET_RESETCSR					0x0000000000000000ull
#define MNH_SNP_UPSTRM_CFG_8051_RESET_UNUSED_63_1_SHIFT				1
#define MNH_SNP_UPSTRM_CFG_8051_RESET_UNUSED_63_1_MASK				0x7FFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_CFG_8051_RESET_UNUSED_63_1_SMASK				0xFFFFFFFFFFFFFFFEull
#define MNH_SNP_UPSTRM_CFG_8051_RESET_EN_SHIFT					0
#define MNH_SNP_UPSTRM_CFG_8051_RESET_EN_MASK					0x1ull
#define MNH_SNP_UPSTRM_CFG_8051_RESET_EN_SMASK					0x1ull
/*
* Table #27 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_CFG_BCC_MODE
* Configure the snoop upstream support for the BCC to use the Tx and Rx FIFOs 
* and the Tx and Rx gated clocks.
*/
#define MNH_SNP_UPSTRM_CFG_BCC_MODE						(MNH_SNUP_CSRS + 0x0000000000E8)
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_RESETCSR					0x0000000000004000ull
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_UNUSED_63_21_SHIFT				21
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_UNUSED_63_21_MASK				0x7FFFFFFFFFFull
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_UNUSED_63_21_SMASK				0xFFFFFFFFFFE00000ull
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_DISABLE_RX_CLK_SHIFT			20
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_DISABLE_RX_CLK_MASK				0x1ull
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_DISABLE_RX_CLK_SMASK			0x100000ull
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_UNUSED_19_17_SHIFT				17
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_UNUSED_19_17_MASK				0x7ull
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_UNUSED_19_17_SMASK				0xE0000ull
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_DISABLE_TX_CLK_SHIFT			16
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_DISABLE_TX_CLK_MASK				0x1ull
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_DISABLE_TX_CLK_SMASK			0x10000ull
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_UNUSED_15_SHIFT				15
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_UNUSED_15_MASK				0x1ull
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_UNUSED_15_SMASK				0x8000ull
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_TX_FIFOS_RADR_SHIFT				12
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_TX_FIFOS_RADR_MASK				0x7ull
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_TX_FIFOS_RADR_SMASK				0x7000ull
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_UNUSED_11_9_SHIFT				9
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_UNUSED_11_9_MASK				0x7ull
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_UNUSED_11_9_SMASK				0xE00ull
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_RESET_RX_SHIFT				8
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_RESET_RX_MASK				0x1ull
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_RESET_RX_SMASK				0x100ull
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_UNUSED_7_5_SHIFT				5
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_UNUSED_7_5_MASK				0x7ull
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_UNUSED_7_5_SMASK				0xE0ull
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_RESET_TX_SHIFT				4
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_RESET_TX_MASK				0x1ull
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_RESET_TX_SMASK				0x10ull
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_UNUSED_3_1_SHIFT				1
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_UNUSED_3_1_MASK				0x7ull
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_UNUSED_3_1_SMASK				0xEull
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_VAL_SHIFT					0
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_VAL_MASK					0x1ull
#define MNH_SNP_UPSTRM_CFG_BCC_MODE_VAL_SMASK					0x1ull
/*
* Table #28 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_CFG_REPLAY_PROTOCOL
* This register is used to select the Gen1 vs. Gen2 replay protocol.
*/
#define MNH_SNP_UPSTRM_CFG_REPLAY_PROTOCOL					(MNH_SNUP_CSRS + 0x0000000000F0)
#define MNH_SNP_UPSTRM_CFG_REPLAY_PROTOCOL_RESETCSR				0x0000000000000041ull
#define MNH_SNP_UPSTRM_CFG_REPLAY_PROTOCOL_UNUSED_63_7_SHIFT			7
#define MNH_SNP_UPSTRM_CFG_REPLAY_PROTOCOL_UNUSED_63_7_MASK			0x1FFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_CFG_REPLAY_PROTOCOL_UNUSED_63_7_SMASK			0xFFFFFFFFFFFFFF80ull
#define MNH_SNP_UPSTRM_CFG_REPLAY_PROTOCOL_REINIT_NULL_CNT_MAX_SHIFT		4
#define MNH_SNP_UPSTRM_CFG_REPLAY_PROTOCOL_REINIT_NULL_CNT_MAX_MASK		0x7ull
#define MNH_SNP_UPSTRM_CFG_REPLAY_PROTOCOL_REINIT_NULL_CNT_MAX_SMASK		0x70ull
#define MNH_SNP_UPSTRM_CFG_REPLAY_PROTOCOL_UNUSED_3_1_SHIFT			1
#define MNH_SNP_UPSTRM_CFG_REPLAY_PROTOCOL_UNUSED_3_1_MASK			0x7ull
#define MNH_SNP_UPSTRM_CFG_REPLAY_PROTOCOL_UNUSED_3_1_SMASK			0xEull
#define MNH_SNP_UPSTRM_CFG_REPLAY_PROTOCOL_GEN2_SHIFT				0
#define MNH_SNP_UPSTRM_CFG_REPLAY_PROTOCOL_GEN2_MASK				0x1ull
#define MNH_SNP_UPSTRM_CFG_REPLAY_PROTOCOL_GEN2_SMASK				0x1ull
/*
* Table #29 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_CFG_FEC_MODE
* This register sets the forward error correction (FEC) mode on the Tx side of 
* the link. The Rx side is informed via the initialization training pattern. 
* Different FEC modes can be set for each of the two link directions. There is a 
* fall back capability to use a configuration value on the Rx side instead of 
* the value delivered in the training pattern.
*/
#define MNH_SNP_UPSTRM_CFG_FEC_MODE						(MNH_SNUP_CSRS + 0x0000000000F8)
#define MNH_SNP_UPSTRM_CFG_FEC_MODE_RESETCSR					0x0000000000000000ull
#define MNH_SNP_UPSTRM_CFG_FEC_MODE_UNUSED_63_13_SHIFT				13
#define MNH_SNP_UPSTRM_CFG_FEC_MODE_UNUSED_63_13_MASK				0x7FFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_CFG_FEC_MODE_UNUSED_63_13_SMASK				0xFFFFFFFFFFFFE000ull
#define MNH_SNP_UPSTRM_CFG_FEC_MODE_DISABLE_DEC_ERR_SHIFT			12
#define MNH_SNP_UPSTRM_CFG_FEC_MODE_DISABLE_DEC_ERR_MASK			0x1ull
#define MNH_SNP_UPSTRM_CFG_FEC_MODE_DISABLE_DEC_ERR_SMASK			0x1000ull
#define MNH_SNP_UPSTRM_CFG_FEC_MODE_UNUSED_11_10_SHIFT				10
#define MNH_SNP_UPSTRM_CFG_FEC_MODE_UNUSED_11_10_MASK				0x3ull
#define MNH_SNP_UPSTRM_CFG_FEC_MODE_UNUSED_11_10_SMASK				0xC00ull
#define MNH_SNP_UPSTRM_CFG_FEC_MODE_RX_VAL_SHIFT				8
#define MNH_SNP_UPSTRM_CFG_FEC_MODE_RX_VAL_MASK					0x3ull
#define MNH_SNP_UPSTRM_CFG_FEC_MODE_RX_VAL_SMASK				0x300ull
#define MNH_SNP_UPSTRM_CFG_FEC_MODE_UNUSED_7_5_SHIFT				5
#define MNH_SNP_UPSTRM_CFG_FEC_MODE_UNUSED_7_5_MASK				0x7ull
#define MNH_SNP_UPSTRM_CFG_FEC_MODE_UNUSED_7_5_SMASK				0xE0ull
#define MNH_SNP_UPSTRM_CFG_FEC_MODE_USE_RX_CFG_VAL_SHIFT			4
#define MNH_SNP_UPSTRM_CFG_FEC_MODE_USE_RX_CFG_VAL_MASK				0x1ull
#define MNH_SNP_UPSTRM_CFG_FEC_MODE_USE_RX_CFG_VAL_SMASK			0x10ull
#define MNH_SNP_UPSTRM_CFG_FEC_MODE_UNUSED_3_2_SHIFT				2
#define MNH_SNP_UPSTRM_CFG_FEC_MODE_UNUSED_3_2_MASK				0x3ull
#define MNH_SNP_UPSTRM_CFG_FEC_MODE_UNUSED_3_2_SMASK				0xCull
#define MNH_SNP_UPSTRM_CFG_FEC_MODE_TX_VAL_SHIFT				0
#define MNH_SNP_UPSTRM_CFG_FEC_MODE_TX_VAL_MASK					0x3ull
#define MNH_SNP_UPSTRM_CFG_FEC_MODE_TX_VAL_SMASK				0x3ull
/*
* Table #30 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_CFG_CLK_DURING_RESET
* This register allows the selection of cclk/2 instead of cclk for the clocking 
* of the logic in the serdes_dwnstrm/upstrm_clk domains during 
* reset/loopback/dfx_mode, for timing purposes.
*/
#define MNH_SNP_UPSTRM_CFG_CLK_DURING_RESET					(MNH_SNUP_CSRS + 0x000000000100)
#define MNH_SNP_UPSTRM_CFG_CLK_DURING_RESET_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_CFG_CLK_DURING_RESET_UNUSED_63_1_SHIFT			1
#define MNH_SNP_UPSTRM_CFG_CLK_DURING_RESET_UNUSED_63_1_MASK			0x7FFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_CFG_CLK_DURING_RESET_UNUSED_63_1_SMASK			0xFFFFFFFFFFFFFFFEull
#define MNH_SNP_UPSTRM_CFG_CLK_DURING_RESET_VAL_SHIFT				0
#define MNH_SNP_UPSTRM_CFG_CLK_DURING_RESET_VAL_MASK				0x1ull
#define MNH_SNP_UPSTRM_CFG_CLK_DURING_RESET_VAL_SMASK				0x1ull
/*
* Table #31 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_CFG_FEC_INTERRUPT
* This register is used to configure which FEC error counter(s) is used to 
* monitor for a potential interrupt condition. The interrupt occurs when the 
* monitored error counter(s) reaches the number of errors in the ERR_CNT 
* field.
*/
#define MNH_SNP_UPSTRM_CFG_FEC_INTERRUPT					(MNH_SNUP_CSRS + 0x000000000108)
#define MNH_SNP_UPSTRM_CFG_FEC_INTERRUPT_RESETCSR				0x0000000000000064ull
#define MNH_SNP_UPSTRM_CFG_FEC_INTERRUPT_UNUSED_63_62_SHIFT			62
#define MNH_SNP_UPSTRM_CFG_FEC_INTERRUPT_UNUSED_63_62_MASK			0x3ull
#define MNH_SNP_UPSTRM_CFG_FEC_INTERRUPT_UNUSED_63_62_SMASK			0xC000000000000000ull
#define MNH_SNP_UPSTRM_CFG_FEC_INTERRUPT_MATCH_EN_SHIFT				48
#define MNH_SNP_UPSTRM_CFG_FEC_INTERRUPT_MATCH_EN_MASK				0x3FFFull
#define MNH_SNP_UPSTRM_CFG_FEC_INTERRUPT_MATCH_EN_SMASK				0x3FFF000000000000ull
#define MNH_SNP_UPSTRM_CFG_FEC_INTERRUPT_ERR_CNT_SHIFT				0
#define MNH_SNP_UPSTRM_CFG_FEC_INTERRUPT_ERR_CNT_MASK				0xFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_CFG_FEC_INTERRUPT_ERR_CNT_SMASK				0xFFFFFFFFFFFFull
/*
* Table #32 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_CFG_LINK_PARTNER_GEN
* This register is used to select whether the link partner is Gen1 vs 
* Gen2.
*/
#define MNH_SNP_UPSTRM_CFG_LINK_PARTNER_GEN					(MNH_SNUP_CSRS + 0x000000000110)
#define MNH_SNP_UPSTRM_CFG_LINK_PARTNER_GEN_RESETCSR				0x0000000000001111ull
#define MNH_SNP_UPSTRM_CFG_LINK_PARTNER_GEN_UNUSED_63_13_SHIFT			13
#define MNH_SNP_UPSTRM_CFG_LINK_PARTNER_GEN_UNUSED_63_13_MASK			0x7FFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_CFG_LINK_PARTNER_GEN_UNUSED_63_13_SMASK			0xFFFFFFFFFFFFE000ull
#define MNH_SNP_UPSTRM_CFG_LINK_PARTNER_GEN_PQRS_SHIFT				12
#define MNH_SNP_UPSTRM_CFG_LINK_PARTNER_GEN_PQRS_MASK				0x1ull
#define MNH_SNP_UPSTRM_CFG_LINK_PARTNER_GEN_PQRS_SMASK				0x1000ull
#define MNH_SNP_UPSTRM_CFG_LINK_PARTNER_GEN_UNUSED_11_9_SHIFT			9
#define MNH_SNP_UPSTRM_CFG_LINK_PARTNER_GEN_UNUSED_11_9_MASK			0x7ull
#define MNH_SNP_UPSTRM_CFG_LINK_PARTNER_GEN_UNUSED_11_9_SMASK			0xE00ull
#define MNH_SNP_UPSTRM_CFG_LINK_PARTNER_GEN_PAT2_SHIFT				8
#define MNH_SNP_UPSTRM_CFG_LINK_PARTNER_GEN_PAT2_MASK				0x1ull
#define MNH_SNP_UPSTRM_CFG_LINK_PARTNER_GEN_PAT2_SMASK				0x100ull
#define MNH_SNP_UPSTRM_CFG_LINK_PARTNER_GEN_UNUSED_7_5_SHIFT			5
#define MNH_SNP_UPSTRM_CFG_LINK_PARTNER_GEN_UNUSED_7_5_MASK			0x7ull
#define MNH_SNP_UPSTRM_CFG_LINK_PARTNER_GEN_UNUSED_7_5_SMASK			0xE0ull
#define MNH_SNP_UPSTRM_CFG_LINK_PARTNER_GEN_SCR_SHIFT				4
#define MNH_SNP_UPSTRM_CFG_LINK_PARTNER_GEN_SCR_MASK				0x1ull
#define MNH_SNP_UPSTRM_CFG_LINK_PARTNER_GEN_SCR_SMASK				0x10ull
#define MNH_SNP_UPSTRM_CFG_LINK_PARTNER_GEN_UNUSED_3_1_SHIFT			1
#define MNH_SNP_UPSTRM_CFG_LINK_PARTNER_GEN_UNUSED_3_1_MASK			0x7ull
#define MNH_SNP_UPSTRM_CFG_LINK_PARTNER_GEN_UNUSED_3_1_SMASK			0xEull
#define MNH_SNP_UPSTRM_CFG_LINK_PARTNER_GEN_GEN2_SHIFT				0
#define MNH_SNP_UPSTRM_CFG_LINK_PARTNER_GEN_GEN2_MASK				0x1ull
#define MNH_SNP_UPSTRM_CFG_LINK_PARTNER_GEN_GEN2_SMASK				0x1ull
/*
* Table #33 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_CFG_LM_MUXSEL
* Logic monitor mux select for.
*/
#define MNH_SNP_UPSTRM_CFG_LM_MUXSEL						(MNH_SNUP_CSRS + 0x000000000118)
#define MNH_SNP_UPSTRM_CFG_LM_MUXSEL_RESETCSR					0x0000000000000000ull
#define MNH_SNP_UPSTRM_CFG_LM_MUXSEL_UNUSED_63_23_SHIFT				23
#define MNH_SNP_UPSTRM_CFG_LM_MUXSEL_UNUSED_63_23_MASK				0x1FFFFFFFFFFull
#define MNH_SNP_UPSTRM_CFG_LM_MUXSEL_UNUSED_63_23_SMASK				0xFFFFFFFFFF800000ull
#define MNH_SNP_UPSTRM_CFG_LM_MUXSEL_CRK8051_SELECT1_SHIFT			20
#define MNH_SNP_UPSTRM_CFG_LM_MUXSEL_CRK8051_SELECT1_MASK			0x7ull
#define MNH_SNP_UPSTRM_CFG_LM_MUXSEL_CRK8051_SELECT1_SMASK			0x700000ull
#define MNH_SNP_UPSTRM_CFG_LM_MUXSEL_CRK8051_SELECT0_SHIFT			17
#define MNH_SNP_UPSTRM_CFG_LM_MUXSEL_CRK8051_SELECT0_MASK			0x7ull
#define MNH_SNP_UPSTRM_CFG_LM_MUXSEL_CRK8051_SELECT0_SMASK			0xE0000ull
#define MNH_SNP_UPSTRM_CFG_LM_MUXSEL_BCC_INST_SELECT1_SHIFT			15
#define MNH_SNP_UPSTRM_CFG_LM_MUXSEL_BCC_INST_SELECT1_MASK			0x3ull
#define MNH_SNP_UPSTRM_CFG_LM_MUXSEL_BCC_INST_SELECT1_SMASK			0x18000ull
#define MNH_SNP_UPSTRM_CFG_LM_MUXSEL_BCC_SELECT1_SHIFT				12
#define MNH_SNP_UPSTRM_CFG_LM_MUXSEL_BCC_SELECT1_MASK				0x7ull
#define MNH_SNP_UPSTRM_CFG_LM_MUXSEL_BCC_SELECT1_SMASK				0x7000ull
#define MNH_SNP_UPSTRM_CFG_LM_MUXSEL_BCC_INST_SELECT0_SHIFT			10
#define MNH_SNP_UPSTRM_CFG_LM_MUXSEL_BCC_INST_SELECT0_MASK			0x3ull
#define MNH_SNP_UPSTRM_CFG_LM_MUXSEL_BCC_INST_SELECT0_SMASK			0xC00ull
#define MNH_SNP_UPSTRM_CFG_LM_MUXSEL_BCC_SELECT0_SHIFT				7
#define MNH_SNP_UPSTRM_CFG_LM_MUXSEL_BCC_SELECT0_MASK				0x7ull
#define MNH_SNP_UPSTRM_CFG_LM_MUXSEL_BCC_SELECT0_SMASK				0x380ull
#define MNH_SNP_UPSTRM_CFG_LM_MUXSEL_BLK_SELECT_SHIFT				4
#define MNH_SNP_UPSTRM_CFG_LM_MUXSEL_BLK_SELECT_MASK				0x7ull
#define MNH_SNP_UPSTRM_CFG_LM_MUXSEL_BLK_SELECT_SMASK				0x70ull
#define MNH_SNP_UPSTRM_CFG_LM_MUXSEL_SNPUP_SELECT_SHIFT				0
#define MNH_SNP_UPSTRM_CFG_LM_MUXSEL_SNPUP_SELECT_MASK				0xFull
#define MNH_SNP_UPSTRM_CFG_LM_MUXSEL_SNPUP_SELECT_SMASK				0xFull
/*
* Table #34 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_CFG_MISCA
* This register is used to set miscellaneous configuration setting that are 
* unlikely to be needed. This can serve as a catch all for configuration needs 
* that arise late in the design process without adding a completely new 
* CSR.
*/
#define MNH_SNP_UPSTRM_CFG_MISCA						(MNH_SNUP_CSRS + 0x000000000120)
#define MNH_SNP_UPSTRM_CFG_MISCA_RESETCSR					0x00000001050A0008ull
#define MNH_SNP_UPSTRM_CFG_MISCA_UNUSED_63_33_SHIFT				33
#define MNH_SNP_UPSTRM_CFG_MISCA_UNUSED_63_33_MASK				0x7FFFFFFFull
#define MNH_SNP_UPSTRM_CFG_MISCA_UNUSED_63_33_SMASK				0xFFFFFFFE00000000ull
#define MNH_SNP_UPSTRM_CFG_MISCA_LENIENT_FRAMING_SHIFT				32
#define MNH_SNP_UPSTRM_CFG_MISCA_LENIENT_FRAMING_MASK				0x1ull
#define MNH_SNP_UPSTRM_CFG_MISCA_LENIENT_FRAMING_SMASK				0x100000000ull
#define MNH_SNP_UPSTRM_CFG_MISCA_UNUSED_31_29_SHIFT				29
#define MNH_SNP_UPSTRM_CFG_MISCA_UNUSED_31_29_MASK				0x7ull
#define MNH_SNP_UPSTRM_CFG_MISCA_UNUSED_31_29_SMASK				0xE0000000ull
#define MNH_SNP_UPSTRM_CFG_MISCA_LANE_ID_DET_GEN2_SHIFT				24
#define MNH_SNP_UPSTRM_CFG_MISCA_LANE_ID_DET_GEN2_MASK				0x1Full
#define MNH_SNP_UPSTRM_CFG_MISCA_LANE_ID_DET_GEN2_SMASK				0x1F000000ull
#define MNH_SNP_UPSTRM_CFG_MISCA_UNUSED_23_21_SHIFT				21
#define MNH_SNP_UPSTRM_CFG_MISCA_UNUSED_23_21_MASK				0x7ull
#define MNH_SNP_UPSTRM_CFG_MISCA_UNUSED_23_21_SMASK				0xE00000ull
#define MNH_SNP_UPSTRM_CFG_MISCA_LANE_ID_DET_GEN1_SHIFT				16
#define MNH_SNP_UPSTRM_CFG_MISCA_LANE_ID_DET_GEN1_MASK				0x1Full
#define MNH_SNP_UPSTRM_CFG_MISCA_LANE_ID_DET_GEN1_SMASK				0x1F0000ull
#define MNH_SNP_UPSTRM_CFG_MISCA_UNUSED_15_6_SHIFT				6
#define MNH_SNP_UPSTRM_CFG_MISCA_UNUSED_15_6_MASK				0x3FFull
#define MNH_SNP_UPSTRM_CFG_MISCA_UNUSED_15_6_SMASK				0xFFC0ull
#define MNH_SNP_UPSTRM_CFG_MISCA_REQUIRED_MODE_CNT_SHIFT			0
#define MNH_SNP_UPSTRM_CFG_MISCA_REQUIRED_MODE_CNT_MASK				0x3Full
#define MNH_SNP_UPSTRM_CFG_MISCA_REQUIRED_MODE_CNT_SMASK			0x3Full
/*
* Table #35 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_DBG_INIT_STATE_0
* This register is used to report various initialization status 
* indications.
*/
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0						(MNH_SNUP_CSRS + 0x000000000128)
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_UNUSED_63_52_SHIFT			52
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_UNUSED_63_52_MASK			0xFFFull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_UNUSED_63_52_SMASK			0xFFF0000000000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_UNUSED_51_SHIFT				51
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_UNUSED_51_MASK				0x1ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_UNUSED_51_SMASK				0x8000000000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_CORSE_ALIGN_PTR3_SHIFT			48
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_CORSE_ALIGN_PTR3_MASK			0x7ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_CORSE_ALIGN_PTR3_SMASK			0x7000000000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_UNUSED_47_46_SHIFT			46
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_UNUSED_47_46_MASK			0x3ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_UNUSED_47_46_SMASK			0xC00000000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_FINE_ALIGN_PTR3_SHIFT			44
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_FINE_ALIGN_PTR3_MASK			0x3ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_FINE_ALIGN_PTR3_SMASK			0x300000000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_UNUSED_43_SHIFT				43
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_UNUSED_43_MASK				0x1ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_UNUSED_43_SMASK				0x80000000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_CORSE_ALIGN_PTR2_SHIFT			40
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_CORSE_ALIGN_PTR2_MASK			0x7ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_CORSE_ALIGN_PTR2_SMASK			0x70000000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_UNUSED_39_38_SHIFT			38
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_UNUSED_39_38_MASK			0x3ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_UNUSED_39_38_SMASK			0xC000000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_FINE_ALIGN_PTR2_SHIFT			36
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_FINE_ALIGN_PTR2_MASK			0x3ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_FINE_ALIGN_PTR2_SMASK			0x3000000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_UNUSED_35_SHIFT				35
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_UNUSED_35_MASK				0x1ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_UNUSED_35_SMASK				0x800000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_CORSE_ALIGN_PTR1_SHIFT			32
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_CORSE_ALIGN_PTR1_MASK			0x7ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_CORSE_ALIGN_PTR1_SMASK			0x700000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_UNUSED_31_30_SHIFT			30
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_UNUSED_31_30_MASK			0x3ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_UNUSED_31_30_SMASK			0xC0000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_FINE_ALIGN_PTR1_SHIFT			28
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_FINE_ALIGN_PTR1_MASK			0x3ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_FINE_ALIGN_PTR1_SMASK			0x30000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_UNUSED_27_SHIFT				27
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_UNUSED_27_MASK				0x1ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_UNUSED_27_SMASK				0x8000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_CORSE_ALIGN_PTR0_SHIFT			24
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_CORSE_ALIGN_PTR0_MASK			0x7ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_CORSE_ALIGN_PTR0_SMASK			0x7000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_UNUSED_23_22_SHIFT			22
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_UNUSED_23_22_MASK			0x3ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_UNUSED_23_22_SMASK			0xC00000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_FINE_ALIGN_PTR0_SHIFT			20
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_FINE_ALIGN_PTR0_MASK			0x3ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_FINE_ALIGN_PTR0_SMASK			0x300000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_FRAMING1_COMPLETE_SHIFT			16
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_FRAMING1_COMPLETE_MASK			0xFull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_FRAMING1_COMPLETE_SMASK			0xF0000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_LOGICAL_ID_COMPLETE_SHIFT		12
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_LOGICAL_ID_COMPLETE_MASK		0xFull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_LOGICAL_ID_COMPLETE_SMASK		0xF000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_POLARITY_SHIFT				8
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_POLARITY_MASK				0xFull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_POLARITY_SMASK				0xF00ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_POLARITY_COMPLETE_SHIFT			4
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_POLARITY_COMPLETE_MASK			0xFull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_POLARITY_COMPLETE_SMASK			0xF0ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_ALIGN_COMPLETE_SHIFT			0
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_ALIGN_COMPLETE_MASK			0xFull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_0_ALIGN_COMPLETE_SMASK			0xFull
/*
* Table #36 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_DBG_INIT_STATE_1
* This register is used to report various initialization status 
* indications.
*/
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1						(MNH_SNUP_CSRS + 0x000000000130)
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_UNUSED_63_57_SHIFT			57
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_UNUSED_63_57_MASK			0x7Full
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_UNUSED_63_57_SMASK			0xFE00000000000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_LN_TEST_TIMER_COMPLETE_SHIFT		56
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_LN_TEST_TIMER_COMPLETE_MASK		0x1ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_LN_TEST_TIMER_COMPLETE_SMASK		0x100000000000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_LN_PASSED_TESTING_SHIFT			52
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_LN_PASSED_TESTING_MASK			0xFull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_LN_PASSED_TESTING_SMASK			0xF0000000000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_UNUSED_51_49_SHIFT			49
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_UNUSED_51_49_MASK			0x7ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_UNUSED_51_49_SMASK			0xE000000000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_PASS_CNT_LN3_SHIFT			40
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_PASS_CNT_LN3_MASK			0x1FFull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_PASS_CNT_LN3_SMASK			0x1FF0000000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_UNUSED_39_37_SHIFT			37
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_UNUSED_39_37_MASK			0x7ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_UNUSED_39_37_SMASK			0xE000000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_PASS_CNT_LN2_SHIFT			28
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_PASS_CNT_LN2_MASK			0x1FFull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_PASS_CNT_LN2_SMASK			0x1FF0000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_UNUSED_27_25_SHIFT			25
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_UNUSED_27_25_MASK			0x7ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_UNUSED_27_25_SMASK			0xE000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_PASS_CNT_LN1_SHIFT			16
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_PASS_CNT_LN1_MASK			0x1FFull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_PASS_CNT_LN1_SMASK			0x1FF0000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_UNUSED_15_13_SHIFT			13
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_UNUSED_15_13_MASK			0x7ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_UNUSED_15_13_SMASK			0xE000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_PASS_CNT_LN0_SHIFT			4
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_PASS_CNT_LN0_MASK			0x1FFull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_PASS_CNT_LN0_SMASK			0x1FF0ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_LN_TESTING_COMPLETE_SHIFT		0
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_LN_TESTING_COMPLETE_MASK		0xFull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_1_LN_TESTING_COMPLETE_SMASK		0xFull
/*
* Table #37 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_DBG_INIT_STATE_2
* This register is used to report various initialization status 
* indications.
*/
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2						(MNH_SNUP_CSRS + 0x000000000138)
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_UNUSED_63_60_SHIFT			60
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_UNUSED_63_60_MASK			0xFull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_UNUSED_63_60_SMASK			0xF000000000000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_PHASE_ALIGN_COMPL_SHIFT			56
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_PHASE_ALIGN_COMPL_MASK			0xFull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_PHASE_ALIGN_COMPL_SMASK			0xF00000000000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_PHASE_ALIGNED_SHIFT			52
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_PHASE_ALIGNED_MASK			0xFull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_PHASE_ALIGNED_SMASK			0xF0000000000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_UNUSED_51_49_SHIFT			49
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_UNUSED_51_49_MASK			0x7ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_UNUSED_51_49_SMASK			0xE000000000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_TX_TON_SIG_SHIFT			48
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_TX_TON_SIG_MASK				0x1ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_TX_TON_SIG_SMASK			0x1000000000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_UNUSED_47_45_SHIFT			45
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_UNUSED_47_45_MASK			0x7ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_UNUSED_47_45_SMASK			0xE00000000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_PEER_LN_EN_DETECTED_SHIFT		44
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_PEER_LN_EN_DETECTED_MASK		0x1ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_PEER_LN_EN_DETECTED_SMASK		0x100000000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_UNUSED_43_42_SHIFT			42
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_UNUSED_43_42_MASK			0x3ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_UNUSED_43_42_SMASK			0xC0000000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_RCLK_SAMPLING_LN_SHIFT			40
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_RCLK_SAMPLING_LN_MASK			0x3ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_RCLK_SAMPLING_LN_SMASK			0x30000000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_UNUSED_39_38_SHIFT			38
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_UNUSED_39_38_MASK			0x3ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_UNUSED_39_38_SMASK			0xC000000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_BACK_CHAN_REPORTING_LN_SHIFT		36
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_BACK_CHAN_REPORTING_LN_MASK		0x3ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_BACK_CHAN_REPORTING_LN_SMASK		0x3000000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_RADR_SKIP4DESKEW_CNT_LN3_SHIFT		32
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_RADR_SKIP4DESKEW_CNT_LN3_MASK		0xFull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_RADR_SKIP4DESKEW_CNT_LN3_SMASK		0xF00000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_RADR_SKIP4DESKEW_CNT_LN2_SHIFT		28
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_RADR_SKIP4DESKEW_CNT_LN2_MASK		0xFull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_RADR_SKIP4DESKEW_CNT_LN2_SMASK		0xF0000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_RADR_SKIP4DESKEW_CNT_LN1_SHIFT		24
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_RADR_SKIP4DESKEW_CNT_LN1_MASK		0xFull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_RADR_SKIP4DESKEW_CNT_LN1_SMASK		0xF000000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_RADR_SKIP4DESKEW_CNT_LN0_SHIFT		20
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_RADR_SKIP4DESKEW_CNT_LN0_MASK		0xFull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_RADR_SKIP4DESKEW_CNT_LN0_SMASK		0xF00000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_UNUSED_19_SHIFT				19
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_UNUSED_19_MASK				0x1ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_UNUSED_19_SMASK				0x80000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_FAILED_TEST_CNT_LN3_SHIFT		16
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_FAILED_TEST_CNT_LN3_MASK		0x7ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_FAILED_TEST_CNT_LN3_SMASK		0x70000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_UNUSED_15_SHIFT				15
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_UNUSED_15_MASK				0x1ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_UNUSED_15_SMASK				0x8000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_FAILED_TEST_CNT_LN2_SHIFT		12
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_FAILED_TEST_CNT_LN2_MASK		0x7ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_FAILED_TEST_CNT_LN2_SMASK		0x7000ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_UNUSED_11_SHIFT				11
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_UNUSED_11_MASK				0x1ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_UNUSED_11_SMASK				0x800ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_FAILED_TEST_CNT_LN1_SHIFT		8
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_FAILED_TEST_CNT_LN1_MASK		0x7ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_FAILED_TEST_CNT_LN1_SMASK		0x700ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_UNUSED_7_SHIFT				7
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_UNUSED_7_MASK				0x1ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_UNUSED_7_SMASK				0x80ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_FAILED_TEST_CNT_LN0_SHIFT		4
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_FAILED_TEST_CNT_LN0_MASK		0x7ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_FAILED_TEST_CNT_LN0_SMASK		0x70ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_UNUSED_3_1_SHIFT			1
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_UNUSED_3_1_MASK				0x7ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_UNUSED_3_1_SMASK			0xEull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_DESKEW_COMPLETE_SHIFT			0
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_DESKEW_COMPLETE_MASK			0x1ull
#define MNH_SNP_UPSTRM_DBG_INIT_STATE_2_DESKEW_COMPLETE_SMASK			0x1ull
/*
* Table #38 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA
* This register is used to control the good, bad and scrambled LTP 
* data.
*/
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA					(MNH_SNUP_CSRS + 0x000000000140)
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_RESETCSR				0x00000000F0000000ull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_UNUSED_63_37_SHIFT			37
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_UNUSED_63_37_MASK			0x7FFFFFFull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_UNUSED_63_37_SMASK			0xFFFFFFE000000000ull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_RAW_REQUIRED_ERR_CNT_SHIFT		32
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_RAW_REQUIRED_ERR_CNT_MASK		0x1Full
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_RAW_REQUIRED_ERR_CNT_SMASK		0x1F00000000ull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_SHIFTED_LN_ERR_CNT_EN_SHIFT	28
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_SHIFTED_LN_ERR_CNT_EN_MASK		0xFull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_SHIFTED_LN_ERR_CNT_EN_SMASK	0xF0000000ull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_UNUSED_27_25_SHIFT			25
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_UNUSED_27_25_MASK			0x7ull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_UNUSED_27_25_SMASK			0xE000000ull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_ERR_STAT_MODE_SHIFT		24
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_ERR_STAT_MODE_MASK			0x1ull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_ERR_STAT_MODE_SMASK		0x1000000ull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_UNUSED_23_21_SHIFT			21
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_UNUSED_23_21_MASK			0x7ull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_UNUSED_23_21_SMASK			0xE00000ull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_SAVE_ALL_SHIFT			20
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_SAVE_ALL_MASK			0x1ull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_SAVE_ALL_SMASK			0x100000ull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_UNUSED_19_SHIFT			19
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_UNUSED_19_MASK			0x1ull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_UNUSED_19_SMASK			0x80000ull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_SAVE_ESCAPE_ONLY_SHIFT		16
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_SAVE_ESCAPE_ONLY_MASK		0x7ull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_SAVE_ESCAPE_ONLY_SMASK		0x70000ull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_UNUSED_15_13_SHIFT			13
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_UNUSED_15_13_MASK			0x7ull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_UNUSED_15_13_SMASK			0xE000ull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_SAVE_MULTIPLE_ONLY_SHIFT		12
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_SAVE_MULTIPLE_ONLY_MASK		0x1ull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_SAVE_MULTIPLE_ONLY_SMASK		0x1000ull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_ADDR_SHIFT				8
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_ADDR_MASK				0xFull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_ADDR_SMASK				0xF00ull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_UNUSED_7_6_SHIFT			6
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_UNUSED_7_6_MASK			0x3ull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_UNUSED_7_6_SMASK			0xC0ull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_SELECT_SHIFT			4
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_SELECT_MASK			0x3ull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_SELECT_SMASK			0x30ull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_UNUSED_3_1_SHIFT			1
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_UNUSED_3_1_MASK			0x7ull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_UNUSED_3_1_SMASK			0xEull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_ARM_SHIFT				0
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_ARM_MASK				0x1ull
#define MNH_SNP_UPSTRM_DBG_CFG_GOOD_BAD_DATA_ARM_SMASK				0x1ull
/*
* Table #39 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_STS
* This is the error flag CSR.
*/
#define MNH_SNP_UPSTRM_ERR_STS							(MNH_SNUP_CSRS + 0x000000000200)
#define MNH_SNP_UPSTRM_ERR_STS_RESETCSR						0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_STS_UNUSED_63_8_SHIFT				8
#define MNH_SNP_UPSTRM_ERR_STS_UNUSED_63_8_MASK					0xFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_STS_UNUSED_63_8_SMASK				0xFFFFFFFFFFFFFF00ull
#define MNH_SNP_UPSTRM_ERR_STS_FEC_ERR_CNT_HIT_LIMIT_SHIFT			7
#define MNH_SNP_UPSTRM_ERR_STS_FEC_ERR_CNT_HIT_LIMIT_MASK			0x1ull
#define MNH_SNP_UPSTRM_ERR_STS_FEC_ERR_CNT_HIT_LIMIT_SMASK			0x80ull
#define MNH_SNP_UPSTRM_ERR_STS_RCLK_STOPPED_SHIFT				6
#define MNH_SNP_UPSTRM_ERR_STS_RCLK_STOPPED_MASK				0x1ull
#define MNH_SNP_UPSTRM_ERR_STS_RCLK_STOPPED_SMASK				0x40ull
#define MNH_SNP_UPSTRM_ERR_STS_CRC_ERR_CNT_HIT_LIMIT_SHIFT			5
#define MNH_SNP_UPSTRM_ERR_STS_CRC_ERR_CNT_HIT_LIMIT_MASK			0x1ull
#define MNH_SNP_UPSTRM_ERR_STS_CRC_ERR_CNT_HIT_LIMIT_SMASK			0x20ull
#define MNH_SNP_UPSTRM_ERR_STS_REINIT_FROM_PEER_SHIFT				4
#define MNH_SNP_UPSTRM_ERR_STS_REINIT_FROM_PEER_MASK				0x1ull
#define MNH_SNP_UPSTRM_ERR_STS_REINIT_FROM_PEER_SMASK				0x10ull
#define MNH_SNP_UPSTRM_ERR_STS_SEQ_CRC_ERR_SHIFT				3
#define MNH_SNP_UPSTRM_ERR_STS_SEQ_CRC_ERR_MASK					0x1ull
#define MNH_SNP_UPSTRM_ERR_STS_SEQ_CRC_ERR_SMASK				0x8ull
#define MNH_SNP_UPSTRM_ERR_STS_RX_LESS_THAN_FOUR_LNS_SHIFT			2
#define MNH_SNP_UPSTRM_ERR_STS_RX_LESS_THAN_FOUR_LNS_MASK			0x1ull
#define MNH_SNP_UPSTRM_ERR_STS_RX_LESS_THAN_FOUR_LNS_SMASK			0x4ull
#define MNH_SNP_UPSTRM_ERR_STS_ALL_LNS_FAILED_REINIT_TEST_SHIFT			1
#define MNH_SNP_UPSTRM_ERR_STS_ALL_LNS_FAILED_REINIT_TEST_MASK			0x1ull
#define MNH_SNP_UPSTRM_ERR_STS_ALL_LNS_FAILED_REINIT_TEST_SMASK			0x2ull
#define MNH_SNP_UPSTRM_ERR_STS_RST_FOR_FAILED_DESKEW_SHIFT			0
#define MNH_SNP_UPSTRM_ERR_STS_RST_FOR_FAILED_DESKEW_MASK			0x1ull
#define MNH_SNP_UPSTRM_ERR_STS_RST_FOR_FAILED_DESKEW_SMASK			0x1ull
/*
* Table #40 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_CLR
* This is the error clear CSR.
*/
#define MNH_SNP_UPSTRM_ERR_CLR							(MNH_SNUP_CSRS + 0x000000000208)
#define MNH_SNP_UPSTRM_ERR_CLR_RESETCSR						0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_CLR_UNUSED_63_8_SHIFT				8
#define MNH_SNP_UPSTRM_ERR_CLR_UNUSED_63_8_MASK					0xFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_CLR_UNUSED_63_8_SMASK				0xFFFFFFFFFFFFFF00ull
#define MNH_SNP_UPSTRM_ERR_CLR_FEC_ERR_CNT_HIT_LIMIT_SHIFT			7
#define MNH_SNP_UPSTRM_ERR_CLR_FEC_ERR_CNT_HIT_LIMIT_MASK			0x1ull
#define MNH_SNP_UPSTRM_ERR_CLR_FEC_ERR_CNT_HIT_LIMIT_SMASK			0x80ull
#define MNH_SNP_UPSTRM_ERR_CLR_RCLK_STOPPED_SHIFT				6
#define MNH_SNP_UPSTRM_ERR_CLR_RCLK_STOPPED_MASK				0x1ull
#define MNH_SNP_UPSTRM_ERR_CLR_RCLK_STOPPED_SMASK				0x40ull
#define MNH_SNP_UPSTRM_ERR_CLR_CRC_ERR_CNT_HIT_LIMIT_SHIFT			5
#define MNH_SNP_UPSTRM_ERR_CLR_CRC_ERR_CNT_HIT_LIMIT_MASK			0x1ull
#define MNH_SNP_UPSTRM_ERR_CLR_CRC_ERR_CNT_HIT_LIMIT_SMASK			0x20ull
#define MNH_SNP_UPSTRM_ERR_CLR_REINIT_FROM_PEER_SHIFT				4
#define MNH_SNP_UPSTRM_ERR_CLR_REINIT_FROM_PEER_MASK				0x1ull
#define MNH_SNP_UPSTRM_ERR_CLR_REINIT_FROM_PEER_SMASK				0x10ull
#define MNH_SNP_UPSTRM_ERR_CLR_SEQ_CRC_ERR_SHIFT				3
#define MNH_SNP_UPSTRM_ERR_CLR_SEQ_CRC_ERR_MASK					0x1ull
#define MNH_SNP_UPSTRM_ERR_CLR_SEQ_CRC_ERR_SMASK				0x8ull
#define MNH_SNP_UPSTRM_ERR_CLR_RX_LESS_THAN_FOUR_LNS_SHIFT			2
#define MNH_SNP_UPSTRM_ERR_CLR_RX_LESS_THAN_FOUR_LNS_MASK			0x1ull
#define MNH_SNP_UPSTRM_ERR_CLR_RX_LESS_THAN_FOUR_LNS_SMASK			0x4ull
#define MNH_SNP_UPSTRM_ERR_CLR_ALL_LNS_FAILED_REINIT_TEST_SHIFT			1
#define MNH_SNP_UPSTRM_ERR_CLR_ALL_LNS_FAILED_REINIT_TEST_MASK			0x1ull
#define MNH_SNP_UPSTRM_ERR_CLR_ALL_LNS_FAILED_REINIT_TEST_SMASK			0x2ull
#define MNH_SNP_UPSTRM_ERR_CLR_RST_FOR_FAILED_DESKEW_SHIFT			0
#define MNH_SNP_UPSTRM_ERR_CLR_RST_FOR_FAILED_DESKEW_MASK			0x1ull
#define MNH_SNP_UPSTRM_ERR_CLR_RST_FOR_FAILED_DESKEW_SMASK			0x1ull
/*
* Table #41 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_FRC
* This register is used to enable interrupts for the associated error 
* flag.
*/
#define MNH_SNP_UPSTRM_ERR_FRC							(MNH_SNUP_CSRS + 0x000000000210)
#define MNH_SNP_UPSTRM_ERR_FRC_RESETCSR						0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_FRC_UNUSED_63_8_SHIFT				8
#define MNH_SNP_UPSTRM_ERR_FRC_UNUSED_63_8_MASK					0xFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_FRC_UNUSED_63_8_SMASK				0xFFFFFFFFFFFFFF00ull
#define MNH_SNP_UPSTRM_ERR_FRC_FEC_ERR_CNT_HIT_LIMIT_SHIFT			7
#define MNH_SNP_UPSTRM_ERR_FRC_FEC_ERR_CNT_HIT_LIMIT_MASK			0x1ull
#define MNH_SNP_UPSTRM_ERR_FRC_FEC_ERR_CNT_HIT_LIMIT_SMASK			0x80ull
#define MNH_SNP_UPSTRM_ERR_FRC_RCLK_STOPPED_SHIFT				6
#define MNH_SNP_UPSTRM_ERR_FRC_RCLK_STOPPED_MASK				0x1ull
#define MNH_SNP_UPSTRM_ERR_FRC_RCLK_STOPPED_SMASK				0x40ull
#define MNH_SNP_UPSTRM_ERR_FRC_CRC_ERR_CNT_HIT_LIMIT_SHIFT			5
#define MNH_SNP_UPSTRM_ERR_FRC_CRC_ERR_CNT_HIT_LIMIT_MASK			0x1ull
#define MNH_SNP_UPSTRM_ERR_FRC_CRC_ERR_CNT_HIT_LIMIT_SMASK			0x20ull
#define MNH_SNP_UPSTRM_ERR_FRC_REINIT_FROM_PEER_SHIFT				4
#define MNH_SNP_UPSTRM_ERR_FRC_REINIT_FROM_PEER_MASK				0x1ull
#define MNH_SNP_UPSTRM_ERR_FRC_REINIT_FROM_PEER_SMASK				0x10ull
#define MNH_SNP_UPSTRM_ERR_FRC_SEQ_CRC_ERR_SHIFT				3
#define MNH_SNP_UPSTRM_ERR_FRC_SEQ_CRC_ERR_MASK					0x1ull
#define MNH_SNP_UPSTRM_ERR_FRC_SEQ_CRC_ERR_SMASK				0x8ull
#define MNH_SNP_UPSTRM_ERR_FRC_RX_LESS_THAN_FOUR_LNS_SHIFT			2
#define MNH_SNP_UPSTRM_ERR_FRC_RX_LESS_THAN_FOUR_LNS_MASK			0x1ull
#define MNH_SNP_UPSTRM_ERR_FRC_RX_LESS_THAN_FOUR_LNS_SMASK			0x4ull
#define MNH_SNP_UPSTRM_ERR_FRC_ALL_LNS_FAILED_REINIT_TEST_SHIFT			1
#define MNH_SNP_UPSTRM_ERR_FRC_ALL_LNS_FAILED_REINIT_TEST_MASK			0x1ull
#define MNH_SNP_UPSTRM_ERR_FRC_ALL_LNS_FAILED_REINIT_TEST_SMASK			0x2ull
#define MNH_SNP_UPSTRM_ERR_FRC_RST_FOR_FAILED_DESKEW_SHIFT			0
#define MNH_SNP_UPSTRM_ERR_FRC_RST_FOR_FAILED_DESKEW_MASK			0x1ull
#define MNH_SNP_UPSTRM_ERR_FRC_RST_FOR_FAILED_DESKEW_SMASK			0x1ull
/*
* Table #42 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_EN_HOST
* This is a CSR description.
*/
#define MNH_SNP_UPSTRM_ERR_EN_HOST						(MNH_SNUP_CSRS + 0x000000000218)
#define MNH_SNP_UPSTRM_ERR_EN_HOST_RESETCSR					0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_EN_HOST_UNUSED_63_8_SHIFT				8
#define MNH_SNP_UPSTRM_ERR_EN_HOST_UNUSED_63_8_MASK				0xFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_EN_HOST_UNUSED_63_8_SMASK				0xFFFFFFFFFFFFFF00ull
#define MNH_SNP_UPSTRM_ERR_EN_HOST_FEC_ERR_CNT_HIT_LIMIT_SHIFT			7
#define MNH_SNP_UPSTRM_ERR_EN_HOST_FEC_ERR_CNT_HIT_LIMIT_MASK			0x1ull
#define MNH_SNP_UPSTRM_ERR_EN_HOST_FEC_ERR_CNT_HIT_LIMIT_SMASK			0x80ull
#define MNH_SNP_UPSTRM_ERR_EN_HOST_RCLK_STOPPED_SHIFT				6
#define MNH_SNP_UPSTRM_ERR_EN_HOST_RCLK_STOPPED_MASK				0x1ull
#define MNH_SNP_UPSTRM_ERR_EN_HOST_RCLK_STOPPED_SMASK				0x40ull
#define MNH_SNP_UPSTRM_ERR_EN_HOST_CRC_ERR_CNT_HIT_LIMIT_SHIFT			5
#define MNH_SNP_UPSTRM_ERR_EN_HOST_CRC_ERR_CNT_HIT_LIMIT_MASK			0x1ull
#define MNH_SNP_UPSTRM_ERR_EN_HOST_CRC_ERR_CNT_HIT_LIMIT_SMASK			0x20ull
#define MNH_SNP_UPSTRM_ERR_EN_HOST_REINIT_FROM_PEER_SHIFT			4
#define MNH_SNP_UPSTRM_ERR_EN_HOST_REINIT_FROM_PEER_MASK			0x1ull
#define MNH_SNP_UPSTRM_ERR_EN_HOST_REINIT_FROM_PEER_SMASK			0x10ull
#define MNH_SNP_UPSTRM_ERR_EN_HOST_SEQ_CRC_ERR_SHIFT				3
#define MNH_SNP_UPSTRM_ERR_EN_HOST_SEQ_CRC_ERR_MASK				0x1ull
#define MNH_SNP_UPSTRM_ERR_EN_HOST_SEQ_CRC_ERR_SMASK				0x8ull
#define MNH_SNP_UPSTRM_ERR_EN_HOST_RX_LESS_THAN_FOUR_LNS_SHIFT			2
#define MNH_SNP_UPSTRM_ERR_EN_HOST_RX_LESS_THAN_FOUR_LNS_MASK			0x1ull
#define MNH_SNP_UPSTRM_ERR_EN_HOST_RX_LESS_THAN_FOUR_LNS_SMASK			0x4ull
#define MNH_SNP_UPSTRM_ERR_EN_HOST_ALL_LNS_FAILED_REINIT_TEST_SHIFT		1
#define MNH_SNP_UPSTRM_ERR_EN_HOST_ALL_LNS_FAILED_REINIT_TEST_MASK		0x1ull
#define MNH_SNP_UPSTRM_ERR_EN_HOST_ALL_LNS_FAILED_REINIT_TEST_SMASK		0x2ull
#define MNH_SNP_UPSTRM_ERR_EN_HOST_RST_FOR_FAILED_DESKEW_SHIFT			0
#define MNH_SNP_UPSTRM_ERR_EN_HOST_RST_FOR_FAILED_DESKEW_MASK			0x1ull
#define MNH_SNP_UPSTRM_ERR_EN_HOST_RST_FOR_FAILED_DESKEW_SMASK			0x1ull
/*
* Table #43 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_FIRST_HOST
* This is a CSR description.
*/
#define MNH_SNP_UPSTRM_ERR_FIRST_HOST						(MNH_SNUP_CSRS + 0x000000000220)
#define MNH_SNP_UPSTRM_ERR_FIRST_HOST_RESETCSR					0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_FIRST_HOST_UNUSED_63_8_SHIFT				8
#define MNH_SNP_UPSTRM_ERR_FIRST_HOST_UNUSED_63_8_MASK				0xFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_FIRST_HOST_UNUSED_63_8_SMASK				0xFFFFFFFFFFFFFF00ull
#define MNH_SNP_UPSTRM_ERR_FIRST_HOST_FEC_ERR_CNT_HIT_LIMIT_SHIFT		7
#define MNH_SNP_UPSTRM_ERR_FIRST_HOST_FEC_ERR_CNT_HIT_LIMIT_MASK		0x1ull
#define MNH_SNP_UPSTRM_ERR_FIRST_HOST_FEC_ERR_CNT_HIT_LIMIT_SMASK		0x80ull
#define MNH_SNP_UPSTRM_ERR_FIRST_HOST_RCLK_STOPPED_SHIFT			6
#define MNH_SNP_UPSTRM_ERR_FIRST_HOST_RCLK_STOPPED_MASK				0x1ull
#define MNH_SNP_UPSTRM_ERR_FIRST_HOST_RCLK_STOPPED_SMASK			0x40ull
#define MNH_SNP_UPSTRM_ERR_FIRST_HOST_CRC_ERR_CNT_HIT_LIMIT_SHIFT		5
#define MNH_SNP_UPSTRM_ERR_FIRST_HOST_CRC_ERR_CNT_HIT_LIMIT_MASK		0x1ull
#define MNH_SNP_UPSTRM_ERR_FIRST_HOST_CRC_ERR_CNT_HIT_LIMIT_SMASK		0x20ull
#define MNH_SNP_UPSTRM_ERR_FIRST_HOST_REINIT_FROM_PEER_SHIFT			4
#define MNH_SNP_UPSTRM_ERR_FIRST_HOST_REINIT_FROM_PEER_MASK			0x1ull
#define MNH_SNP_UPSTRM_ERR_FIRST_HOST_REINIT_FROM_PEER_SMASK			0x10ull
#define MNH_SNP_UPSTRM_ERR_FIRST_HOST_SEQ_CRC_ERR_SHIFT				3
#define MNH_SNP_UPSTRM_ERR_FIRST_HOST_SEQ_CRC_ERR_MASK				0x1ull
#define MNH_SNP_UPSTRM_ERR_FIRST_HOST_SEQ_CRC_ERR_SMASK				0x8ull
#define MNH_SNP_UPSTRM_ERR_FIRST_HOST_RX_LESS_THAN_FOUR_LNS_SHIFT		2
#define MNH_SNP_UPSTRM_ERR_FIRST_HOST_RX_LESS_THAN_FOUR_LNS_MASK		0x1ull
#define MNH_SNP_UPSTRM_ERR_FIRST_HOST_RX_LESS_THAN_FOUR_LNS_SMASK		0x4ull
#define MNH_SNP_UPSTRM_ERR_FIRST_HOST_ALL_LNS_FAILED_REINIT_TEST_SHIFT		1
#define MNH_SNP_UPSTRM_ERR_FIRST_HOST_ALL_LNS_FAILED_REINIT_TEST_MASK		0x1ull
#define MNH_SNP_UPSTRM_ERR_FIRST_HOST_ALL_LNS_FAILED_REINIT_TEST_SMASK		0x2ull
#define MNH_SNP_UPSTRM_ERR_FIRST_HOST_RST_FOR_FAILED_DESKEW_SHIFT		0
#define MNH_SNP_UPSTRM_ERR_FIRST_HOST_RST_FOR_FAILED_DESKEW_MASK		0x1ull
#define MNH_SNP_UPSTRM_ERR_FIRST_HOST_RST_FOR_FAILED_DESKEW_SMASK		0x1ull
/*
* Table #44 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_TOTAL_CRC_ERR
* This register is used to report the total number of Rx side LTPs with a CRC 
* error.
*/
#define MNH_SNP_UPSTRM_ERR_INFO_TOTAL_CRC_ERR					(MNH_SNUP_CSRS + 0x000000000230)
#define MNH_SNP_UPSTRM_ERR_INFO_TOTAL_CRC_ERR_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_TOTAL_CRC_ERR_CNT_SHIFT				0
#define MNH_SNP_UPSTRM_ERR_INFO_TOTAL_CRC_ERR_CNT_MASK				0xFFFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_TOTAL_CRC_ERR_CNT_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #45 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_CRC_ERR_LN0
* This register is used to report the total number of Rx side LTPs with a CRC 
* error with lane 0 identified as the culprit.
*/
#define MNH_SNP_UPSTRM_ERR_INFO_CRC_ERR_LN0					(MNH_SNUP_CSRS + 0x000000000238)
#define MNH_SNP_UPSTRM_ERR_INFO_CRC_ERR_LN0_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_CRC_ERR_LN0_CNT_SHIFT				0
#define MNH_SNP_UPSTRM_ERR_INFO_CRC_ERR_LN0_CNT_MASK				0xFFFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_CRC_ERR_LN0_CNT_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #46 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_CRC_ERR_LN1
* This register is used to report the total number of Rx side LTPs with a CRC 
* error with lane 1 identified as the culprit.
*/
#define MNH_SNP_UPSTRM_ERR_INFO_CRC_ERR_LN1					(MNH_SNUP_CSRS + 0x000000000240)
#define MNH_SNP_UPSTRM_ERR_INFO_CRC_ERR_LN1_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_CRC_ERR_LN1_CNT_SHIFT				0
#define MNH_SNP_UPSTRM_ERR_INFO_CRC_ERR_LN1_CNT_MASK				0xFFFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_CRC_ERR_LN1_CNT_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #47 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_CRC_ERR_LN2
* This register is used to report the total number of Rx side LTPs with a CRC 
* error with lane 2 identified as the culprit.
*/
#define MNH_SNP_UPSTRM_ERR_INFO_CRC_ERR_LN2					(MNH_SNUP_CSRS + 0x000000000248)
#define MNH_SNP_UPSTRM_ERR_INFO_CRC_ERR_LN2_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_CRC_ERR_LN2_CNT_SHIFT				0
#define MNH_SNP_UPSTRM_ERR_INFO_CRC_ERR_LN2_CNT_MASK				0xFFFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_CRC_ERR_LN2_CNT_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #48 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_CRC_ERR_LN3
* This register is used to report the total number of Rx side LTPs with a CRC 
* error with lane 3 identified as the culprit.
*/
#define MNH_SNP_UPSTRM_ERR_INFO_CRC_ERR_LN3					(MNH_SNUP_CSRS + 0x000000000250)
#define MNH_SNP_UPSTRM_ERR_INFO_CRC_ERR_LN3_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_CRC_ERR_LN3_CNT_SHIFT				0
#define MNH_SNP_UPSTRM_ERR_INFO_CRC_ERR_LN3_CNT_MASK				0xFFFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_CRC_ERR_LN3_CNT_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #49 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_CRC_ERR_MULTI_LN
* This register is used to report the total number of Rx side LTPs with a CRC 
* error with more than one lane identified as the culprit.
*/
#define MNH_SNP_UPSTRM_ERR_INFO_CRC_ERR_MULTI_LN				(MNH_SNUP_CSRS + 0x000000000258)
#define MNH_SNP_UPSTRM_ERR_INFO_CRC_ERR_MULTI_LN_RESETCSR			0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_CRC_ERR_MULTI_LN_UNUSED_63_20_SHIFT		20
#define MNH_SNP_UPSTRM_ERR_INFO_CRC_ERR_MULTI_LN_UNUSED_63_20_MASK		0xFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_CRC_ERR_MULTI_LN_UNUSED_63_20_SMASK		0xFFFFFFFFFFF00000ull
#define MNH_SNP_UPSTRM_ERR_INFO_CRC_ERR_MULTI_LN_CNT_SHIFT			0
#define MNH_SNP_UPSTRM_ERR_INFO_CRC_ERR_MULTI_LN_CNT_MASK			0xFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_CRC_ERR_MULTI_LN_CNT_SMASK			0xFFFFFull
/*
* Table #50 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_RX_REPLAY_CNT
* This register is used to report the total number of Rx side retransmission 
* sequences.
*/
#define MNH_SNP_UPSTRM_ERR_INFO_RX_REPLAY_CNT					(MNH_SNUP_CSRS + 0x000000000260)
#define MNH_SNP_UPSTRM_ERR_INFO_RX_REPLAY_CNT_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_RX_REPLAY_CNT_VAL_SHIFT				0
#define MNH_SNP_UPSTRM_ERR_INFO_RX_REPLAY_CNT_VAL_MASK				0xFFFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_RX_REPLAY_CNT_VAL_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #51 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_SEQ_CRC_CNT
* This register is used to report the total number of Rx side sequential CRC 
* error count.
*/
#define MNH_SNP_UPSTRM_ERR_INFO_SEQ_CRC_CNT					(MNH_SNUP_CSRS + 0x000000000268)
#define MNH_SNP_UPSTRM_ERR_INFO_SEQ_CRC_CNT_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_SEQ_CRC_CNT_UNUSED_63_32_SHIFT			32
#define MNH_SNP_UPSTRM_ERR_INFO_SEQ_CRC_CNT_UNUSED_63_32_MASK			0xFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_SEQ_CRC_CNT_UNUSED_63_32_SMASK			0xFFFFFFFF00000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_SEQ_CRC_CNT_VAL_SHIFT				0
#define MNH_SNP_UPSTRM_ERR_INFO_SEQ_CRC_CNT_VAL_MASK				0xFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_SEQ_CRC_CNT_VAL_SMASK				0xFFFFFFFFull
/*
* Table #52 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_ESCAPE_0_ONLY_CNT
* This register is used to report the total number of poly 0 only false positive 
* 12 bit CRC checks in 48 bit CRC mode when four lanes are active.
*/
#define MNH_SNP_UPSTRM_ERR_INFO_ESCAPE_0_ONLY_CNT				(MNH_SNUP_CSRS + 0x000000000270)
#define MNH_SNP_UPSTRM_ERR_INFO_ESCAPE_0_ONLY_CNT_RESETCSR			0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_ESCAPE_0_ONLY_CNT_UNUSED_63_32_SHIFT		32
#define MNH_SNP_UPSTRM_ERR_INFO_ESCAPE_0_ONLY_CNT_UNUSED_63_32_MASK		0xFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_ESCAPE_0_ONLY_CNT_UNUSED_63_32_SMASK		0xFFFFFFFF00000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_ESCAPE_0_ONLY_CNT_VAL_SHIFT			0
#define MNH_SNP_UPSTRM_ERR_INFO_ESCAPE_0_ONLY_CNT_VAL_MASK			0xFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_ESCAPE_0_ONLY_CNT_VAL_SMASK			0xFFFFFFFFull
/*
* Table #53 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_ESCAPE_0_PLUS1_CNT
* This register is used to report the total number of simultaneous poly 0 and 
* any of the other 3 polys (just 1) false positive 12 bit CRC checks in 48 bit 
* CRC mode when four lanes are active.
*/
#define MNH_SNP_UPSTRM_ERR_INFO_ESCAPE_0_PLUS1_CNT				(MNH_SNUP_CSRS + 0x000000000278)
#define MNH_SNP_UPSTRM_ERR_INFO_ESCAPE_0_PLUS1_CNT_RESETCSR			0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_ESCAPE_0_PLUS1_CNT_UNUSED_63_32_SHIFT		32
#define MNH_SNP_UPSTRM_ERR_INFO_ESCAPE_0_PLUS1_CNT_UNUSED_63_32_MASK		0xFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_ESCAPE_0_PLUS1_CNT_UNUSED_63_32_SMASK		0xFFFFFFFF00000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_ESCAPE_0_PLUS1_CNT_VAL_SHIFT			0
#define MNH_SNP_UPSTRM_ERR_INFO_ESCAPE_0_PLUS1_CNT_VAL_MASK			0xFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_ESCAPE_0_PLUS1_CNT_VAL_SMASK			0xFFFFFFFFull
/*
* Table #54 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_ESCAPE_0_PLUS2_CNT
* This register is used to report the total number of simultaneous poly 0 and 
* any two of the other 3 polys (just 2) false positive 12 bit CRC checks in 48 
* bit CRC mode when four lanes are active.
*/
#define MNH_SNP_UPSTRM_ERR_INFO_ESCAPE_0_PLUS2_CNT				(MNH_SNUP_CSRS + 0x000000000280)
#define MNH_SNP_UPSTRM_ERR_INFO_ESCAPE_0_PLUS2_CNT_RESETCSR			0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_ESCAPE_0_PLUS2_CNT_UNUSED_63_16_SHIFT		16
#define MNH_SNP_UPSTRM_ERR_INFO_ESCAPE_0_PLUS2_CNT_UNUSED_63_16_MASK		0xFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_ESCAPE_0_PLUS2_CNT_UNUSED_63_16_SMASK		0xFFFFFFFFFFFF0000ull
#define MNH_SNP_UPSTRM_ERR_INFO_ESCAPE_0_PLUS2_CNT_VAL_SHIFT			0
#define MNH_SNP_UPSTRM_ERR_INFO_ESCAPE_0_PLUS2_CNT_VAL_MASK			0xFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_ESCAPE_0_PLUS2_CNT_VAL_SMASK			0xFFFFull
/*
* Table #55 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_REINIT_FROM_PEER_CNT
* This register is used to report the total number of reinit sequences triggered 
* from the peer.
*/
#define MNH_SNP_UPSTRM_ERR_INFO_REINIT_FROM_PEER_CNT				(MNH_SNUP_CSRS + 0x000000000288)
#define MNH_SNP_UPSTRM_ERR_INFO_REINIT_FROM_PEER_CNT_RESETCSR			0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_REINIT_FROM_PEER_CNT_UNUSED_63_32_SHIFT		32
#define MNH_SNP_UPSTRM_ERR_INFO_REINIT_FROM_PEER_CNT_UNUSED_63_32_MASK		0xFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_REINIT_FROM_PEER_CNT_UNUSED_63_32_SMASK		0xFFFFFFFF00000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_REINIT_FROM_PEER_CNT_VAL_SHIFT			0
#define MNH_SNP_UPSTRM_ERR_INFO_REINIT_FROM_PEER_CNT_VAL_MASK			0xFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_REINIT_FROM_PEER_CNT_VAL_SMASK			0xFFFFFFFFull
/*
* Table #56 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_MISC_FLG_CNT
* This register is used to count error flag events that are informational and 
* not necessarily catastrophic and would tend to occur only at very high BER. 
* The logic attempts to ride through these events.
*/
#define MNH_SNP_UPSTRM_ERR_INFO_MISC_FLG_CNT					(MNH_SNUP_CSRS + 0x000000000290)
#define MNH_SNP_UPSTRM_ERR_INFO_MISC_FLG_CNT_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_MISC_FLG_CNT_UNUSED_63_16_SHIFT			16
#define MNH_SNP_UPSTRM_ERR_INFO_MISC_FLG_CNT_UNUSED_63_16_MASK			0xFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_MISC_FLG_CNT_UNUSED_63_16_SMASK			0xFFFFFFFFFFFF0000ull
#define MNH_SNP_UPSTRM_ERR_INFO_MISC_FLG_CNT_ALL_LNS_FAILED_REINIT_TEST_SHIFT	8
#define MNH_SNP_UPSTRM_ERR_INFO_MISC_FLG_CNT_ALL_LNS_FAILED_REINIT_TEST_MASK	0xFFull
#define MNH_SNP_UPSTRM_ERR_INFO_MISC_FLG_CNT_ALL_LNS_FAILED_REINIT_TEST_SMASK	0xFF00ull
#define MNH_SNP_UPSTRM_ERR_INFO_MISC_FLG_CNT_RST_FOR_FAILED_DESKEW_SHIFT	0
#define MNH_SNP_UPSTRM_ERR_INFO_MISC_FLG_CNT_RST_FOR_FAILED_DESKEW_MASK		0xFFull
#define MNH_SNP_UPSTRM_ERR_INFO_MISC_FLG_CNT_RST_FOR_FAILED_DESKEW_SMASK	0xFFull
/*
* Table #57 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_1
* This register is one of an eight register set that counts corrected symbol 
* errors in each received code word. If one symbol error is corrected in a 
* received code word this register increments. This register is active for both 
* RS(132,128) and RS(528,512).
*/
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_1					(MNH_SNUP_CSRS + 0x000000000298)
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_1_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_1_UNUSED_63_48_SHIFT		48
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_1_UNUSED_63_48_MASK		0xFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_1_UNUSED_63_48_SMASK		0xFFFF000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_1_DATA_SHIFT			0
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_1_DATA_MASK			0xFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_1_DATA_SMASK			0xFFFFFFFFFFFFull
/*
* Table #58 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_2
* This register is one of an eight register set that counts corrected symbol 
* errors in each received code word. If two symbol errors are corrected in a 
* received code word this register increments. This register is active for both 
* RS(132,128) and RS(528,512).
*/
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_2					(MNH_SNUP_CSRS + 0x0000000002A0)
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_2_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_2_UNUSED_63_48_SHIFT		48
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_2_UNUSED_63_48_MASK		0xFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_2_UNUSED_63_48_SMASK		0xFFFF000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_2_DATA_SHIFT			0
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_2_DATA_MASK			0xFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_2_DATA_SMASK			0xFFFFFFFFFFFFull
/*
* Table #59 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_3
* This register is one of an eight register set that counts corrected symbol 
* errors in each received code word. If three symbol errors are corrected in a 
* received code word this register increments. This register is active for 
* RS(528,512).
*/
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_3					(MNH_SNUP_CSRS + 0x0000000002A8)
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_3_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_3_UNUSED_63_48_SHIFT		48
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_3_UNUSED_63_48_MASK		0xFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_3_UNUSED_63_48_SMASK		0xFFFF000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_3_DATA_SHIFT			0
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_3_DATA_MASK			0xFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_3_DATA_SMASK			0xFFFFFFFFFFFFull
/*
* Table #60 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_4
* This register is one of an eight register set that counts corrected symbol 
* errors in each received code word. If four symbol errors are corrected in a 
* received code word this register increments. This register is active for 
* RS(528,512).
*/
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_4					(MNH_SNUP_CSRS + 0x0000000002B0)
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_4_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_4_UNUSED_63_48_SHIFT		48
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_4_UNUSED_63_48_MASK		0xFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_4_UNUSED_63_48_SMASK		0xFFFF000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_4_DATA_SHIFT			0
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_4_DATA_MASK			0xFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_4_DATA_SMASK			0xFFFFFFFFFFFFull
/*
* Table #61 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_5
* This register is one of an eight register set that counts corrected symbol 
* errors in each received code word. If five symbol errors are corrected in a 
* received code word this register increments. This register is active for 
* RS(528,512).
*/
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_5					(MNH_SNUP_CSRS + 0x0000000002B8)
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_5_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_5_UNUSED_63_32_SHIFT		32
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_5_UNUSED_63_32_MASK		0xFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_5_UNUSED_63_32_SMASK		0xFFFFFFFF00000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_5_DATA_SHIFT			0
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_5_DATA_MASK			0xFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_5_DATA_SMASK			0xFFFFFFFFull
/*
* Table #62 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_6
* This register is one of an eight register set that counts corrected symbol 
* errors in each received code word. If six symbol errors are corrected in a 
* received code word this register increments. This register is active for 
* RS(528,512).
*/
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_6					(MNH_SNUP_CSRS + 0x0000000002C0)
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_6_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_6_UNUSED_63_32_SHIFT		32
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_6_UNUSED_63_32_MASK		0xFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_6_UNUSED_63_32_SMASK		0xFFFFFFFF00000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_6_DATA_SHIFT			0
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_6_DATA_MASK			0xFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_6_DATA_SMASK			0xFFFFFFFFull
/*
* Table #63 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_7
* This register is one of an eight register set that counts corrected symbol 
* errors in each received code word. If seven symbol errors are corrected in a 
* received code word this register increments. This register is active for 
* RS(528,512).
*/
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_7					(MNH_SNUP_CSRS + 0x0000000002C8)
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_7_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_7_UNUSED_63_32_SHIFT		32
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_7_UNUSED_63_32_MASK		0xFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_7_UNUSED_63_32_SMASK		0xFFFFFFFF00000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_7_DATA_SHIFT			0
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_7_DATA_MASK			0xFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_7_DATA_SMASK			0xFFFFFFFFull
/*
* Table #64 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_8
* This register is one of an eight register set that counts corrected symbol 
* errors in each received code word. If eight symbol errors are corrected in a 
* received code word this register increments. This register is active for 
* RS(528,512).
*/
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_8					(MNH_SNUP_CSRS + 0x0000000002D0)
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_8_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_8_UNUSED_63_32_SHIFT		32
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_8_UNUSED_63_32_MASK		0xFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_8_UNUSED_63_32_SMASK		0xFFFFFFFF00000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_8_DATA_SHIFT			0
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_8_DATA_MASK			0xFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_CNT_8_DATA_SMASK			0xFFFFFFFFull
/*
* Table #65 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_FEC_UERR_CNT
* This register counts the number of uncorrected code words detected by the FEC 
* decoder. If the FEC decoder detects an uncorrectable error in a code word this 
* register increments. This register is active for both RS(132,128) and 
* RS(528,512). For RS(132,128) this register increments if there are more than 
* t=2 symbol errors. For RS(528,512) this register increments if there are more 
* than t=8 symbol errors. In both cases, if there are more that 2t symbol errors 
* in a code word, the FEC decoder detects the uncorrectable error state with 
* probability ~(1-1/t!), and increments this counter. A replay request is 
* generated when an uncorrectable error is detected, and is aligned with the 
* first LTP associated with the bad code word. The bad code word is delivered to 
* the CRC check engine undisturbed. A subsequent sequential CRC error generates 
* a recovery, in lieu of the replay. CRC errors are counted normally.
*/
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_UERR_CNT					(MNH_SNUP_CSRS + 0x0000000002D8)
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_UERR_CNT_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_UERR_CNT_UNUSED_63_32_SHIFT			32
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_UERR_CNT_UNUSED_63_32_MASK			0xFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_UERR_CNT_UNUSED_63_32_SMASK			0xFFFFFFFF00000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_UERR_CNT_DATA_SHIFT				0
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_UERR_CNT_DATA_MASK				0xFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_UERR_CNT_DATA_SMASK				0xFFFFFFFFull
/*
* Table #66 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_0
* This register is one of a five register set used to monitor the decoder's 
* error correction vector. With RS(528,512) all five are used to capture a 320b 
* error vector. With RS(132,128) the four lower registers capture a 256b error 
* vector. The vector is captured on each cycle that it outputs a non-zero value. 
* Each time an error mask is captured a corresponding valid bit is set in the 
* LCB_ERR_INFO_FEC_CERR_MASK_VLD register indicating that valid data is 
* available to firmware for post-processing. After reading the error mask, 
* firmware clears the valid indication, freeing up the location for subsequent 
* captures. A four deep queue allows capture of closely spaced error vectors. 
* Queue control logic manages all of the write/read operations and handshaking 
* with this error mask register. If the error mask queue and register are both 
* fully utilized while a new capture is being requested, the new request is 
* ignored and the LCB_ERR_INFO_FEC_CERR_MISS_CNT counter is incremented.
*/
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_0					(MNH_SNUP_CSRS + 0x0000000002E0)
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_0_RESETCSR			0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_0_DATA_SHIFT			0
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_0_DATA_MASK			0xFFFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_0_DATA_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #67 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_1
* This register is one of a five register set used to monitor the decoder's 
* error correction vector. With RS(528,512) all five are used to capture a 320b 
* error vector. With RS(132,128) the four lower registers capture a 256b error 
* vector. The vector is captured on each cycle that it outputs a non-zero value. 
* Each time an error mask is captured a corresponding valid bit is set in the 
* LCB_ERR_INFO_FEC_CERR_MASK_VLD register indicating that valid data is 
* available to firmware for post-processing. After reading the error mask, 
* firmware clears the valid indication, freeing up the location for subsequent 
* captures. A four deep queue allows capture of closely spaced error vectors. 
* Queue control logic manages all of the write/read operations and handshaking 
* with this error mask register. If the error mask queue and register are both 
* fully utilized while a new capture is being requested, the new request is 
* ignored and the LCB_ERR_INFO_FEC_CERR_MISS_CNT counter is incremented.
*/
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_1					(MNH_SNUP_CSRS + 0x0000000002E8)
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_1_RESETCSR			0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_1_DATA_SHIFT			0
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_1_DATA_MASK			0xFFFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_1_DATA_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #68 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_2
* This register is one of a five register set used to monitor the decoder's 
* error correction vector. With RS(528,512) all five are used to capture a 320b 
* error vector. With RS(132,128) the four lower registers capture a 256b error 
* vector. The vector is captured on each cycle that it outputs a non-zero value. 
* Each time an error mask is captured a corresponding valid bit is set in the 
* LCB_ERR_INFO_FEC_CERR_MASK_VLD register indicating that valid data is 
* available to firmware for post-processing. After reading the error mask, 
* firmware clears the valid indication, freeing up the location for subsequent 
* captures. A four deep queue allows capture of closely spaced error vectors. 
* Queue control logic manages all of the write/read operations and handshaking 
* with this error mask register. If the error mask queue and register are both 
* fully utilized while a new capture is being requested, the new request is 
* ignored and the LCB_ERR_INFO_FEC_CERR_MISS_CNT counter is incremented.
*/
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_2					(MNH_SNUP_CSRS + 0x0000000002F0)
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_2_RESETCSR			0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_2_DATA_SHIFT			0
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_2_DATA_MASK			0xFFFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_2_DATA_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #69 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_3
* This register is one of a five register set used to monitor the decoder's 
* error correction vector. With RS(528,512) all five are used to capture a 320b 
* error vector. With RS(132,128) the four lower registers capture a 256b error 
* vector. The vector is captured on each cycle that it outputs a non-zero value. 
* Each time an error mask is captured a corresponding valid bit is set in the 
* LCB_ERR_INFO_FEC_CERR_MASK_VLD register indicating that valid data is 
* available to firmware for post-processing. After reading the error mask, 
* firmware clears the valid indication, freeing up the location for subsequent 
* captures. A four deep queue allows capture of closely spaced error vectors. 
* Queue control logic manages all of the write/read operations and handshaking 
* with this error mask register. If the error mask queue and register are both 
* fully utilized while a new capture is being requested, the new request is 
* ignored and the LCB_ERR_INFO_FEC_CERR_MISS_CNT counter is incremented.
*/
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_3					(MNH_SNUP_CSRS + 0x0000000002F8)
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_3_RESETCSR			0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_3_DATA_SHIFT			0
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_3_DATA_MASK			0xFFFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_3_DATA_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #70 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_4
* This register is one of a five register set used to monitor the decoder's 
* error correction vector. With RS(528,512) all five are used to capture a 320b 
* error vector. With RS(132,128) the four lower registers capture a 256b error 
* vector. The vector is captured on each cycle that it outputs a non-zero value. 
* Each time an error mask is captured a corresponding valid bit is set in the 
* LCB_ERR_INFO_FEC_CERR_MASK_VLD register indicating that valid data is 
* available to firmware for post-processing. After reading the error mask, 
* firmware clears the valid indication, freeing up the location for subsequent 
* captures. A four deep queue allows capture of closely spaced error vectors. 
* Queue control logic manages all of the write/read operations and handshaking 
* with this error mask register. If the error mask queue and register are both 
* fully utilized while a new capture is being requested, the new request is 
* ignored and the LCB_ERR_INFO_FEC_CERR_MISS_CNT counter is incremented.
*/
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_4					(MNH_SNUP_CSRS + 0x000000000300)
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_4_RESETCSR			0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_4_DATA_SHIFT			0
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_4_DATA_MASK			0xFFFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_4_DATA_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #71 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_VLD
* Data valid bit for SNP_UPSTRM_ERR_INFO_CERR_MASK_*.
*/
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_VLD				(MNH_SNUP_CSRS + 0x000000000308)
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_VLD_RESETCSR			0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_VLD_UNUSED_63_1_SHIFT		1
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_VLD_UNUSED_63_1_MASK		0x7FFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_VLD_UNUSED_63_1_SMASK		0xFFFFFFFFFFFFFFFEull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_VLD_VAL_SHIFT			0
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_VLD_VAL_MASK			0x1ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_VLD_VAL_SMASK			0x1ull
/*
* Table #72 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_MISS_CNT
* Number of missed error mask captures. If LCB_ERR_INFO_FEC_CERR_MASK is full 
* while a request for a capture is active, the error vector is dropped, and this 
* counter increments.
*/
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_MISS_CNT				(MNH_SNUP_CSRS + 0x000000000310)
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_MISS_CNT_RESETCSR			0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_MISS_CNT_UNUSED_63_32_SHIFT	32
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_MISS_CNT_UNUSED_63_32_MASK	0xFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_MISS_CNT_UNUSED_63_32_SMASK	0xFFFFFFFF00000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_MISS_CNT_DATA_SHIFT		0
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_MISS_CNT_DATA_MASK		0xFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_CERR_MASK_MISS_CNT_DATA_SMASK		0xFFFFFFFFull
/*
* Table #73 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_FEC_ERR_LN0
* The data in ERR_INFO_FEC_CERR_MASK is presented as 4 lanes x lane width (64 or 
* 80 bits), and is used to generate an error event count for each physical lane. 
* Each time the lane specific data of ERR_INFO_FEC_CERR_MASK is nonzero, the 
* appropriate error event counter increments. This allows detection of weak 
* physical lanes by knowing which lanes experienced symbol correction most 
* often. This field is cleared with CFG_CRC_CNTR_RESET.CLR_FEC_ERR_CNTRS
*/
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN0					(MNH_SNUP_CSRS + 0x000000000318)
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN0_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN0_UNUSED_63_48_SHIFT			48
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN0_UNUSED_63_48_MASK			0xFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN0_UNUSED_63_48_SMASK			0xFFFF000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN0_DATA_SHIFT				0
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN0_DATA_MASK				0xFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN0_DATA_SMASK				0xFFFFFFFFFFFFull
/*
* Table #74 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_FEC_ERR_LN1
* The data in ERR_INFO_FEC_CERR_MASK is presented as 4 lanes x lane width (64 or 
* 80 bits), and is used to generate an error event count for each physical lane. 
* Each time the lane specific data of ERR_INFO_FEC_CERR_MASK is nonzero, the 
* appropriate error event counter increments. This allows detection of weak 
* physical lanes by knowing which lanes experienced symbol correction most 
* often. This field is cleared with CFG_CRC_CNTR_RESET.CLR_FEC_ERR_CNTRS
*/
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN1					(MNH_SNUP_CSRS + 0x000000000320)
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN1_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN1_UNUSED_63_48_SHIFT			48
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN1_UNUSED_63_48_MASK			0xFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN1_UNUSED_63_48_SMASK			0xFFFF000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN1_DATA_SHIFT				0
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN1_DATA_MASK				0xFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN1_DATA_SMASK				0xFFFFFFFFFFFFull
/*
* Table #75 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_FEC_ERR_LN2
* The data in ERR_INFO_FEC_CERR_MASK is presented as 4 lanes x lane width (64 or 
* 80 bits), and is used to generate an error event count for each physical lane. 
* Each time the lane specific data of ERR_INFO_FEC_CERR_MASK is nonzero, the 
* appropriate error event counter increments. This allows detection of weak 
* physical lanes by knowing which lanes experienced symbol correction most 
* often. This field is cleared with CFG_CRC_CNTR_RESET.CLR_FEC_ERR_CNTRS
*/
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN2					(MNH_SNUP_CSRS + 0x000000000328)
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN2_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN2_UNUSED_63_48_SHIFT			48
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN2_UNUSED_63_48_MASK			0xFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN2_UNUSED_63_48_SMASK			0xFFFF000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN2_DATA_SHIFT				0
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN2_DATA_MASK				0xFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN2_DATA_SMASK				0xFFFFFFFFFFFFull
/*
* Table #76 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_ERR_INFO_FEC_ERR_LN3
* The data in ERR_INFO_FEC_CERR_MASK is presented as 4 lanes x lane width (64 or 
* 80 bits), and is used to generate an error event count for each physical lane. 
* Each time the lane specific data of ERR_INFO_FEC_CERR_MASK is nonzero, the 
* appropriate error event counter increments. This allows detection of weak 
* physical lanes by knowing which lanes experienced symbol correction most 
* often. This field is cleared with CFG_CRC_CNTR_RESET.CLR_FEC_ERR_CNTRS
*/
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN3					(MNH_SNUP_CSRS + 0x000000000330)
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN3_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN3_UNUSED_63_48_SHIFT			48
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN3_UNUSED_63_48_MASK			0xFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN3_UNUSED_63_48_SMASK			0xFFFF000000000000ull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN3_DATA_SHIFT				0
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN3_DATA_MASK				0xFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_ERR_INFO_FEC_ERR_LN3_DATA_SMASK				0xFFFFFFFFFFFFull
/*
* Table #77 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_PRF_GOOD_LTP_CNT
* This register is used to report the LTP count with a good CRC. This will 
* assist with BER calculations. The TOTAL_CRC_ERR_CNT / (GOOD_LTP_CNT + 
* TOTAL_CRC_ERR_CNT) is the event error rate (EER). The BER will equal the 
* EER/1056 if there is only one bit error per event (CRC error), otherwise it is 
* larger.
*/
#define MNH_SNP_UPSTRM_PRF_GOOD_LTP_CNT						(MNH_SNUP_CSRS + 0x000000000400)
#define MNH_SNP_UPSTRM_PRF_GOOD_LTP_CNT_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_PRF_GOOD_LTP_CNT_VAL_SHIFT				0
#define MNH_SNP_UPSTRM_PRF_GOOD_LTP_CNT_VAL_MASK				0xFFFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_PRF_GOOD_LTP_CNT_VAL_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #78 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_PRF_ACCEPTED_LTP_CNT
* This register is used to report the LTP count with a good CRC accepted into 
* the receive buffer. This will assist with performance monitor calculations. 
* GOOD_LTP_CNT + TOTAL_CRC_ERR_CNT is the total LTP count. The ACCEPTED_LTP_CNT 
* is the number that carry real payload delivered to the core. Null LTPs (replay 
* buffer full due to a too long of a round trip time), LTPs with CRC errors, and 
* good but tossed (waiting for a retransmission to begin) LTPs are not 
* accepted.
*/
#define MNH_SNP_UPSTRM_PRF_ACCEPTED_LTP_CNT					(MNH_SNUP_CSRS + 0x000000000408)
#define MNH_SNP_UPSTRM_PRF_ACCEPTED_LTP_CNT_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_PRF_ACCEPTED_LTP_CNT_VAL_SHIFT				0
#define MNH_SNP_UPSTRM_PRF_ACCEPTED_LTP_CNT_VAL_MASK				0xFFFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_PRF_ACCEPTED_LTP_CNT_VAL_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #79 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_PRF_GOOD_FECCW_CNT
* This register reports the number of good received FEC code words, without 
* correctable or uncorrectable errors. Used in conjunction with the error 
* information registers for FEC codewords, corrected code word error ratios, 
* uncorrected code word error ratios, and FEC symbol error ratios can be 
* calculated.
*/
#define MNH_SNP_UPSTRM_PRF_GOOD_FECCW_CNT					(MNH_SNUP_CSRS + 0x000000000410)
#define MNH_SNP_UPSTRM_PRF_GOOD_FECCW_CNT_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_PRF_GOOD_FECCW_CNT_CNT_SHIFT				0
#define MNH_SNP_UPSTRM_PRF_GOOD_FECCW_CNT_CNT_MASK				0xFFFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_PRF_GOOD_FECCW_CNT_CNT_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #80 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_STS_RX_LTP_MODE
* This register is used to monitor the status of the Rx side LTP 
* mode.
*/
#define MNH_SNP_UPSTRM_STS_RX_LTP_MODE						(MNH_SNUP_CSRS + 0x000000000440)
#define MNH_SNP_UPSTRM_STS_RX_LTP_MODE_RESETCSR					0x0000000000000000ull
#define MNH_SNP_UPSTRM_STS_RX_LTP_MODE_UNUSED_63_1_SHIFT			1
#define MNH_SNP_UPSTRM_STS_RX_LTP_MODE_UNUSED_63_1_MASK				0x7FFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_STS_RX_LTP_MODE_UNUSED_63_1_SMASK			0xFFFFFFFFFFFFFFFEull
#define MNH_SNP_UPSTRM_STS_RX_LTP_MODE_VAL_SHIFT				0
#define MNH_SNP_UPSTRM_STS_RX_LTP_MODE_VAL_MASK					0x1ull
#define MNH_SNP_UPSTRM_STS_RX_LTP_MODE_VAL_SMASK				0x1ull
/*
* Table #81 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_STS_RX_CRC_FEC_MODE
* This register is used to monitor the status of the Rx side CRC 
* mode.
*/
#define MNH_SNP_UPSTRM_STS_RX_CRC_FEC_MODE					(MNH_SNUP_CSRS + 0x000000000448)
#define MNH_SNP_UPSTRM_STS_RX_CRC_FEC_MODE_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_STS_RX_CRC_FEC_MODE_UNUSED_63_6_SHIFT			6
#define MNH_SNP_UPSTRM_STS_RX_CRC_FEC_MODE_UNUSED_63_6_MASK			0x3FFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_STS_RX_CRC_FEC_MODE_UNUSED_63_6_SMASK			0xFFFFFFFFFFFFFFC0ull
#define MNH_SNP_UPSTRM_STS_RX_CRC_FEC_MODE_FEC_MODE_SHIFT			4
#define MNH_SNP_UPSTRM_STS_RX_CRC_FEC_MODE_FEC_MODE_MASK			0x3ull
#define MNH_SNP_UPSTRM_STS_RX_CRC_FEC_MODE_FEC_MODE_SMASK			0x30ull
#define MNH_SNP_UPSTRM_STS_RX_CRC_FEC_MODE_UNUSED_3_2_SHIFT			2
#define MNH_SNP_UPSTRM_STS_RX_CRC_FEC_MODE_UNUSED_3_2_MASK			0x3ull
#define MNH_SNP_UPSTRM_STS_RX_CRC_FEC_MODE_UNUSED_3_2_SMASK			0xCull
#define MNH_SNP_UPSTRM_STS_RX_CRC_FEC_MODE_CRC_MODE_SHIFT			0
#define MNH_SNP_UPSTRM_STS_RX_CRC_FEC_MODE_CRC_MODE_MASK			0x3ull
#define MNH_SNP_UPSTRM_STS_RX_CRC_FEC_MODE_CRC_MODE_SMASK			0x3ull
/*
* Table #82 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_STS_RX_LOGICAL_ID
* This register reports the Rx logical ID (Peers Tx physical ID) for each 
* lane.
*/
#define MNH_SNP_UPSTRM_STS_RX_LOGICAL_ID					(MNH_SNUP_CSRS + 0x000000000450)
#define MNH_SNP_UPSTRM_STS_RX_LOGICAL_ID_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_STS_RX_LOGICAL_ID_UNUSED_63_15_SHIFT			15
#define MNH_SNP_UPSTRM_STS_RX_LOGICAL_ID_UNUSED_63_15_MASK			0x1FFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_STS_RX_LOGICAL_ID_UNUSED_63_15_SMASK			0xFFFFFFFFFFFF8000ull
#define MNH_SNP_UPSTRM_STS_RX_LOGICAL_ID_LN3_SHIFT				12
#define MNH_SNP_UPSTRM_STS_RX_LOGICAL_ID_LN3_MASK				0x7ull
#define MNH_SNP_UPSTRM_STS_RX_LOGICAL_ID_LN3_SMASK				0x7000ull
#define MNH_SNP_UPSTRM_STS_RX_LOGICAL_ID_UNUSED_11_SHIFT			11
#define MNH_SNP_UPSTRM_STS_RX_LOGICAL_ID_UNUSED_11_MASK				0x1ull
#define MNH_SNP_UPSTRM_STS_RX_LOGICAL_ID_UNUSED_11_SMASK			0x800ull
#define MNH_SNP_UPSTRM_STS_RX_LOGICAL_ID_LN2_SHIFT				8
#define MNH_SNP_UPSTRM_STS_RX_LOGICAL_ID_LN2_MASK				0x7ull
#define MNH_SNP_UPSTRM_STS_RX_LOGICAL_ID_LN2_SMASK				0x700ull
#define MNH_SNP_UPSTRM_STS_RX_LOGICAL_ID_UNUSED_7_SHIFT				7
#define MNH_SNP_UPSTRM_STS_RX_LOGICAL_ID_UNUSED_7_MASK				0x1ull
#define MNH_SNP_UPSTRM_STS_RX_LOGICAL_ID_UNUSED_7_SMASK				0x80ull
#define MNH_SNP_UPSTRM_STS_RX_LOGICAL_ID_LN1_SHIFT				4
#define MNH_SNP_UPSTRM_STS_RX_LOGICAL_ID_LN1_MASK				0x7ull
#define MNH_SNP_UPSTRM_STS_RX_LOGICAL_ID_LN1_SMASK				0x70ull
#define MNH_SNP_UPSTRM_STS_RX_LOGICAL_ID_UNUSED_3_SHIFT				3
#define MNH_SNP_UPSTRM_STS_RX_LOGICAL_ID_UNUSED_3_MASK				0x1ull
#define MNH_SNP_UPSTRM_STS_RX_LOGICAL_ID_UNUSED_3_SMASK				0x8ull
#define MNH_SNP_UPSTRM_STS_RX_LOGICAL_ID_LN0_SHIFT				0
#define MNH_SNP_UPSTRM_STS_RX_LOGICAL_ID_LN0_MASK				0x7ull
#define MNH_SNP_UPSTRM_STS_RX_LOGICAL_ID_LN0_SMASK				0x7ull
/*
* Table #83 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_STS_RX_SHIFTED_LN_NUM
* This register reports the Rx logical ID (Peers Tx physical ID) for each 
* lane.
*/
#define MNH_SNP_UPSTRM_STS_RX_SHIFTED_LN_NUM					(MNH_SNUP_CSRS + 0x000000000458)
#define MNH_SNP_UPSTRM_STS_RX_SHIFTED_LN_NUM_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_STS_RX_SHIFTED_LN_NUM_UNUSED_63_15_SHIFT			15
#define MNH_SNP_UPSTRM_STS_RX_SHIFTED_LN_NUM_UNUSED_63_15_MASK			0x1FFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_STS_RX_SHIFTED_LN_NUM_UNUSED_63_15_SMASK			0xFFFFFFFFFFFF8000ull
#define MNH_SNP_UPSTRM_STS_RX_SHIFTED_LN_NUM_LN3_SHIFT				12
#define MNH_SNP_UPSTRM_STS_RX_SHIFTED_LN_NUM_LN3_MASK				0x7ull
#define MNH_SNP_UPSTRM_STS_RX_SHIFTED_LN_NUM_LN3_SMASK				0x7000ull
#define MNH_SNP_UPSTRM_STS_RX_SHIFTED_LN_NUM_UNUSED_11_SHIFT			11
#define MNH_SNP_UPSTRM_STS_RX_SHIFTED_LN_NUM_UNUSED_11_MASK			0x1ull
#define MNH_SNP_UPSTRM_STS_RX_SHIFTED_LN_NUM_UNUSED_11_SMASK			0x800ull
#define MNH_SNP_UPSTRM_STS_RX_SHIFTED_LN_NUM_LN2_SHIFT				8
#define MNH_SNP_UPSTRM_STS_RX_SHIFTED_LN_NUM_LN2_MASK				0x7ull
#define MNH_SNP_UPSTRM_STS_RX_SHIFTED_LN_NUM_LN2_SMASK				0x700ull
#define MNH_SNP_UPSTRM_STS_RX_SHIFTED_LN_NUM_UNUSED_7_SHIFT			7
#define MNH_SNP_UPSTRM_STS_RX_SHIFTED_LN_NUM_UNUSED_7_MASK			0x1ull
#define MNH_SNP_UPSTRM_STS_RX_SHIFTED_LN_NUM_UNUSED_7_SMASK			0x80ull
#define MNH_SNP_UPSTRM_STS_RX_SHIFTED_LN_NUM_LN1_SHIFT				4
#define MNH_SNP_UPSTRM_STS_RX_SHIFTED_LN_NUM_LN1_MASK				0x7ull
#define MNH_SNP_UPSTRM_STS_RX_SHIFTED_LN_NUM_LN1_SMASK				0x70ull
#define MNH_SNP_UPSTRM_STS_RX_SHIFTED_LN_NUM_UNUSED_3_SHIFT			3
#define MNH_SNP_UPSTRM_STS_RX_SHIFTED_LN_NUM_UNUSED_3_MASK			0x1ull
#define MNH_SNP_UPSTRM_STS_RX_SHIFTED_LN_NUM_UNUSED_3_SMASK			0x8ull
#define MNH_SNP_UPSTRM_STS_RX_SHIFTED_LN_NUM_LN0_SHIFT				0
#define MNH_SNP_UPSTRM_STS_RX_SHIFTED_LN_NUM_LN0_MASK				0x7ull
#define MNH_SNP_UPSTRM_STS_RX_SHIFTED_LN_NUM_LN0_SMASK				0x7ull
/*
* Table #84 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_STS_RX_PHY_LN_EN
* This register reports the Rx side physical lane enable.
*/
#define MNH_SNP_UPSTRM_STS_RX_PHY_LN_EN						(MNH_SNUP_CSRS + 0x000000000460)
#define MNH_SNP_UPSTRM_STS_RX_PHY_LN_EN_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_STS_RX_PHY_LN_EN_UNUSED_63_12_SHIFT			12
#define MNH_SNP_UPSTRM_STS_RX_PHY_LN_EN_UNUSED_63_12_MASK			0xFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_STS_RX_PHY_LN_EN_UNUSED_63_12_SMASK			0xFFFFFFFFFFFFF000ull
#define MNH_SNP_UPSTRM_STS_RX_PHY_LN_EN_DEGRADE_SHIFT				8
#define MNH_SNP_UPSTRM_STS_RX_PHY_LN_EN_DEGRADE_MASK				0xFull
#define MNH_SNP_UPSTRM_STS_RX_PHY_LN_EN_DEGRADE_SMASK				0xF00ull
#define MNH_SNP_UPSTRM_STS_RX_PHY_LN_EN_INIT_SHIFT				4
#define MNH_SNP_UPSTRM_STS_RX_PHY_LN_EN_INIT_MASK				0xFull
#define MNH_SNP_UPSTRM_STS_RX_PHY_LN_EN_INIT_SMASK				0xF0ull
#define MNH_SNP_UPSTRM_STS_RX_PHY_LN_EN_COMBINED_SHIFT				0
#define MNH_SNP_UPSTRM_STS_RX_PHY_LN_EN_COMBINED_MASK				0xFull
#define MNH_SNP_UPSTRM_STS_RX_PHY_LN_EN_COMBINED_SMASK				0xFull
/*
* Table #85 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_STS_TX_PHY_LN_EN
* This register reports the Tx side physical lane enable.
*/
#define MNH_SNP_UPSTRM_STS_TX_PHY_LN_EN						(MNH_SNUP_CSRS + 0x000000000468)
#define MNH_SNP_UPSTRM_STS_TX_PHY_LN_EN_RESETCSR				0x0000000000000000ull
#define MNH_SNP_UPSTRM_STS_TX_PHY_LN_EN_UNUSED_63_4_SHIFT			4
#define MNH_SNP_UPSTRM_STS_TX_PHY_LN_EN_UNUSED_63_4_MASK			0xFFFFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_STS_TX_PHY_LN_EN_UNUSED_63_4_SMASK			0xFFFFFFFFFFFFFFF0ull
#define MNH_SNP_UPSTRM_STS_TX_PHY_LN_EN_VAL_SHIFT				0
#define MNH_SNP_UPSTRM_STS_TX_PHY_LN_EN_VAL_MASK				0xFull
#define MNH_SNP_UPSTRM_STS_TX_PHY_LN_EN_VAL_SMASK				0xFull
/*
* Table #86 of 148_Snoop_Up_Registers.xml - SNP_UPSTRM_STS_RCV_SMA_MSG
* This register is used by the subnet management agent (SMA) to receive a 
* message from the peer SMA. The SMA software protocol must provide a means to 
* indicate a new message has been received.
*/
#define MNH_SNP_UPSTRM_STS_RCV_SMA_MSG						(MNH_SNUP_CSRS + 0x000000000470)
#define MNH_SNP_UPSTRM_STS_RCV_SMA_MSG_RESETCSR					0x0000000000000000ull
#define MNH_SNP_UPSTRM_STS_RCV_SMA_MSG_UNUSED_63_48_SHIFT			48
#define MNH_SNP_UPSTRM_STS_RCV_SMA_MSG_UNUSED_63_48_MASK			0xFFFFull
#define MNH_SNP_UPSTRM_STS_RCV_SMA_MSG_UNUSED_63_48_SMASK			0xFFFF000000000000ull
#define MNH_SNP_UPSTRM_STS_RCV_SMA_MSG_VAL_SHIFT				0
#define MNH_SNP_UPSTRM_STS_RCV_SMA_MSG_VAL_MASK					0xFFFFFFFFFFFFull
#define MNH_SNP_UPSTRM_STS_RCV_SMA_MSG_VAL_SMASK				0xFFFFFFFFFFFFull

#endif 		/* DEF_MNH_SNUP_SW_DEF */

/*
*------------------------------------------------------------------------------
*                                                                              
*  INTEL CONFIDENTIAL                                                          
*                                                                              
*  Copyright 2016 Intel Corporation All Rights Reserved.                 
*                                                                              
*  The source code contained or described herein and all documents related     
*  to the source code ("Material") are owned by Intel Corporation or its    
*  suppliers or licensors. Title to the Material remains with Intel            
*  Corporation or its suppliers and licensors. The Material contains trade     
*  secrets and proprietary and confidential information of Intel or its        
*  suppliers and licensors. The Material is protected by worldwide copyright   
*  and trade secret laws and treaty provisions. No part of the Material may    
*  be used, copied, reproduced, modified, published, uploaded, posted,         
*  transmitted, distributed, or disclosed in any way without Intel's prior     
*  express written permission.                                                 
*                                                                              
*  No license under any patent, copyright, trade secret or other intellectual  
*  property right is granted to or conferred upon you by disclosure or         
*  delivery of the Materials, either expressly, by implication, inducement,    
*  estoppel or otherwise. Any license under such intellectual property rights  
*  must be express and approved by Intel in writing.                           
*                                                                              
*------------------------------------------------------------------------------
*  Auto-generated by /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/i_csrs.pl
*  i_csrs.pl Version 1.5 last modified on Monday 12/19/16 11:42:34
*  /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/i_csrs.pl -C -RVREGS -ST fxr_tx_ci -unit=fxr_tx_ci_cic_csrs -o /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/fxr /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/repo_xml/300_Memory_Map.xml /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/repo_xml/320_Memory_Map_TX_CI.xml
*------------------------------------------------------------------------------
*/

#ifndef DEF_FXR_TX_CI_CIC_CSRS_SW_DEF
#define DEF_FXR_TX_CI_CIC_CSRS_SW_DEF

#ifndef FXR_TX_CI_CIC_CSRS
#define FXR_TX_CI_CIC_CSRS									0x000000000000ULL
#endif
#define FXR_NUM_CONTEXTS									192
#define FXR_NUM_PIDS										4096
#define FXR_MAX_CONTEXT										191
#define FXR_TX_CONTEXT_ENTRIES									128
#define FXR_TX_CONTEXT_MAX									127
#define FXR_RX_CONTEXT_ENTRIES									16
#define FXR_RX_CONTEXT_MAX									15
#define FXR_NUM_SL										32
#define FXR_MAX_SL										31
#define TXCID_RT_ENTRIES									65536
#define TXCID_RT_MAX										65535
#define TXCID_AUTH_ENTRIES									8
#define TXCID_CSR_OFFSET									0
#define TXCID_CQ_AUTH_OFFSET									0
#define TXCID_CQ_CONFIG_OFFSET									12288
#define TXCID_SL0_TO_TC_OFFSET									13824
#define TXCID_SL1_TO_TC_OFFSET									13832
#define TXCID_MAD_TO_TC_OFFSET									13840
#define TXCID_TO_LIMIT_OFFSET									13848
#define TXCID_DLID_GRAN_OFFSET									17944
#define TXCID_ERROR_BASE									24576
#define TXCID_ERROR_GENERAL_OFFSET								17980
#define TXCID_ERR_CQ_GENERAL_OFFSET								17994
#define TXCID_ERR_MBE_OFFSET									18008
#define TXCID_ERR_CQ_MBE_OFFSET									18016
#define TXCID_ERR_ST_MBE_OFFSET									18030
#define TXCID_CQ_ERR_DLID_MBE_OFFSET								18044
#define TXCID_CQ_OFFSET										1048576
#define TXCID_RT_OFFSET										3145728
#define TXCIC_CSR_OFFSET									0
#define TXCIC_DRAIN_RESET_OFFSET								0
#define TXCIC_UPDATE_CNTRL_OFFSET								8
#define TXCIC_CQ_TAIL_OFFSET									2048
#define TXCIC_ARBITRATION_DISABLE_OFFSET							3584
#define TXCIC_CFG_TO_LIMIT_OFFSET								3592
#define TXCIC_ERROR_BASE									24576
#define TXCIC_ERR_PER_CQ_GENERAL_OFFSET								24832
#define TXCIC_DBG_ERR_INJECT_OFFSET								28672
/*
* Table #4 of fxr_tx_ci_cic_csrs - TXCIC_CFG_DRAIN_RESET
* 
*/
#define FXR_TXCIC_CFG_DRAIN_RESET								(FXR_TX_CI_CIC_CSRS + 0x000000000000)
#define FXR_TXCIC_CFG_DRAIN_RESET_RESETCSR							0x0000000000000000ull
#define FXR_TXCIC_CFG_DRAIN_RESET_RSV_SHIFT							12
#define FXR_TXCIC_CFG_DRAIN_RESET_RSV_MASK							0xFFFFFFFFFFFFFull
#define FXR_TXCIC_CFG_DRAIN_RESET_RSV_SMASK							0xFFFFFFFFFFFFF000ull
#define FXR_TXCIC_CFG_DRAIN_RESET_BUSY_SHIFT							10
#define FXR_TXCIC_CFG_DRAIN_RESET_BUSY_MASK							0x1ull
#define FXR_TXCIC_CFG_DRAIN_RESET_BUSY_SMASK							0x400ull
#define FXR_TXCIC_CFG_DRAIN_RESET_RESET_SHIFT							9
#define FXR_TXCIC_CFG_DRAIN_RESET_RESET_MASK							0x1ull
#define FXR_TXCIC_CFG_DRAIN_RESET_RESET_SMASK							0x200ull
#define FXR_TXCIC_CFG_DRAIN_RESET_DRAIN_SHIFT							8
#define FXR_TXCIC_CFG_DRAIN_RESET_DRAIN_MASK							0x1ull
#define FXR_TXCIC_CFG_DRAIN_RESET_DRAIN_SMASK							0x100ull
#define FXR_TXCIC_CFG_DRAIN_RESET_DRAIN_CQ_SHIFT						0
#define FXR_TXCIC_CFG_DRAIN_RESET_DRAIN_CQ_MASK							0xFFull
#define FXR_TXCIC_CFG_DRAIN_RESET_DRAIN_CQ_SMASK						0xFFull
/*
* Table #5 of fxr_tx_ci_cic_csrs - TXCIC_CFG_HEAD_UPDATE_CNTRL
* This CSR controls how often TX CQ head pointers are written to 
* memory.
*/
#define FXR_TXCIC_CFG_HEAD_UPDATE_CNTRL								(FXR_TX_CI_CIC_CSRS + 0x000000000008)
#define FXR_TXCIC_CFG_HEAD_UPDATE_CNTRL_RESETCSR						0x0000000000000000ull
#define FXR_TXCIC_CFG_HEAD_UPDATE_CNTRL_RSV_SHIFT						3
#define FXR_TXCIC_CFG_HEAD_UPDATE_CNTRL_RSV_MASK						0x1FFFFFFFFFFFFFFFull
#define FXR_TXCIC_CFG_HEAD_UPDATE_CNTRL_RSV_SMASK						0xFFFFFFFFFFFFFFF8ull
#define FXR_TXCIC_CFG_HEAD_UPDATE_CNTRL_RATE_CTRL_SHIFT						0
#define FXR_TXCIC_CFG_HEAD_UPDATE_CNTRL_RATE_CTRL_MASK						0x7ull
#define FXR_TXCIC_CFG_HEAD_UPDATE_CNTRL_RATE_CTRL_SMASK						0x7ull
/*
* Table #6 of fxr_tx_ci_cic_csrs - TXCIC_STS_TAIL
* This is a per command queue entry for reading the CQ tail pointer. Hardware 
* does not have an explicit tail pointer, instead it keeps track of filled 
* slots. On reads, hardware will return a pointer to the first slot after its 
* head pointer that is not full. Writes are ignored.
*/
#define FXR_TXCIC_STS_TAIL									(FXR_TX_CI_CIC_CSRS + 0x000000000800)
#define FXR_TXCIC_STS_TAIL_RESETCSR								0x0000000000000000ull
#define FXR_TXCIC_STS_TAIL_RSV_63_SHIFT								15
#define FXR_TXCIC_STS_TAIL_RSV_63_MASK								0x1FFFFFFFFFFFFull
#define FXR_TXCIC_STS_TAIL_RSV_63_SMASK								0xFFFFFFFFFFFF8000ull
#define FXR_TXCIC_STS_TAIL_HEAD_SHIFT								8
#define FXR_TXCIC_STS_TAIL_HEAD_MASK								0x7Full
#define FXR_TXCIC_STS_TAIL_HEAD_SMASK								0x7F00ull
#define FXR_TXCIC_STS_TAIL_RSV_SHIFT								7
#define FXR_TXCIC_STS_TAIL_RSV_MASK								0x1ull
#define FXR_TXCIC_STS_TAIL_RSV_SMASK								0x80ull
#define FXR_TXCIC_STS_TAIL_TAIL_SHIFT								0
#define FXR_TXCIC_STS_TAIL_TAIL_MASK								0x7Full
#define FXR_TXCIC_STS_TAIL_TAIL_SMASK								0x7Full
/*
* Table #7 of fxr_tx_ci_cic_csrs - TXCIC_ARBITRATION_DISABLE
* Prevent a new message from being arbitrated from the tc(s) that are disabled. 
* If a message has started arbitration, it will finish.
*/
#define FXR_TXCIC_ARBITRATION_DISABLE								(FXR_TX_CI_CIC_CSRS + 0x000000000E00)
#define FXR_TXCIC_ARBITRATION_DISABLE_RESETCSR							0x0000000000000000ull
#define FXR_TXCIC_ARBITRATION_DISABLE_RSV_SHIFT							4
#define FXR_TXCIC_ARBITRATION_DISABLE_RSV_MASK							0xFFFFFFFFFFFFFFFull
#define FXR_TXCIC_ARBITRATION_DISABLE_RSV_SMASK							0xFFFFFFFFFFFFFFF0ull
#define FXR_TXCIC_ARBITRATION_DISABLE_DISABLE_TC_SHIFT						0
#define FXR_TXCIC_ARBITRATION_DISABLE_DISABLE_TC_MASK						0xFull
#define FXR_TXCIC_ARBITRATION_DISABLE_DISABLE_TC_SMASK						0xFull
/*
* Table #8 of fxr_tx_ci_cic_csrs - TXCIC_CFG_TO_LIMIT
* Specifies the amount of time for a command, once started, to finish writing a 
* CQ.
*/
#define FXR_TXCIC_CFG_TO_LIMIT									(FXR_TX_CI_CIC_CSRS + 0x000000000E08)
#define FXR_TXCIC_CFG_TO_LIMIT_RESETCSR								0x0000000000104000ull
#define FXR_TXCIC_CFG_TO_LIMIT_RSV_63_SHIFT							37
#define FXR_TXCIC_CFG_TO_LIMIT_RSV_63_MASK							0x7FFFFFFull
#define FXR_TXCIC_CFG_TO_LIMIT_RSV_63_SMASK							0xFFFFFFE000000000ull
#define FXR_TXCIC_CFG_TO_LIMIT_TO_LIMIT_SHIFT							20
#define FXR_TXCIC_CFG_TO_LIMIT_TO_LIMIT_MASK							0x1FFFFull
#define FXR_TXCIC_CFG_TO_LIMIT_TO_LIMIT_SMASK							0x1FFFF00000ull
#define FXR_TXCIC_CFG_TO_LIMIT_RSV_SHIFT							0
#define FXR_TXCIC_CFG_TO_LIMIT_RSV_MASK								0xFFFFFull
#define FXR_TXCIC_CFG_TO_LIMIT_RSV_SMASK							0xFFFFFull
/*
* Table #9 of fxr_tx_ci_cic_csrs - TXCIC_ERR_STS
* This is the Error Status CSR. Bits are set by hardware or by writing to the 
* TXCIC_ERR_FRC CSR. Bits are cleared by writing to the TXCIC_ERR_CLR CSR. 
* Before clearing the error status, it is required that reason of error is 
* cleared. If that is not done, the error will set again and interrupt will be 
* fired again. MBE or parity error will cause the context to halt, and only 
* valid way to recover is drain + reset. Once the drain + reset is done all the 
* cause of the error is reset for that context.
*/
#define FXR_TXCIC_ERR_STS									(FXR_TX_CI_CIC_CSRS + 0x000000006000)
#define FXR_TXCIC_ERR_STS_RESETCSR								0x0000000000000000ull
#define FXR_TXCIC_ERR_STS_RESERVED_63_14_SHIFT							14
#define FXR_TXCIC_ERR_STS_RESERVED_63_14_MASK							0x3FFFFFFFFFFFFull
#define FXR_TXCIC_ERR_STS_RESERVED_63_14_SMASK							0xFFFFFFFFFFFFC000ull
#define FXR_TXCIC_ERR_STS_CTXT_TIMEOUT_SHIFT							13
#define FXR_TXCIC_ERR_STS_CTXT_TIMEOUT_MASK							0x1ull
#define FXR_TXCIC_ERR_STS_CTXT_TIMEOUT_SMASK							0x2000ull
#define FXR_TXCIC_ERR_STS_QWORD_CNT_ERR_SBE_SHIFT						12
#define FXR_TXCIC_ERR_STS_QWORD_CNT_ERR_SBE_MASK						0x1ull
#define FXR_TXCIC_ERR_STS_QWORD_CNT_ERR_SBE_SMASK						0x1000ull
#define FXR_TXCIC_ERR_STS_QWORD_CNT_ERR_MBE_SHIFT						11
#define FXR_TXCIC_ERR_STS_QWORD_CNT_ERR_MBE_MASK						0x1ull
#define FXR_TXCIC_ERR_STS_QWORD_CNT_ERR_MBE_SMASK						0x800ull
#define FXR_TXCIC_ERR_STS_INV_WRITE_FLUSH_SHIFT							10
#define FXR_TXCIC_ERR_STS_INV_WRITE_FLUSH_MASK							0x1ull
#define FXR_TXCIC_ERR_STS_INV_WRITE_FLUSH_SMASK							0x400ull
#define FXR_TXCIC_ERR_STS_PKT_CTRL_FIFO_RDATA_MBE_SHIFT						9
#define FXR_TXCIC_ERR_STS_PKT_CTRL_FIFO_RDATA_MBE_MASK						0x1ull
#define FXR_TXCIC_ERR_STS_PKT_CTRL_FIFO_RDATA_MBE_SMASK						0x200ull
#define FXR_TXCIC_ERR_STS_PKT_CTRL_FIFO_RDATA_SBE_SHIFT						8
#define FXR_TXCIC_ERR_STS_PKT_CTRL_FIFO_RDATA_SBE_MASK						0x1ull
#define FXR_TXCIC_ERR_STS_PKT_CTRL_FIFO_RDATA_SBE_SMASK						0x100ull
#define FXR_TXCIC_ERR_STS_VL_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_MBE_SHIFT				7
#define FXR_TXCIC_ERR_STS_VL_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_MBE_MASK				0x1ull
#define FXR_TXCIC_ERR_STS_VL_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_MBE_SMASK				0x80ull
#define FXR_TXCIC_ERR_STS_VL_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_SBE_SHIFT				6
#define FXR_TXCIC_ERR_STS_VL_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_SBE_MASK				0x1ull
#define FXR_TXCIC_ERR_STS_VL_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_SBE_SMASK				0x40ull
#define FXR_TXCIC_ERR_STS_PCC_HEAD_SOP_MBE_SHIFT						5
#define FXR_TXCIC_ERR_STS_PCC_HEAD_SOP_MBE_MASK							0x1ull
#define FXR_TXCIC_ERR_STS_PCC_HEAD_SOP_MBE_SMASK						0x20ull
#define FXR_TXCIC_ERR_STS_PCC_HEAD_SOP_SBE_SHIFT						4
#define FXR_TXCIC_ERR_STS_PCC_HEAD_SOP_SBE_MASK							0x1ull
#define FXR_TXCIC_ERR_STS_PCC_HEAD_SOP_SBE_SMASK						0x10ull
#define FXR_TXCIC_ERR_STS_OVERFLOW_ERR_SHIFT							3
#define FXR_TXCIC_ERR_STS_OVERFLOW_ERR_MASK							0x1ull
#define FXR_TXCIC_ERR_STS_OVERFLOW_ERR_SMASK							0x8ull
#define FXR_TXCIC_ERR_STS_TIMEOUT_SM_PAR_ERR_SHIFT						2
#define FXR_TXCIC_ERR_STS_TIMEOUT_SM_PAR_ERR_MASK						0x1ull
#define FXR_TXCIC_ERR_STS_TIMEOUT_SM_PAR_ERR_SMASK						0x4ull
#define FXR_TXCIC_ERR_STS_VLFF_TXE_CFG_SM_PAR_ERROR_SHIFT					1
#define FXR_TXCIC_ERR_STS_VLFF_TXE_CFG_SM_PAR_ERROR_MASK					0x1ull
#define FXR_TXCIC_ERR_STS_VLFF_TXE_CFG_SM_PAR_ERROR_SMASK					0x2ull
#define FXR_TXCIC_ERR_STS_VLF_TXE_CFG_PAR_ERROR_SHIFT						0
#define FXR_TXCIC_ERR_STS_VLF_TXE_CFG_PAR_ERROR_MASK						0x1ull
#define FXR_TXCIC_ERR_STS_VLF_TXE_CFG_PAR_ERROR_SMASK						0x1ull
/*
* Table #10 of fxr_tx_ci_cic_csrs - TXCIC_ERR_CLR
* This is the Error Clear CSR. Writing a 1 to a valid bit will clear the 
* corresponding bit in the TXCIC_ERR_STS CSR.
*/
#define FXR_TXCIC_ERR_CLR									(FXR_TX_CI_CIC_CSRS + 0x000000006008)
#define FXR_TXCIC_ERR_CLR_RESETCSR								0x0000000000000000ull
#define FXR_TXCIC_ERR_CLR_RESERVED_63_14_SHIFT							14
#define FXR_TXCIC_ERR_CLR_RESERVED_63_14_MASK							0x3FFFFFFFFFFFFull
#define FXR_TXCIC_ERR_CLR_RESERVED_63_14_SMASK							0xFFFFFFFFFFFFC000ull
#define FXR_TXCIC_ERR_CLR_VALUE_SHIFT								0
#define FXR_TXCIC_ERR_CLR_VALUE_MASK								0x3FFFull
#define FXR_TXCIC_ERR_CLR_VALUE_SMASK								0x3FFFull
/*
* Table #11 of fxr_tx_ci_cic_csrs - TXCIC_ERR_FRC
* This is the Error Force CSR. Writing a 1 to a valid bit will set the 
* corresponding bit in the TXCIC_ERR_STS CSR.
*/
#define FXR_TXCIC_ERR_FRC									(FXR_TX_CI_CIC_CSRS + 0x000000006010)
#define FXR_TXCIC_ERR_FRC_RESETCSR								0x0000000000000000ull
#define FXR_TXCIC_ERR_FRC_RESERVED_63_14_SHIFT							14
#define FXR_TXCIC_ERR_FRC_RESERVED_63_14_MASK							0x3FFFFFFFFFFFFull
#define FXR_TXCIC_ERR_FRC_RESERVED_63_14_SMASK							0xFFFFFFFFFFFFC000ull
#define FXR_TXCIC_ERR_FRC_VALUE_SHIFT								0
#define FXR_TXCIC_ERR_FRC_VALUE_MASK								0x3FFFull
#define FXR_TXCIC_ERR_FRC_VALUE_SMASK								0x3FFFull
/*
* Table #12 of fxr_tx_ci_cic_csrs - TXCIC_ERR_EN_HOST
* This is the Error Enable for the Host Interrupt. If a bit is set, the 
* corresponding error bit in TXCIC_ERR_STS will cause an interrupt on the HOST 
* interrupt signal.
*/
#define FXR_TXCIC_ERR_EN_HOST									(FXR_TX_CI_CIC_CSRS + 0x000000006018)
#define FXR_TXCIC_ERR_EN_HOST_RESETCSR								0x0000000000000000ull
#define FXR_TXCIC_ERR_EN_HOST_RESERVED_63_14_SHIFT						14
#define FXR_TXCIC_ERR_EN_HOST_RESERVED_63_14_MASK						0x3FFFFFFFFFFFFull
#define FXR_TXCIC_ERR_EN_HOST_RESERVED_63_14_SMASK						0xFFFFFFFFFFFFC000ull
#define FXR_TXCIC_ERR_EN_HOST_VALUE_SHIFT							0
#define FXR_TXCIC_ERR_EN_HOST_VALUE_MASK							0x3FFFull
#define FXR_TXCIC_ERR_EN_HOST_VALUE_SMASK							0x3FFFull
/*
* Table #13 of fxr_tx_ci_cic_csrs - TXCIC_ERR_FIRST_HOST
* This is the First Error CSR for the Host Interrupt. When this CSR is clear, it 
* will capture the next TXCIC_ERR_STS value when a new HOST Interrupt 
* occurs.
*/
#define FXR_TXCIC_ERR_FIRST_HOST								(FXR_TX_CI_CIC_CSRS + 0x000000006020)
#define FXR_TXCIC_ERR_FIRST_HOST_RESETCSR							0x0000000000000000ull
#define FXR_TXCIC_ERR_FIRST_HOST_RESERVED_63_14_SHIFT						14
#define FXR_TXCIC_ERR_FIRST_HOST_RESERVED_63_14_MASK						0x3FFFFFFFFFFFFull
#define FXR_TXCIC_ERR_FIRST_HOST_RESERVED_63_14_SMASK						0xFFFFFFFFFFFFC000ull
#define FXR_TXCIC_ERR_FIRST_HOST_VALUE_SHIFT							0
#define FXR_TXCIC_ERR_FIRST_HOST_VALUE_MASK							0x3FFFull
#define FXR_TXCIC_ERR_FIRST_HOST_VALUE_SMASK							0x3FFFull
/*
* Table #14 of fxr_tx_ci_cic_csrs - TXCIC_ERR_EN_BMC
* This is the Error Enable for the BMC Interrupt. If a bit is set, the 
* corresponding error bit in TXCIC_ERR_STS will cause an interrupt on the BMC 
* interrupt signal.
*/
#define FXR_TXCIC_ERR_EN_BMC									(FXR_TX_CI_CIC_CSRS + 0x000000006028)
#define FXR_TXCIC_ERR_EN_BMC_RESETCSR								0x0000000000000000ull
#define FXR_TXCIC_ERR_EN_BMC_RESERVED_63_14_SHIFT						14
#define FXR_TXCIC_ERR_EN_BMC_RESERVED_63_14_MASK						0x3FFFFFFFFFFFFull
#define FXR_TXCIC_ERR_EN_BMC_RESERVED_63_14_SMASK						0xFFFFFFFFFFFFC000ull
#define FXR_TXCIC_ERR_EN_BMC_VALUE_SHIFT							0
#define FXR_TXCIC_ERR_EN_BMC_VALUE_MASK								0x3FFFull
#define FXR_TXCIC_ERR_EN_BMC_VALUE_SMASK							0x3FFFull
/*
* Table #15 of fxr_tx_ci_cic_csrs - TXCIC_ERR_FIRST_BMC
* This is the First Error CSR for the BMC Interrupt. When this CSR is clear, it 
* will capture the next TXCIC_ERR_STS value when a new BMC Interrupt 
* occurs.
*/
#define FXR_TXCIC_ERR_FIRST_BMC									(FXR_TX_CI_CIC_CSRS + 0x000000006030)
#define FXR_TXCIC_ERR_FIRST_BMC_RESETCSR							0x0000000000000000ull
#define FXR_TXCIC_ERR_FIRST_BMC_RESERVED_63_14_SHIFT						14
#define FXR_TXCIC_ERR_FIRST_BMC_RESERVED_63_14_MASK						0x3FFFFFFFFFFFFull
#define FXR_TXCIC_ERR_FIRST_BMC_RESERVED_63_14_SMASK						0xFFFFFFFFFFFFC000ull
#define FXR_TXCIC_ERR_FIRST_BMC_VALUE_SHIFT							0
#define FXR_TXCIC_ERR_FIRST_BMC_VALUE_MASK							0x3FFFull
#define FXR_TXCIC_ERR_FIRST_BMC_VALUE_SMASK							0x3FFFull
/*
* Table #16 of fxr_tx_ci_cic_csrs - TXCIC_ERR_EN_QUAR
* This is the Error Enable for the Quarantine Interrupt. If a bit is set, the 
* corresponding error bit in TXCIC_ERR_STS will cause an interrupt on the QUAR 
* interrupt signal.
*/
#define FXR_TXCIC_ERR_EN_QUAR									(FXR_TX_CI_CIC_CSRS + 0x000000006038)
#define FXR_TXCIC_ERR_EN_QUAR_RESETCSR								0x0000000000000000ull
#define FXR_TXCIC_ERR_EN_QUAR_RESERVED_63_14_SHIFT						14
#define FXR_TXCIC_ERR_EN_QUAR_RESERVED_63_14_MASK						0x3FFFFFFFFFFFFull
#define FXR_TXCIC_ERR_EN_QUAR_RESERVED_63_14_SMASK						0xFFFFFFFFFFFFC000ull
#define FXR_TXCIC_ERR_EN_QUAR_VALUE_SHIFT							0
#define FXR_TXCIC_ERR_EN_QUAR_VALUE_MASK							0x3FFFull
#define FXR_TXCIC_ERR_EN_QUAR_VALUE_SMASK							0x3FFFull
/*
* Table #17 of fxr_tx_ci_cic_csrs - TXCIC_ERR_FIRST_QUAR
* This is the First Error CSR for the Quarantine Interrupt. When this CSR is 
* clear, it will capture the next TXCIC_ERR_STS value when a new QUAR Interrupt 
* occurs.
*/
#define FXR_TXCIC_ERR_FIRST_QUAR								(FXR_TX_CI_CIC_CSRS + 0x000000006040)
#define FXR_TXCIC_ERR_FIRST_QUAR_RESETCSR							0x0000000000000000ull
#define FXR_TXCIC_ERR_FIRST_QUAR_RESERVED_63_14_SHIFT						14
#define FXR_TXCIC_ERR_FIRST_QUAR_RESERVED_63_14_MASK						0x3FFFFFFFFFFFFull
#define FXR_TXCIC_ERR_FIRST_QUAR_RESERVED_63_14_SMASK						0xFFFFFFFFFFFFC000ull
#define FXR_TXCIC_ERR_FIRST_QUAR_VALUE_SHIFT							0
#define FXR_TXCIC_ERR_FIRST_QUAR_VALUE_MASK							0x3FFFull
#define FXR_TXCIC_ERR_FIRST_QUAR_VALUE_SMASK							0x3FFFull
/*
* Table #18 of fxr_tx_ci_cic_csrs - TXCIC_ERROR_INFO_SBE_MBE_0
* Error Info for the #%%#mbe#%%# and #%%#sbe#%%# events. (There may be many 
* Error Info Registers.)
*/
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_0								(FXR_TX_CI_CIC_CSRS + 0x000000006048)
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_0_RESETCSR							0x0000000000000000ull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_0_RESERVED_63_51_SHIFT					51
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_0_RESERVED_63_51_MASK					0x1FFFull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_0_RESERVED_63_51_SMASK					0xFFF8000000000000ull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_0_CNT_SHIFT						43
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_0_CNT_MASK							0xFFull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_0_CNT_SMASK						0x7F80000000000ull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_0_PKT_CTRL_FIFO_RDATA_SBE_TC_SHIFT				39
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_0_PKT_CTRL_FIFO_RDATA_SBE_TC_MASK				0xFull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_0_PKT_CTRL_FIFO_RDATA_SBE_TC_SMASK				0x78000000000ull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_0_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_SBE_SET_SHIFT		32
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_0_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_SBE_SET_MASK		0x7Full
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_0_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_SBE_SET_SMASK		0x7F00000000ull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_0_PCC_HEAD_SOP_SBE_SET_SHIFT				26
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_0_PCC_HEAD_SOP_SBE_SET_MASK				0x3Full
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_0_PCC_HEAD_SOP_SBE_SET_SMASK				0xFC000000ull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_0_SYNDROME_QWORD_CNT_MEM_SBE_SHIFT				22
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_0_SYNDROME_QWORD_CNT_MEM_SBE_MASK				0xFull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_0_SYNDROME_QWORD_CNT_MEM_SBE_SMASK				0x3C00000ull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_0_QWORD_CNT_MEM_SBE_ADDR_SHIFT				15
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_0_QWORD_CNT_MEM_SBE_ADDR_MASK				0x7Full
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_0_QWORD_CNT_MEM_SBE_ADDR_SMASK				0x3F8000ull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_0_INV_WRITE_FLUSH_ADDR_SHIFT				8
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_0_INV_WRITE_FLUSH_ADDR_MASK				0x7Full
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_0_INV_WRITE_FLUSH_ADDR_SMASK				0x7F00ull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_0_INV_WRITE_FLUSH_CQ_SHIFT					0
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_0_INV_WRITE_FLUSH_CQ_MASK					0xFFull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_0_INV_WRITE_FLUSH_CQ_SMASK					0xFFull
/*
* Table #19 of fxr_tx_ci_cic_csrs - TXCIC_ERROR_INFO_SBE_MBE_1
* Error Info for the #%%#mbe#%%# and #%%#sbe#%%# events. (There may be many 
* Error Info Registers.)
*/
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1								(FXR_TX_CI_CIC_CSRS + 0x000000006050)
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_RESETCSR							0x0000000000000000ull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_RESERVED_63_60_SHIFT					60
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_RESERVED_63_60_MASK					0xFull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_RESERVED_63_60_SMASK					0xF000000000000000ull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_SBE_5_SHIFT	55
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_SBE_5_MASK	0x1Full
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_SBE_5_SMASK	0xF80000000000000ull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_SBE_4_SHIFT	50
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_SBE_4_MASK	0x1Full
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_SBE_4_SMASK	0x7C000000000000ull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_SBE_3_SHIFT	45
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_SBE_3_MASK	0x1Full
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_SBE_3_SMASK	0x3E00000000000ull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_SBE_2_SHIFT	40
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_SBE_2_MASK	0x1Full
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_SBE_2_SMASK	0x1F0000000000ull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_SBE_1_SHIFT	35
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_SBE_1_MASK	0x1Full
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_SBE_1_SMASK	0xF800000000ull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_SBE_0_SHIFT	30
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_SBE_0_MASK	0x1Full
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_SBE_0_SMASK	0x7C0000000ull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_PCC_HEAD_SOP_SBE_5_SHIFT			25
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_PCC_HEAD_SOP_SBE_5_MASK				0x1Full
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_PCC_HEAD_SOP_SBE_5_SMASK			0x3E000000ull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_PCC_HEAD_SOP_SBE_4_SHIFT			20
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_PCC_HEAD_SOP_SBE_4_MASK				0x1Full
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_PCC_HEAD_SOP_SBE_4_SMASK			0x1F00000ull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_PCC_HEAD_SOP_SBE_3_SHIFT			15
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_PCC_HEAD_SOP_SBE_3_MASK				0x1Full
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_PCC_HEAD_SOP_SBE_3_SMASK			0xF8000ull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_PCC_HEAD_SOP_SBE_2_SHIFT			10
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_PCC_HEAD_SOP_SBE_2_MASK				0x1Full
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_PCC_HEAD_SOP_SBE_2_SMASK			0x7C00ull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_PCC_HEAD_SOP_SBE_1_SHIFT			5
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_PCC_HEAD_SOP_SBE_1_MASK				0x1Full
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_PCC_HEAD_SOP_SBE_1_SMASK			0x3E0ull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_PCC_HEAD_SOP_SBE_0_SHIFT			0
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_PCC_HEAD_SOP_SBE_0_MASK				0x1Full
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_1_SYNDROME_PCC_HEAD_SOP_SBE_0_SMASK			0x1Full
/*
* Table #20 of fxr_tx_ci_cic_csrs - TXCIC_ERROR_INFO_SBE_MBE_2
* Error Info for the #%%#mbe#%%# and #%%#sbe#%%# events. (There may be many 
* Error Info Registers.)
*/
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_2								(FXR_TX_CI_CIC_CSRS + 0x000000006058)
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_2_RESETCSR							0x0000000000000000ull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_2_RESERVED_63_24_SHIFT					24
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_2_RESERVED_63_24_MASK					0xFFFFFFFFFFull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_2_RESERVED_63_24_SMASK					0xFFFFFFFFFF000000ull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_2_SYNDROME_PKT_CTRL_FIFO_RDATA_SBE_3_SHIFT			18
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_2_SYNDROME_PKT_CTRL_FIFO_RDATA_SBE_3_MASK			0x3Full
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_2_SYNDROME_PKT_CTRL_FIFO_RDATA_SBE_3_SMASK			0xFC0000ull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_2_SYNDROME_PKT_CTRL_FIFO_RDATA_SBE_2_SHIFT			12
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_2_SYNDROME_PKT_CTRL_FIFO_RDATA_SBE_2_MASK			0x3Full
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_2_SYNDROME_PKT_CTRL_FIFO_RDATA_SBE_2_SMASK			0x3F000ull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_2_SYNDROME_PKT_CTRL_FIFO_RDATA_SBE_1_SHIFT			6
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_2_SYNDROME_PKT_CTRL_FIFO_RDATA_SBE_1_MASK			0x3Full
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_2_SYNDROME_PKT_CTRL_FIFO_RDATA_SBE_1_SMASK			0xFC0ull
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_2_SYNDROME_PKT_CTRL_FIFO_RDATA_SBE_0_SHIFT			0
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_2_SYNDROME_PKT_CTRL_FIFO_RDATA_SBE_0_MASK			0x3Full
#define FXR_TXCIC_ERROR_INFO_SBE_MBE_2_SYNDROME_PKT_CTRL_FIFO_RDATA_SBE_0_SMASK			0x3Full
/*
* Table #21 of fxr_tx_ci_cic_csrs - TXCIC_ENC_ERR_CTXT
* Encoded context number for timeout and the context in error. 
* 
*/
#define FXR_TXCIC_ENC_ERR_CTXT									(FXR_TX_CI_CIC_CSRS + 0x000000006060)
#define FXR_TXCIC_ENC_ERR_CTXT_RESETCSR								0x0000000000000000ull
#define FXR_TXCIC_ENC_ERR_CTXT_RESERVED_63_18_SHIFT						18
#define FXR_TXCIC_ENC_ERR_CTXT_RESERVED_63_18_MASK						0x3FFFFFFFFFFFull
#define FXR_TXCIC_ENC_ERR_CTXT_RESERVED_63_18_SMASK						0xFFFFFFFFFFFC0000ull
#define FXR_TXCIC_ENC_ERR_CTXT_ANY_CTXT_TIMEOUT_SHIFT						17
#define FXR_TXCIC_ENC_ERR_CTXT_ANY_CTXT_TIMEOUT_MASK						0x1ull
#define FXR_TXCIC_ENC_ERR_CTXT_ANY_CTXT_TIMEOUT_SMASK						0x20000ull
#define FXR_TXCIC_ENC_ERR_CTXT_TIMEOUT_CTXT_NUM_SHIFT						9
#define FXR_TXCIC_ENC_ERR_CTXT_TIMEOUT_CTXT_NUM_MASK						0xFFull
#define FXR_TXCIC_ENC_ERR_CTXT_TIMEOUT_CTXT_NUM_SMASK						0x1FE00ull
#define FXR_TXCIC_ENC_ERR_CTXT_ANY_CTXT_IN_ERR_SHIFT						8
#define FXR_TXCIC_ENC_ERR_CTXT_ANY_CTXT_IN_ERR_MASK						0x1ull
#define FXR_TXCIC_ENC_ERR_CTXT_ANY_CTXT_IN_ERR_SMASK						0x100ull
#define FXR_TXCIC_ENC_ERR_CTXT_ERR_CTXT_NUM_SHIFT						0
#define FXR_TXCIC_ENC_ERR_CTXT_ERR_CTXT_NUM_MASK						0xFFull
#define FXR_TXCIC_ENC_ERR_CTXT_ERR_CTXT_NUM_SMASK						0xFFull
/*
* Table #22 of fxr_tx_ci_cic_csrs - TXCIC_ERR_PER_CQ_INFO_GENERAL
* TXCIC_CQ_ERROR_GENERAL contains error bits which get cleared through the 
* drain/reset mechanism. When ever any of these error bits are set, the Host 
* needs to stop traffic to that CQ, initiate a CQ reset. After the CQ reset 
* completes, these errors would be cleared. We can then clear the corresponding 
* error bit inside the TXCIC_ERR_STS register. The respective TXCIC_ERR_STS 
* error bit is a logical 'Or' of this per context/CQ register.
*/
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL							(FXR_TX_CI_CIC_CSRS + 0x000000006100)
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_RESETCSR						0x0000000000000000ull
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_RESERVED_63_10_SHIFT					10
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_RESERVED_63_10_MASK					0x3FFFFFFFFFFFFFull
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_RESERVED_63_10_SMASK					0xFFFFFFFFFFFFFC00ull
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_CTXT_TIMEOUT_SHIFT					9
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_CTXT_TIMEOUT_MASK					0x1ull
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_CTXT_TIMEOUT_SMASK					0x200ull
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_CTXT_IN_ERROR_SHIFT					8
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_CTXT_IN_ERROR_MASK					0x1ull
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_CTXT_IN_ERROR_SMASK					0x100ull
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_QWORD_CNT_ERR_MBE_SHIFT				7
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_QWORD_CNT_ERR_MBE_MASK				0x1ull
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_QWORD_CNT_ERR_MBE_SMASK				0x80ull
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_PKT_CTRL_FIFO_RDATA_MBE_SHIFT				6
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_PKT_CTRL_FIFO_RDATA_MBE_MASK				0x1ull
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_PKT_CTRL_FIFO_RDATA_MBE_SMASK				0x40ull
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_VL_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_MBE_SHIFT		5
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_VL_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_MBE_MASK		0x1ull
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_VL_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_MBE_SMASK		0x20ull
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_PCC_HEAD_SOP_MBE_SHIFT				4
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_PCC_HEAD_SOP_MBE_MASK					0x1ull
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_PCC_HEAD_SOP_MBE_SMASK				0x10ull
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_OVERFLOW_ERR_SHIFT					3
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_OVERFLOW_ERR_MASK					0x1ull
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_OVERFLOW_ERR_SMASK					0x8ull
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_TIMEOUT_SM_PAR_ERR_SHIFT				2
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_TIMEOUT_SM_PAR_ERR_MASK				0x1ull
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_TIMEOUT_SM_PAR_ERR_SMASK				0x4ull
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_VLFF_TXE_CFG_SM_PAR_ERROR_SHIFT			1
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_VLFF_TXE_CFG_SM_PAR_ERROR_MASK			0x1ull
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_VLFF_TXE_CFG_SM_PAR_ERROR_SMASK			0x2ull
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_VLF_TXE_CFG_PAR_ERROR_SHIFT				0
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_VLF_TXE_CFG_PAR_ERROR_MASK				0x1ull
#define FXR_TXCIC_ERR_PER_CQ_INFO_GENERAL_VLF_TXE_CFG_PAR_ERROR_SMASK				0x1ull
/*
* Table #23 of fxr_tx_ci_cic_csrs - TXCIC_DBG_ERR_INJECT
* TXCIC_CQ_ERROR_INJECT
*/
#define FXR_TXCIC_DBG_ERR_INJECT								(FXR_TX_CI_CIC_CSRS + 0x000000007000)
#define FXR_TXCIC_DBG_ERR_INJECT_RESETCSR							0x0000000000000000ull
#define FXR_TXCIC_DBG_ERR_INJECT_RESERVED_63_37_SHIFT						37
#define FXR_TXCIC_DBG_ERR_INJECT_RESERVED_63_37_MASK						0x7FFFFFFull
#define FXR_TXCIC_DBG_ERR_INJECT_RESERVED_63_37_SMASK						0xFFFFFFE000000000ull
#define FXR_TXCIC_DBG_ERR_INJECT_INJECT_QWORD_CNT_ERR_SHIFT					36
#define FXR_TXCIC_DBG_ERR_INJECT_INJECT_QWORD_CNT_ERR_MASK					0x1ull
#define FXR_TXCIC_DBG_ERR_INJECT_INJECT_QWORD_CNT_ERR_SMASK					0x1000000000ull
#define FXR_TXCIC_DBG_ERR_INJECT_INJECT_QWORD_CNT_ERR_MASK_SHIFT				32
#define FXR_TXCIC_DBG_ERR_INJECT_INJECT_QWORD_CNT_ERR_MASK_MASK					0xFull
#define FXR_TXCIC_DBG_ERR_INJECT_INJECT_QWORD_CNT_ERR_MASK_SMASK				0xF00000000ull
#define FXR_TXCIC_DBG_ERR_INJECT_INJECT_PKT_CTRL_FIFO_RDATA_SHIFT				28
#define FXR_TXCIC_DBG_ERR_INJECT_INJECT_PKT_CTRL_FIFO_RDATA_MASK				0xFull
#define FXR_TXCIC_DBG_ERR_INJECT_INJECT_PKT_CTRL_FIFO_RDATA_SMASK				0xF0000000ull
#define FXR_TXCIC_DBG_ERR_INJECT_INJECT_PKT_CTRL_FIFO_RDATA_MASK_SHIFT				22
#define FXR_TXCIC_DBG_ERR_INJECT_INJECT_PKT_CTRL_FIFO_RDATA_MASK_MASK				0x3Full
#define FXR_TXCIC_DBG_ERR_INJECT_INJECT_PKT_CTRL_FIFO_RDATA_MASK_SMASK				0xFC00000ull
#define FXR_TXCIC_DBG_ERR_INJECT_INJECT_VL_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_SHIFT		16
#define FXR_TXCIC_DBG_ERR_INJECT_INJECT_VL_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_MASK		0x3Full
#define FXR_TXCIC_DBG_ERR_INJECT_INJECT_VL_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_SMASK		0x3F0000ull
#define FXR_TXCIC_DBG_ERR_INJECT_INJECT_VL_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_MASK_SHIFT		11
#define FXR_TXCIC_DBG_ERR_INJECT_INJECT_VL_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_MASK_MASK		0x1Full
#define FXR_TXCIC_DBG_ERR_INJECT_INJECT_VL_LEN_MEM_ARB_PCVLARB_Q2_RDATA_ECC_MASK_SMASK		0xF800ull
#define FXR_TXCIC_DBG_ERR_INJECT_INJECT_PCC_HEAD_SOP_ERR_SHIFT					5
#define FXR_TXCIC_DBG_ERR_INJECT_INJECT_PCC_HEAD_SOP_ERR_MASK					0x3Full
#define FXR_TXCIC_DBG_ERR_INJECT_INJECT_PCC_HEAD_SOP_ERR_SMASK					0x7E0ull
#define FXR_TXCIC_DBG_ERR_INJECT_INJECT_PCC_HEAD_SOP_ERR_MASK_SHIFT				0
#define FXR_TXCIC_DBG_ERR_INJECT_INJECT_PCC_HEAD_SOP_ERR_MASK_MASK				0x1Full
#define FXR_TXCIC_DBG_ERR_INJECT_INJECT_PCC_HEAD_SOP_ERR_MASK_SMASK				0x1Full
/*
* Table #24 of fxr_tx_ci_cic_csrs - TXCIC_DBG_VISA_MON
* TXCIC visa context and tc to be monitored
*/
#define FXR_TXCIC_DBG_VISA_MON									(FXR_TX_CI_CIC_CSRS + 0x000000007008)
#define FXR_TXCIC_DBG_VISA_MON_RESETCSR								0x0000000000000000ull
#define FXR_TXCIC_DBG_VISA_MON_RESERVED_63_10_SHIFT						10
#define FXR_TXCIC_DBG_VISA_MON_RESERVED_63_10_MASK						0x3FFFFFFFFFFFFFull
#define FXR_TXCIC_DBG_VISA_MON_RESERVED_63_10_SMASK						0xFFFFFFFFFFFFFC00ull
#define FXR_TXCIC_DBG_VISA_MON_VISA_MON_TC_SHIFT						8
#define FXR_TXCIC_DBG_VISA_MON_VISA_MON_TC_MASK							0x3ull
#define FXR_TXCIC_DBG_VISA_MON_VISA_MON_TC_SMASK						0x300ull
#define FXR_TXCIC_DBG_VISA_MON_VISA_MON_CTXT_SHIFT						0
#define FXR_TXCIC_DBG_VISA_MON_VISA_MON_CTXT_MASK						0xFFull
#define FXR_TXCIC_DBG_VISA_MON_VISA_MON_CTXT_SMASK						0xFFull

#endif 		/* DEF_FXR_TX_CI_CIC_CSRS_SW_DEF */

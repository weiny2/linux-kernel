/*
* -------------------------------------------------------------------
* --                      Intel Proprietary
* --              Copyright (C) 2014 Intel Corporation
* --                    All Rights Reserved
* -------------------------------------------------------------------
* --           Auto-generated by /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/i_csrs.pl 
* --  i_csrs.pl Version 1.5 last modified on Monday 4/9/18 13:24:08
* --   /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/i_csrs.pl -C -RVREGS -ST fxr_gbl -o /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/fxr /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/repo_xml/300_Memory_Map.xml /nfs/sc/disks/slx_0108/pvesv/fxr_autogen/repo_xml/347_Memory_Map_GLOBAL.xml  
* --------------------------------------------------------------------
*/

#ifndef DEF_FXR_GBL_SW_DEF
#define DEF_FXR_GBL_SW_DEF

/*
* Table #4 of 347_Memory_Map_GLOBAL.xml - ASIC_CFG_DRV_STR
* This CSR is used to control the drive strength of GPIO and QSFP pins in FXR. 
* The fields are broken out here to show how the 2-bit fields control the drive 
* strength of different #%%#FXR#%%# ASIC miscellaneous output pins.
*/
#define FXR_ASIC_CFG_DRV_STR			(FXR_GBL_CSRS + 0x000000000000)
#define FXR_ASIC_CFG_DRV_STR_RESETCSR		0x000000000000000Aull
#define FXR_ASIC_CFG_DRV_STR_DRV_STR_GPIO_SHIFT	2
#define FXR_ASIC_CFG_DRV_STR_DRV_STR_GPIO_MASK	0x3ull
#define FXR_ASIC_CFG_DRV_STR_DRV_STR_GPIO_SMASK	0xCull
#define FXR_ASIC_CFG_DRV_STR_DRV_STR_QSFP_SHIFT	0
#define FXR_ASIC_CFG_DRV_STR_DRV_STR_QSFP_MASK	0x3ull
#define FXR_ASIC_CFG_DRV_STR_DRV_STR_QSFP_SMASK	0x3ull
/*
* Table #5 of 347_Memory_Map_GLOBAL.xml - ASIC_GPIO_IN
* This CSR is used to read the current value of the GPIO pins (prior to any 
* inversion).
*/
#define FXR_ASIC_GPIO_IN			(FXR_GBL_CSRS + 0x000000000008)
#define FXR_ASIC_GPIO_IN_RESETCSR		0x0000000000000000ull
#define FXR_ASIC_GPIO_IN_GPIO_IN_SHIFT		0
#define FXR_ASIC_GPIO_IN_GPIO_IN_MASK		0x3FFull
#define FXR_ASIC_GPIO_IN_GPIO_IN_SMASK		0x3FFull
/*
* Table #6 of 347_Memory_Map_GLOBAL.xml - ASIC_GPIO_OE
* This CSR specifies the output enable for the GPIO pins.
*/
#define FXR_ASIC_GPIO_OE			(FXR_GBL_CSRS + 0x000000000010)
#define FXR_ASIC_GPIO_OE_RESETCSR		0x0000000000000000ull
#define FXR_ASIC_GPIO_OE_GPIO_OE_SHIFT		0
#define FXR_ASIC_GPIO_OE_GPIO_OE_MASK		0x3FFull
#define FXR_ASIC_GPIO_OE_GPIO_OE_SMASK		0x3FFull
/*
* Table #7 of 347_Memory_Map_GLOBAL.xml - ASIC_GPIO_INVERT
* This CSR specifies whether the read value of the GPIO pins should be inverted 
* or not.
*/
#define FXR_ASIC_GPIO_INVERT			(FXR_GBL_CSRS + 0x000000000018)
#define FXR_ASIC_GPIO_INVERT_RESETCSR		0x0000000000000000ull
#define FXR_ASIC_GPIO_INVERT_GPIO_INVERT_SHIFT	0
#define FXR_ASIC_GPIO_INVERT_GPIO_INVERT_MASK	0x3FFull
#define FXR_ASIC_GPIO_INVERT_GPIO_INVERT_SMASK	0x3FFull
/*
* Table #8 of 347_Memory_Map_GLOBAL.xml - ASIC_GPIO_OUT
* This CSR specifies the output value of the GPIO pins.
*/
#define FXR_ASIC_GPIO_OUT			(FXR_GBL_CSRS + 0x000000000020)
#define FXR_ASIC_GPIO_OUT_RESETCSR		0x0000000000000000ull
#define FXR_ASIC_GPIO_OUT_GPIO_OUT_SHIFT	0
#define FXR_ASIC_GPIO_OUT_GPIO_OUT_MASK		0x3FFull
#define FXR_ASIC_GPIO_OUT_GPIO_OUT_SMASK	0x3FFull
/*
* Table #9 of 347_Memory_Map_GLOBAL.xml - ASIC_GPIO_MASK
* This CSR specifies the mask value for the GPIO pins and is used to mask the 
* GPIO status value to indicate whether the GPIO interrupt is to be 
* delivered.
*/
#define FXR_ASIC_GPIO_MASK			(FXR_GBL_CSRS + 0x000000000028)
#define FXR_ASIC_GPIO_MASK_RESETCSR		0x0000000000000000ull
#define FXR_ASIC_GPIO_MASK_GPIO_MASK_SHIFT	0
#define FXR_ASIC_GPIO_MASK_GPIO_MASK_MASK	0x3FFull
#define FXR_ASIC_GPIO_MASK_GPIO_MASK_SMASK	0x3FFull
/*
* Table #10 of 347_Memory_Map_GLOBAL.xml - ASIC_GPIO_STATUS
* This CSR can be used to read the GPIO status.
*/
#define FXR_ASIC_GPIO_STATUS			(FXR_GBL_CSRS + 0x000000000030)
#define FXR_ASIC_GPIO_STATUS_RESETCSR		0x0000000000000000ull
#define FXR_ASIC_GPIO_STATUS_GPIO_STATUS_SHIFT	0
#define FXR_ASIC_GPIO_STATUS_GPIO_STATUS_MASK	0x3FFull
#define FXR_ASIC_GPIO_STATUS_GPIO_STATUS_SMASK	0x3FFull
/*
* Table #11 of 347_Memory_Map_GLOBAL.xml - ASIC_GPIO_CLEAR
* This CSR can be used to clear the GPIO status.
*/
#define FXR_ASIC_GPIO_CLEAR			(FXR_GBL_CSRS + 0x000000000038)
#define FXR_ASIC_GPIO_CLEAR_RESETCSR		0x0000000000000000ull
#define FXR_ASIC_GPIO_CLEAR_GPIO_CLEAR_SHIFT	0
#define FXR_ASIC_GPIO_CLEAR_GPIO_CLEAR_MASK	0x3FFull
#define FXR_ASIC_GPIO_CLEAR_GPIO_CLEAR_SMASK	0x3FFull
/*
* Table #12 of 347_Memory_Map_GLOBAL.xml - ASIC_GPIO_FORCE
* This CSR can be used to force the GPIO status.
*/
#define FXR_ASIC_GPIO_FORCE			(FXR_GBL_CSRS + 0x000000000040)
#define FXR_ASIC_GPIO_FORCE_RESETCSR		0x0000000000000000ull
#define FXR_ASIC_GPIO_FORCE_GPIO_FORCE_SHIFT	0
#define FXR_ASIC_GPIO_FORCE_GPIO_FORCE_MASK	0x3FFull
#define FXR_ASIC_GPIO_FORCE_GPIO_FORCE_SMASK	0x3FFull
/*
* Table #13 of 347_Memory_Map_GLOBAL.xml - ASIC_QSFP_IN
* This CSR is used to read the current value of the QSFP pins (prior to any 
* inversion).
*/
#define FXR_ASIC_QSFP_IN			(FXR_GBL_CSRS + 0x000000000048)
#define FXR_ASIC_QSFP_IN_RESETCSR		0x000000000000001Bull
#define FXR_ASIC_QSFP_IN_QSFP_IN_SHIFT		0
#define FXR_ASIC_QSFP_IN_QSFP_IN_MASK		0x1Full
#define FXR_ASIC_QSFP_IN_QSFP_IN_SMASK		0x1Full
/*
* Table #14 of 347_Memory_Map_GLOBAL.xml - ASIC_QSFP_OE
* This CSR specifies the output enable for the QSFP pins.
*/
#define FXR_ASIC_QSFP_OE			(FXR_GBL_CSRS + 0x000000000050)
#define FXR_ASIC_QSFP_OE_RESETCSR		0x0000000000000000ull
#define FXR_ASIC_QSFP_OE_QSFP_OE_SHIFT		0
#define FXR_ASIC_QSFP_OE_QSFP_OE_MASK		0x1Full
#define FXR_ASIC_QSFP_OE_QSFP_OE_SMASK		0x1Full
/*
* Table #15 of 347_Memory_Map_GLOBAL.xml - ASIC_QSFP_INVERT
* This CSR specifies whether the read value of the QSFP pins should be inverted 
* or not.
*/
#define FXR_ASIC_QSFP_INVERT			(FXR_GBL_CSRS + 0x000000000058)
#define FXR_ASIC_QSFP_INVERT_RESETCSR		0x0000000000000000ull
#define FXR_ASIC_QSFP_INVERT_QSFP_INVERT_SHIFT	0
#define FXR_ASIC_QSFP_INVERT_QSFP_INVERT_MASK	0x1Full
#define FXR_ASIC_QSFP_INVERT_QSFP_INVERT_SMASK	0x1Full
/*
* Table #16 of 347_Memory_Map_GLOBAL.xml - ASIC_QSFP_OUT
* This CSR specifies the output value of the QSFP pins.
*/
#define FXR_ASIC_QSFP_OUT			(FXR_GBL_CSRS + 0x000000000060)
#define FXR_ASIC_QSFP_OUT_RESETCSR		0x0000000000000004ull
#define FXR_ASIC_QSFP_OUT_QSFP_OUT_SHIFT	0
#define FXR_ASIC_QSFP_OUT_QSFP_OUT_MASK		0x1Full
#define FXR_ASIC_QSFP_OUT_QSFP_OUT_SMASK	0x1Full
/*
* Table #17 of 347_Memory_Map_GLOBAL.xml - ASIC_QSFP_MASK
* This CSR specifies the mask value for the QSFP pins and is used to mask the 
* QSFP status value to indicate whether the QSFP interrupt is to be 
* delivered.
*/
#define FXR_ASIC_QSFP_MASK			(FXR_GBL_CSRS + 0x000000000068)
#define FXR_ASIC_QSFP_MASK_RESETCSR		0x0000000000000000ull
#define FXR_ASIC_QSFP_MASK_QSFP_MASK_SHIFT	0
#define FXR_ASIC_QSFP_MASK_QSFP_MASK_MASK	0x1Full
#define FXR_ASIC_QSFP_MASK_QSFP_MASK_SMASK	0x1Full
/*
* Table #18 of 347_Memory_Map_GLOBAL.xml - ASIC_QSFP_STATUS
* This CSR can be used to read the QSFP status.
*/
#define FXR_ASIC_QSFP_STATUS			(FXR_GBL_CSRS + 0x000000000070)
#define FXR_ASIC_QSFP_STATUS_RESETCSR		0x000000000000001Bull
#define FXR_ASIC_QSFP_STATUS_QSFP_STATUS_SHIFT	0
#define FXR_ASIC_QSFP_STATUS_QSFP_STATUS_MASK	0x1Full
#define FXR_ASIC_QSFP_STATUS_QSFP_STATUS_SMASK	0x1Full
/*
* Table #19 of 347_Memory_Map_GLOBAL.xml - ASIC_QSFP_CLEAR
* This CSR can be used to clear the QSFP status.
*/
#define FXR_ASIC_QSFP_CLEAR			(FXR_GBL_CSRS + 0x000000000078)
#define FXR_ASIC_QSFP_CLEAR_RESETCSR		0x0000000000000000ull
#define FXR_ASIC_QSFP_CLEAR_QSFP_CLEAR_SHIFT	0
#define FXR_ASIC_QSFP_CLEAR_QSFP_CLEAR_MASK	0x1Full
#define FXR_ASIC_QSFP_CLEAR_QSFP_CLEAR_SMASK	0x1Full
/*
* Table #20 of 347_Memory_Map_GLOBAL.xml - ASIC_QSFP_FORCE
* This CSR can be used to force the QSFP status.
*/
#define FXR_ASIC_QSFP_FORCE			(FXR_GBL_CSRS + 0x000000000080)
#define FXR_ASIC_QSFP_FORCE_RESETCSR		0x0000000000000000ull
#define FXR_ASIC_QSFP_FORCE_QSFP_FORCE_SHIFT	0
#define FXR_ASIC_QSFP_FORCE_QSFP_FORCE_MASK	0x1Full
#define FXR_ASIC_QSFP_FORCE_QSFP_FORCE_SMASK	0x1Full

#endif 		/* DEF_FXR_GBL_SW_DEF */

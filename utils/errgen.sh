#!/bin/sh

#
# generate all the domain structures.
#
lex error.lex
cc -g -o domain.x lex.yy.c
cat ../common/uapi/rdma/fxr/* | ./domain.x

#
# for TP/FPC/LCB, create two instances for each port.
#
cat TP_0.domain | sed -e 's/FXR_TP_/FXR_LM_TP0_CSRS+FXR_TP_/g' \
	| sed -e 's/"TP_0"/"TP0_0"/g' > TP0_0.domain
cat TP_1.domain | sed -e 's/FXR_TP_/FXR_LM_TP0_CSRS+FXR_TP_/g' \
	| sed -e 's/"TP_1"/"TP0_1"/g' > TP0_1.domain
cat TP_0.domain | sed -e 's/FXR_TP_/FXR_LM_TP1_CSRS+FXR_TP_/g' \
	| sed -e 's/"TP_0"/"TP1_0"/g' > TP1_0.domain
cat TP_1.domain | sed -e 's/FXR_TP_/FXR_LM_TP1_CSRS+FXR_TP_/g' \
	| sed -e 's/"TP_1"/"TP1_1"/g' > TP1_1.domain

cat FPC.domain | sed -e 's/FXR_FPC_/FXR_LM_FPC0_CSRS+FXR_FPC_/g' \
	| sed -e 's/"FPC"/"FPC0"/g' > FPC0.domain
cat FPC.domain | sed -e 's/FXR_FPC_/FXR_LM_FPC1_CSRS+FXR_FPC_/g' \
	| sed -e 's/"FPC"/"FPC1"/g' > FPC1.domain

cat LCB.domain | sed -e 's/FXR_LCB_/FXR_FZC_LCB0_CSRS+FZC_LCB_/g' \
	| sed -e 's/"LCB"/"LCB0"/g' > LCB0.domain
cat LCB.domain | sed -e 's/FXR_LCB_/FXR_FZC_LCB1_CSRS+FZC_LCB_/g' \
	| sed -e 's/"LCB"/"LCB1"/g' > LCB1.domain

#
# OPIO name correction
#
cat OPIO_PHY.domain | sed -e 's/FXR_OPIO_/MNH_OPIO_/g' > tmp
mv tmp OPIO_PHY.domain


################################################################

echo "\
/*
 * Intel Omni-Path Architecture (OPA) Host Fabric Software
 *
 * This file is provided under a dual BSD/GPLv2 license.  When using or
 * redistributing this file, you may do so under either license.
 *
 * GPL LICENSE SUMMARY
 *
 * Copyright (c) 2015 Intel Corporation.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License, version 2, as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * BSD LICENSE
 *
 * Copyright (c) 2015 Intel Corporation.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *  * Neither the name of Intel Corporation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Intel(R) Omni-Path Gen2 HFI PCIe Driver
 */
" > errdef.h
echo "/*" >> errdef.h
echo " * DO NOT EDIT THIS FILE DIRECTLY" >> errdef.h
echo " * PLEASE GO THROUGH utils/errgen.sh SCRIPT" >> errdef.h
echo " */" >> errdef.h
echo "" >> errdef.h

################################################################

#
# FZC0 domain
#
echo "static hfi_error_domain_t hfi_fzc0_error[] = {" >> errdef.h
cat LCB0.domain >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# FZC1 domain
#
echo "static hfi_error_domain_t hfi_fzc1_error[] = {" >> errdef.h
cat LCB1.domain >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# HIFIS domain
#
echo "static hfi_error_domain_t hfi_hifis_error[] = {" >> errdef.h
cat HIFIS.domain >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# LOCA domains
#
echo "static hfi_error_domain_t hfi_loca_error[] = {" >> errdef.h
cat LOCA0.domain >> errdef.h
echo "    ," >> errdef.h
cat LOCA1.domain >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# PCIM domain
#
echo "static hfi_error_domain_t hfi_pcim_error[] = {" >> errdef.h
cat PCIM.domain >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# TXCID domain
#
echo "static hfi_error_domain_t hfi_txcid_error[] = {" >> errdef.h
cat TXCID.domain >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# OTR domain
#
echo "static hfi_error_domain_t hfi_otr_error[] = {" >> errdef.h
cat TXOTR_PKT_1.domain >> errdef.h
echo "    ," >> errdef.h
cat TXOTR_MSG_2.domain >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# TXDMA domain
#
echo "static hfi_error_domain_t hfi_txdma_error[] = {" >> errdef.h
cat TXDMA.domain >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# LM domain
#


#
# RXE2E domain
#
echo "static hfi_error_domain_t hfi_rxe2e_error[] = {" >> errdef.h
cat RXE2E_1.domain >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# RXHP domain
#
echo "static hfi_error_domain_t hfi_rxhp_error[] = {" >> errdef.h
cat RXHP_1.domain >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# RXDMA domain
#
echo "static hfi_error_domain_t hfi_rxdma_error[] = {" >> errdef.h
cat RXDMA_1.domain >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# RXET domain
#
echo "static hfi_error_domain_t hfi_rxet_error[] = {" >> errdef.h
cat RXET.domain >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# RXHIARB domain
#
echo "static hfi_error_domain_t hfi_rxhiarb_error[] = {" >> errdef.h
cat RXHIARB_1.domain >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# AT domain
#
echo "static hfi_error_domain_t hfi_at_error[] = {" >> errdef.h
cat AT_1.domain >> errdef.h
echo "    ," >> errdef.h
cat AT_2.domain >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# OPIO domain
#
echo "static hfi_error_domain_t hfi_opio_error[] = {" >> errdef.h
cat OPIO_PHY.domain >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# RXCID domain
#
echo "static hfi_error_domain_t hfi_rxcid_error[] = {" >> errdef.h
cat RXCID.domain >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# FPC0 domain
#
echo "static hfi_error_domain_t hfi_fpc0_error[] = {" >> errdef.h
cat FPC0.domain >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# FPC1 domain
#
echo "static hfi_error_domain_t hfi_fpc1_error[] = {" >> errdef.h
cat FPC1.domain >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# TP0 domain
#
echo "static hfi_error_domain_t hfi_tp0_error[] = {" >> errdef.h
cat TP0_0.domain >> errdef.h
echo "    ," >> errdef.h
cat TP0_1.domain >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# TP1 domain
#
echo "static hfi_error_domain_t hfi_tp1_error[] = {" >> errdef.h
cat TP1_0.domain >> errdef.h
echo "    ," >> errdef.h
cat TP1_1.domain >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

#
# PMON domain
#
echo "static hfi_error_domain_t hfi_pmon_error[] = {" >> errdef.h
cat PMON_1.domain >> errdef.h
echo "};" >> errdef.h
echo "" >> errdef.h

################################################################

#
# put errdef.h into source directory.
#
cp errdef.h ../hfi2/

#
# remove generated tmp files
#
rm domain.x
rm *.domain
rm lex.yy.c
rm errdef.h

################################################################

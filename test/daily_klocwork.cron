#!/bin/bash
# Meant to be run by cron but can be run manually.

export PATH="/nfs/sc/disks/fabric_work/klocwork/bin/:$PATH";
cd tests

# Check if kwcheck found in path
if [ ! $(which kwcheck 2>/dev/null) ]; then
        echo "kwcheck not found in path, failed to do scan."
        exit 1
fi

# Build driver with Klocwork flag set
./build.sh "" "" "" "" "" 1
if [ $? -ne 0 ]; then
	echo "kwcheck scan failed"
	exit 1
fi

if [ ! -f klocwork.current ]; then
	echo "Klocwork whitelist check failed! Unable to find klocwork.current file."
	exit 1
fi

if [ ! -f klocwork.whitelist ]; then
	echo "Klocwork whitelist check failed! Unable to find klocwork.whitelist file."
	exit 1
fi

# Count number of severtity 1 and 2 issues in Klocwork whitelist
count_kl_1="$(awk '/^[[:space:]]/ { total += $1 } END { print total }' klocwork.whitelist)"
count_kl_2="$(awk '/^[[:space:]]/ { total += $2 } END { print total }' klocwork.whitelist)"

# Count number of severtity 1 and 2 issues in the current Klocwork scan
count_kc_1="$(grep -c "1:Critical" klocwork.current)"
count_kc_2="$(grep -c "2:Error" klocwork.current)"

# If the counts don't match, display and return error. Leave current scan file in place.
if [ $count_kl_1 -ne $count_kc_1 ] || [ $count_kl_2 -ne $count_kc_2 ]; then
	echo "Klocwork whitelist check failed! Issues in whitelist and current scan differ."
	echo "Severity 1(Critical) issues count in whitelist:$count_kl_1, in current scan:$count_kc_1."
	echo "Severity 2(Error) issues count in whitelist:$count_kl_2, in current scan:$count_kc_2."
	exit 1
fi

# If success, remove current scan file.
rm klocwork.current

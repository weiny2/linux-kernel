/*
* Autogenerated by i_csrs.pl on Thu Sep 19 07:54:44 2013
* 
* i_csrs.pl Version 1.1 last modified on Thursday 9/19/13 07:54:33.
*/
/*
* Table #2 of 250_CSR_dc_common.xml - DCC_CFG_RESET
* This CSR is used to reset individual logic blocks in Duncan Creek.
*/
#define DCC_DCC_CFG_RESET                                       (DCC_CSRS + 0x000000000000)
#define DCC_DCC_CFG_RESET_RESETCSR                              0x0000000000000000ull
#define DCC_DCC_CFG_RESET_RESET_8051_SHIFT                      12
#define DCC_DCC_CFG_RESET_RESET_8051_MASK                       0x1ull
#define DCC_DCC_CFG_RESET_RESET_8051_SMASK                      0x1000ull
#define DCC_DCC_CFG_RESET_RESET_RX_FPE_SHIFT                    11
#define DCC_DCC_CFG_RESET_RESET_RX_FPE_MASK                     0x1ull
#define DCC_DCC_CFG_RESET_RESET_RX_FPE_SMASK                    0x800ull
#define DCC_DCC_CFG_RESET_RESET_TX_FPE_SHIFT                    10
#define DCC_DCC_CFG_RESET_RESET_TX_FPE_MASK                     0x1ull
#define DCC_DCC_CFG_RESET_RESET_TX_FPE_SMASK                    0x400ull
#define DCC_DCC_CFG_RESET_RESET_LCB_SHIFT                       9
#define DCC_DCC_CFG_RESET_RESET_LCB_MASK                        0x1ull
#define DCC_DCC_CFG_RESET_RESET_LCB_SMASK                       0x200ull
#define DCC_DCC_CFG_RESET_RESET_TX_PCS_8B10B_SHIFT              8
#define DCC_DCC_CFG_RESET_RESET_TX_PCS_8B10B_MASK               0x1ull
#define DCC_DCC_CFG_RESET_RESET_TX_PCS_8B10B_SMASK              0x100ull
#define DCC_DCC_CFG_RESET_RESET_TX_PCS_64B66B_SHIFT             7
#define DCC_DCC_CFG_RESET_RESET_TX_PCS_64B66B_MASK              0x1ull
#define DCC_DCC_CFG_RESET_RESET_TX_PCS_64B66B_SMASK             0x80ull
#define DCC_DCC_CFG_RESET_RESET_TX_LPE_SHIFT                    6
#define DCC_DCC_CFG_RESET_RESET_TX_LPE_MASK                     0x1ull
#define DCC_DCC_CFG_RESET_RESET_TX_LPE_SMASK                    0x40ull
#define DCC_DCC_CFG_RESET_RESET_TX_INPUT_FIFO_SHIFT             5
#define DCC_DCC_CFG_RESET_RESET_TX_INPUT_FIFO_MASK              0x1ull
#define DCC_DCC_CFG_RESET_RESET_TX_INPUT_FIFO_SMASK             0x20ull
#define DCC_DCC_CFG_RESET_RESET_RX_PCS_8B10B_SHIFT              4
#define DCC_DCC_CFG_RESET_RESET_RX_PCS_8B10B_MASK               0x1ull
#define DCC_DCC_CFG_RESET_RESET_RX_PCS_8B10B_SMASK              0x10ull
#define DCC_DCC_CFG_RESET_RESET_RX_PCS_64B66B_SHIFT             3
#define DCC_DCC_CFG_RESET_RESET_RX_PCS_64B66B_MASK              0x1ull
#define DCC_DCC_CFG_RESET_RESET_RX_PCS_64B66B_SMASK             0x8ull
#define DCC_DCC_CFG_RESET_RESET_RX_LPE_SHIFT                    2
#define DCC_DCC_CFG_RESET_RESET_RX_LPE_MASK                     0x1ull
#define DCC_DCC_CFG_RESET_RESET_RX_LPE_SMASK                    0x4ull
#define DCC_DCC_CFG_RESET_RESET_LPE_SM_SHIFT                    1
#define DCC_DCC_CFG_RESET_RESET_LPE_SM_MASK                     0x1ull
#define DCC_DCC_CFG_RESET_RESET_LPE_SM_SMASK                    0x2ull
#define DCC_DCC_CFG_RESET_RESET_LPE_FC_SHIFT                    0
#define DCC_DCC_CFG_RESET_RESET_LPE_FC_MASK                     0x1ull
#define DCC_DCC_CFG_RESET_RESET_LPE_FC_SMASK                    0x1ull
/*
* Table #3 of 250_CSR_dc_common.xml - DCC_CFG_PORT_CONFIG
* This CSR is use to configure the PCSLPE and FPE block within Duncan 
* Creek.
*/
#define DCC_DCC_CFG_PORT_CONFIG                                 (DCC_CSRS + 0x000000000008)
#define DCC_DCC_CFG_PORT_CONFIG_RESETCSR                        0x0000000A848420F4ull
#define DCC_DCC_CFG_PORT_CONFIG_STL_MODE_SHIFT                  47
#define DCC_DCC_CFG_PORT_CONFIG_STL_MODE_MASK                   0x1ull
#define DCC_DCC_CFG_PORT_CONFIG_STL_MODE_SMASK                  0x800000000000ull
#define DCC_DCC_CFG_PORT_CONFIG_FORCE_FCEN_SHIFT                46
#define DCC_DCC_CFG_PORT_CONFIG_FORCE_FCEN_MASK                 0x1ull
#define DCC_DCC_CFG_PORT_CONFIG_FORCE_FCEN_SMASK                0x400000000000ull
#define DCC_DCC_CFG_PORT_CONFIG_V15_LIMIT_SHIFT                 38
#define DCC_DCC_CFG_PORT_CONFIG_V15_LIMIT_MASK                  0xFull
#define DCC_DCC_CFG_PORT_CONFIG_V15_LIMIT_SMASK                 0x3C000000000ull
#define DCC_DCC_CFG_PORT_CONFIG_UNUSED_37_SHIFT                 37
#define DCC_DCC_CFG_PORT_CONFIG_UNUSED_37_MASK                  0x1ull
#define DCC_DCC_CFG_PORT_CONFIG_UNUSED_37_SMASK                 0x2000000000ull
#define DCC_DCC_CFG_PORT_CONFIG_MTU_CAP_SHIFT                   33
#define DCC_DCC_CFG_PORT_CONFIG_MTU_CAP_MASK                    0xFull
#define DCC_DCC_CFG_PORT_CONFIG_MTU_CAP_SMASK                   0x1E00000000ull
#define DCC_DCC_CFG_PORT_CONFIG_OP_VL_LANES_SHIFT               29
#define DCC_DCC_CFG_PORT_CONFIG_OP_VL_LANES_MASK                0xFull
#define DCC_DCC_CFG_PORT_CONFIG_OP_VL_LANES_SMASK               0x1E0000000ull
#define DCC_DCC_CFG_PORT_CONFIG_RX_RAW_DISCARD_SHIFT            28
#define DCC_DCC_CFG_PORT_CONFIG_RX_RAW_DISCARD_MASK             0x1ull
#define DCC_DCC_CFG_PORT_CONFIG_RX_RAW_DISCARD_SMASK            0x10000000ull
#define DCC_DCC_CFG_PORT_CONFIG_SUP_VL_LANES_SHIFT              24
#define DCC_DCC_CFG_PORT_CONFIG_SUP_VL_LANES_MASK               0xFull
#define DCC_DCC_CFG_PORT_CONFIG_SUP_VL_LANES_SMASK              0xF000000ull
#define DCC_DCC_CFG_PORT_CONFIG_LINK_DOWN_DEFAULT_STATE_SHIFT   22
#define DCC_DCC_CFG_PORT_CONFIG_LINK_DOWN_DEFAULT_STATE_MASK    0x3ull
#define DCC_DCC_CFG_PORT_CONFIG_LINK_DOWN_DEFAULT_STATE_SMASK   0xC00000ull
#define DCC_DCC_CFG_PORT_CONFIG_LINK_INIT_CMD_SHIFT             19
#define DCC_DCC_CFG_PORT_CONFIG_LINK_INIT_CMD_MASK              0x7ull
#define DCC_DCC_CFG_PORT_CONFIG_LINK_INIT_CMD_SMASK             0x380000ull
#define DCC_DCC_CFG_PORT_CONFIG_LINK_SPEED_ENABLE_MASK_SHIFT    14
#define DCC_DCC_CFG_PORT_CONFIG_LINK_SPEED_ENABLE_MASK_MASK     0x1Full
#define DCC_DCC_CFG_PORT_CONFIG_LINK_SPEED_ENABLE_MASK_SMASK    0x7C000ull
#define DCC_DCC_CFG_PORT_CONFIG_LINK_WIDTH_ENABLE_SHIFT         12
#define DCC_DCC_CFG_PORT_CONFIG_LINK_WIDTH_ENABLE_MASK          0x3ull
#define DCC_DCC_CFG_PORT_CONFIG_LINK_WIDTH_ENABLE_SMASK         0x3000ull
#define DCC_DCC_CFG_PORT_CONFIG_LINK_CMD_SHIFT                  8
#define DCC_DCC_CFG_PORT_CONFIG_LINK_CMD_MASK                   0xFull
#define DCC_DCC_CFG_PORT_CONFIG_LINK_CMD_SMASK                  0xF00ull
#define DCC_DCC_CFG_PORT_CONFIG_LOCAL_INTEGRITY_THRESHOLD_SHIFT 4
#define DCC_DCC_CFG_PORT_CONFIG_LOCAL_INTEGRITY_THRESHOLD_MASK  0xFull
#define DCC_DCC_CFG_PORT_CONFIG_LOCAL_INTEGRITY_THRESHOLD_SMASK 0xF0ull
#define DCC_DCC_CFG_PORT_CONFIG_OVERRUN_THRESHOLD_SHIFT         0
#define DCC_DCC_CFG_PORT_CONFIG_OVERRUN_THRESHOLD_MASK          0xFull
#define DCC_DCC_CFG_PORT_CONFIG_OVERRUN_THRESHOLD_SMASK         0xFull
/*
* Table #4 of 250_CSR_dc_common.xml - DCC_CFG_TX_LNI_FRAME
* During LNI, Fabric Layer Frames are exchange. Information included during the 
* exchange include VL15BUF credits. vCU and vAU, these are used in credit 
* allocation calculations. A CRC field, this indicates the level of protection 
* for the given link.
*/
#define DCC_DCC_CFG_TX_LNI_FRAME                                (DCC_CSRS + 0x000000000010)
#define DCC_DCC_CFG_TX_LNI_FRAME_RESETCSR                       0x0000000000000003ull
#define DCC_DCC_CFG_TX_LNI_FRAME_UNUSED_31_23_SHIFT             23
#define DCC_DCC_CFG_TX_LNI_FRAME_UNUSED_31_23_MASK              0x1FFull
#define DCC_DCC_CFG_TX_LNI_FRAME_UNUSED_31_23_SMASK             0xFF800000ull
#define DCC_DCC_CFG_TX_LNI_FRAME_CRC_MODE_SHIFT                 20
#define DCC_DCC_CFG_TX_LNI_FRAME_CRC_MODE_MASK                  0x7ull
#define DCC_DCC_CFG_TX_LNI_FRAME_CRC_MODE_SMASK                 0x700000ull
#define DCC_DCC_CFG_TX_LNI_FRAME_VL15BUF_SHIFT                  8
#define DCC_DCC_CFG_TX_LNI_FRAME_VL15BUF_MASK                   0xFFFull
#define DCC_DCC_CFG_TX_LNI_FRAME_VL15BUF_SMASK                  0xFFF00ull
#define DCC_DCC_CFG_TX_LNI_FRAME_V_CU_SHIFT                     4
#define DCC_DCC_CFG_TX_LNI_FRAME_V_CU_MASK                      0xFull
#define DCC_DCC_CFG_TX_LNI_FRAME_V_CU_SMASK                     0xF0ull
#define DCC_DCC_CFG_TX_LNI_FRAME_V_AU_SHIFT                     0
#define DCC_DCC_CFG_TX_LNI_FRAME_V_AU_MASK                      0xFull
#define DCC_DCC_CFG_TX_LNI_FRAME_V_AU_SMASK                     0xFull
/*
* Table #5 of 250_CSR_dc_common.xml - DCC_CFG_RX_LNI_FRAME
* During LNI Fabric Layer Frames are exchange. On detection of receiving a 
* fabric layer frame the 8051 will write DCC_CFG_RX_FABRIC_FRAME. Information 
* included during the exchange include VL15BUF credits.vCU and vAU, these are 
* used in credit allocation calculations. The CRC field indicates the level of 
* protection for the given link.
*/
#define DCC_DCC_CFG_RX_LNI_FRAME                                (DCC_CSRS + 0x000000000018)
#define DCC_DCC_CFG_RX_LNI_FRAME_RESETCSR                       0x0000000000000003ull
#define DCC_DCC_CFG_RX_LNI_FRAME_UNUSED_31_23_SHIFT             23
#define DCC_DCC_CFG_RX_LNI_FRAME_UNUSED_31_23_MASK              0x1FFull
#define DCC_DCC_CFG_RX_LNI_FRAME_UNUSED_31_23_SMASK             0xFF800000ull
#define DCC_DCC_CFG_RX_LNI_FRAME_CRC_MODE_SHIFT                 20
#define DCC_DCC_CFG_RX_LNI_FRAME_CRC_MODE_MASK                  0x7ull
#define DCC_DCC_CFG_RX_LNI_FRAME_CRC_MODE_SMASK                 0x700000ull
#define DCC_DCC_CFG_RX_LNI_FRAME_VL15BUF_SHIFT                  8
#define DCC_DCC_CFG_RX_LNI_FRAME_VL15BUF_MASK                   0xFFFull
#define DCC_DCC_CFG_RX_LNI_FRAME_VL15BUF_SMASK                  0xFFF00ull
#define DCC_DCC_CFG_RX_LNI_FRAME_VCU_SHIFT                      4
#define DCC_DCC_CFG_RX_LNI_FRAME_VCU_MASK                       0xFull
#define DCC_DCC_CFG_RX_LNI_FRAME_VCU_SMASK                      0xF0ull
#define DCC_DCC_CFG_RX_LNI_FRAME_VAU_SHIFT                      0
#define DCC_DCC_CFG_RX_LNI_FRAME_VAU_MASK                       0xFull
#define DCC_DCC_CFG_RX_LNI_FRAME_VAU_SMASK                      0xFull
/*
* Table #6 of 250_CSR_dc_common.xml - DCC_CFG_SC_VL_TABLE_15_0
* This table is a re-mapping table for SC15-0 to VL.
*/
#define DCC_DCC_CFG_SC_VL_TABLE_15_0                            (DCC_CSRS + 0x000000000020)
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_RESETCSR                   0x0000000000000000ull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY15_SHIFT              60
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY15_MASK               0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY15_SMASK              0xF000000000000000ull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY14_SHIFT              56
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY14_MASK               0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY14_SMASK              0xF00000000000000ull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY13_SHIFT              52
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY13_MASK               0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY13_SMASK              0xF0000000000000ull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY12_SHIFT              48
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY12_MASK               0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY12_SMASK              0xF000000000000ull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY11_SHIFT              44
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY11_MASK               0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY11_SMASK              0xF00000000000ull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY10_SHIFT              40
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY10_MASK               0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY10_SMASK              0xF0000000000ull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY9_SHIFT               36
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY9_MASK                0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY9_SMASK               0xF000000000ull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY8_SHIFT               32
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY8_MASK                0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY8_SMASK               0xF00000000ull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY7_SHIFT               28
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY7_MASK                0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY7_SMASK               0xF0000000ull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY6_SHIFT               24
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY6_MASK                0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY6_SMASK               0xF000000ull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY5_SHIFT               20
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY5_MASK                0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY5_SMASK               0xF00000ull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY4_SHIFT               16
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY4_MASK                0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY4_SMASK               0xF0000ull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY3_SHIFT               12
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY3_MASK                0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY3_SMASK               0xF000ull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY2_SHIFT               8
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY2_MASK                0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY2_SMASK               0xF00ull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY1_SHIFT               4
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY1_MASK                0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY1_SMASK               0xF0ull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY0_SHIFT               0
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY0_MASK                0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_15_0_ENTRY0_SMASK               0xFull
/*
* Table #7 of 250_CSR_dc_common.xml - DCC_CFG_SC_VL_TABLE_31_16
* This table is a re-mapping table for SC31_16 to VL.
*/
#define DCC_DCC_CFG_SC_VL_TABLE_31_16                           (DCC_CSRS + 0x000000000028)
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_RESETCSR                  0x0000000000000000ull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY31_SHIFT             60
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY31_MASK              0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY31_SMASK             0xF000000000000000ull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY30_SHIFT             56
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY30_MASK              0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY30_SMASK             0xF00000000000000ull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY29_SHIFT             52
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY29_MASK              0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY29_SMASK             0xF0000000000000ull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY28_SHIFT             48
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY28_MASK              0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY28_SMASK             0xF000000000000ull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY27_SHIFT             44
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY27_MASK              0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY27_SMASK             0xF00000000000ull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY26_SHIFT             40
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY26_MASK              0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY26_SMASK             0xF0000000000ull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY25_SHIFT             36
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY25_MASK              0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY25_SMASK             0xF000000000ull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY24_SHIFT             32
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY24_MASK              0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY24_SMASK             0xF00000000ull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY23_SHIFT             28
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY23_MASK              0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY23_SMASK             0xF0000000ull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY22_SHIFT             24
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY22_MASK              0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY22_SMASK             0xF000000ull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY21_SHIFT             20
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY21_MASK              0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY21_SMASK             0xF00000ull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY20_SHIFT             16
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY20_MASK              0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY20_SMASK             0xF0000ull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY19_SHIFT             12
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY19_MASK              0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY19_SMASK             0xF000ull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY18_SHIFT             8
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY18_MASK              0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY18_SMASK             0xF00ull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY17_SHIFT             4
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY17_MASK              0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY17_SMASK             0xF0ull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY16_SHIFT             0
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY16_MASK              0xFull
#define DCC_DCC_CFG_SC_VL_TABLE_31_16_ENTRY16_SMASK             0xFull
/*
* Table #8 of 250_CSR_dc_common.xml - DCC_ERR_FLG0
* This CSR contains error flags that can generate a interrupt, to mask 
* individual flags see #%%#Section 8.6.9, 'DCC_ERR_FLG0_MSK'#%%#. 
* 
*/
#define DCC_DCC_ERR_FLG0                                        (DCC_CSRS + 0x000000000030)
#define DCC_DCC_ERR_FLG0_RESETCSR                               0x0000000000000000ull
#define DCC_DCC_ERR_FLG0_UNUSED_63_56_SHIFT                     56
#define DCC_DCC_ERR_FLG0_UNUSED_63_56_MASK                      0xFFull
#define DCC_DCC_ERR_FLG0_UNUSED_63_56_SMASK                     0xFF00000000000000ull
#define DCC_DCC_ERR_FLG0_RCVPORT_ERR_SHIFT                      55
#define DCC_DCC_ERR_FLG0_RCVPORT_ERR_MASK                       0x1ull
#define DCC_DCC_ERR_FLG0_RCVPORT_ERR_SMASK                      0x80000000000000ull
#define DCC_DCC_ERR_FLG0_FMCONFIG_ERR_SHIFT                     54
#define DCC_DCC_ERR_FLG0_FMCONFIG_ERR_MASK                      0x1ull
#define DCC_DCC_ERR_FLG0_FMCONFIG_ERR_SMASK                     0x40000000000000ull
#define DCC_DCC_ERR_FLG0_UNUSED_53_SHIFT                        53
#define DCC_DCC_ERR_FLG0_UNUSED_53_MASK                         0x1ull
#define DCC_DCC_ERR_FLG0_UNUSED_53_SMASK                        0x20000000000000ull
#define DCC_DCC_ERR_FLG0_FC_CRC_ERR_E_SHIFT                     52
#define DCC_DCC_ERR_FLG0_FC_CRC_ERR_E_MASK                      0x1ull
#define DCC_DCC_ERR_FLG0_FC_CRC_ERR_E_SMASK                     0x10000000000000ull
#define DCC_DCC_ERR_FLG0_FC_DCD_ERR_E_SHIFT                     51
#define DCC_DCC_ERR_FLG0_FC_DCD_ERR_E_MASK                      0x1ull
#define DCC_DCC_ERR_FLG0_FC_DCD_ERR_E_SMASK                     0x8000000000000ull
#define DCC_DCC_ERR_FLG0_FC_OP_ERR_E_SHIFT                      50
#define DCC_DCC_ERR_FLG0_FC_OP_ERR_E_MASK                       0x1ull
#define DCC_DCC_ERR_FLG0_FC_OP_ERR_E_SMASK                      0x4000000000000ull
#define DCC_DCC_ERR_FLG0_FC_LEN_ERR_E_SHIFT                     49
#define DCC_DCC_ERR_FLG0_FC_LEN_ERR_E_MASK                      0x1ull
#define DCC_DCC_ERR_FLG0_FC_LEN_ERR_E_SMASK                     0x2000000000000ull
#define DCC_DCC_ERR_FLG0_FC_VL_ERR_E_SHIFT                      48
#define DCC_DCC_ERR_FLG0_FC_VL_ERR_E_MASK                       0x1ull
#define DCC_DCC_ERR_FLG0_FC_VL_ERR_E_SMASK                      0x1000000000000ull
#define DCC_DCC_ERR_FLG0_FC_ILLEGAL_ERR_E_SHIFT                 47
#define DCC_DCC_ERR_FLG0_FC_ILLEGAL_ERR_E_MASK                  0x1ull
#define DCC_DCC_ERR_FLG0_FC_ILLEGAL_ERR_E_SMASK                 0x800000000000ull
#define DCC_DCC_ERR_FLG0_FC_EBP_ERR_E_SHIFT                     46
#define DCC_DCC_ERR_FLG0_FC_EBP_ERR_E_MASK                      0x1ull
#define DCC_DCC_ERR_FLG0_FC_EBP_ERR_E_SMASK                     0x400000000000ull
#define DCC_DCC_ERR_FLG0_FC_DROP_E_SHIFT                        45
#define DCC_DCC_ERR_FLG0_FC_DROP_E_MASK                         0x1ull
#define DCC_DCC_ERR_FLG0_FC_DROP_E_SMASK                        0x200000000000ull
#define DCC_DCC_ERR_FLG0_UNUSED_44_SHIFT                        44
#define DCC_DCC_ERR_FLG0_UNUSED_44_MASK                         0x1ull
#define DCC_DCC_ERR_FLG0_UNUSED_44_SMASK                        0x100000000000ull
#define DCC_DCC_ERR_FLG0_FC_CRC_ERR_O_SHIFT                     43
#define DCC_DCC_ERR_FLG0_FC_CRC_ERR_O_MASK                      0x1ull
#define DCC_DCC_ERR_FLG0_FC_CRC_ERR_O_SMASK                     0x80000000000ull
#define DCC_DCC_ERR_FLG0_FC_DCD_ERR_O_SHIFT                     42
#define DCC_DCC_ERR_FLG0_FC_DCD_ERR_O_MASK                      0x1ull
#define DCC_DCC_ERR_FLG0_FC_DCD_ERR_O_SMASK                     0x40000000000ull
#define DCC_DCC_ERR_FLG0_FC_OP_ERR_O_SHIFT                      41
#define DCC_DCC_ERR_FLG0_FC_OP_ERR_O_MASK                       0x1ull
#define DCC_DCC_ERR_FLG0_FC_OP_ERR_O_SMASK                      0x20000000000ull
#define DCC_DCC_ERR_FLG0_FC_LEN_ERR_O_SHIFT                     40
#define DCC_DCC_ERR_FLG0_FC_LEN_ERR_O_MASK                      0x1ull
#define DCC_DCC_ERR_FLG0_FC_LEN_ERR_O_SMASK                     0x10000000000ull
#define DCC_DCC_ERR_FLG0_FC_VL_ERR_O_SHIFT                      39
#define DCC_DCC_ERR_FLG0_FC_VL_ERR_O_MASK                       0x1ull
#define DCC_DCC_ERR_FLG0_FC_VL_ERR_O_SMASK                      0x8000000000ull
#define DCC_DCC_ERR_FLG0_FC_ILLEGAL_ERR_O_SHIFT                 38
#define DCC_DCC_ERR_FLG0_FC_ILLEGAL_ERR_O_MASK                  0x1ull
#define DCC_DCC_ERR_FLG0_FC_ILLEGAL_ERR_O_SMASK                 0x4000000000ull
#define DCC_DCC_ERR_FLG0_FC_EBP_ERR_O_SHIFT                     37
#define DCC_DCC_ERR_FLG0_FC_EBP_ERR_O_MASK                      0x1ull
#define DCC_DCC_ERR_FLG0_FC_EBP_ERR_O_SMASK                     0x2000000000ull
#define DCC_DCC_ERR_FLG0_FC_DROP_O_SHIFT                        36
#define DCC_DCC_ERR_FLG0_FC_DROP_O_MASK                         0x1ull
#define DCC_DCC_ERR_FLG0_FC_DROP_O_SMASK                        0x1000000000ull
#define DCC_DCC_ERR_FLG0_UNUSED_35_SHIFT                        35
#define DCC_DCC_ERR_FLG0_UNUSED_35_MASK                         0x1ull
#define DCC_DCC_ERR_FLG0_UNUSED_35_SMASK                        0x800000000ull
#define DCC_DCC_ERR_FLG0_TX_CHECK_ERR_SHIFT                     34
#define DCC_DCC_ERR_FLG0_TX_CHECK_ERR_MASK                      0x1ull
#define DCC_DCC_ERR_FLG0_TX_CHECK_ERR_SMASK                     0x400000000ull
#define DCC_DCC_ERR_FLG0_TX_DELIMIT_ERR_SHIFT                   33
#define DCC_DCC_ERR_FLG0_TX_DELIMIT_ERR_MASK                    0x1ull
#define DCC_DCC_ERR_FLG0_TX_DELIMIT_ERR_SMASK                   0x200000000ull
#define DCC_DCC_ERR_FLG0_TX_DROPPED_DATA_PKT_ERR_SHIFT          32
#define DCC_DCC_ERR_FLG0_TX_DROPPED_DATA_PKT_ERR_MASK           0x1ull
#define DCC_DCC_ERR_FLG0_TX_DROPPED_DATA_PKT_ERR_SMASK          0x100000000ull
#define DCC_DCC_ERR_FLG0_TX_DROPPED_SMP_PKT_ERR_SHIFT           31
#define DCC_DCC_ERR_FLG0_TX_DROPPED_SMP_PKT_ERR_MASK            0x1ull
#define DCC_DCC_ERR_FLG0_TX_DROPPED_SMP_PKT_ERR_SMASK           0x80000000ull
#define DCC_DCC_ERR_FLG0_TX_ICRC_ERR_SHIFT                      30
#define DCC_DCC_ERR_FLG0_TX_ICRC_ERR_MASK                       0x1ull
#define DCC_DCC_ERR_FLG0_TX_ICRC_ERR_SMASK                      0x40000000ull
#define DCC_DCC_ERR_FLG0_TX_FIFO_OVFLW_ERR_SHIFT                29
#define DCC_DCC_ERR_FLG0_TX_FIFO_OVFLW_ERR_MASK                 0x1ull
#define DCC_DCC_ERR_FLG0_TX_FIFO_OVFLW_ERR_SMASK                0x20000000ull
#define DCC_DCC_ERR_FLG0_TX_MIN_PKTLEN_ERR_SHIFT                28
#define DCC_DCC_ERR_FLG0_TX_MIN_PKTLEN_ERR_MASK                 0x1ull
#define DCC_DCC_ERR_FLG0_TX_MIN_PKTLEN_ERR_SMASK                0x10000000ull
#define DCC_DCC_ERR_FLG0_TX_MTU_CAP_ERR_SHIFT                   27
#define DCC_DCC_ERR_FLG0_TX_MTU_CAP_ERR_MASK                    0x1ull
#define DCC_DCC_ERR_FLG0_TX_MTU_CAP_ERR_SMASK                   0x8000000ull
#define DCC_DCC_ERR_FLG0_TX_PKT_LEN_ERR_SHIFT                   26
#define DCC_DCC_ERR_FLG0_TX_PKT_LEN_ERR_MASK                    0x1ull
#define DCC_DCC_ERR_FLG0_TX_PKT_LEN_ERR_SMASK                   0x4000000ull
#define DCC_DCC_ERR_FLG0_TX_UNDERFLOW_ERR_SHIFT                 25
#define DCC_DCC_ERR_FLG0_TX_UNDERFLOW_ERR_MASK                  0x1ull
#define DCC_DCC_ERR_FLG0_TX_UNDERFLOW_ERR_SMASK                 0x2000000ull
#define DCC_DCC_ERR_FLG0_TX_UNSUP_VL_ERR_SHIFT                  24
#define DCC_DCC_ERR_FLG0_TX_UNSUP_VL_ERR_MASK                   0x1ull
#define DCC_DCC_ERR_FLG0_TX_UNSUP_VL_ERR_SMASK                  0x1000000ull
#define DCC_DCC_ERR_FLG0_UNUSED_23_SHIFT                        23
#define DCC_DCC_ERR_FLG0_UNUSED_23_MASK                         0x1ull
#define DCC_DCC_ERR_FLG0_UNUSED_23_SMASK                        0x800000ull
#define DCC_DCC_ERR_FLG0_UNUSED_22_SHIFT                        22
#define DCC_DCC_ERR_FLG0_UNUSED_22_MASK                         0x1ull
#define DCC_DCC_ERR_FLG0_UNUSED_22_SMASK                        0x400000ull
#define DCC_DCC_ERR_FLG0_RX_LATE_DECODE_ERR_SHIFT               21
#define DCC_DCC_ERR_FLG0_RX_LATE_DECODE_ERR_MASK                0x1ull
#define DCC_DCC_ERR_FLG0_RX_LATE_DECODE_ERR_SMASK               0x200000ull
#define DCC_DCC_ERR_FLG0_RX_LATE_EBP_ERR_SHIFT                  20
#define DCC_DCC_ERR_FLG0_RX_LATE_EBP_ERR_MASK                   0x1ull
#define DCC_DCC_ERR_FLG0_RX_LATE_EBP_ERR_SMASK                  0x100000ull
#define DCC_DCC_ERR_FLG0_RX_LATE_ICRC_ERR_SHIFT                 19
#define DCC_DCC_ERR_FLG0_RX_LATE_ICRC_ERR_MASK                  0x1ull
#define DCC_DCC_ERR_FLG0_RX_LATE_ICRC_ERR_SMASK                 0x80000ull
#define DCC_DCC_ERR_FLG0_RX_LATE_VCRC_ERR_SHIFT                 18
#define DCC_DCC_ERR_FLG0_RX_LATE_VCRC_ERR_MASK                  0x1ull
#define DCC_DCC_ERR_FLG0_RX_LATE_VCRC_ERR_SMASK                 0x40000ull
#define DCC_DCC_ERR_FLG0_RX_LATE_LONG_ERR_SHIFT                 17
#define DCC_DCC_ERR_FLG0_RX_LATE_LONG_ERR_MASK                  0x1ull
#define DCC_DCC_ERR_FLG0_RX_LATE_LONG_ERR_SMASK                 0x20000ull
#define DCC_DCC_ERR_FLG0_RX_LATE_MIN_ERR_SHIFT                  16
#define DCC_DCC_ERR_FLG0_RX_LATE_MIN_ERR_MASK                   0x1ull
#define DCC_DCC_ERR_FLG0_RX_LATE_MIN_ERR_SMASK                  0x10000ull
#define DCC_DCC_ERR_FLG0_RX_LATE_SHORT_ERR_SHIFT                15
#define DCC_DCC_ERR_FLG0_RX_LATE_SHORT_ERR_MASK                 0x1ull
#define DCC_DCC_ERR_FLG0_RX_LATE_SHORT_ERR_SMASK                0x8000ull
#define DCC_DCC_ERR_FLG0_RX_LATE_UNEXP_CHAR_ERR_SHIFT           14
#define DCC_DCC_ERR_FLG0_RX_LATE_UNEXP_CHAR_ERR_MASK            0x1ull
#define DCC_DCC_ERR_FLG0_RX_LATE_UNEXP_CHAR_ERR_SMASK           0x4000ull
#define DCC_DCC_ERR_FLG0_UNUSED_13_SHIFT                        13
#define DCC_DCC_ERR_FLG0_UNUSED_13_MASK                         0x1ull
#define DCC_DCC_ERR_FLG0_UNUSED_13_SMASK                        0x2000ull
#define DCC_DCC_ERR_FLG0_RX_EARLY_DROP_ERR_SHIFT                12
#define DCC_DCC_ERR_FLG0_RX_EARLY_DROP_ERR_MASK                 0x1ull
#define DCC_DCC_ERR_FLG0_RX_EARLY_DROP_ERR_SMASK                0x1000ull
#define DCC_DCC_ERR_FLG0_RX_EARLY_DLID_RANGE_ERR_SHIFT          11
#define DCC_DCC_ERR_FLG0_RX_EARLY_DLID_RANGE_ERR_MASK           0x1ull
#define DCC_DCC_ERR_FLG0_RX_EARLY_DLID_RANGE_ERR_SMASK          0x800ull
#define DCC_DCC_ERR_FLG0_RX_EARLY_LENGTH_ERR_SHIFT              10
#define DCC_DCC_ERR_FLG0_RX_EARLY_LENGTH_ERR_MASK               0x1ull
#define DCC_DCC_ERR_FLG0_RX_EARLY_LENGTH_ERR_SMASK              0x400ull
#define DCC_DCC_ERR_FLG0_RX_EARLY_DLID_ZERO_ERR_SHIFT           9
#define DCC_DCC_ERR_FLG0_RX_EARLY_DLID_ZERO_ERR_MASK            0x1ull
#define DCC_DCC_ERR_FLG0_RX_EARLY_DLID_ZERO_ERR_SMASK           0x200ull
#define DCC_DCC_ERR_FLG0_RX_EARLY_LVER_ERR_SHIFT                8
#define DCC_DCC_ERR_FLG0_RX_EARLY_LVER_ERR_MASK                 0x1ull
#define DCC_DCC_ERR_FLG0_RX_EARLY_LVER_ERR_SMASK                0x100ull
#define DCC_DCC_ERR_FLG0_RX_EARLY_PERM_NVL15_ERR_SHIFT          7
#define DCC_DCC_ERR_FLG0_RX_EARLY_PERM_NVL15_ERR_MASK           0x1ull
#define DCC_DCC_ERR_FLG0_RX_EARLY_PERM_NVL15_ERR_SMASK          0x80ull
#define DCC_DCC_ERR_FLG0_RX_EARLY_RAW_DISCARD_ERR_SHIFT         6
#define DCC_DCC_ERR_FLG0_RX_EARLY_RAW_DISCARD_ERR_MASK          0x1ull
#define DCC_DCC_ERR_FLG0_RX_EARLY_RAW_DISCARD_ERR_SMASK         0x40ull
#define DCC_DCC_ERR_FLG0_RX_EARLY_RBUF_VL_DROP_ERR_SHIFT        5
#define DCC_DCC_ERR_FLG0_RX_EARLY_RBUF_VL_DROP_ERR_MASK         0x1ull
#define DCC_DCC_ERR_FLG0_RX_EARLY_RBUF_VL_DROP_ERR_SMASK        0x20ull
#define DCC_DCC_ERR_FLG0_RX_EARLY_SLID_ZERO_ERR_SHIFT           4
#define DCC_DCC_ERR_FLG0_RX_EARLY_SLID_ZERO_ERR_MASK            0x1ull
#define DCC_DCC_ERR_FLG0_RX_EARLY_SLID_ZERO_ERR_SMASK           0x10ull
#define DCC_DCC_ERR_FLG0_RX_EARLY_UNSUP_VL_ERR_SHIFT            3
#define DCC_DCC_ERR_FLG0_RX_EARLY_UNSUP_VL_ERR_MASK             0x1ull
#define DCC_DCC_ERR_FLG0_RX_EARLY_UNSUP_VL_ERR_SMASK            0x8ull
#define DCC_DCC_ERR_FLG0_RX_EARLY_VL15_ERR_SHIFT                2
#define DCC_DCC_ERR_FLG0_RX_EARLY_VL15_ERR_MASK                 0x1ull
#define DCC_DCC_ERR_FLG0_RX_EARLY_VL15_ERR_SMASK                0x4ull
#define DCC_DCC_ERR_FLG0_RX_EARLY_VL15_MULTI_ERR_SHIFT          1
#define DCC_DCC_ERR_FLG0_RX_EARLY_VL15_MULTI_ERR_MASK           0x1ull
#define DCC_DCC_ERR_FLG0_RX_EARLY_VL15_MULTI_ERR_SMASK          0x2ull
#define DCC_DCC_ERR_FLG0_RX_EARLY_VL_ERR_SHIFT                  0
#define DCC_DCC_ERR_FLG0_RX_EARLY_VL_ERR_MASK                   0x1ull
#define DCC_DCC_ERR_FLG0_RX_EARLY_VL_ERR_SMASK                  0x1ull
/*
* Table #9 of 250_CSR_dc_common.xml - DCC_ERR_FLG1
* This CSR contains error flags that can generate a interrupt, to mask 
* individual flags see 
*/
#define DCC_DCC_ERR_FLG1                                        (DCC_CSRS + 0x000000000038)
#define DCC_DCC_ERR_FLG1_RESETCSR                               0x0000000000000000ull
#define DCC_DCC_ERR_FLG1_BAD_CTRL_FLIT_ERR_SHIFT                16
#define DCC_DCC_ERR_FLG1_BAD_CTRL_FLIT_ERR_MASK                 0x1ull
#define DCC_DCC_ERR_FLG1_BAD_CTRL_FLIT_ERR_SMASK                0x10000ull
#define DCC_DCC_ERR_FLG1_BAD_VL_MARKER_15_SHIFT                 15
#define DCC_DCC_ERR_FLG1_BAD_VL_MARKER_15_MASK                  0x1ull
#define DCC_DCC_ERR_FLG1_BAD_VL_MARKER_15_SMASK                 0x8000ull
#define DCC_DCC_ERR_FLG1_BAD_CRDT_ACK_SHIFT                     14
#define DCC_DCC_ERR_FLG1_BAD_CRDT_ACK_MASK                      0x1ull
#define DCC_DCC_ERR_FLG1_BAD_CRDT_ACK_SMASK                     0x4000ull
#define DCC_DCC_ERR_FLG1_BUF_OVERRUN_ERR_SHIFT                  13
#define DCC_DCC_ERR_FLG1_BUF_OVERRUN_ERR_MASK                   0x1ull
#define DCC_DCC_ERR_FLG1_BUF_OVERRUN_ERR_SMASK                  0x2000ull
#define DCC_DCC_ERR_FLG1_LINK_PKT_ERR_SHIFT                     12
#define DCC_DCC_ERR_FLG1_LINK_PKT_ERR_MASK                      0x1ull
#define DCC_DCC_ERR_FLG1_LINK_PKT_ERR_SMASK                     0x1000ull
#define DCC_DCC_ERR_FLG1_BAD_VL_ERR_SHIFT                       11
#define DCC_DCC_ERR_FLG1_BAD_VL_ERR_MASK                        0x1ull
#define DCC_DCC_ERR_FLG1_BAD_VL_ERR_SMASK                       0x800ull
#define DCC_DCC_ERR_FLG1_BAD_LVER_ERR_SHIFT                     10
#define DCC_DCC_ERR_FLG1_BAD_LVER_ERR_MASK                      0x1ull
#define DCC_DCC_ERR_FLG1_BAD_LVER_ERR_SMASK                     0x400ull
#define DCC_DCC_ERR_FLG1_BAD_DLVD_ERR_SHIFT                     9
#define DCC_DCC_ERR_FLG1_BAD_DLVD_ERR_MASK                      0x1ull
#define DCC_DCC_ERR_FLG1_BAD_DLVD_ERR_SMASK                     0x200ull
#define DCC_DCC_ERR_FLG1_PHYS_ERR_SHIFT                         8
#define DCC_DCC_ERR_FLG1_PHYS_ERR_MASK                          0x1ull
#define DCC_DCC_ERR_FLG1_PHYS_ERR_SMASK                         0x100ull
#define DCC_DCC_ERR_FLG1_BAD_VL_MARKER_SHIFT                    7
#define DCC_DCC_ERR_FLG1_BAD_VL_MARKER_MASK                     0x1ull
#define DCC_DCC_ERR_FLG1_BAD_VL_MARKER_SMASK                    0x80ull
#define DCC_DCC_ERR_FLG1_PREEMPTIONVL15_ERR_SHIFT               6
#define DCC_DCC_ERR_FLG1_PREEMPTIONVL15_ERR_MASK                0x1ull
#define DCC_DCC_ERR_FLG1_PREEMPTIONVL15_ERR_SMASK               0x40ull
#define DCC_DCC_ERR_FLG1_PREEMPTION_ERR_SHIFT                   5
#define DCC_DCC_ERR_FLG1_PREEMPTION_ERR_MASK                    0x1ull
#define DCC_DCC_ERR_FLG1_PREEMPTION_ERR_SMASK                   0x20ull
#define DCC_DCC_ERR_FLG1_BAD_FECN_ERR_SHIFT                     4
#define DCC_DCC_ERR_FLG1_BAD_FECN_ERR_MASK                      0x1ull
#define DCC_DCC_ERR_FLG1_BAD_FECN_ERR_SMASK                     0x10ull
#define DCC_DCC_ERR_FLG1_BAD_MID_TAIL_ERR_SHIFT                 3
#define DCC_DCC_ERR_FLG1_BAD_MID_TAIL_ERR_MASK                  0x1ull
#define DCC_DCC_ERR_FLG1_BAD_MID_TAIL_ERR_SMASK                 0x8ull
#define DCC_DCC_ERR_FLG1_BAD_SC_ERR_SHIFT                       2
#define DCC_DCC_ERR_FLG1_BAD_SC_ERR_MASK                        0x1ull
#define DCC_DCC_ERR_FLG1_BAD_SC_ERR_SMASK                       0x4ull
#define DCC_DCC_ERR_FLG1_BAD_L2_ERR_SHIFT                       1
#define DCC_DCC_ERR_FLG1_BAD_L2_ERR_MASK                        0x1ull
#define DCC_DCC_ERR_FLG1_BAD_L2_ERR_SMASK                       0x2ull
#define DCC_DCC_ERR_FLG1_BAD_LT_ERR_SHIFT                       0
#define DCC_DCC_ERR_FLG1_BAD_LT_ERR_MASK                        0x1ull
#define DCC_DCC_ERR_FLG1_BAD_LT_ERR_SMASK                       0x1ull
/*
* Table #10 of 250_CSR_dc_common.xml - DCC_ERR_FLG0_MSK
* This CSR is used to mask errors associated with FLG0 from sending an 
* interrupt.
*/
#define DCC_DCC_ERR_FLG0_MSK                                    (DCC_CSRS + 0x000000000040)
#define DCC_DCC_ERR_FLG0_MSK_RESETCSR                           0x0000000000000000ull
#define DCC_DCC_ERR_FLG0_MSK_MASK_SHIFT                         0
#define DCC_DCC_ERR_FLG0_MSK_MASK_MASK                          0xFFFFFFFFFFFFFFFFull
#define DCC_DCC_ERR_FLG0_MSK_MASK_SMASK                         0xFFFFFFFFFFFFFFFFull
/*
* Table #11 of 250_CSR_dc_common.xml - DCC_ERR_FLG1_MSK
* This CSR is used to mask errors associated with FLG1 from sending an 
* interrupt.
*/
#define DCC_DCC_ERR_FLG1_MSK                                    (DCC_CSRS + 0x000000000048)
#define DCC_DCC_ERR_FLG1_MSK_RESETCSR                           0x0000000000000000ull
#define DCC_DCC_ERR_FLG1_MSK_MASK_SHIFT                         0
#define DCC_DCC_ERR_FLG1_MSK_MASK_MASK                          0xFFFFFFFFFFFFFFFFull
#define DCC_DCC_ERR_FLG1_MSK_MASK_SMASK                         0xFFFFFFFFFFFFFFFFull
/*
* Table #12 of 250_CSR_dc_common.xml - DCC_ERR_INFO_FLOW_CTRL0
* When a flow control error is detected and it's on the even data path the flow 
* control flit is save to this CSR.
*/
#define DCC_DCC_ERR_INFO_FLOW_CTRL0                             (DCC_CSRS + 0x000000000050)
#define DCC_DCC_ERR_INFO_FLOW_CTRL0_RESETCSR                    0x0000000000000000ull
#define DCC_DCC_ERR_INFO_FLOW_CTRL0_FC_DATA_SHIFT               0
#define DCC_DCC_ERR_INFO_FLOW_CTRL0_FC_DATA_MASK                0xFFFFFFFFFFFFFFFFull
#define DCC_DCC_ERR_INFO_FLOW_CTRL0_FC_DATA_SMASK               0xFFFFFFFFFFFFFFFFull
/*
* Table #13 of 250_CSR_dc_common.xml - DCC_ERR_INFO_FLOW_CTRL1
* When a flow control error is detected and it's on the odd data path the flow 
* control flit is save to this CSR.
*/
#define DCC_DCC_ERR_INFO_FLOW_CTRL1                             (DCC_CSRS + 0x000000000058)
#define DCC_DCC_ERR_INFO_FLOW_CTRL1_RESETCSR                    0x0000000000000000ull
#define DCC_DCC_ERR_INFO_FLOW_CTRL1_FC_DATA_SHIFT               0
#define DCC_DCC_ERR_INFO_FLOW_CTRL1_FC_DATA_MASK                0xFFFFFFFFFFFFFFFFull
#define DCC_DCC_ERR_INFO_FLOW_CTRL1_FC_DATA_SMASK               0xFFFFFFFFFFFFFFFFull
/*
* Table #14 of 250_CSR_dc_common.xml - DCC_ERR_INFO_PORTRCV
* On the detection of a PortRcv error, the error code is written into this CSR. 
* The header of the packet is also recorded in #%%#Section 8.6.14, 
* 'DCC_ERR_INFO_PORTRCV_HDR0'#%%# and #%%#Section 8.6.15, 'DCC_ERR_INFO_PORTRCV_HDR1'#%%#.
*/
#define DCC_DCC_ERR_INFO_PORTRCV                                (DCC_CSRS + 0x000000000060)
#define DCC_DCC_ERR_INFO_PORTRCV_RESETCSR                       0x0000000000000000ull
#define DCC_DCC_ERR_INFO_PORTRCV_E_CODE_SHIFT                   0
#define DCC_DCC_ERR_INFO_PORTRCV_E_CODE_MASK                    0xFFull
#define DCC_DCC_ERR_INFO_PORTRCV_E_CODE_SMASK                   0xFFull
/*
* Table #15 of 250_CSR_dc_common.xml - DCC_ERR_INFO_PORTRCV_HDR0
* This CSR will record the first header flit when a PortRcv error is 
* detected.
*/
#define DCC_DCC_ERR_INFO_PORTRCV_HDR0                           (DCC_CSRS + 0x000000000068)
#define DCC_DCC_ERR_INFO_PORTRCV_HDR0_RESETCSR                  0x0000000000000000ull
#define DCC_DCC_ERR_INFO_PORTRCV_HDR0_HEAD_FLIT_SHIFT           0
#define DCC_DCC_ERR_INFO_PORTRCV_HDR0_HEAD_FLIT_MASK            0xFFFFFFFFFFFFFFFFull
#define DCC_DCC_ERR_INFO_PORTRCV_HDR0_HEAD_FLIT_SMASK           0xFFFFFFFFFFFFFFFFull
/*
* Table #16 of 250_CSR_dc_common.xml - DCC_ERR_INFO_PORTRCV_HDR1
* This CSR will record the second header flit when a PortRcv error is detected. 
* If the packet is of type 8B this CSR will not be updated.
*/
#define DCC_DCC_ERR_INFO_PORTRCV_HDR1                           (DCC_CSRS + 0x000000000070)
#define DCC_DCC_ERR_INFO_PORTRCV_HDR1_RESETCSR                  0x0000000000000000ull
#define DCC_DCC_ERR_INFO_PORTRCV_HDR1_HEAD_FLIT_SHIFT           0
#define DCC_DCC_ERR_INFO_PORTRCV_HDR1_HEAD_FLIT_MASK            0xFFFFFFFFFFFFFFFFull
#define DCC_DCC_ERR_INFO_PORTRCV_HDR1_HEAD_FLIT_SMASK           0xFFFFFFFFFFFFFFFFull
/*
* Table #17 of 250_CSR_dc_common.xml - DCC_ERR_INFO_FMCONFIG
* This CSR records additional error information (error codes) when a FMCONFIG 
* error flag is raised.
*/
#define DCC_DCC_ERR_INFO_FMCONFIG                               (DCC_CSRS + 0x000000000078)
#define DCC_DCC_ERR_INFO_FMCONFIG_RESETCSR                      0x0000000000000000ull
#define DCC_DCC_ERR_INFO_FMCONFIG_E_CODE_SHIFT                  0
#define DCC_DCC_ERR_INFO_FMCONFIG_E_CODE_MASK                   0xFFull
#define DCC_DCC_ERR_INFO_FMCONFIG_E_CODE_SMASK                  0xFFull
/*
* Table #18 of 250_CSR_dc_common.xml - DCC_ERR_INFO_UNCORRECTABLE
* This CSR records the first uncorrectable event detected. 
*/
#define DCC_DCC_ERR_INFO_UNCORRECTABLE                          (DCC_CSRS + 0x000000000080)
#define DCC_DCC_ERR_INFO_UNCORRECTABLE_RESETCSR                 0x0000000000000000ull
#define DCC_DCC_ERR_INFO_UNCORRECTABLE_E_CODE_SHIFT             0
#define DCC_DCC_ERR_INFO_UNCORRECTABLE_E_CODE_MASK              0xFull
#define DCC_DCC_ERR_INFO_UNCORRECTABLE_E_CODE_SMASK             0xFull
/*
* Table #19 of 250_CSR_dc_common.xml - DCC_ERR_SYMBOL_ERR_CNT
* Total number of symbol errors detected.
*/
#define DCC_DCC_ERR_SYMBOL_ERR_CNT                              (DCC_CSRS + 0x000000000088)
#define DCC_DCC_ERR_SYMBOL_ERR_CNT_RESETCSR                     0x0000000000000000ull
#define DCC_DCC_ERR_SYMBOL_ERR_CNT_CNT_SHIFT                    0
#define DCC_DCC_ERR_SYMBOL_ERR_CNT_CNT_MASK                     0xFFFFFFFFFFFFFFFFull
#define DCC_DCC_ERR_SYMBOL_ERR_CNT_CNT_SMASK                    0xFFFFFFFFFFFFFFFFull
/*
* Table #20 of 250_CSR_dc_common.xml - DCC_ERR_LINK_RECOVERY_CNT
* Total number of times the port training state machine successfully completed 
* the link error recovery process.
*/
#define DCC_DCC_ERR_LINK_RECOVERY_CNT                           (DCC_CSRS + 0x000000000090)
#define DCC_DCC_ERR_LINK_RECOVERY_CNT_RESETCSR                  0x0000000000000000ull
#define DCC_DCC_ERR_LINK_RECOVERY_CNT_CNT_SHIFT                 0
#define DCC_DCC_ERR_LINK_RECOVERY_CNT_CNT_MASK                  0xFFFFFFFFull
#define DCC_DCC_ERR_LINK_RECOVERY_CNT_CNT_SMASK                 0xFFFFFFFFull
/*
* Table #21 of 250_CSR_dc_common.xml - DCC_ERR_LINK_DOWN_CNT
* The number of times the link failed retraining (cable pull, serious signal 
* intergity, neighbor reset, neighbor power off, explicit port down request by 
* SMA) and was completely reset
*/
#define DCC_DCC_ERR_LINK_DOWN_CNT                               (DCC_CSRS + 0x000000000098)
#define DCC_DCC_ERR_LINK_DOWN_CNT_RESETCSR                      0x0000000000000000ull
#define DCC_DCC_ERR_LINK_DOWN_CNT_CNT_SHIFT                     0
#define DCC_DCC_ERR_LINK_DOWN_CNT_CNT_MASK                      0xFFFFFFFFull
#define DCC_DCC_ERR_LINK_DOWN_CNT_CNT_SMASK                     0xFFFFFFFFull
/*
* Table #22 of 250_CSR_dc_common.xml - DCC_ERR_PORTRCV_ERR_CNT
* The number of packets containing one of the following errors: 1 count per 
* packet.
*/
#define DCC_DCC_ERR_PORTRCV_ERR_CNT                             (DCC_CSRS + 0x0000000000A0)
#define DCC_DCC_ERR_PORTRCV_ERR_CNT_RESETCSR                    0x0000000000000000ull
#define DCC_DCC_ERR_PORTRCV_ERR_CNT_CNT_SHIFT                   0
#define DCC_DCC_ERR_PORTRCV_ERR_CNT_CNT_MASK                    0xFFFFFFFFFFFFFFFFull
#define DCC_DCC_ERR_PORTRCV_ERR_CNT_CNT_SMASK                   0xFFFFFFFFFFFFFFFFull
/*
* Table #23 of 250_CSR_dc_common.xml - DCC_ERR_FMCONFIG_ERR_CNT
* The number of occurrences due to one of the following errors.
*/
#define DCC_DCC_ERR_FMCONFIG_ERR_CNT                            (DCC_CSRS + 0x0000000000A8)
#define DCC_DCC_ERR_FMCONFIG_ERR_CNT_RESETCSR                   0x0000000000000000ull
#define DCC_DCC_ERR_FMCONFIG_ERR_CNT_CNT_SHIFT                  0
#define DCC_DCC_ERR_FMCONFIG_ERR_CNT_CNT_MASK                   0xFFFFFFFFFFFFFFFFull
#define DCC_DCC_ERR_FMCONFIG_ERR_CNT_CNT_SMASK                  0xFFFFFFFFFFFFFFFFull
/*
* Table #24 of 250_CSR_dc_common.xml - DCC_ERR_RCVREMOTE_PHY_ERR_CNT
* In STL mode: Total number of received packets containing a TailBadPkt, 
* BodyBadPkt or HeadBadPkt flit. Each such packet shall be counted only once, 
* even if multiple BadPkt flits occur in the same packet.
*/
#define DCC_DCC_ERR_RCVREMOTE_PHY_ERR_CNT                       (DCC_CSRS + 0x0000000000B0)
#define DCC_DCC_ERR_RCVREMOTE_PHY_ERR_CNT_RESETCSR              0x0000000000000000ull
#define DCC_DCC_ERR_RCVREMOTE_PHY_ERR_CNT_CNT_SHIFT             0
#define DCC_DCC_ERR_RCVREMOTE_PHY_ERR_CNT_CNT_MASK              0xFFFFFFFFFFFFFFFFull
#define DCC_DCC_ERR_RCVREMOTE_PHY_ERR_CNT_CNT_SMASK             0xFFFFFFFFFFFFFFFFull
/*
* Table #25 of 250_CSR_dc_common.xml - DCC_ERR_LOCAL_LINK_INTEGRITY_ERR_CNT
* In STL mode: Link integrity errors can be found in LCB CSRs.#%%#In IB mode: 
* The number of times that local physical errors has exceeded the threshold 
* specified by LocalPhyErrors.
*/
#define DCC_DCC_ERR_LOCAL_LINK_INTEGRITY_ERR_CNT                (DCC_CSRS + 0x0000000000B8)
#define DCC_DCC_ERR_LOCAL_LINK_INTEGRITY_ERR_CNT_RESETCSR       0x0000000000000000ull
#define DCC_DCC_ERR_LOCAL_LINK_INTEGRITY_ERR_CNT_CNT_SHIFT      0
#define DCC_DCC_ERR_LOCAL_LINK_INTEGRITY_ERR_CNT_CNT_MASK       0xFFull
#define DCC_DCC_ERR_LOCAL_LINK_INTEGRITY_ERR_CNT_CNT_SMASK      0xFFull
/*
* Table #26 of 250_CSR_dc_common.xml - DCC_ERR_EXCESS_BUFOVER_ERR_CNT
* IB packets
*/
#define DCC_DCC_ERR_EXCESS_BUFOVER_ERR_CNT                      (DCC_CSRS + 0x0000000000C0)
#define DCC_DCC_ERR_EXCESS_BUFOVER_ERR_CNT_RESETCSR             0x0000000000000000ull
#define DCC_DCC_ERR_EXCESS_BUFOVER_ERR_CNT_CNT_SHIFT            0
#define DCC_DCC_ERR_EXCESS_BUFOVER_ERR_CNT_CNT_MASK             0xFFull
#define DCC_DCC_ERR_EXCESS_BUFOVER_ERR_CNT_CNT_SMASK            0xFFull
/*
* Table #27 of 250_CSR_dc_common.xml - DCC_STS_RX_FLOW_CRTL_CNT
* Total number of flow control packets received.
*/
#define DCC_DCC_STS_RX_FLOW_CRTL_CNT                            (DCC_CSRS + 0x0000000000C8)
#define DCC_DCC_STS_RX_FLOW_CRTL_CNT_RESETCSR                   0x0000000000000000ull
#define DCC_DCC_STS_RX_FLOW_CRTL_CNT_CNT_SHIFT                  0
#define DCC_DCC_STS_RX_FLOW_CRTL_CNT_CNT_MASK                   0xFFFFFFFFFFFFFFFFull
#define DCC_DCC_STS_RX_FLOW_CRTL_CNT_CNT_SMASK                  0xFFFFFFFFFFFFFFFFull
/*
* Table #28 of 250_CSR_dc_common.xml - DCC_STS_TX_FLOW_CRTL_CNT
* Total number of flow control packets transmitted.
*/
#define DCC_DCC_STS_TX_FLOW_CRTL_CNT                            (DCC_CSRS + 0x0000000000D0)
#define DCC_DCC_STS_TX_FLOW_CRTL_CNT_RESETCSR                   0x0000000000000000ull
#define DCC_DCC_STS_TX_FLOW_CRTL_CNT_CNT_SHIFT                  0
#define DCC_DCC_STS_TX_FLOW_CRTL_CNT_CNT_MASK                   0xFFFFFFFFFFFFFFFFull
#define DCC_DCC_STS_TX_FLOW_CRTL_CNT_CNT_SMASK                  0xFFFFFFFFFFFFFFFFull
/*
* Table #29 of 250_CSR_dc_common.xml - DCC_ERR_DROPPED_PKT_CNT
* In STL and IB modes: The total number of packets that are either dropped or 
* have its tail marked bad. This includes packets that are discarded when ICRC 
* check fails.
*/
#define DCC_DCC_ERR_DROPPED_PKT_CNT                             (DCC_CSRS + 0x0000000000D8)
#define DCC_DCC_ERR_DROPPED_PKT_CNT_RESETCSR                    0x0000000000000000ull
#define DCC_DCC_ERR_DROPPED_PKT_CNT_CNT_SHIFT                   0
#define DCC_DCC_ERR_DROPPED_PKT_CNT_CNT_MASK                    0xFFFFFFFFFFFFFFFFull
#define DCC_DCC_ERR_DROPPED_PKT_CNT_CNT_SMASK                   0xFFFFFFFFFFFFFFFFull
/*
* Table #30 of 250_CSR_dc_common.xml - DCC_ERR_UNCORRECTABLE_CNT
* 
*/
#define DCC_DCC_ERR_UNCORRECTABLE_CNT                           (DCC_CSRS + 0x0000000000E0)
#define DCC_DCC_ERR_UNCORRECTABLE_CNT_RESETCSR                  0x0000000000000000ull
#define DCC_DCC_ERR_UNCORRECTABLE_CNT_CNT_SHIFT                 0
#define DCC_DCC_ERR_UNCORRECTABLE_CNT_CNT_MASK                  0xFFFFFFFFFFFFFFFFull
#define DCC_DCC_ERR_UNCORRECTABLE_CNT_CNT_SMASK                 0xFFFFFFFFFFFFFFFFull
/*
* Table #31 of 250_CSR_dc_common.xml - DCC_PRF_RX_MULTICAST_PKT_CNT
* This is marked TBD in Vol1g1.#%%#TBD - add Multicast and possibly unicast pkt 
* counters as provided in IBTA spec
*/
#define DCC_DCC_PRF_RX_MULTICAST_PKT_CNT                        (DCC_CSRS + 0x0000000000E8)
#define DCC_DCC_PRF_RX_MULTICAST_PKT_CNT_RESETCSR               0x0000000000000000ull
#define DCC_DCC_PRF_RX_MULTICAST_PKT_CNT_CNT_SHIFT              0
#define DCC_DCC_PRF_RX_MULTICAST_PKT_CNT_CNT_MASK               0xFFFFFFFFFFFFFFFFull
#define DCC_DCC_PRF_RX_MULTICAST_PKT_CNT_CNT_SMASK              0xFFFFFFFFFFFFFFFFull
/*
* Table #32 of 250_CSR_dc_common.xml - DCC_PRF_TX_MULTICAST_PKT_CNT
* This is marked TBD in Vol1g1.#%%#Total number of multicast packets 
* transmitted.
*/
#define DCC_DCC_PRF_TX_MULTICAST_PKT_CNT                        (DCC_CSRS + 0x0000000000F0)
#define DCC_DCC_PRF_TX_MULTICAST_PKT_CNT_RESETCSR               0x0000000000000000ull
#define DCC_DCC_PRF_TX_MULTICAST_PKT_CNT_CNT_SHIFT              0
#define DCC_DCC_PRF_TX_MULTICAST_PKT_CNT_CNT_MASK               0xFFFFFFFFFFFFFFFFull
#define DCC_DCC_PRF_TX_MULTICAST_PKT_CNT_CNT_SMASK              0xFFFFFFFFFFFFFFFFull
/*
* Table #33 of 250_CSR_dc_common.xml - DCC_PRF_RX_VLx_PKT_CNT
* In STL and IB modes: The total number of packets received per 
* VL.
*/
#define DCC_DCC_PRF_RX_VLX_PKT_CNT                              (DCC_CSRS + 0x0000000000F8)
#define DCC_DCC_PRF_RX_VLX_PKT_CNT_RESETCSR                     0x0000000000000000ull
#define DCC_DCC_PRF_RX_VLX_PKT_CNT_CNT_SHIFT                    0
#define DCC_DCC_PRF_RX_VLX_PKT_CNT_CNT_MASK                     0xFFFFFFFFFFFFFFFFull
#define DCC_DCC_PRF_RX_VLX_PKT_CNT_CNT_SMASK                    0xFFFFFFFFFFFFFFFFull
/*
* Table #34 of 250_CSR_dc_common.xml - DCC_PRF_RX_VLx_FLIT_CNT
* In STL mode: The total number of fabric packet flits transmitted per VL (head, 
* body, tail, headbadpkt, bodybadpkt, tailbadpacket). Does not include idle nor 
* other control flits.
*/
#define DCC_DCC_PRF_RX_VLX_FLIT_CNT                             (DCC_CSRS + 0x000000000140)
#define DCC_DCC_PRF_RX_VLX_FLIT_CNT_RESETCSR                    0x0000000000000000ull
#define DCC_DCC_PRF_RX_VLX_FLIT_CNT_CNT_SHIFT                   0
#define DCC_DCC_PRF_RX_VLX_FLIT_CNT_CNT_MASK                    0xFFFFFFFFFFFFFFFFull
#define DCC_DCC_PRF_RX_VLX_FLIT_CNT_CNT_SMASK                   0xFFFFFFFFFFFFFFFFull
/*
* Table #35 of 250_CSR_dc_common.xml - DCC_PRF_TX_VLx_PKT_CNT
* In STL and IB modes: The total number of packets transmitted per 
* VL.
*/
#define DCC_DCC_PRF_TX_VLX_PKT_CNT                              (DCC_CSRS + 0x000000000188)
#define DCC_DCC_PRF_TX_VLX_PKT_CNT_RESETCSR                     0x0000000000000000ull
#define DCC_DCC_PRF_TX_VLX_PKT_CNT_CNT_SHIFT                    0
#define DCC_DCC_PRF_TX_VLX_PKT_CNT_CNT_MASK                     0xFFFFFFFFFFFFFFFFull
#define DCC_DCC_PRF_TX_VLX_PKT_CNT_CNT_SMASK                    0xFFFFFFFFFFFFFFFFull
/*
* Table #36 of 250_CSR_dc_common.xml - DCC_PRF_TX_VLx_FLIT_CNT
* In STL mode: The total number of fabric packet flits transmitted per VL (head, 
* body, tail, headbadpkt, bodybadpkt, tailbadpacket). Does not include idle nor 
* other control flits.
*/
#define DCC_DCC_PRF_TX_VLX_FLIT_CNT                             (DCC_CSRS + 0x0000000001D0)
#define DCC_DCC_PRF_TX_VLX_FLIT_CNT_RESETCSR                    0x0000000000000000ull
#define DCC_DCC_PRF_TX_VLX_FLIT_CNT_CNT_SHIFT                   0
#define DCC_DCC_PRF_TX_VLX_FLIT_CNT_CNT_MASK                    0xFFFFFFFFFFFFFFFFull
#define DCC_DCC_PRF_TX_VLX_FLIT_CNT_CNT_SMASK                   0xFFFFFFFFFFFFFFFFull

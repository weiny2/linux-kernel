/*
* -------------------------------------------------------------------
* --                      Intel Proprietary
* --              Copyright (C) 2013 Intel Corporation
* --                    All Rights Reserved
* -------------------------------------------------------------------
* --           Auto-generated by /p/slx/pvesv/wfr_autogen/utils/scripts/i_csrs/i_csrs.pl 
* --  i_csrs.pl Version 1.5 last modified on Wednesday 5/7/14 07:25:46
* --   /p/slx/pvesv/wfr_autogen/utils/scripts/i_csrs/i_csrs.pl -C -output=/p/slx/pvesv/wfr_autogen/wfr -l=0 /p/slx/pvesv/wfr_autogen/SL1_fixed_xml/WFR/250_RXE_Registers.xml /p/slx/pvesv/wfr_autogen/SL1_fixed_xml/WFR_DBG/750_RXE_Header_Parser_Debug_Registers.xml /p/slx/pvesv/wfr_autogen/SL1_fixed_xml/WFR_DBG/760_RXE_Lookup_Debug_Registers.xml /p/slx/pvesv/wfr_autogen/SL1_fixed_xml/WFR_DBG/770_RXE_Buffer_Debug_Registers.xml /p/slx/pvesv/wfr_autogen/SL1_fixed_xml/WFR_DBG/780_RXE_DMA_Debug_Registers.xml /p/slx/pvesv/wfr_autogen/SL1_fixed_xml/WFR_DBG/785_RXE_Debug_Registers.xml  
* --------------------------------------------------------------------
*/

#ifndef DEF_WFR_RXE_SW_DEF
#define DEF_WFR_RXE_SW_DEF

#define RXE_BASE_ADDRESS									0x1000000
#define RXE_KERNEL_OFFSET									0x0000000
#define RXE_PER_CONTEXT_KERNEL_OFFSET								0x0100000
#define RXE_RECEIVE_ARRAY_OFFSET								0x0200000
#define RXE_PER_CONTEXT_OFFSET									0x0300000
#define RXE_NUM_CONTEXTS									160
#define RXE_MAX_CONTEXT										159
#define RXE_NUM_DATA_VLS									8
#define RXE_MAX_DATA_VL										7
#define RXE_NUM_32_BIT_COUNTERS									24
#define RXE_MAX_32_BIT_COUNTER									23
#define RXE_NUM_64_BIT_COUNTERS									2
#define RXE_MAX_64_BIT_COUNTER									1
#define RXE_NUM_TID_FLOWS									32
#define RXE_MAX_TID_FLOW									31
#define RXE_NUM_RECEIVE_ARRAY_ENTRIES								65536
#define RXE_MAX_RECEIVE_ARRAY_ENTRY								65535
#define RXE_RECEIVE_BUFFER_BYTES								151552
#define RXE_RECEIVE_BUFFER_SIZE									18944
#define RXE_NUM_RSM_INSTANCES									4
#define RXE_MAX_RSM_INSTANCE									3
#define RCV_LENGTH_ERR_CNT									0
#define RCV_MAX_MIN_LENGTH_ERR_CNT								1
#define RCV_SHORT_LENGTH_ERR_CNT								2
#define RCV_LONG_LENGTH_ERR_CNT									3
#define RCV_EXCESS_BUFFER_OVERRUNS_CNT								4
#define RCV_UNEXP_CHAR_ERR_CNT									5
#define RCV_ICRC_ERR_CNT									6
#define RCV_EBP_CNT										9
#define RCV_BUF_OVFL_CNT									10
#define RCV_PKEY_MISMATCH_CNT									11
#define RCV_VL15_DROPPED_PKT_CNT								12
#define RCV_INVALID_CONTEXT_CNT									13
#define RCV_JKEY_MISMATCH_CNT									14
#define RCV_DISABLED_CONTEXT_CNT								15
#define RCV_DROPPED_PKT_CNT									16
#define RCV_DROPPED_BYPASS_PKT_CNT								17
#define RCV_TID_FULL_ERR_CNT									18
#define RCV_TID_VALID_ERR_CNT									19
#define RCV_TID_FLOW_GEN_MISMATCH_CNT								20
#define RCV_CONTEXT_RHQ_STALL									21
#define RCV_CONTEXT_EGR_STALL									22
#define RCV_TID_FLOW_SEQ_MISMATCH_CNT								23
#define RCV_DATA_PKT_CNT									0
#define RCV_DWORD_CNT										1
#define RXE_RECEIVE_DEBUG_OFFSET								0X0780000
#define RXE_LOOKUP_DEBUG_OFFSET									0X07A0000
#define RXE_BUFFER_DBG_OFFSET									0X0700000
#define RXE_BUFFER_DBG_NUM_CREDIT								2368
#define RXE_BUFFER_DBG_MAX_CREDIT								2367
#define RXE_BUFFER_DBG_NUM_QWORD								18944
#define RXE_BUFFER_DBG_MAX_QWORD								18943
#define RXE_BUFFER_DBG_NUM_CONTEXTS								160
#define RXE_BUFFER_DBG_MAX_CONTEXT								159
#define RXE_BUFFER_DBG_NUM_CONTEXTS_BY4								40
#define RXE_BUFFER_DBG_MAX_CONTEXT_BY4								39
#define RXE_DMA_DEBUG_OFFSET									0X07C0000
#define RXE_DEBUG_OFFSET									0X0788000
/*
* Table #5 of 250_RXE_Registers.xml - RcvCtrl
* This CSR is used for control and configuration of the receive 
* engine.
*/
#define WFR_RCV_CTRL										(WFR_RXE + 0x000000000000)
#define WFR_RCV_CTRL_RESETCSR									0x0000000000000000ull
#define WFR_RCV_CTRL_RX_RBUF_INIT_SHIFT								9
#define WFR_RCV_CTRL_RX_RBUF_INIT_MASK								0x1ull
#define WFR_RCV_CTRL_RX_RBUF_INIT_SMASK								0x200ull
#define WFR_RCV_CTRL_RCV_WCB_SHIFT								7
#define WFR_RCV_CTRL_RCV_WCB_MASK								0x3ull
#define WFR_RCV_CTRL_RCV_WCB_SMASK								0x180ull
#define WFR_RCV_CTRL_RCV_EXTENDED_PSN_ENABLE_SHIFT						6
#define WFR_RCV_CTRL_RCV_EXTENDED_PSN_ENABLE_MASK						0x1ull
#define WFR_RCV_CTRL_RCV_EXTENDED_PSN_ENABLE_SMASK						0x40ull
#define WFR_RCV_CTRL_RCV_RSM_ENABLE_SHIFT							5
#define WFR_RCV_CTRL_RCV_RSM_ENABLE_MASK							0x1ull
#define WFR_RCV_CTRL_RCV_RSM_ENABLE_SMASK							0x20ull
#define WFR_RCV_CTRL_RCV_BYPASS_ENABLE_SHIFT							4
#define WFR_RCV_CTRL_RCV_BYPASS_ENABLE_MASK							0x1ull
#define WFR_RCV_CTRL_RCV_BYPASS_ENABLE_SMASK							0x10ull
#define WFR_RCV_CTRL_RCV_PARTITION_KEY_ENABLE_SHIFT						2
#define WFR_RCV_CTRL_RCV_PARTITION_KEY_ENABLE_MASK						0x1ull
#define WFR_RCV_CTRL_RCV_PARTITION_KEY_ENABLE_SMASK						0x4ull
#define WFR_RCV_CTRL_RCV_QP_MAP_ENABLE_SHIFT							1
#define WFR_RCV_CTRL_RCV_QP_MAP_ENABLE_MASK							0x1ull
#define WFR_RCV_CTRL_RCV_QP_MAP_ENABLE_SMASK							0x2ull
#define WFR_RCV_CTRL_RCV_PORT_ENABLE_SHIFT							0
#define WFR_RCV_CTRL_RCV_PORT_ENABLE_MASK							0x1ull
#define WFR_RCV_CTRL_RCV_PORT_ENABLE_SMASK							0x1ull
/*
* Table #6 of 250_RXE_Registers.xml - RcvStatus
* This CSR is used for accessing the status of the receive engine.
*/
#define WFR_RCV_STATUS										(WFR_RXE + 0x000000000008)
#define WFR_RCV_STATUS_RESETCSR									0x0000000000000000ull
#define WFR_RCV_STATUS_RX_RBUF_INIT_DONE_SHIFT							9
#define WFR_RCV_STATUS_RX_RBUF_INIT_DONE_MASK							0x1ull
#define WFR_RCV_STATUS_RX_RBUF_INIT_DONE_SMASK							0x200ull
#define WFR_RCV_STATUS_RX_DMA_DATA_FIFO_FULL_SHIFT						8
#define WFR_RCV_STATUS_RX_DMA_DATA_FIFO_FULL_MASK						0x1ull
#define WFR_RCV_STATUS_RX_DMA_DATA_FIFO_FULL_SMASK						0x100ull
#define WFR_RCV_STATUS_RX_DMA_HDR_FIFO_FULL_SHIFT						7
#define WFR_RCV_STATUS_RX_DMA_HDR_FIFO_FULL_MASK						0x1ull
#define WFR_RCV_STATUS_RX_DMA_HDR_FIFO_FULL_SMASK						0x80ull
#define WFR_RCV_STATUS_RX_RBUF_PKT_PENDING_SHIFT						6
#define WFR_RCV_STATUS_RX_RBUF_PKT_PENDING_MASK							0x1ull
#define WFR_RCV_STATUS_RX_RBUF_PKT_PENDING_SMASK						0x40ull
#define WFR_RCV_STATUS_RX_PAUSED_SHIFT								5
#define WFR_RCV_STATUS_RX_PAUSED_MASK								0x1ull
#define WFR_RCV_STATUS_RX_PAUSED_SMASK								0x20ull
#define WFR_RCV_STATUS_RX_DMA_FREEZE_SHIFT							4
#define WFR_RCV_STATUS_RX_DMA_FREEZE_MASK							0x1ull
#define WFR_RCV_STATUS_RX_DMA_FREEZE_SMASK							0x10ull
#define WFR_RCV_STATUS_RX_LOOKUP_FREEZE_SHIFT							3
#define WFR_RCV_STATUS_RX_LOOKUP_FREEZE_MASK							0x1ull
#define WFR_RCV_STATUS_RX_LOOKUP_FREEZE_SMASK							0x8ull
#define WFR_RCV_STATUS_RX_RBUF_FREEZE_SHIFT							2
#define WFR_RCV_STATUS_RX_RBUF_FREEZE_MASK							0x1ull
#define WFR_RCV_STATUS_RX_RBUF_FREEZE_SMASK							0x4ull
#define WFR_RCV_STATUS_RX_RCV_FREEZE_SHIFT							1
#define WFR_RCV_STATUS_RX_RCV_FREEZE_MASK							0x1ull
#define WFR_RCV_STATUS_RX_RCV_FREEZE_SMASK							0x2ull
#define WFR_RCV_STATUS_RX_PKT_IN_PROGRESS_SHIFT							0
#define WFR_RCV_STATUS_RX_PKT_IN_PROGRESS_MASK							0x1ull
#define WFR_RCV_STATUS_RX_PKT_IN_PROGRESS_SMASK							0x1ull
/*
* Table #7 of 250_RXE_Registers.xml - RcvContexts
* This CSR is used by software for determining the number of receive 
* contexts.
*/
#define WFR_RCV_CONTEXTS									(WFR_RXE + 0x000000000010)
#define WFR_RCV_CONTEXTS_RESETCSR								0x00000000000000A0ull
#define WFR_RCV_CONTEXTS_CNT_SHIFT								0
#define WFR_RCV_CONTEXTS_CNT_MASK								0xFFull
#define WFR_RCV_CONTEXTS_CNT_SMASK								0xFFull
/*
* Table #8 of 250_RXE_Registers.xml - RcvArrayCnt
* This CSR is used by software for determining the number of entries in the 
* receive array.
*/
#define WFR_RCV_ARRAY_CNT									(WFR_RXE + 0x000000000018)
#define WFR_RCV_ARRAY_CNT_RESETCSR								0x0000000000010000ull
#define WFR_RCV_ARRAY_CNT_CNT_SHIFT								0
#define WFR_RCV_ARRAY_CNT_CNT_MASK								0xFFFFFull
#define WFR_RCV_ARRAY_CNT_CNT_SMASK								0xFFFFFull
/*
* Table #9 of 250_RXE_Registers.xml - RcvBufSize
* This CSR is used by software for determining the size of the receive 
* buffer.
*/
#define WFR_RCV_BUF_SIZE									(WFR_RXE + 0x000000000020)
#define WFR_RCV_BUF_SIZE_RESETCSR								0x0000000000025000ull
#define WFR_RCV_BUF_SIZE_CNT_SHIFT								0
#define WFR_RCV_BUF_SIZE_CNT_MASK								0xFFFFFull
#define WFR_RCV_BUF_SIZE_CNT_SMASK								0xFFFFFull
/*
* Table #10 of 250_RXE_Registers.xml - RcvBthQP
* This CSR is used to specify the QP value used for identifying KDETH packets on 
* the receive side. In normal use, software should program this to the same 
* value as SendBthQP. The reason for having two CSRs for the same value is to 
* separate TX and RX implementation.
*/
#define WFR_RCV_BTH_QP										(WFR_RXE + 0x000000000028)
#define WFR_RCV_BTH_QP_RESETCSR									0x0000000000000000ull
#define WFR_RCV_BTH_QP_KDETH_QP_SHIFT								16
#define WFR_RCV_BTH_QP_KDETH_QP_MASK								0xFFull
#define WFR_RCV_BTH_QP_KDETH_QP_SMASK								0xFF0000ull
/*
* Table #11 of 250_RXE_Registers.xml - RcvMulticast
* This CSR is used to specify the context used for multicast packets. Multicast 
* 9B packets are identified by the LRH.DLID field being in the range of 0xC000 
* to 0xFFFE inclusive. Receive context numbers are in the range of 0 to 159 
* inclusive. Values in the range 160 to 255 inclusive are invalid, and cause 
* packets to be dropped.
*/
#define WFR_RCV_MULTICAST									(WFR_RXE + 0x000000000030)
#define WFR_RCV_MULTICAST_RESETCSR								0x0000000000000000ull
#define WFR_RCV_MULTICAST_MULTICAST_CONTEXT_SHIFT						0
#define WFR_RCV_MULTICAST_MULTICAST_CONTEXT_MASK						0xFFull
#define WFR_RCV_MULTICAST_MULTICAST_CONTEXT_SMASK						0xFFull
/*
* Table #12 of 250_RXE_Registers.xml - RcvBypass
* This CSR is used to specify the context used for bypass packets. Receive 
* context numbers are in the range of 0 to 159 inclusive. Values in the range 
* 160 to 255 inclusive are invalid, and cause packets to be dropped.
*/
#define WFR_RCV_BYPASS										(WFR_RXE + 0x000000000038)
#define WFR_RCV_BYPASS_RESETCSR									0x0000000000000000ull
#define WFR_RCV_BYPASS_HDR_SIZE_SHIFT								16
#define WFR_RCV_BYPASS_HDR_SIZE_MASK								0xFFull
#define WFR_RCV_BYPASS_HDR_SIZE_SMASK								0xFF0000ull
#define WFR_RCV_BYPASS_BYPASS_CONTEXT_SHIFT							0
#define WFR_RCV_BYPASS_BYPASS_CONTEXT_MASK							0xFFull
#define WFR_RCV_BYPASS_BYPASS_CONTEXT_SMASK							0xFFull
/*
* Table #13 of 250_RXE_Registers.xml - RcvVL15
* This CSR is used to specify the receive context used for VL15 packets. VL15 
* packets are identified by the 4-bit VL sideband signal from Duncan Creek 
* having the value of 15. For STL 9B packets this is the result of translating 
* the SC field through the SC2VL_r table inside Duncan Creek. Bypass packets are 
* handled separately and do not use the value in this CSR. Receive context 
* numbers are in the range of 0 to 159 inclusive. Values in the range 160 to 255 
* inclusive are invalid, and cause packets to be dropped.
*/
#define WFR_RCV_VL15										(WFR_RXE + 0x000000000048)
#define WFR_RCV_VL15_RESETCSR									0x0000000000000000ull
#define WFR_RCV_VL15_VL15_CONTEXT_SHIFT								0
#define WFR_RCV_VL15_VL15_CONTEXT_MASK								0xFFull
#define WFR_RCV_VL15_VL15_CONTEXT_SMASK								0xFFull
/*
* Table #14 of 250_RXE_Registers.xml - RcvErrInfo
* This CSR is used to specify additional information for specific error 
* conditions as described in the following table.
*/
#define WFR_RCV_ERR_INFO									(WFR_RXE + 0x000000000050)
#define WFR_RCV_ERR_INFO_RESETCSR								0x0000000000000000ull
#define WFR_RCV_ERR_INFO_RCV_EXCESS_BUFFER_OVERRUN_SHIFT					5
#define WFR_RCV_ERR_INFO_RCV_EXCESS_BUFFER_OVERRUN_MASK						0x1ull
#define WFR_RCV_ERR_INFO_RCV_EXCESS_BUFFER_OVERRUN_SMASK					0x20ull
#define WFR_RCV_ERR_INFO_RCV_EXCESS_BUFFER_OVERRUN_SC_SHIFT					0
#define WFR_RCV_ERR_INFO_RCV_EXCESS_BUFFER_OVERRUN_SC_MASK					0x1Full
#define WFR_RCV_ERR_INFO_RCV_EXCESS_BUFFER_OVERRUN_SC_SMASK					0x1Full
/*
* Table #15 of 250_RXE_Registers.xml - RcvErrStatus
* This CSR reports error status for the receive engine. The receive engine error 
* cases are defined in #%%#Table 8-21, #%%#'Receive Error Cases'#%%#.
*/
#define WFR_RCV_ERR_STATUS									(WFR_RXE + 0x000000000060)
#define WFR_RCV_ERR_STATUS_RESETCSR								0x0000000000000000ull
#define WFR_RCV_ERR_STATUS_RX_CSR_PARITY_ERR_SHIFT						63
#define WFR_RCV_ERR_STATUS_RX_CSR_PARITY_ERR_MASK						0x1ull
#define WFR_RCV_ERR_STATUS_RX_CSR_PARITY_ERR_SMASK						0x8000000000000000ull
#define WFR_RCV_ERR_STATUS_RX_CSR_WRITE_BAD_ADDR_ERR_SHIFT					62
#define WFR_RCV_ERR_STATUS_RX_CSR_WRITE_BAD_ADDR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_CSR_WRITE_BAD_ADDR_ERR_SMASK					0x4000000000000000ull
#define WFR_RCV_ERR_STATUS_RX_CSR_READ_BAD_ADDR_ERR_SHIFT					61
#define WFR_RCV_ERR_STATUS_RX_CSR_READ_BAD_ADDR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_CSR_READ_BAD_ADDR_ERR_SMASK					0x2000000000000000ull
#define WFR_RCV_ERR_STATUS_RX_DMA_CSR_UNC_ERR_SHIFT						60
#define WFR_RCV_ERR_STATUS_RX_DMA_CSR_UNC_ERR_MASK						0x1ull
#define WFR_RCV_ERR_STATUS_RX_DMA_CSR_UNC_ERR_SMASK						0x1000000000000000ull
#define WFR_RCV_ERR_STATUS_RX_DMA_DQ_FSM_ENCODING_ERR_SHIFT					59
#define WFR_RCV_ERR_STATUS_RX_DMA_DQ_FSM_ENCODING_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_DMA_DQ_FSM_ENCODING_ERR_SMASK					0x800000000000000ull
#define WFR_RCV_ERR_STATUS_RX_DMA_EQ_FSM_ENCODING_ERR_SHIFT					58
#define WFR_RCV_ERR_STATUS_RX_DMA_EQ_FSM_ENCODING_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_DMA_EQ_FSM_ENCODING_ERR_SMASK					0x400000000000000ull
#define WFR_RCV_ERR_STATUS_RX_DMA_CSR_PARITY_ERR_SHIFT						57
#define WFR_RCV_ERR_STATUS_RX_DMA_CSR_PARITY_ERR_MASK						0x1ull
#define WFR_RCV_ERR_STATUS_RX_DMA_CSR_PARITY_ERR_SMASK						0x200000000000000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_DATA_COR_ERR_SHIFT						56
#define WFR_RCV_ERR_STATUS_RX_RBUF_DATA_COR_ERR_MASK						0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_DATA_COR_ERR_SMASK						0x100000000000000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_DATA_UNC_ERR_SHIFT						55
#define WFR_RCV_ERR_STATUS_RX_RBUF_DATA_UNC_ERR_MASK						0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_DATA_UNC_ERR_SMASK						0x80000000000000ull
#define WFR_RCV_ERR_STATUS_RX_DMA_DATA_FIFO_RD_COR_ERR_SHIFT					54
#define WFR_RCV_ERR_STATUS_RX_DMA_DATA_FIFO_RD_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_DMA_DATA_FIFO_RD_COR_ERR_SMASK					0x40000000000000ull
#define WFR_RCV_ERR_STATUS_RX_DMA_DATA_FIFO_RD_UNC_ERR_SHIFT					53
#define WFR_RCV_ERR_STATUS_RX_DMA_DATA_FIFO_RD_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_DMA_DATA_FIFO_RD_UNC_ERR_SMASK					0x20000000000000ull
#define WFR_RCV_ERR_STATUS_RX_DMA_HDR_FIFO_RD_COR_ERR_SHIFT					52
#define WFR_RCV_ERR_STATUS_RX_DMA_HDR_FIFO_RD_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_DMA_HDR_FIFO_RD_COR_ERR_SMASK					0x10000000000000ull
#define WFR_RCV_ERR_STATUS_RX_DMA_HDR_FIFO_RD_UNC_ERR_SHIFT					51
#define WFR_RCV_ERR_STATUS_RX_DMA_HDR_FIFO_RD_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_DMA_HDR_FIFO_RD_UNC_ERR_SMASK					0x8000000000000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_DESC_PART2_COR_ERR_SHIFT					50
#define WFR_RCV_ERR_STATUS_RX_RBUF_DESC_PART2_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_DESC_PART2_COR_ERR_SMASK					0x4000000000000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_DESC_PART2_UNC_ERR_SHIFT					49
#define WFR_RCV_ERR_STATUS_RX_RBUF_DESC_PART2_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_DESC_PART2_UNC_ERR_SMASK					0x2000000000000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_DESC_PART1_COR_ERR_SHIFT					48
#define WFR_RCV_ERR_STATUS_RX_RBUF_DESC_PART1_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_DESC_PART1_COR_ERR_SMASK					0x1000000000000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_DESC_PART1_UNC_ERR_SHIFT					47
#define WFR_RCV_ERR_STATUS_RX_RBUF_DESC_PART1_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_DESC_PART1_UNC_ERR_SMASK					0x800000000000ull
#define WFR_RCV_ERR_STATUS_RX_HQ_INTR_FSM_ERR_SHIFT						46
#define WFR_RCV_ERR_STATUS_RX_HQ_INTR_FSM_ERR_MASK						0x1ull
#define WFR_RCV_ERR_STATUS_RX_HQ_INTR_FSM_ERR_SMASK						0x400000000000ull
#define WFR_RCV_ERR_STATUS_RX_HQ_INTR_CSR_PARITY_ERR_SHIFT					45
#define WFR_RCV_ERR_STATUS_RX_HQ_INTR_CSR_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_HQ_INTR_CSR_PARITY_ERR_SMASK					0x200000000000ull
#define WFR_RCV_ERR_STATUS_RX_LOOKUP_CSR_PARITY_ERR_SHIFT					44
#define WFR_RCV_ERR_STATUS_RX_LOOKUP_CSR_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_LOOKUP_CSR_PARITY_ERR_SMASK					0x100000000000ull
#define WFR_RCV_ERR_STATUS_RX_LOOKUP_RCV_ARRAY_COR_ERR_SHIFT					43
#define WFR_RCV_ERR_STATUS_RX_LOOKUP_RCV_ARRAY_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_LOOKUP_RCV_ARRAY_COR_ERR_SMASK					0x80000000000ull
#define WFR_RCV_ERR_STATUS_RX_LOOKUP_RCV_ARRAY_UNC_ERR_SHIFT					42
#define WFR_RCV_ERR_STATUS_RX_LOOKUP_RCV_ARRAY_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_LOOKUP_RCV_ARRAY_UNC_ERR_SMASK					0x40000000000ull
#define WFR_RCV_ERR_STATUS_RX_LOOKUP_DES_PART2_PARITY_ERR_SHIFT					41
#define WFR_RCV_ERR_STATUS_RX_LOOKUP_DES_PART2_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_LOOKUP_DES_PART2_PARITY_ERR_SMASK					0x20000000000ull
#define WFR_RCV_ERR_STATUS_RX_LOOKUP_DES_PART1_UNC_COR_ERR_SHIFT				40
#define WFR_RCV_ERR_STATUS_RX_LOOKUP_DES_PART1_UNC_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_LOOKUP_DES_PART1_UNC_COR_ERR_SMASK				0x10000000000ull
#define WFR_RCV_ERR_STATUS_RX_LOOKUP_DES_PART1_UNC_ERR_SHIFT					39
#define WFR_RCV_ERR_STATUS_RX_LOOKUP_DES_PART1_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_LOOKUP_DES_PART1_UNC_ERR_SMASK					0x8000000000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_NEXT_FREE_BUF_COR_ERR_SHIFT					38
#define WFR_RCV_ERR_STATUS_RX_RBUF_NEXT_FREE_BUF_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_NEXT_FREE_BUF_COR_ERR_SMASK					0x4000000000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_NEXT_FREE_BUF_UNC_ERR_SHIFT					37
#define WFR_RCV_ERR_STATUS_RX_RBUF_NEXT_FREE_BUF_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_NEXT_FREE_BUF_UNC_ERR_SMASK					0x2000000000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_FL_INIT_WR_ADDR_PARITY_ERR_SHIFT				36
#define WFR_RCV_ERR_STATUS_RX_RBUF_FL_INIT_WR_ADDR_PARITY_ERR_MASK				0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_FL_INIT_WR_ADDR_PARITY_ERR_SMASK				0x1000000000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_FL_INITDONE_PARITY_ERR_SHIFT					35
#define WFR_RCV_ERR_STATUS_RX_RBUF_FL_INITDONE_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_FL_INITDONE_PARITY_ERR_SMASK					0x800000000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_FL_WR_ADDR_PARITY_ERR_SHIFT					34
#define WFR_RCV_ERR_STATUS_RX_RBUF_FL_WR_ADDR_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_FL_WR_ADDR_PARITY_ERR_SMASK					0x400000000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_FL_RD_ADDR_PARITY_ERR_SHIFT					33
#define WFR_RCV_ERR_STATUS_RX_RBUF_FL_RD_ADDR_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_FL_RD_ADDR_PARITY_ERR_SMASK					0x200000000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_EMPTY_ERR_SHIFT						32
#define WFR_RCV_ERR_STATUS_RX_RBUF_EMPTY_ERR_MASK						0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_EMPTY_ERR_SMASK						0x100000000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_FULL_ERR_SHIFT						31
#define WFR_RCV_ERR_STATUS_RX_RBUF_FULL_ERR_MASK						0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_FULL_ERR_SMASK						0x80000000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_BAD_LOOKUP_ERR_SHIFT						30
#define WFR_RCV_ERR_STATUS_RX_RBUF_BAD_LOOKUP_ERR_MASK						0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_BAD_LOOKUP_ERR_SMASK						0x40000000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_CTX_ID_PARITY_ERR_SHIFT					29
#define WFR_RCV_ERR_STATUS_RX_RBUF_CTX_ID_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_CTX_ID_PARITY_ERR_SMASK					0x20000000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_CSR_QEOPDW_PARITY_ERR_SHIFT					28
#define WFR_RCV_ERR_STATUS_RX_RBUF_CSR_QEOPDW_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_CSR_QEOPDW_PARITY_ERR_SMASK					0x10000000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_CSR_QNUM_OF_PKT_PARITY_ERR_SHIFT				27
#define WFR_RCV_ERR_STATUS_RX_RBUF_CSR_QNUM_OF_PKT_PARITY_ERR_MASK				0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_CSR_QNUM_OF_PKT_PARITY_ERR_SMASK				0x8000000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_CSR_QTL_PTR_PARITY_ERR_SHIFT					26
#define WFR_RCV_ERR_STATUS_RX_RBUF_CSR_QTL_PTR_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_CSR_QTL_PTR_PARITY_ERR_SMASK					0x4000000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_CSR_QHD_PTR_PARITY_ERR_SHIFT					25
#define WFR_RCV_ERR_STATUS_RX_RBUF_CSR_QHD_PTR_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_CSR_QHD_PTR_PARITY_ERR_SMASK					0x2000000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_CSR_QVLD_BIT_PARITY_ERR_SHIFT				24
#define WFR_RCV_ERR_STATUS_RX_RBUF_CSR_QVLD_BIT_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_CSR_QVLD_BIT_PARITY_ERR_SMASK				0x1000000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_CSR_QNEXT_BUF_PARITY_ERR_SHIFT				23
#define WFR_RCV_ERR_STATUS_RX_RBUF_CSR_QNEXT_BUF_PARITY_ERR_MASK				0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_CSR_QNEXT_BUF_PARITY_ERR_SMASK				0x800000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_CSR_QENT_CNT_PARITY_ERR_SHIFT				22
#define WFR_RCV_ERR_STATUS_RX_RBUF_CSR_QENT_CNT_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_CSR_QENT_CNT_PARITY_ERR_SMASK				0x400000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_CSR_QHEAD_BUF_NUM_PARITY_ERR_SHIFT				21
#define WFR_RCV_ERR_STATUS_RX_RBUF_CSR_QHEAD_BUF_NUM_PARITY_ERR_MASK				0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_CSR_QHEAD_BUF_NUM_PARITY_ERR_SMASK				0x200000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_BLOCK_LIST_READ_COR_ERR_SHIFT				20
#define WFR_RCV_ERR_STATUS_RX_RBUF_BLOCK_LIST_READ_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_BLOCK_LIST_READ_COR_ERR_SMASK				0x100000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_BLOCK_LIST_READ_UNC_ERR_SHIFT				19
#define WFR_RCV_ERR_STATUS_RX_RBUF_BLOCK_LIST_READ_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_BLOCK_LIST_READ_UNC_ERR_SMASK				0x80000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_LOOKUP_DES_COR_ERR_SHIFT					18
#define WFR_RCV_ERR_STATUS_RX_RBUF_LOOKUP_DES_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_LOOKUP_DES_COR_ERR_SMASK					0x40000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_LOOKUP_DES_UNC_ERR_SHIFT					17
#define WFR_RCV_ERR_STATUS_RX_RBUF_LOOKUP_DES_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_LOOKUP_DES_UNC_ERR_SMASK					0x20000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_LOOKUP_DES_REG_UNC_COR_ERR_SHIFT				16
#define WFR_RCV_ERR_STATUS_RX_RBUF_LOOKUP_DES_REG_UNC_COR_ERR_MASK				0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_LOOKUP_DES_REG_UNC_COR_ERR_SMASK				0x10000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_LOOKUP_DES_REG_UNC_ERR_SHIFT					15
#define WFR_RCV_ERR_STATUS_RX_RBUF_LOOKUP_DES_REG_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_LOOKUP_DES_REG_UNC_ERR_SMASK					0x8000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_FREE_LIST_COR_ERR_SHIFT					14
#define WFR_RCV_ERR_STATUS_RX_RBUF_FREE_LIST_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_FREE_LIST_COR_ERR_SMASK					0x4000ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_FREE_LIST_UNC_ERR_SHIFT					13
#define WFR_RCV_ERR_STATUS_RX_RBUF_FREE_LIST_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_RBUF_FREE_LIST_UNC_ERR_SMASK					0x2000ull
#define WFR_RCV_ERR_STATUS_RX_RCV_FSM_ENCODING_ERR_SHIFT					12
#define WFR_RCV_ERR_STATUS_RX_RCV_FSM_ENCODING_ERR_MASK						0x1ull
#define WFR_RCV_ERR_STATUS_RX_RCV_FSM_ENCODING_ERR_SMASK					0x1000ull
#define WFR_RCV_ERR_STATUS_RX_DMA_FLAG_COR_ERR_SHIFT						11
#define WFR_RCV_ERR_STATUS_RX_DMA_FLAG_COR_ERR_MASK						0x1ull
#define WFR_RCV_ERR_STATUS_RX_DMA_FLAG_COR_ERR_SMASK						0x800ull
#define WFR_RCV_ERR_STATUS_RX_DMA_FLAG_UNC_ERR_SHIFT						10
#define WFR_RCV_ERR_STATUS_RX_DMA_FLAG_UNC_ERR_MASK						0x1ull
#define WFR_RCV_ERR_STATUS_RX_DMA_FLAG_UNC_ERR_SMASK						0x400ull
#define WFR_RCV_ERR_STATUS_RX_DC_SOP_EOP_PARITY_ERR_SHIFT					9
#define WFR_RCV_ERR_STATUS_RX_DC_SOP_EOP_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_DC_SOP_EOP_PARITY_ERR_SMASK					0x200ull
#define WFR_RCV_ERR_STATUS_RX_RCV_CSR_PARITY_ERR_SHIFT						8
#define WFR_RCV_ERR_STATUS_RX_RCV_CSR_PARITY_ERR_MASK						0x1ull
#define WFR_RCV_ERR_STATUS_RX_RCV_CSR_PARITY_ERR_SMASK						0x100ull
#define WFR_RCV_ERR_STATUS_RX_RCV_QP_MAP_TABLE_COR_ERR_SHIFT					7
#define WFR_RCV_ERR_STATUS_RX_RCV_QP_MAP_TABLE_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_RCV_QP_MAP_TABLE_COR_ERR_SMASK					0x80ull
#define WFR_RCV_ERR_STATUS_RX_RCV_QP_MAP_TABLE_UNC_ERR_SHIFT					6
#define WFR_RCV_ERR_STATUS_RX_RCV_QP_MAP_TABLE_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_STATUS_RX_RCV_QP_MAP_TABLE_UNC_ERR_SMASK					0x40ull
#define WFR_RCV_ERR_STATUS_RX_RCV_DATA_COR_ERR_SHIFT						5
#define WFR_RCV_ERR_STATUS_RX_RCV_DATA_COR_ERR_MASK						0x1ull
#define WFR_RCV_ERR_STATUS_RX_RCV_DATA_COR_ERR_SMASK						0x20ull
#define WFR_RCV_ERR_STATUS_RX_RCV_DATA_UNC_ERR_SHIFT						4
#define WFR_RCV_ERR_STATUS_RX_RCV_DATA_UNC_ERR_MASK						0x1ull
#define WFR_RCV_ERR_STATUS_RX_RCV_DATA_UNC_ERR_SMASK						0x10ull
#define WFR_RCV_ERR_STATUS_RX_RCV_HDR_COR_ERR_SHIFT						3
#define WFR_RCV_ERR_STATUS_RX_RCV_HDR_COR_ERR_MASK						0x1ull
#define WFR_RCV_ERR_STATUS_RX_RCV_HDR_COR_ERR_SMASK						0x8ull
#define WFR_RCV_ERR_STATUS_RX_RCV_HDR_UNC_ERR_SHIFT						2
#define WFR_RCV_ERR_STATUS_RX_RCV_HDR_UNC_ERR_MASK						0x1ull
#define WFR_RCV_ERR_STATUS_RX_RCV_HDR_UNC_ERR_SMASK						0x4ull
#define WFR_RCV_ERR_STATUS_RX_DC_INTF_PARITY_ERR_SHIFT						1
#define WFR_RCV_ERR_STATUS_RX_DC_INTF_PARITY_ERR_MASK						0x1ull
#define WFR_RCV_ERR_STATUS_RX_DC_INTF_PARITY_ERR_SMASK						0x2ull
#define WFR_RCV_ERR_STATUS_RX_DMA_CSR_COR_ERR_SHIFT						0
#define WFR_RCV_ERR_STATUS_RX_DMA_CSR_COR_ERR_MASK						0x1ull
#define WFR_RCV_ERR_STATUS_RX_DMA_CSR_COR_ERR_SMASK						0x1ull
/*
* Table #16 of 250_RXE_Registers.xml - RcvErrMask
* This CSR is used to set the error mask for the receive engine. The receive 
* engine error cases are defined in #%%#Table 8-21, #%%#'Receive Error 
* Cases'#%%#.
*/
#define WFR_RCV_ERR_MASK									(WFR_RXE + 0x000000000068)
#define WFR_RCV_ERR_MASK_RESETCSR								0x0000000000000000ull
#define WFR_RCV_ERR_MASK_RX_CSR_PARITY_ERR_SHIFT						63
#define WFR_RCV_ERR_MASK_RX_CSR_PARITY_ERR_MASK							0x1ull
#define WFR_RCV_ERR_MASK_RX_CSR_PARITY_ERR_SMASK						0x8000000000000000ull
#define WFR_RCV_ERR_MASK_RX_CSR_WRITE_BAD_ADDR_ERR_SHIFT					62
#define WFR_RCV_ERR_MASK_RX_CSR_WRITE_BAD_ADDR_ERR_MASK						0x1ull
#define WFR_RCV_ERR_MASK_RX_CSR_WRITE_BAD_ADDR_ERR_SMASK					0x4000000000000000ull
#define WFR_RCV_ERR_MASK_RX_CSR_READ_BAD_ADDR_ERR_SHIFT						61
#define WFR_RCV_ERR_MASK_RX_CSR_READ_BAD_ADDR_ERR_MASK						0x1ull
#define WFR_RCV_ERR_MASK_RX_CSR_READ_BAD_ADDR_ERR_SMASK						0x2000000000000000ull
#define WFR_RCV_ERR_MASK_RX_DMA_CSR_UNC_ERR_SHIFT						60
#define WFR_RCV_ERR_MASK_RX_DMA_CSR_UNC_ERR_MASK						0x1ull
#define WFR_RCV_ERR_MASK_RX_DMA_CSR_UNC_ERR_SMASK						0x1000000000000000ull
#define WFR_RCV_ERR_MASK_RX_DMA_DQ_FSM_ENCODING_ERR_SHIFT					59
#define WFR_RCV_ERR_MASK_RX_DMA_DQ_FSM_ENCODING_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_DMA_DQ_FSM_ENCODING_ERR_SMASK					0x800000000000000ull
#define WFR_RCV_ERR_MASK_RX_DMA_EQ_FSM_ENCODING_ERR_SHIFT					58
#define WFR_RCV_ERR_MASK_RX_DMA_EQ_FSM_ENCODING_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_DMA_EQ_FSM_ENCODING_ERR_SMASK					0x400000000000000ull
#define WFR_RCV_ERR_MASK_RX_DMA_CSR_PARITY_ERR_SHIFT						57
#define WFR_RCV_ERR_MASK_RX_DMA_CSR_PARITY_ERR_MASK						0x1ull
#define WFR_RCV_ERR_MASK_RX_DMA_CSR_PARITY_ERR_SMASK						0x200000000000000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_DATA_COR_ERR_SHIFT						56
#define WFR_RCV_ERR_MASK_RX_RBUF_DATA_COR_ERR_MASK						0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_DATA_COR_ERR_SMASK						0x100000000000000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_DATA_UNC_ERR_SHIFT						55
#define WFR_RCV_ERR_MASK_RX_RBUF_DATA_UNC_ERR_MASK						0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_DATA_UNC_ERR_SMASK						0x80000000000000ull
#define WFR_RCV_ERR_MASK_RX_DMA_DATA_FIFO_RD_COR_ERR_SHIFT					54
#define WFR_RCV_ERR_MASK_RX_DMA_DATA_FIFO_RD_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_DMA_DATA_FIFO_RD_COR_ERR_SMASK					0x40000000000000ull
#define WFR_RCV_ERR_MASK_RX_DMA_DATA_FIFO_RD_UNC_ERR_SHIFT					53
#define WFR_RCV_ERR_MASK_RX_DMA_DATA_FIFO_RD_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_DMA_DATA_FIFO_RD_UNC_ERR_SMASK					0x20000000000000ull
#define WFR_RCV_ERR_MASK_RX_DMA_HDR_FIFO_RD_COR_ERR_SHIFT					52
#define WFR_RCV_ERR_MASK_RX_DMA_HDR_FIFO_RD_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_DMA_HDR_FIFO_RD_COR_ERR_SMASK					0x10000000000000ull
#define WFR_RCV_ERR_MASK_RX_DMA_HDR_FIFO_RD_UNC_ERR_SHIFT					51
#define WFR_RCV_ERR_MASK_RX_DMA_HDR_FIFO_RD_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_DMA_HDR_FIFO_RD_UNC_ERR_SMASK					0x8000000000000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_DESC_PART2_COR_ERR_SHIFT					50
#define WFR_RCV_ERR_MASK_RX_RBUF_DESC_PART2_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_DESC_PART2_COR_ERR_SMASK					0x4000000000000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_DESC_PART2_UNC_ERR_SHIFT					49
#define WFR_RCV_ERR_MASK_RX_RBUF_DESC_PART2_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_DESC_PART2_UNC_ERR_SMASK					0x2000000000000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_DESC_PART1_COR_ERR_SHIFT					48
#define WFR_RCV_ERR_MASK_RX_RBUF_DESC_PART1_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_DESC_PART1_COR_ERR_SMASK					0x1000000000000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_DESC_PART1_UNC_ERR_SHIFT					47
#define WFR_RCV_ERR_MASK_RX_RBUF_DESC_PART1_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_DESC_PART1_UNC_ERR_SMASK					0x800000000000ull
#define WFR_RCV_ERR_MASK_RX_HQ_INTR_FSM_ERR_SHIFT						46
#define WFR_RCV_ERR_MASK_RX_HQ_INTR_FSM_ERR_MASK						0x1ull
#define WFR_RCV_ERR_MASK_RX_HQ_INTR_FSM_ERR_SMASK						0x400000000000ull
#define WFR_RCV_ERR_MASK_RX_HQ_INTR_CSR_PARITY_ERR_SHIFT					45
#define WFR_RCV_ERR_MASK_RX_HQ_INTR_CSR_PARITY_ERR_MASK						0x1ull
#define WFR_RCV_ERR_MASK_RX_HQ_INTR_CSR_PARITY_ERR_SMASK					0x200000000000ull
#define WFR_RCV_ERR_MASK_RX_LOOKUP_CSR_PARITY_ERR_SHIFT						44
#define WFR_RCV_ERR_MASK_RX_LOOKUP_CSR_PARITY_ERR_MASK						0x1ull
#define WFR_RCV_ERR_MASK_RX_LOOKUP_CSR_PARITY_ERR_SMASK						0x100000000000ull
#define WFR_RCV_ERR_MASK_RX_LOOKUP_RCV_ARRAY_COR_ERR_SHIFT					43
#define WFR_RCV_ERR_MASK_RX_LOOKUP_RCV_ARRAY_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_LOOKUP_RCV_ARRAY_COR_ERR_SMASK					0x80000000000ull
#define WFR_RCV_ERR_MASK_RX_LOOKUP_RCV_ARRAY_UNC_ERR_SHIFT					42
#define WFR_RCV_ERR_MASK_RX_LOOKUP_RCV_ARRAY_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_LOOKUP_RCV_ARRAY_UNC_ERR_SMASK					0x40000000000ull
#define WFR_RCV_ERR_MASK_RX_LOOKUP_DES_PART2_PARITY_ERR_SHIFT					41
#define WFR_RCV_ERR_MASK_RX_LOOKUP_DES_PART2_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_LOOKUP_DES_PART2_PARITY_ERR_SMASK					0x20000000000ull
#define WFR_RCV_ERR_MASK_RX_LOOKUP_DES_PART1_UNC_COR_ERR_SHIFT					40
#define WFR_RCV_ERR_MASK_RX_LOOKUP_DES_PART1_UNC_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_LOOKUP_DES_PART1_UNC_COR_ERR_SMASK					0x10000000000ull
#define WFR_RCV_ERR_MASK_RX_LOOKUP_DES_PART1_UNC_ERR_SHIFT					39
#define WFR_RCV_ERR_MASK_RX_LOOKUP_DES_PART1_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_LOOKUP_DES_PART1_UNC_ERR_SMASK					0x8000000000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_NEXT_FREE_BUF_COR_ERR_SHIFT					38
#define WFR_RCV_ERR_MASK_RX_RBUF_NEXT_FREE_BUF_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_NEXT_FREE_BUF_COR_ERR_SMASK					0x4000000000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_NEXT_FREE_BUF_UNC_ERR_SHIFT					37
#define WFR_RCV_ERR_MASK_RX_RBUF_NEXT_FREE_BUF_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_NEXT_FREE_BUF_UNC_ERR_SMASK					0x2000000000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_FL_INIT_WR_ADDR_PARITY_ERR_SHIFT				36
#define WFR_RCV_ERR_MASK_RX_RBUF_FL_INIT_WR_ADDR_PARITY_ERR_MASK				0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_FL_INIT_WR_ADDR_PARITY_ERR_SMASK				0x1000000000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_FL_INITDONE_PARITY_ERR_SHIFT					35
#define WFR_RCV_ERR_MASK_RX_RBUF_FL_INITDONE_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_FL_INITDONE_PARITY_ERR_SMASK					0x800000000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_FL_WR_ADDR_PARITY_ERR_SHIFT					34
#define WFR_RCV_ERR_MASK_RX_RBUF_FL_WR_ADDR_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_FL_WR_ADDR_PARITY_ERR_SMASK					0x400000000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_FL_RD_ADDR_PARITY_ERR_SHIFT					33
#define WFR_RCV_ERR_MASK_RX_RBUF_FL_RD_ADDR_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_FL_RD_ADDR_PARITY_ERR_SMASK					0x200000000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_EMPTY_ERR_SHIFT						32
#define WFR_RCV_ERR_MASK_RX_RBUF_EMPTY_ERR_MASK							0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_EMPTY_ERR_SMASK						0x100000000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_FULL_ERR_SHIFT							31
#define WFR_RCV_ERR_MASK_RX_RBUF_FULL_ERR_MASK							0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_FULL_ERR_SMASK							0x80000000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_BAD_LOOKUP_ERR_SHIFT						30
#define WFR_RCV_ERR_MASK_RX_RBUF_BAD_LOOKUP_ERR_MASK						0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_BAD_LOOKUP_ERR_SMASK						0x40000000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_CTX_ID_PARITY_ERR_SHIFT					29
#define WFR_RCV_ERR_MASK_RX_RBUF_CTX_ID_PARITY_ERR_MASK						0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_CTX_ID_PARITY_ERR_SMASK					0x20000000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_CSR_QEOPDW_PARITY_ERR_SHIFT					28
#define WFR_RCV_ERR_MASK_RX_RBUF_CSR_QEOPDW_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_CSR_QEOPDW_PARITY_ERR_SMASK					0x10000000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_CSR_QNUM_OF_PKT_PARITY_ERR_SHIFT				27
#define WFR_RCV_ERR_MASK_RX_RBUF_CSR_QNUM_OF_PKT_PARITY_ERR_MASK				0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_CSR_QNUM_OF_PKT_PARITY_ERR_SMASK				0x8000000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_CSR_QTL_PTR_PARITY_ERR_SHIFT					26
#define WFR_RCV_ERR_MASK_RX_RBUF_CSR_QTL_PTR_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_CSR_QTL_PTR_PARITY_ERR_SMASK					0x4000000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_CSR_QHD_PTR_PARITY_ERR_SHIFT					25
#define WFR_RCV_ERR_MASK_RX_RBUF_CSR_QHD_PTR_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_CSR_QHD_PTR_PARITY_ERR_SMASK					0x2000000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_CSR_QVLD_BIT_PARITY_ERR_SHIFT					24
#define WFR_RCV_ERR_MASK_RX_RBUF_CSR_QVLD_BIT_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_CSR_QVLD_BIT_PARITY_ERR_SMASK					0x1000000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_CSR_QNEXT_BUF_PARITY_ERR_SHIFT					23
#define WFR_RCV_ERR_MASK_RX_RBUF_CSR_QNEXT_BUF_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_CSR_QNEXT_BUF_PARITY_ERR_SMASK					0x800000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_CSR_QENT_CNT_PARITY_ERR_SHIFT					22
#define WFR_RCV_ERR_MASK_RX_RBUF_CSR_QENT_CNT_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_CSR_QENT_CNT_PARITY_ERR_SMASK					0x400000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_CSR_QHEAD_BUF_NUM_PARITY_ERR_SHIFT				21
#define WFR_RCV_ERR_MASK_RX_RBUF_CSR_QHEAD_BUF_NUM_PARITY_ERR_MASK				0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_CSR_QHEAD_BUF_NUM_PARITY_ERR_SMASK				0x200000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_BLOCK_LIST_READ_COR_ERR_SHIFT					20
#define WFR_RCV_ERR_MASK_RX_RBUF_BLOCK_LIST_READ_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_BLOCK_LIST_READ_COR_ERR_SMASK					0x100000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_BLOCK_LIST_READ_UNC_ERR_SHIFT					19
#define WFR_RCV_ERR_MASK_RX_RBUF_BLOCK_LIST_READ_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_BLOCK_LIST_READ_UNC_ERR_SMASK					0x80000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_LOOKUP_DES_COR_ERR_SHIFT					18
#define WFR_RCV_ERR_MASK_RX_RBUF_LOOKUP_DES_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_LOOKUP_DES_COR_ERR_SMASK					0x40000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_LOOKUP_DES_UNC_ERR_SHIFT					17
#define WFR_RCV_ERR_MASK_RX_RBUF_LOOKUP_DES_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_LOOKUP_DES_UNC_ERR_SMASK					0x20000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_LOOKUP_DES_REG_UNC_COR_ERR_SHIFT				16
#define WFR_RCV_ERR_MASK_RX_RBUF_LOOKUP_DES_REG_UNC_COR_ERR_MASK				0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_LOOKUP_DES_REG_UNC_COR_ERR_SMASK				0x10000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_LOOKUP_DES_REG_UNC_ERR_SHIFT					15
#define WFR_RCV_ERR_MASK_RX_RBUF_LOOKUP_DES_REG_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_LOOKUP_DES_REG_UNC_ERR_SMASK					0x8000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_FREE_LIST_COR_ERR_SHIFT					14
#define WFR_RCV_ERR_MASK_RX_RBUF_FREE_LIST_COR_ERR_MASK						0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_FREE_LIST_COR_ERR_SMASK					0x4000ull
#define WFR_RCV_ERR_MASK_RX_RBUF_FREE_LIST_UNC_ERR_SHIFT					13
#define WFR_RCV_ERR_MASK_RX_RBUF_FREE_LIST_UNC_ERR_MASK						0x1ull
#define WFR_RCV_ERR_MASK_RX_RBUF_FREE_LIST_UNC_ERR_SMASK					0x2000ull
#define WFR_RCV_ERR_MASK_RX_RCV_FSM_ENCODING_ERR_SHIFT						12
#define WFR_RCV_ERR_MASK_RX_RCV_FSM_ENCODING_ERR_MASK						0x1ull
#define WFR_RCV_ERR_MASK_RX_RCV_FSM_ENCODING_ERR_SMASK						0x1000ull
#define WFR_RCV_ERR_MASK_RX_DMA_FLAG_COR_ERR_SHIFT						11
#define WFR_RCV_ERR_MASK_RX_DMA_FLAG_COR_ERR_MASK						0x1ull
#define WFR_RCV_ERR_MASK_RX_DMA_FLAG_COR_ERR_SMASK						0x800ull
#define WFR_RCV_ERR_MASK_RX_DMA_FLAG_UNC_ERR_SHIFT						10
#define WFR_RCV_ERR_MASK_RX_DMA_FLAG_UNC_ERR_MASK						0x1ull
#define WFR_RCV_ERR_MASK_RX_DMA_FLAG_UNC_ERR_SMASK						0x400ull
#define WFR_RCV_ERR_MASK_RX_DC_SOP_EOP_PARITY_ERR_SHIFT						9
#define WFR_RCV_ERR_MASK_RX_DC_SOP_EOP_PARITY_ERR_MASK						0x1ull
#define WFR_RCV_ERR_MASK_RX_DC_SOP_EOP_PARITY_ERR_SMASK						0x200ull
#define WFR_RCV_ERR_MASK_RX_RCV_CSR_PARITY_ERR_SHIFT						8
#define WFR_RCV_ERR_MASK_RX_RCV_CSR_PARITY_ERR_MASK						0x1ull
#define WFR_RCV_ERR_MASK_RX_RCV_CSR_PARITY_ERR_SMASK						0x100ull
#define WFR_RCV_ERR_MASK_RX_RCV_QP_MAP_TABLE_COR_ERR_SHIFT					7
#define WFR_RCV_ERR_MASK_RX_RCV_QP_MAP_TABLE_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_RCV_QP_MAP_TABLE_COR_ERR_SMASK					0x80ull
#define WFR_RCV_ERR_MASK_RX_RCV_QP_MAP_TABLE_UNC_ERR_SHIFT					6
#define WFR_RCV_ERR_MASK_RX_RCV_QP_MAP_TABLE_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_MASK_RX_RCV_QP_MAP_TABLE_UNC_ERR_SMASK					0x40ull
#define WFR_RCV_ERR_MASK_RX_RCV_DATA_COR_ERR_SHIFT						5
#define WFR_RCV_ERR_MASK_RX_RCV_DATA_COR_ERR_MASK						0x1ull
#define WFR_RCV_ERR_MASK_RX_RCV_DATA_COR_ERR_SMASK						0x20ull
#define WFR_RCV_ERR_MASK_RX_RCV_DATA_UNC_ERR_SHIFT						4
#define WFR_RCV_ERR_MASK_RX_RCV_DATA_UNC_ERR_MASK						0x1ull
#define WFR_RCV_ERR_MASK_RX_RCV_DATA_UNC_ERR_SMASK						0x10ull
#define WFR_RCV_ERR_MASK_RX_RCV_HDR_COR_ERR_SHIFT						3
#define WFR_RCV_ERR_MASK_RX_RCV_HDR_COR_ERR_MASK						0x1ull
#define WFR_RCV_ERR_MASK_RX_RCV_HDR_COR_ERR_SMASK						0x8ull
#define WFR_RCV_ERR_MASK_RX_RCV_HDR_UNC_ERR_SHIFT						2
#define WFR_RCV_ERR_MASK_RX_RCV_HDR_UNC_ERR_MASK						0x1ull
#define WFR_RCV_ERR_MASK_RX_RCV_HDR_UNC_ERR_SMASK						0x4ull
#define WFR_RCV_ERR_MASK_RX_DC_INTF_PARITY_ERR_SHIFT						1
#define WFR_RCV_ERR_MASK_RX_DC_INTF_PARITY_ERR_MASK						0x1ull
#define WFR_RCV_ERR_MASK_RX_DC_INTF_PARITY_ERR_SMASK						0x2ull
#define WFR_RCV_ERR_MASK_RX_DMA_CSR_COR_ERR_SHIFT						0
#define WFR_RCV_ERR_MASK_RX_DMA_CSR_COR_ERR_MASK						0x1ull
#define WFR_RCV_ERR_MASK_RX_DMA_CSR_COR_ERR_SMASK						0x1ull
/*
* Table #17 of 250_RXE_Registers.xml - RcvErrClear
* This CSR is used to clear an error or errors for the receive engine. Each bit 
* that is written as 1 will clear down the corresponding error case. The receive 
* engine error cases are defined in #%%#Table 8-21, #%%#'Receive Error 
* Cases'#%%#.
*/
#define WFR_RCV_ERR_CLEAR									(WFR_RXE + 0x000000000070)
#define WFR_RCV_ERR_CLEAR_RESETCSR								0x0000000000000000ull
#define WFR_RCV_ERR_CLEAR_RX_CSR_PARITY_ERR_SHIFT						63
#define WFR_RCV_ERR_CLEAR_RX_CSR_PARITY_ERR_MASK						0x1ull
#define WFR_RCV_ERR_CLEAR_RX_CSR_PARITY_ERR_SMASK						0x8000000000000000ull
#define WFR_RCV_ERR_CLEAR_RX_CSR_WRITE_BAD_ADDR_ERR_SHIFT					62
#define WFR_RCV_ERR_CLEAR_RX_CSR_WRITE_BAD_ADDR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_CSR_WRITE_BAD_ADDR_ERR_SMASK					0x4000000000000000ull
#define WFR_RCV_ERR_CLEAR_RX_CSR_READ_BAD_ADDR_ERR_SHIFT					61
#define WFR_RCV_ERR_CLEAR_RX_CSR_READ_BAD_ADDR_ERR_MASK						0x1ull
#define WFR_RCV_ERR_CLEAR_RX_CSR_READ_BAD_ADDR_ERR_SMASK					0x2000000000000000ull
#define WFR_RCV_ERR_CLEAR_RX_DMA_CSR_UNC_ERR_SHIFT						60
#define WFR_RCV_ERR_CLEAR_RX_DMA_CSR_UNC_ERR_MASK						0x1ull
#define WFR_RCV_ERR_CLEAR_RX_DMA_CSR_UNC_ERR_SMASK						0x1000000000000000ull
#define WFR_RCV_ERR_CLEAR_RX_DMA_DQ_FSM_ENCODING_ERR_SHIFT					59
#define WFR_RCV_ERR_CLEAR_RX_DMA_DQ_FSM_ENCODING_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_DMA_DQ_FSM_ENCODING_ERR_SMASK					0x800000000000000ull
#define WFR_RCV_ERR_CLEAR_RX_DMA_EQ_FSM_ENCODING_ERR_SHIFT					58
#define WFR_RCV_ERR_CLEAR_RX_DMA_EQ_FSM_ENCODING_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_DMA_EQ_FSM_ENCODING_ERR_SMASK					0x400000000000000ull
#define WFR_RCV_ERR_CLEAR_RX_DMA_CSR_PARITY_ERR_SHIFT						57
#define WFR_RCV_ERR_CLEAR_RX_DMA_CSR_PARITY_ERR_MASK						0x1ull
#define WFR_RCV_ERR_CLEAR_RX_DMA_CSR_PARITY_ERR_SMASK						0x200000000000000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_DATA_COR_ERR_SHIFT						56
#define WFR_RCV_ERR_CLEAR_RX_RBUF_DATA_COR_ERR_MASK						0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_DATA_COR_ERR_SMASK						0x100000000000000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_DATA_UNC_ERR_SHIFT						55
#define WFR_RCV_ERR_CLEAR_RX_RBUF_DATA_UNC_ERR_MASK						0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_DATA_UNC_ERR_SMASK						0x80000000000000ull
#define WFR_RCV_ERR_CLEAR_RX_DMA_DATA_FIFO_RD_COR_ERR_SHIFT					54
#define WFR_RCV_ERR_CLEAR_RX_DMA_DATA_FIFO_RD_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_DMA_DATA_FIFO_RD_COR_ERR_SMASK					0x40000000000000ull
#define WFR_RCV_ERR_CLEAR_RX_DMA_DATA_FIFO_RD_UNC_ERR_SHIFT					53
#define WFR_RCV_ERR_CLEAR_RX_DMA_DATA_FIFO_RD_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_DMA_DATA_FIFO_RD_UNC_ERR_SMASK					0x20000000000000ull
#define WFR_RCV_ERR_CLEAR_RX_DMA_HDR_FIFO_RD_COR_ERR_SHIFT					52
#define WFR_RCV_ERR_CLEAR_RX_DMA_HDR_FIFO_RD_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_DMA_HDR_FIFO_RD_COR_ERR_SMASK					0x10000000000000ull
#define WFR_RCV_ERR_CLEAR_RX_DMA_HDR_FIFO_RD_UNC_ERR_SHIFT					51
#define WFR_RCV_ERR_CLEAR_RX_DMA_HDR_FIFO_RD_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_DMA_HDR_FIFO_RD_UNC_ERR_SMASK					0x8000000000000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_DESC_PART2_COR_ERR_SHIFT					50
#define WFR_RCV_ERR_CLEAR_RX_RBUF_DESC_PART2_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_DESC_PART2_COR_ERR_SMASK					0x4000000000000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_DESC_PART2_UNC_ERR_SHIFT					49
#define WFR_RCV_ERR_CLEAR_RX_RBUF_DESC_PART2_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_DESC_PART2_UNC_ERR_SMASK					0x2000000000000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_DESC_PART1_COR_ERR_SHIFT					48
#define WFR_RCV_ERR_CLEAR_RX_RBUF_DESC_PART1_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_DESC_PART1_COR_ERR_SMASK					0x1000000000000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_DESC_PART1_UNC_ERR_SHIFT					47
#define WFR_RCV_ERR_CLEAR_RX_RBUF_DESC_PART1_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_DESC_PART1_UNC_ERR_SMASK					0x800000000000ull
#define WFR_RCV_ERR_CLEAR_RX_HQ_INTR_FSM_ERR_SHIFT						46
#define WFR_RCV_ERR_CLEAR_RX_HQ_INTR_FSM_ERR_MASK						0x1ull
#define WFR_RCV_ERR_CLEAR_RX_HQ_INTR_FSM_ERR_SMASK						0x400000000000ull
#define WFR_RCV_ERR_CLEAR_RX_HQ_INTR_CSR_PARITY_ERR_SHIFT					45
#define WFR_RCV_ERR_CLEAR_RX_HQ_INTR_CSR_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_HQ_INTR_CSR_PARITY_ERR_SMASK					0x200000000000ull
#define WFR_RCV_ERR_CLEAR_RX_LOOKUP_CSR_PARITY_ERR_SHIFT					44
#define WFR_RCV_ERR_CLEAR_RX_LOOKUP_CSR_PARITY_ERR_MASK						0x1ull
#define WFR_RCV_ERR_CLEAR_RX_LOOKUP_CSR_PARITY_ERR_SMASK					0x100000000000ull
#define WFR_RCV_ERR_CLEAR_RX_LOOKUP_RCV_ARRAY_COR_ERR_SHIFT					43
#define WFR_RCV_ERR_CLEAR_RX_LOOKUP_RCV_ARRAY_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_LOOKUP_RCV_ARRAY_COR_ERR_SMASK					0x80000000000ull
#define WFR_RCV_ERR_CLEAR_RX_LOOKUP_RCV_ARRAY_UNC_ERR_SHIFT					42
#define WFR_RCV_ERR_CLEAR_RX_LOOKUP_RCV_ARRAY_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_LOOKUP_RCV_ARRAY_UNC_ERR_SMASK					0x40000000000ull
#define WFR_RCV_ERR_CLEAR_RX_LOOKUP_DES_PART2_PARITY_ERR_SHIFT					41
#define WFR_RCV_ERR_CLEAR_RX_LOOKUP_DES_PART2_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_LOOKUP_DES_PART2_PARITY_ERR_SMASK					0x20000000000ull
#define WFR_RCV_ERR_CLEAR_RX_LOOKUP_DES_PART1_UNC_COR_ERR_SHIFT					40
#define WFR_RCV_ERR_CLEAR_RX_LOOKUP_DES_PART1_UNC_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_LOOKUP_DES_PART1_UNC_COR_ERR_SMASK					0x10000000000ull
#define WFR_RCV_ERR_CLEAR_RX_LOOKUP_DES_PART1_UNC_ERR_SHIFT					39
#define WFR_RCV_ERR_CLEAR_RX_LOOKUP_DES_PART1_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_LOOKUP_DES_PART1_UNC_ERR_SMASK					0x8000000000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_NEXT_FREE_BUF_COR_ERR_SHIFT					38
#define WFR_RCV_ERR_CLEAR_RX_RBUF_NEXT_FREE_BUF_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_NEXT_FREE_BUF_COR_ERR_SMASK					0x4000000000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_NEXT_FREE_BUF_UNC_ERR_SHIFT					37
#define WFR_RCV_ERR_CLEAR_RX_RBUF_NEXT_FREE_BUF_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_NEXT_FREE_BUF_UNC_ERR_SMASK					0x2000000000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_FL_INIT_WR_ADDR_PARITY_ERR_SHIFT				36
#define WFR_RCV_ERR_CLEAR_RX_RBUF_FL_INIT_WR_ADDR_PARITY_ERR_MASK				0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_FL_INIT_WR_ADDR_PARITY_ERR_SMASK				0x1000000000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_FL_INITDONE_PARITY_ERR_SHIFT					35
#define WFR_RCV_ERR_CLEAR_RX_RBUF_FL_INITDONE_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_FL_INITDONE_PARITY_ERR_SMASK					0x800000000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_FL_WR_ADDR_PARITY_ERR_SHIFT					34
#define WFR_RCV_ERR_CLEAR_RX_RBUF_FL_WR_ADDR_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_FL_WR_ADDR_PARITY_ERR_SMASK					0x400000000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_FL_RD_ADDR_PARITY_ERR_SHIFT					33
#define WFR_RCV_ERR_CLEAR_RX_RBUF_FL_RD_ADDR_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_FL_RD_ADDR_PARITY_ERR_SMASK					0x200000000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_EMPTY_ERR_SHIFT						32
#define WFR_RCV_ERR_CLEAR_RX_RBUF_EMPTY_ERR_MASK						0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_EMPTY_ERR_SMASK						0x100000000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_FULL_ERR_SHIFT						31
#define WFR_RCV_ERR_CLEAR_RX_RBUF_FULL_ERR_MASK							0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_FULL_ERR_SMASK						0x80000000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_BAD_LOOKUP_ERR_SHIFT						30
#define WFR_RCV_ERR_CLEAR_RX_RBUF_BAD_LOOKUP_ERR_MASK						0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_BAD_LOOKUP_ERR_SMASK						0x40000000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_CTX_ID_PARITY_ERR_SHIFT					29
#define WFR_RCV_ERR_CLEAR_RX_RBUF_CTX_ID_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_CTX_ID_PARITY_ERR_SMASK					0x20000000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_CSR_QEOPDW_PARITY_ERR_SHIFT					28
#define WFR_RCV_ERR_CLEAR_RX_RBUF_CSR_QEOPDW_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_CSR_QEOPDW_PARITY_ERR_SMASK					0x10000000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_CSR_QNUM_OF_PKT_PARITY_ERR_SHIFT				27
#define WFR_RCV_ERR_CLEAR_RX_RBUF_CSR_QNUM_OF_PKT_PARITY_ERR_MASK				0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_CSR_QNUM_OF_PKT_PARITY_ERR_SMASK				0x8000000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_CSR_QTL_PTR_PARITY_ERR_SHIFT					26
#define WFR_RCV_ERR_CLEAR_RX_RBUF_CSR_QTL_PTR_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_CSR_QTL_PTR_PARITY_ERR_SMASK					0x4000000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_CSR_QHD_PTR_PARITY_ERR_SHIFT					25
#define WFR_RCV_ERR_CLEAR_RX_RBUF_CSR_QHD_PTR_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_CSR_QHD_PTR_PARITY_ERR_SMASK					0x2000000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_CSR_QVLD_BIT_PARITY_ERR_SHIFT					24
#define WFR_RCV_ERR_CLEAR_RX_RBUF_CSR_QVLD_BIT_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_CSR_QVLD_BIT_PARITY_ERR_SMASK					0x1000000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_CSR_QNEXT_BUF_PARITY_ERR_SHIFT				23
#define WFR_RCV_ERR_CLEAR_RX_RBUF_CSR_QNEXT_BUF_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_CSR_QNEXT_BUF_PARITY_ERR_SMASK				0x800000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_CSR_QENT_CNT_PARITY_ERR_SHIFT					22
#define WFR_RCV_ERR_CLEAR_RX_RBUF_CSR_QENT_CNT_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_CSR_QENT_CNT_PARITY_ERR_SMASK					0x400000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_CSR_QHEAD_BUF_NUM_PARITY_ERR_SHIFT				21
#define WFR_RCV_ERR_CLEAR_RX_RBUF_CSR_QHEAD_BUF_NUM_PARITY_ERR_MASK				0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_CSR_QHEAD_BUF_NUM_PARITY_ERR_SMASK				0x200000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_BLOCK_LIST_READ_COR_ERR_SHIFT					20
#define WFR_RCV_ERR_CLEAR_RX_RBUF_BLOCK_LIST_READ_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_BLOCK_LIST_READ_COR_ERR_SMASK					0x100000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_BLOCK_LIST_READ_UNC_ERR_SHIFT					19
#define WFR_RCV_ERR_CLEAR_RX_RBUF_BLOCK_LIST_READ_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_BLOCK_LIST_READ_UNC_ERR_SMASK					0x80000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_LOOKUP_DES_COR_ERR_SHIFT					18
#define WFR_RCV_ERR_CLEAR_RX_RBUF_LOOKUP_DES_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_LOOKUP_DES_COR_ERR_SMASK					0x40000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_LOOKUP_DES_UNC_ERR_SHIFT					17
#define WFR_RCV_ERR_CLEAR_RX_RBUF_LOOKUP_DES_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_LOOKUP_DES_UNC_ERR_SMASK					0x20000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_LOOKUP_DES_REG_UNC_COR_ERR_SHIFT				16
#define WFR_RCV_ERR_CLEAR_RX_RBUF_LOOKUP_DES_REG_UNC_COR_ERR_MASK				0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_LOOKUP_DES_REG_UNC_COR_ERR_SMASK				0x10000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_LOOKUP_DES_REG_UNC_ERR_SHIFT					15
#define WFR_RCV_ERR_CLEAR_RX_RBUF_LOOKUP_DES_REG_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_LOOKUP_DES_REG_UNC_ERR_SMASK					0x8000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_FREE_LIST_COR_ERR_SHIFT					14
#define WFR_RCV_ERR_CLEAR_RX_RBUF_FREE_LIST_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_FREE_LIST_COR_ERR_SMASK					0x4000ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_FREE_LIST_UNC_ERR_SHIFT					13
#define WFR_RCV_ERR_CLEAR_RX_RBUF_FREE_LIST_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RBUF_FREE_LIST_UNC_ERR_SMASK					0x2000ull
#define WFR_RCV_ERR_CLEAR_RX_RCV_FSM_ENCODING_ERR_SHIFT						12
#define WFR_RCV_ERR_CLEAR_RX_RCV_FSM_ENCODING_ERR_MASK						0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RCV_FSM_ENCODING_ERR_SMASK						0x1000ull
#define WFR_RCV_ERR_CLEAR_RX_DMA_FLAG_COR_ERR_SHIFT						11
#define WFR_RCV_ERR_CLEAR_RX_DMA_FLAG_COR_ERR_MASK						0x1ull
#define WFR_RCV_ERR_CLEAR_RX_DMA_FLAG_COR_ERR_SMASK						0x800ull
#define WFR_RCV_ERR_CLEAR_RX_DMA_FLAG_UNC_ERR_SHIFT						10
#define WFR_RCV_ERR_CLEAR_RX_DMA_FLAG_UNC_ERR_MASK						0x1ull
#define WFR_RCV_ERR_CLEAR_RX_DMA_FLAG_UNC_ERR_SMASK						0x400ull
#define WFR_RCV_ERR_CLEAR_RX_DC_SOP_EOP_PARITY_ERR_SHIFT					9
#define WFR_RCV_ERR_CLEAR_RX_DC_SOP_EOP_PARITY_ERR_MASK						0x1ull
#define WFR_RCV_ERR_CLEAR_RX_DC_SOP_EOP_PARITY_ERR_SMASK					0x200ull
#define WFR_RCV_ERR_CLEAR_RX_RCV_CSR_PARITY_ERR_SHIFT						8
#define WFR_RCV_ERR_CLEAR_RX_RCV_CSR_PARITY_ERR_MASK						0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RCV_CSR_PARITY_ERR_SMASK						0x100ull
#define WFR_RCV_ERR_CLEAR_RX_RCV_QP_MAP_TABLE_COR_ERR_SHIFT					7
#define WFR_RCV_ERR_CLEAR_RX_RCV_QP_MAP_TABLE_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RCV_QP_MAP_TABLE_COR_ERR_SMASK					0x80ull
#define WFR_RCV_ERR_CLEAR_RX_RCV_QP_MAP_TABLE_UNC_ERR_SHIFT					6
#define WFR_RCV_ERR_CLEAR_RX_RCV_QP_MAP_TABLE_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RCV_QP_MAP_TABLE_UNC_ERR_SMASK					0x40ull
#define WFR_RCV_ERR_CLEAR_RX_RCV_DATA_COR_ERR_SHIFT						5
#define WFR_RCV_ERR_CLEAR_RX_RCV_DATA_COR_ERR_MASK						0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RCV_DATA_COR_ERR_SMASK						0x20ull
#define WFR_RCV_ERR_CLEAR_RX_RCV_DATA_UNC_ERR_SHIFT						4
#define WFR_RCV_ERR_CLEAR_RX_RCV_DATA_UNC_ERR_MASK						0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RCV_DATA_UNC_ERR_SMASK						0x10ull
#define WFR_RCV_ERR_CLEAR_RX_RCV_HDR_COR_ERR_SHIFT						3
#define WFR_RCV_ERR_CLEAR_RX_RCV_HDR_COR_ERR_MASK						0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RCV_HDR_COR_ERR_SMASK						0x8ull
#define WFR_RCV_ERR_CLEAR_RX_RCV_HDR_UNC_ERR_SHIFT						2
#define WFR_RCV_ERR_CLEAR_RX_RCV_HDR_UNC_ERR_MASK						0x1ull
#define WFR_RCV_ERR_CLEAR_RX_RCV_HDR_UNC_ERR_SMASK						0x4ull
#define WFR_RCV_ERR_CLEAR_RX_DC_INTF_PARITY_ERR_SHIFT						1
#define WFR_RCV_ERR_CLEAR_RX_DC_INTF_PARITY_ERR_MASK						0x1ull
#define WFR_RCV_ERR_CLEAR_RX_DC_INTF_PARITY_ERR_SMASK						0x2ull
#define WFR_RCV_ERR_CLEAR_RX_DMA_CSR_COR_ERR_SHIFT						0
#define WFR_RCV_ERR_CLEAR_RX_DMA_CSR_COR_ERR_MASK						0x1ull
#define WFR_RCV_ERR_CLEAR_RX_DMA_CSR_COR_ERR_SMASK						0x1ull
/*
* Table #18 of 250_RXE_Registers.xml - RcvErrForce
* This CSR is used to force the setting of an error or errors for the receive 
* engine. Each bit that is written as 1 will set the corresponding error case. 
* This feature is for testing purposes. The receive engine error cases are 
* defined in #%%#Table 8-21, #%%#'Receive Error Cases'#%%#.
*/
#define WFR_RCV_ERR_FORCE									(WFR_RXE + 0x000000000078)
#define WFR_RCV_ERR_FORCE_RESETCSR								0x0000000000000000ull
#define WFR_RCV_ERR_FORCE_RX_CSR_PARITY_ERR_SHIFT						63
#define WFR_RCV_ERR_FORCE_RX_CSR_PARITY_ERR_MASK						0x1ull
#define WFR_RCV_ERR_FORCE_RX_CSR_PARITY_ERR_SMASK						0x8000000000000000ull
#define WFR_RCV_ERR_FORCE_RX_CSR_WRITE_BAD_ADDR_ERR_SHIFT					62
#define WFR_RCV_ERR_FORCE_RX_CSR_WRITE_BAD_ADDR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_CSR_WRITE_BAD_ADDR_ERR_SMASK					0x4000000000000000ull
#define WFR_RCV_ERR_FORCE_RX_CSR_READ_BAD_ADDR_ERR_SHIFT					61
#define WFR_RCV_ERR_FORCE_RX_CSR_READ_BAD_ADDR_ERR_MASK						0x1ull
#define WFR_RCV_ERR_FORCE_RX_CSR_READ_BAD_ADDR_ERR_SMASK					0x2000000000000000ull
#define WFR_RCV_ERR_FORCE_RX_DMA_CSR_UNC_ERR_SHIFT						60
#define WFR_RCV_ERR_FORCE_RX_DMA_CSR_UNC_ERR_MASK						0x1ull
#define WFR_RCV_ERR_FORCE_RX_DMA_CSR_UNC_ERR_SMASK						0x1000000000000000ull
#define WFR_RCV_ERR_FORCE_RX_DMA_DQ_FSM_ENCODING_ERR_SHIFT					59
#define WFR_RCV_ERR_FORCE_RX_DMA_DQ_FSM_ENCODING_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_DMA_DQ_FSM_ENCODING_ERR_SMASK					0x800000000000000ull
#define WFR_RCV_ERR_FORCE_RX_DMA_EQ_FSM_ENCODING_ERR_SHIFT					58
#define WFR_RCV_ERR_FORCE_RX_DMA_EQ_FSM_ENCODING_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_DMA_EQ_FSM_ENCODING_ERR_SMASK					0x400000000000000ull
#define WFR_RCV_ERR_FORCE_RX_DMA_CSR_PARITY_ERR_SHIFT						57
#define WFR_RCV_ERR_FORCE_RX_DMA_CSR_PARITY_ERR_MASK						0x1ull
#define WFR_RCV_ERR_FORCE_RX_DMA_CSR_PARITY_ERR_SMASK						0x200000000000000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_DATA_COR_ERR_SHIFT						56
#define WFR_RCV_ERR_FORCE_RX_RBUF_DATA_COR_ERR_MASK						0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_DATA_COR_ERR_SMASK						0x100000000000000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_DATA_UNC_ERR_SHIFT						55
#define WFR_RCV_ERR_FORCE_RX_RBUF_DATA_UNC_ERR_MASK						0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_DATA_UNC_ERR_SMASK						0x80000000000000ull
#define WFR_RCV_ERR_FORCE_RX_DMA_DATA_FIFO_RD_COR_ERR_SHIFT					54
#define WFR_RCV_ERR_FORCE_RX_DMA_DATA_FIFO_RD_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_DMA_DATA_FIFO_RD_COR_ERR_SMASK					0x40000000000000ull
#define WFR_RCV_ERR_FORCE_RX_DMA_DATA_FIFO_RD_UNC_ERR_SHIFT					53
#define WFR_RCV_ERR_FORCE_RX_DMA_DATA_FIFO_RD_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_DMA_DATA_FIFO_RD_UNC_ERR_SMASK					0x20000000000000ull
#define WFR_RCV_ERR_FORCE_RX_DMA_HDR_FIFO_RD_COR_ERR_SHIFT					52
#define WFR_RCV_ERR_FORCE_RX_DMA_HDR_FIFO_RD_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_DMA_HDR_FIFO_RD_COR_ERR_SMASK					0x10000000000000ull
#define WFR_RCV_ERR_FORCE_RX_DMA_HDR_FIFO_RD_UNC_ERR_SHIFT					51
#define WFR_RCV_ERR_FORCE_RX_DMA_HDR_FIFO_RD_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_DMA_HDR_FIFO_RD_UNC_ERR_SMASK					0x8000000000000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_DESC_PART2_COR_ERR_SHIFT					50
#define WFR_RCV_ERR_FORCE_RX_RBUF_DESC_PART2_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_DESC_PART2_COR_ERR_SMASK					0x4000000000000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_DESC_PART2_UNC_ERR_SHIFT					49
#define WFR_RCV_ERR_FORCE_RX_RBUF_DESC_PART2_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_DESC_PART2_UNC_ERR_SMASK					0x2000000000000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_DESC_PART1_COR_ERR_SHIFT					48
#define WFR_RCV_ERR_FORCE_RX_RBUF_DESC_PART1_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_DESC_PART1_COR_ERR_SMASK					0x1000000000000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_DESC_PART1_UNC_ERR_SHIFT					47
#define WFR_RCV_ERR_FORCE_RX_RBUF_DESC_PART1_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_DESC_PART1_UNC_ERR_SMASK					0x800000000000ull
#define WFR_RCV_ERR_FORCE_RX_HQ_INTR_FSM_ERR_SHIFT						46
#define WFR_RCV_ERR_FORCE_RX_HQ_INTR_FSM_ERR_MASK						0x1ull
#define WFR_RCV_ERR_FORCE_RX_HQ_INTR_FSM_ERR_SMASK						0x400000000000ull
#define WFR_RCV_ERR_FORCE_RX_HQ_INTR_CSR_PARITY_ERR_SHIFT					45
#define WFR_RCV_ERR_FORCE_RX_HQ_INTR_CSR_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_HQ_INTR_CSR_PARITY_ERR_SMASK					0x200000000000ull
#define WFR_RCV_ERR_FORCE_RX_LOOKUP_CSR_PARITY_ERR_SHIFT					44
#define WFR_RCV_ERR_FORCE_RX_LOOKUP_CSR_PARITY_ERR_MASK						0x1ull
#define WFR_RCV_ERR_FORCE_RX_LOOKUP_CSR_PARITY_ERR_SMASK					0x100000000000ull
#define WFR_RCV_ERR_FORCE_RX_LOOKUP_RCV_ARRAY_COR_ERR_SHIFT					43
#define WFR_RCV_ERR_FORCE_RX_LOOKUP_RCV_ARRAY_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_LOOKUP_RCV_ARRAY_COR_ERR_SMASK					0x80000000000ull
#define WFR_RCV_ERR_FORCE_RX_LOOKUP_RCV_ARRAY_UNC_ERR_SHIFT					42
#define WFR_RCV_ERR_FORCE_RX_LOOKUP_RCV_ARRAY_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_LOOKUP_RCV_ARRAY_UNC_ERR_SMASK					0x40000000000ull
#define WFR_RCV_ERR_FORCE_RX_LOOKUP_DES_PART2_PARITY_ERR_SHIFT					41
#define WFR_RCV_ERR_FORCE_RX_LOOKUP_DES_PART2_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_LOOKUP_DES_PART2_PARITY_ERR_SMASK					0x20000000000ull
#define WFR_RCV_ERR_FORCE_RX_LOOKUP_DES_PART1_UNC_COR_ERR_SHIFT					40
#define WFR_RCV_ERR_FORCE_RX_LOOKUP_DES_PART1_UNC_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_LOOKUP_DES_PART1_UNC_COR_ERR_SMASK					0x10000000000ull
#define WFR_RCV_ERR_FORCE_RX_LOOKUP_DES_PART1_UNC_ERR_SHIFT					39
#define WFR_RCV_ERR_FORCE_RX_LOOKUP_DES_PART1_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_LOOKUP_DES_PART1_UNC_ERR_SMASK					0x8000000000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_NEXT_FREE_BUF_COR_ERR_SHIFT					38
#define WFR_RCV_ERR_FORCE_RX_RBUF_NEXT_FREE_BUF_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_NEXT_FREE_BUF_COR_ERR_SMASK					0x4000000000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_NEXT_FREE_BUF_UNC_ERR_SHIFT					37
#define WFR_RCV_ERR_FORCE_RX_RBUF_NEXT_FREE_BUF_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_NEXT_FREE_BUF_UNC_ERR_SMASK					0x2000000000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_FL_INIT_WR_ADDR_PARITY_ERR_SHIFT				36
#define WFR_RCV_ERR_FORCE_RX_RBUF_FL_INIT_WR_ADDR_PARITY_ERR_MASK				0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_FL_INIT_WR_ADDR_PARITY_ERR_SMASK				0x1000000000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_FL_INITDONE_PARITY_ERR_SHIFT					35
#define WFR_RCV_ERR_FORCE_RX_RBUF_FL_INITDONE_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_FL_INITDONE_PARITY_ERR_SMASK					0x800000000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_FL_WR_ADDR_PARITY_ERR_SHIFT					34
#define WFR_RCV_ERR_FORCE_RX_RBUF_FL_WR_ADDR_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_FL_WR_ADDR_PARITY_ERR_SMASK					0x400000000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_FL_RD_ADDR_PARITY_ERR_SHIFT					33
#define WFR_RCV_ERR_FORCE_RX_RBUF_FL_RD_ADDR_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_FL_RD_ADDR_PARITY_ERR_SMASK					0x200000000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_EMPTY_ERR_SHIFT						32
#define WFR_RCV_ERR_FORCE_RX_RBUF_EMPTY_ERR_MASK						0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_EMPTY_ERR_SMASK						0x100000000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_FULL_ERR_SHIFT						31
#define WFR_RCV_ERR_FORCE_RX_RBUF_FULL_ERR_MASK							0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_FULL_ERR_SMASK						0x80000000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_BAD_LOOKUP_ERR_SHIFT						30
#define WFR_RCV_ERR_FORCE_RX_RBUF_BAD_LOOKUP_ERR_MASK						0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_BAD_LOOKUP_ERR_SMASK						0x40000000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_CTX_ID_PARITY_ERR_SHIFT					29
#define WFR_RCV_ERR_FORCE_RX_RBUF_CTX_ID_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_CTX_ID_PARITY_ERR_SMASK					0x20000000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_CSR_QEOPDW_PARITY_ERR_SHIFT					28
#define WFR_RCV_ERR_FORCE_RX_RBUF_CSR_QEOPDW_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_CSR_QEOPDW_PARITY_ERR_SMASK					0x10000000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_CSR_QNUM_OF_PKT_PARITY_ERR_SHIFT				27
#define WFR_RCV_ERR_FORCE_RX_RBUF_CSR_QNUM_OF_PKT_PARITY_ERR_MASK				0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_CSR_QNUM_OF_PKT_PARITY_ERR_SMASK				0x8000000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_CSR_QTL_PTR_PARITY_ERR_SHIFT					26
#define WFR_RCV_ERR_FORCE_RX_RBUF_CSR_QTL_PTR_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_CSR_QTL_PTR_PARITY_ERR_SMASK					0x4000000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_CSR_QHD_PTR_PARITY_ERR_SHIFT					25
#define WFR_RCV_ERR_FORCE_RX_RBUF_CSR_QHD_PTR_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_CSR_QHD_PTR_PARITY_ERR_SMASK					0x2000000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_CSR_QVLD_BIT_PARITY_ERR_SHIFT					24
#define WFR_RCV_ERR_FORCE_RX_RBUF_CSR_QVLD_BIT_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_CSR_QVLD_BIT_PARITY_ERR_SMASK					0x1000000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_CSR_QNEXT_BUF_PARITY_ERR_SHIFT				23
#define WFR_RCV_ERR_FORCE_RX_RBUF_CSR_QNEXT_BUF_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_CSR_QNEXT_BUF_PARITY_ERR_SMASK				0x800000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_CSR_QENT_CNT_PARITY_ERR_SHIFT					22
#define WFR_RCV_ERR_FORCE_RX_RBUF_CSR_QENT_CNT_PARITY_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_CSR_QENT_CNT_PARITY_ERR_SMASK					0x400000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_CSR_QHEAD_BUF_NUM_PARITY_ERR_SHIFT				21
#define WFR_RCV_ERR_FORCE_RX_RBUF_CSR_QHEAD_BUF_NUM_PARITY_ERR_MASK				0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_CSR_QHEAD_BUF_NUM_PARITY_ERR_SMASK				0x200000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_BLOCK_LIST_READ_COR_ERR_SHIFT					20
#define WFR_RCV_ERR_FORCE_RX_RBUF_BLOCK_LIST_READ_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_BLOCK_LIST_READ_COR_ERR_SMASK					0x100000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_BLOCK_LIST_READ_UNC_ERR_SHIFT					19
#define WFR_RCV_ERR_FORCE_RX_RBUF_BLOCK_LIST_READ_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_BLOCK_LIST_READ_UNC_ERR_SMASK					0x80000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_LOOKUP_DES_COR_ERR_SHIFT					18
#define WFR_RCV_ERR_FORCE_RX_RBUF_LOOKUP_DES_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_LOOKUP_DES_COR_ERR_SMASK					0x40000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_LOOKUP_DES_UNC_ERR_SHIFT					17
#define WFR_RCV_ERR_FORCE_RX_RBUF_LOOKUP_DES_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_LOOKUP_DES_UNC_ERR_SMASK					0x20000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_LOOKUP_DES_REG_UNC_COR_ERR_SHIFT				16
#define WFR_RCV_ERR_FORCE_RX_RBUF_LOOKUP_DES_REG_UNC_COR_ERR_MASK				0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_LOOKUP_DES_REG_UNC_COR_ERR_SMASK				0x10000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_LOOKUP_DES_REG_UNC_ERR_SHIFT					15
#define WFR_RCV_ERR_FORCE_RX_RBUF_LOOKUP_DES_REG_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_LOOKUP_DES_REG_UNC_ERR_SMASK					0x8000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_FREE_LIST_COR_ERR_SHIFT					14
#define WFR_RCV_ERR_FORCE_RX_RBUF_FREE_LIST_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_FREE_LIST_COR_ERR_SMASK					0x4000ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_FREE_LIST_UNC_ERR_SHIFT					13
#define WFR_RCV_ERR_FORCE_RX_RBUF_FREE_LIST_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_RBUF_FREE_LIST_UNC_ERR_SMASK					0x2000ull
#define WFR_RCV_ERR_FORCE_RX_RCV_FSM_ENCODING_ERR_SHIFT						12
#define WFR_RCV_ERR_FORCE_RX_RCV_FSM_ENCODING_ERR_MASK						0x1ull
#define WFR_RCV_ERR_FORCE_RX_RCV_FSM_ENCODING_ERR_SMASK						0x1000ull
#define WFR_RCV_ERR_FORCE_RX_DMA_FLAG_COR_ERR_SHIFT						11
#define WFR_RCV_ERR_FORCE_RX_DMA_FLAG_COR_ERR_MASK						0x1ull
#define WFR_RCV_ERR_FORCE_RX_DMA_FLAG_COR_ERR_SMASK						0x800ull
#define WFR_RCV_ERR_FORCE_RX_DMA_FLAG_UNC_ERR_SHIFT						10
#define WFR_RCV_ERR_FORCE_RX_DMA_FLAG_UNC_ERR_MASK						0x1ull
#define WFR_RCV_ERR_FORCE_RX_DMA_FLAG_UNC_ERR_SMASK						0x400ull
#define WFR_RCV_ERR_FORCE_RX_DC_SOP_EOP_PARITY_ERR_SHIFT					9
#define WFR_RCV_ERR_FORCE_RX_DC_SOP_EOP_PARITY_ERR_MASK						0x1ull
#define WFR_RCV_ERR_FORCE_RX_DC_SOP_EOP_PARITY_ERR_SMASK					0x200ull
#define WFR_RCV_ERR_FORCE_RX_RCV_CSR_PARITY_ERR_SHIFT						8
#define WFR_RCV_ERR_FORCE_RX_RCV_CSR_PARITY_ERR_MASK						0x1ull
#define WFR_RCV_ERR_FORCE_RX_RCV_CSR_PARITY_ERR_SMASK						0x100ull
#define WFR_RCV_ERR_FORCE_RX_RCV_QP_MAP_TABLE_COR_ERR_SHIFT					7
#define WFR_RCV_ERR_FORCE_RX_RCV_QP_MAP_TABLE_COR_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_RCV_QP_MAP_TABLE_COR_ERR_SMASK					0x80ull
#define WFR_RCV_ERR_FORCE_RX_RCV_QP_MAP_TABLE_UNC_ERR_SHIFT					6
#define WFR_RCV_ERR_FORCE_RX_RCV_QP_MAP_TABLE_UNC_ERR_MASK					0x1ull
#define WFR_RCV_ERR_FORCE_RX_RCV_QP_MAP_TABLE_UNC_ERR_SMASK					0x40ull
#define WFR_RCV_ERR_FORCE_RX_RCV_DATA_COR_ERR_SHIFT						5
#define WFR_RCV_ERR_FORCE_RX_RCV_DATA_COR_ERR_MASK						0x1ull
#define WFR_RCV_ERR_FORCE_RX_RCV_DATA_COR_ERR_SMASK						0x20ull
#define WFR_RCV_ERR_FORCE_RX_RCV_DATA_UNC_ERR_SHIFT						4
#define WFR_RCV_ERR_FORCE_RX_RCV_DATA_UNC_ERR_MASK						0x1ull
#define WFR_RCV_ERR_FORCE_RX_RCV_DATA_UNC_ERR_SMASK						0x10ull
#define WFR_RCV_ERR_FORCE_RX_RCV_HDR_COR_ERR_SHIFT						3
#define WFR_RCV_ERR_FORCE_RX_RCV_HDR_COR_ERR_MASK						0x1ull
#define WFR_RCV_ERR_FORCE_RX_RCV_HDR_COR_ERR_SMASK						0x8ull
#define WFR_RCV_ERR_FORCE_RX_RCV_HDR_UNC_ERR_SHIFT						2
#define WFR_RCV_ERR_FORCE_RX_RCV_HDR_UNC_ERR_MASK						0x1ull
#define WFR_RCV_ERR_FORCE_RX_RCV_HDR_UNC_ERR_SMASK						0x4ull
#define WFR_RCV_ERR_FORCE_RX_DC_INTF_PARITY_ERR_SHIFT						1
#define WFR_RCV_ERR_FORCE_RX_DC_INTF_PARITY_ERR_MASK						0x1ull
#define WFR_RCV_ERR_FORCE_RX_DC_INTF_PARITY_ERR_SMASK						0x2ull
#define WFR_RCV_ERR_FORCE_RX_DMA_CSR_COR_ERR_SHIFT						0
#define WFR_RCV_ERR_FORCE_RX_DMA_CSR_COR_ERR_MASK						0x1ull
#define WFR_RCV_ERR_FORCE_RX_DMA_CSR_COR_ERR_SMASK						0x1ull
/*
* Table #19 of 250_RXE_Registers.xml - RcvQPMapTable
* This array of CSRs is used to specify the mapping of QP space to receive 
* contexts. There are eight 8-bit receive context values packets into each CSR. 
* Receive context numbers are in the range of 0 to 159 inclusive. Values in the 
* range 160 to 255 inclusive are invalid, and cause packets to be 
* dropped.
*/
#define WFR_RCV_QP_MAP_TABLE									(WFR_RXE + 0x000000000100)
#define WFR_RCV_QP_MAP_TABLE_RESETCSR								0x0000000000000000ull
#define WFR_RCV_QP_MAP_TABLE_RCV_CONTEXT_H_SHIFT						56
#define WFR_RCV_QP_MAP_TABLE_RCV_CONTEXT_H_MASK							0xFFull
#define WFR_RCV_QP_MAP_TABLE_RCV_CONTEXT_H_SMASK						0xFF00000000000000ull
#define WFR_RCV_QP_MAP_TABLE_RCV_CONTEXT_G_SHIFT						48
#define WFR_RCV_QP_MAP_TABLE_RCV_CONTEXT_G_MASK							0xFFull
#define WFR_RCV_QP_MAP_TABLE_RCV_CONTEXT_G_SMASK						0xFF000000000000ull
#define WFR_RCV_QP_MAP_TABLE_RCV_CONTEXT_F_SHIFT						40
#define WFR_RCV_QP_MAP_TABLE_RCV_CONTEXT_F_MASK							0xFFull
#define WFR_RCV_QP_MAP_TABLE_RCV_CONTEXT_F_SMASK						0xFF0000000000ull
#define WFR_RCV_QP_MAP_TABLE_RCV_CONTEXT_E_SHIFT						32
#define WFR_RCV_QP_MAP_TABLE_RCV_CONTEXT_E_MASK							0xFFull
#define WFR_RCV_QP_MAP_TABLE_RCV_CONTEXT_E_SMASK						0xFF00000000ull
#define WFR_RCV_QP_MAP_TABLE_RCV_CONTEXT_D_SHIFT						24
#define WFR_RCV_QP_MAP_TABLE_RCV_CONTEXT_D_MASK							0xFFull
#define WFR_RCV_QP_MAP_TABLE_RCV_CONTEXT_D_SMASK						0xFF000000ull
#define WFR_RCV_QP_MAP_TABLE_RCV_CONTEXT_C_SHIFT						16
#define WFR_RCV_QP_MAP_TABLE_RCV_CONTEXT_C_MASK							0xFFull
#define WFR_RCV_QP_MAP_TABLE_RCV_CONTEXT_C_SMASK						0xFF0000ull
#define WFR_RCV_QP_MAP_TABLE_RCV_CONTEXT_B_SHIFT						8
#define WFR_RCV_QP_MAP_TABLE_RCV_CONTEXT_B_MASK							0xFFull
#define WFR_RCV_QP_MAP_TABLE_RCV_CONTEXT_B_SMASK						0xFF00ull
#define WFR_RCV_QP_MAP_TABLE_RCV_CONTEXT_A_SHIFT						0
#define WFR_RCV_QP_MAP_TABLE_RCV_CONTEXT_A_MASK							0xFFull
#define WFR_RCV_QP_MAP_TABLE_RCV_CONTEXT_A_SMASK						0xFFull
/*
* Table #20 of 250_RXE_Registers.xml - RcvPartitionKey
* This CSR array is used to specify partition key values. There are four 16-bit 
* P_KEY values packed into each CSR, and 4 separate CSRs to give a total of 16 
* partition keys. The partition key values are undefined after 
* reset.
*/
#define WFR_RCV_PARTITION_KEY									(WFR_RXE + 0x000000000200)
#define WFR_RCV_PARTITION_KEY_RESETCSR								0x0000000000000000ull
#define WFR_RCV_PARTITION_KEY_PARTITION_KEY_D_SHIFT						48
#define WFR_RCV_PARTITION_KEY_PARTITION_KEY_D_MASK						0xFFFFull
#define WFR_RCV_PARTITION_KEY_PARTITION_KEY_D_SMASK						0xFFFF000000000000ull
#define WFR_RCV_PARTITION_KEY_PARTITION_KEY_C_SHIFT						32
#define WFR_RCV_PARTITION_KEY_PARTITION_KEY_C_MASK						0xFFFFull
#define WFR_RCV_PARTITION_KEY_PARTITION_KEY_C_SMASK						0xFFFF00000000ull
#define WFR_RCV_PARTITION_KEY_PARTITION_KEY_B_SHIFT						16
#define WFR_RCV_PARTITION_KEY_PARTITION_KEY_B_MASK						0xFFFFull
#define WFR_RCV_PARTITION_KEY_PARTITION_KEY_B_SMASK						0xFFFF0000ull
#define WFR_RCV_PARTITION_KEY_PARTITION_KEY_A_SHIFT						0
#define WFR_RCV_PARTITION_KEY_PARTITION_KEY_A_MASK						0xFFFFull
#define WFR_RCV_PARTITION_KEY_PARTITION_KEY_A_SMASK						0xFFFFull
/*
* Table #21 of 250_RXE_Registers.xml - RcvCounterArray32
* This CSR array is used to access 32-bit receive counters.
*/
#define WFR_RCV_COUNTER_ARRAY32									(WFR_RXE + 0x000000000400)
#define WFR_RCV_COUNTER_ARRAY32_RESETCSR							0x0000000000000000ull
#define WFR_RCV_COUNTER_ARRAY32_CNT_SHIFT							0
#define WFR_RCV_COUNTER_ARRAY32_CNT_MASK							0xFFFFFFFFull
#define WFR_RCV_COUNTER_ARRAY32_CNT_SMASK							0xFFFFFFFFull
/*
* Table #22 of 250_RXE_Registers.xml - RcvCounterArray64
* This CSR array is used to access 64-bit receive counters.
*/
#define WFR_RCV_COUNTER_ARRAY64									(WFR_RXE + 0x000000000500)
#define WFR_RCV_COUNTER_ARRAY64_RESETCSR							0x0000000000000000ull
#define WFR_RCV_COUNTER_ARRAY64_CNT_SHIFT							0
#define WFR_RCV_COUNTER_ARRAY64_CNT_MASK							0xFFFFFFFFFFFFFFFFull
#define WFR_RCV_COUNTER_ARRAY64_CNT_SMASK							0xFFFFFFFFFFFFFFFFull
/*
* Table #23 of 250_RXE_Registers.xml - RcvRsmCfg
* This CSR is used for configuring an RSM instance.
*/
#define WFR_RCV_RSM_CFG										(WFR_RXE + 0x000000000600)
#define WFR_RCV_RSM_CFG_RESETCSR								0x0000000000000000ull
#define WFR_RCV_RSM_CFG_PACKET_TYPE_SHIFT							60
#define WFR_RCV_RSM_CFG_PACKET_TYPE_MASK							0x7ull
#define WFR_RCV_RSM_CFG_PACKET_TYPE_SMASK							0x7000000000000000ull
#define WFR_RCV_RSM_CFG_BYPASS_HDR_SIZE_SHIFT							48
#define WFR_RCV_RSM_CFG_BYPASS_HDR_SIZE_MASK							0xFFull
#define WFR_RCV_RSM_CFG_BYPASS_HDR_SIZE_SMASK							0xFF000000000000ull
#define WFR_RCV_RSM_CFG_OFFSET_SHIFT								32
#define WFR_RCV_RSM_CFG_OFFSET_MASK								0xFFull
#define WFR_RCV_RSM_CFG_OFFSET_SMASK								0xFF00000000ull
#define WFR_RCV_RSM_CFG_ENABLE_OR_CHAIN_RSM3_SHIFT						3
#define WFR_RCV_RSM_CFG_ENABLE_OR_CHAIN_RSM3_MASK						0x1ull
#define WFR_RCV_RSM_CFG_ENABLE_OR_CHAIN_RSM3_SMASK						0x8ull
#define WFR_RCV_RSM_CFG_ENABLE_OR_CHAIN_RSM2_SHIFT						2
#define WFR_RCV_RSM_CFG_ENABLE_OR_CHAIN_RSM2_MASK						0x1ull
#define WFR_RCV_RSM_CFG_ENABLE_OR_CHAIN_RSM2_SMASK						0x4ull
#define WFR_RCV_RSM_CFG_ENABLE_OR_CHAIN_RSM1_SHIFT						1
#define WFR_RCV_RSM_CFG_ENABLE_OR_CHAIN_RSM1_MASK						0x1ull
#define WFR_RCV_RSM_CFG_ENABLE_OR_CHAIN_RSM1_SMASK						0x2ull
#define WFR_RCV_RSM_CFG_ENABLE_OR_CHAIN_RSM0_SHIFT						0
#define WFR_RCV_RSM_CFG_ENABLE_OR_CHAIN_RSM0_MASK						0x1ull
#define WFR_RCV_RSM_CFG_ENABLE_OR_CHAIN_RSM0_SMASK						0x1ull
/*
* Table #24 of 250_RXE_Registers.xml - RcvRsmSelect
* This CSR is used for configuring the match field and index field selection for 
* an RSM instance. The encoding used for the field values is specified in 
* #%%#Section 8.4.4.5, #%%#'RSM Details And Limitations'#%%#.
*/
#define WFR_RCV_RSM_SELECT									(WFR_RXE + 0x000000000700)
#define WFR_RCV_RSM_SELECT_RESETCSR								0x0000000000000000ull
#define WFR_RCV_RSM_SELECT_INDEX2_WIDTH_SHIFT							60
#define WFR_RCV_RSM_SELECT_INDEX2_WIDTH_MASK							0xFull
#define WFR_RCV_RSM_SELECT_INDEX2_WIDTH_SMASK							0xF000000000000000ull
#define WFR_RCV_RSM_SELECT_INDEX2_OFFSET_SHIFT							48
#define WFR_RCV_RSM_SELECT_INDEX2_OFFSET_MASK							0x1FFull
#define WFR_RCV_RSM_SELECT_INDEX2_OFFSET_SMASK							0x1FF000000000000ull
#define WFR_RCV_RSM_SELECT_INDEX1_WIDTH_SHIFT							44
#define WFR_RCV_RSM_SELECT_INDEX1_WIDTH_MASK							0xFull
#define WFR_RCV_RSM_SELECT_INDEX1_WIDTH_SMASK							0xF00000000000ull
#define WFR_RCV_RSM_SELECT_INDEX1_OFFSET_SHIFT							32
#define WFR_RCV_RSM_SELECT_INDEX1_OFFSET_MASK							0x1FFull
#define WFR_RCV_RSM_SELECT_INDEX1_OFFSET_SMASK							0x1FF00000000ull
#define WFR_RCV_RSM_SELECT_FIELD2_OFFSET_SHIFT							16
#define WFR_RCV_RSM_SELECT_FIELD2_OFFSET_MASK							0x1FFull
#define WFR_RCV_RSM_SELECT_FIELD2_OFFSET_SMASK							0x1FF0000ull
#define WFR_RCV_RSM_SELECT_FIELD1_OFFSET_SHIFT							0
#define WFR_RCV_RSM_SELECT_FIELD1_OFFSET_MASK							0x1FFull
#define WFR_RCV_RSM_SELECT_FIELD1_OFFSET_SMASK							0x1FFull
/*
* Table #25 of 250_RXE_Registers.xml - RcvRsmMatch
* This CSR is used for configuring the match criteria for an RSM 
* instance.
*/
#define WFR_RCV_RSM_MATCH									(WFR_RXE + 0x000000000800)
#define WFR_RCV_RSM_MATCH_RESETCSR								0x0000000000000000ull
#define WFR_RCV_RSM_MATCH_VALUE2_SHIFT								24
#define WFR_RCV_RSM_MATCH_VALUE2_MASK								0xFFull
#define WFR_RCV_RSM_MATCH_VALUE2_SMASK								0xFF000000ull
#define WFR_RCV_RSM_MATCH_MASK2_SHIFT								16
#define WFR_RCV_RSM_MATCH_MASK2_MASK								0xFFull
#define WFR_RCV_RSM_MATCH_MASK2_SMASK								0xFF0000ull
#define WFR_RCV_RSM_MATCH_VALUE1_SHIFT								8
#define WFR_RCV_RSM_MATCH_VALUE1_MASK								0xFFull
#define WFR_RCV_RSM_MATCH_VALUE1_SMASK								0xFF00ull
#define WFR_RCV_RSM_MATCH_MASK1_SHIFT								0
#define WFR_RCV_RSM_MATCH_MASK1_MASK								0xFFull
#define WFR_RCV_RSM_MATCH_MASK1_SMASK								0xFFull
/*
* Table #26 of 250_RXE_Registers.xml - RcvRsmMapTable
* This array of CSRs is used to specify the mapping of RSM indices to receive 
* contexts. There are eight 8-bit receive context values packets into each CSR. 
* Receive context numbers are in the range of 0 to 159 inclusive. Values in the 
* range 160 to 255 inclusive are invalid, and cause packets to be 
* dropped.
*/
#define WFR_RCV_RSM_MAP_TABLE									(WFR_RXE + 0x000000000900)
#define WFR_RCV_RSM_MAP_TABLE_RESETCSR								0x0000000000000000ull
#define WFR_RCV_RSM_MAP_TABLE_RCV_CONTEXT_H_SHIFT						56
#define WFR_RCV_RSM_MAP_TABLE_RCV_CONTEXT_H_MASK						0xFFull
#define WFR_RCV_RSM_MAP_TABLE_RCV_CONTEXT_H_SMASK						0xFF00000000000000ull
#define WFR_RCV_RSM_MAP_TABLE_RCV_CONTEXT_G_SHIFT						48
#define WFR_RCV_RSM_MAP_TABLE_RCV_CONTEXT_G_MASK						0xFFull
#define WFR_RCV_RSM_MAP_TABLE_RCV_CONTEXT_G_SMASK						0xFF000000000000ull
#define WFR_RCV_RSM_MAP_TABLE_RCV_CONTEXT_F_SHIFT						40
#define WFR_RCV_RSM_MAP_TABLE_RCV_CONTEXT_F_MASK						0xFFull
#define WFR_RCV_RSM_MAP_TABLE_RCV_CONTEXT_F_SMASK						0xFF0000000000ull
#define WFR_RCV_RSM_MAP_TABLE_RCV_CONTEXT_E_SHIFT						32
#define WFR_RCV_RSM_MAP_TABLE_RCV_CONTEXT_E_MASK						0xFFull
#define WFR_RCV_RSM_MAP_TABLE_RCV_CONTEXT_E_SMASK						0xFF00000000ull
#define WFR_RCV_RSM_MAP_TABLE_RCV_CONTEXT_D_SHIFT						24
#define WFR_RCV_RSM_MAP_TABLE_RCV_CONTEXT_D_MASK						0xFFull
#define WFR_RCV_RSM_MAP_TABLE_RCV_CONTEXT_D_SMASK						0xFF000000ull
#define WFR_RCV_RSM_MAP_TABLE_RCV_CONTEXT_C_SHIFT						16
#define WFR_RCV_RSM_MAP_TABLE_RCV_CONTEXT_C_MASK						0xFFull
#define WFR_RCV_RSM_MAP_TABLE_RCV_CONTEXT_C_SMASK						0xFF0000ull
#define WFR_RCV_RSM_MAP_TABLE_RCV_CONTEXT_B_SHIFT						8
#define WFR_RCV_RSM_MAP_TABLE_RCV_CONTEXT_B_MASK						0xFFull
#define WFR_RCV_RSM_MAP_TABLE_RCV_CONTEXT_B_SMASK						0xFF00ull
#define WFR_RCV_RSM_MAP_TABLE_RCV_CONTEXT_A_SHIFT						0
#define WFR_RCV_RSM_MAP_TABLE_RCV_CONTEXT_A_MASK						0xFFull
#define WFR_RCV_RSM_MAP_TABLE_RCV_CONTEXT_A_SMASK						0xFFull
/*
* Table #28 of 250_RXE_Registers.xml - RcvCtxtCtrl
* This CSR is used for control and configuration of a receive context.
*/
#define WFR_RCV_CTXT_CTRL									(WFR_RXE + 0x000000100000)
#define WFR_RCV_CTXT_CTRL_RESETCSR								0x0000000000000000ull
#define WFR_RCV_CTXT_CTRL_TH_HDR_QUEUE_WRITES_SHIFT						15
#define WFR_RCV_CTXT_CTRL_TH_HDR_QUEUE_WRITES_MASK						0x1ull
#define WFR_RCV_CTXT_CTRL_TH_HDR_QUEUE_WRITES_SMASK						0x8000ull
#define WFR_RCV_CTXT_CTRL_TH_EAGER_PAYLOAD_WRITES_SHIFT						14
#define WFR_RCV_CTXT_CTRL_TH_EAGER_PAYLOAD_WRITES_MASK						0x1ull
#define WFR_RCV_CTXT_CTRL_TH_EAGER_PAYLOAD_WRITES_SMASK						0x4000ull
#define WFR_RCV_CTXT_CTRL_TH_TID_PAYLOAD_WRITES_SHIFT						13
#define WFR_RCV_CTXT_CTRL_TH_TID_PAYLOAD_WRITES_MASK						0x1ull
#define WFR_RCV_CTXT_CTRL_TH_TID_PAYLOAD_WRITES_SMASK						0x2000ull
#define WFR_RCV_CTXT_CTRL_TH_RCV_HDR_TAIL_WRITE_SHIFT						12
#define WFR_RCV_CTXT_CTRL_TH_RCV_HDR_TAIL_WRITE_MASK						0x1ull
#define WFR_RCV_CTXT_CTRL_TH_RCV_HDR_TAIL_WRITE_SMASK						0x1000ull
#define WFR_RCV_CTXT_CTRL_EGR_BUF_SIZE_SHIFT							8
#define WFR_RCV_CTXT_CTRL_EGR_BUF_SIZE_MASK							0xFull
#define WFR_RCV_CTXT_CTRL_EGR_BUF_SIZE_SMASK							0xF00ull
#define WFR_RCV_CTXT_CTRL_REDIRECT_SHIFT							7
#define WFR_RCV_CTXT_CTRL_REDIRECT_MASK								0x1ull
#define WFR_RCV_CTXT_CTRL_REDIRECT_SMASK							0x80ull
#define WFR_RCV_CTXT_CTRL_TAIL_UPD_SHIFT							6
#define WFR_RCV_CTXT_CTRL_TAIL_UPD_MASK								0x1ull
#define WFR_RCV_CTXT_CTRL_TAIL_UPD_SMASK							0x40ull
#define WFR_RCV_CTXT_CTRL_INTR_AVAIL_SHIFT							5
#define WFR_RCV_CTXT_CTRL_INTR_AVAIL_MASK							0x1ull
#define WFR_RCV_CTXT_CTRL_INTR_AVAIL_SMASK							0x20ull
#define WFR_RCV_CTXT_CTRL_TID_FLOW_ENABLE_SHIFT							4
#define WFR_RCV_CTXT_CTRL_TID_FLOW_ENABLE_MASK							0x1ull
#define WFR_RCV_CTXT_CTRL_TID_FLOW_ENABLE_SMASK							0x10ull
#define WFR_RCV_CTXT_CTRL_DONT_DROP_RHQ_FULL_SHIFT						3
#define WFR_RCV_CTXT_CTRL_DONT_DROP_RHQ_FULL_MASK						0x1ull
#define WFR_RCV_CTXT_CTRL_DONT_DROP_RHQ_FULL_SMASK						0x8ull
#define WFR_RCV_CTXT_CTRL_DONT_DROP_EGR_FULL_SHIFT						2
#define WFR_RCV_CTXT_CTRL_DONT_DROP_EGR_FULL_MASK						0x1ull
#define WFR_RCV_CTXT_CTRL_DONT_DROP_EGR_FULL_SMASK						0x4ull
#define WFR_RCV_CTXT_CTRL_ONE_PACKET_PER_EGR_BUFFER_SHIFT					1
#define WFR_RCV_CTXT_CTRL_ONE_PACKET_PER_EGR_BUFFER_MASK					0x1ull
#define WFR_RCV_CTXT_CTRL_ONE_PACKET_PER_EGR_BUFFER_SMASK					0x2ull
#define WFR_RCV_CTXT_CTRL_ENABLE_SHIFT								0
#define WFR_RCV_CTXT_CTRL_ENABLE_MASK								0x1ull
#define WFR_RCV_CTXT_CTRL_ENABLE_SMASK								0x1ull
/*
* Table #29 of 250_RXE_Registers.xml - RcvCtxtStatus
* This CSR is used for reading the state of a receive context.
*/
#define WFR_RCV_CTXT_STATUS									(WFR_RXE + 0x000000100008)
#define WFR_RCV_CTXT_STATUS_RESETCSR								0x0000000000000000ull
#define WFR_RCV_CTXT_STATUS_BLOCKED_EGR_FULL_SHIFT						1
#define WFR_RCV_CTXT_STATUS_BLOCKED_EGR_FULL_MASK						0x1ull
#define WFR_RCV_CTXT_STATUS_BLOCKED_EGR_FULL_SMASK						0x2ull
#define WFR_RCV_CTXT_STATUS_BLOCKED_RHQ_FULL_SHIFT						0
#define WFR_RCV_CTXT_STATUS_BLOCKED_RHQ_FULL_MASK						0x1ull
#define WFR_RCV_CTXT_STATUS_BLOCKED_RHQ_FULL_SMASK						0x1ull
/*
* Table #30 of 250_RXE_Registers.xml - RcvEgrCtrl
* This CSR is used for configuration of the eager buffer entries for a receive 
* context.
*/
#define WFR_RCV_EGR_CTRL									(WFR_RXE + 0x000000100010)
#define WFR_RCV_EGR_CTRL_RESETCSR								0x0000000000000000ull
#define WFR_RCV_EGR_CTRL_EGR_CNT_SHIFT								32
#define WFR_RCV_EGR_CTRL_EGR_CNT_MASK								0xFFFull
#define WFR_RCV_EGR_CTRL_EGR_CNT_SMASK								0xFFF00000000ull
#define WFR_RCV_EGR_CTRL_EGR_BASE_INDEX_SHIFT							0
#define WFR_RCV_EGR_CTRL_EGR_BASE_INDEX_MASK							0xFFFFull
#define WFR_RCV_EGR_CTRL_EGR_BASE_INDEX_SMASK							0xFFFFull
/*
* Table #31 of 250_RXE_Registers.xml - RcvTidCtrl
* This CSR is used for configuration of the TID entries for a receive 
* context.
*/
#define WFR_RCV_TID_CTRL									(WFR_RXE + 0x000000100018)
#define WFR_RCV_TID_CTRL_RESETCSR								0x0000000000000000ull
#define WFR_RCV_TID_CTRL_TID_PAIR_CNT_SHIFT							32
#define WFR_RCV_TID_CTRL_TID_PAIR_CNT_MASK							0x7FFull
#define WFR_RCV_TID_CTRL_TID_PAIR_CNT_SMASK							0x7FF00000000ull
#define WFR_RCV_TID_CTRL_TID_BASE_INDEX_SHIFT							0
#define WFR_RCV_TID_CTRL_TID_BASE_INDEX_MASK							0xFFFFull
#define WFR_RCV_TID_CTRL_TID_BASE_INDEX_SMASK							0xFFFFull
/*
* Table #32 of 250_RXE_Registers.xml - RcvKeyCtrl
* This CSR is used for control and configuration of the J_KEY for a receive 
* context.
*/
#define WFR_RCV_KEY_CTRL									(WFR_RXE + 0x000000100020)
#define WFR_RCV_KEY_CTRL_RESETCSR								0x0000000000000000ull
#define WFR_RCV_KEY_CTRL_JOB_KEY_ENABLE_SHIFT							33
#define WFR_RCV_KEY_CTRL_JOB_KEY_ENABLE_MASK							0x1ull
#define WFR_RCV_KEY_CTRL_JOB_KEY_ENABLE_SMASK							0x200000000ull
#define WFR_RCV_KEY_CTRL_JOB_KEY_ALLOW_PERMISSIVE_SHIFT						32
#define WFR_RCV_KEY_CTRL_JOB_KEY_ALLOW_PERMISSIVE_MASK						0x1ull
#define WFR_RCV_KEY_CTRL_JOB_KEY_ALLOW_PERMISSIVE_SMASK						0x100000000ull
#define WFR_RCV_KEY_CTRL_JOB_KEY_MASK_SHIFT							16
#define WFR_RCV_KEY_CTRL_JOB_KEY_MASK_MASK							0xFFFFull
#define WFR_RCV_KEY_CTRL_JOB_KEY_MASK_SMASK							0xFFFF0000ull
#define WFR_RCV_KEY_CTRL_JOB_KEY_VALUE_SHIFT							0
#define WFR_RCV_KEY_CTRL_JOB_KEY_VALUE_MASK							0xFFFFull
#define WFR_RCV_KEY_CTRL_JOB_KEY_VALUE_SMASK							0xFFFFull
/*
* Table #33 of 250_RXE_Registers.xml - RcvHdrAddr
* This CSR configures the host memory physical address of the receive header 
* queue for a receive context.
*/
#define WFR_RCV_HDR_ADDR									(WFR_RXE + 0x000000100028)
#define WFR_RCV_HDR_ADDR_RESETCSR								0x0000000000000000ull
#define WFR_RCV_HDR_ADDR_ADDRESS_SHIFT								12
#define WFR_RCV_HDR_ADDR_ADDRESS_MASK								0xFFFFFFFFFull
#define WFR_RCV_HDR_ADDR_ADDRESS_SMASK								0xFFFFFFFFF000ull
/*
* Table #34 of 250_RXE_Registers.xml - RcvHdrCnt
* This CSR configures the number of entries in the receive header queue for a 
* receive context.
*/
#define WFR_RCV_HDR_CNT										(WFR_RXE + 0x000000100030)
#define WFR_RCV_HDR_CNT_RESETCSR								0x0000000000000000ull
#define WFR_RCV_HDR_CNT_CNT_SHIFT								0
#define WFR_RCV_HDR_CNT_CNT_MASK								0x1FFFFull
#define WFR_RCV_HDR_CNT_CNT_SMASK								0x1FFFFull
/*
* Table #35 of 250_RXE_Registers.xml - RcvHdrEntSize
* This CSR configures the size of each entry in DWs for the receive header queue 
* for a receive context. Typically, RcvHdrEntSize should be a multiple of the 
* cache line size (64B) and the header queue base address should be cache line 
* aligned for best performance.
*/
#define WFR_RCV_HDR_ENT_SIZE									(WFR_RXE + 0x000000100038)
#define WFR_RCV_HDR_ENT_SIZE_RESETCSR								0x0000000000000000ull
#define WFR_RCV_HDR_ENT_SIZE_ENT_SIZE_SHIFT							0
#define WFR_RCV_HDR_ENT_SIZE_ENT_SIZE_MASK							0x3FFull
#define WFR_RCV_HDR_ENT_SIZE_ENT_SIZE_SMASK							0x3FFull
/*
* Table #36 of 250_RXE_Registers.xml - RcvHdrSize
* This CSR configures the KDETH size in DWs for a receive context.
*/
#define WFR_RCV_HDR_SIZE									(WFR_RXE + 0x000000100040)
#define WFR_RCV_HDR_SIZE_RESETCSR								0x0000000000000000ull
#define WFR_RCV_HDR_SIZE_HDR_SIZE_SHIFT								0
#define WFR_RCV_HDR_SIZE_HDR_SIZE_MASK								0xFFull
#define WFR_RCV_HDR_SIZE_HDR_SIZE_SMASK								0xFFull
/*
* Table #37 of 250_RXE_Registers.xml - RcvHdrTailAddr
* This CSR configures the host memory physical address of the receive header 
* tail for a receive context. If TailUpd is set in RcvCtxtCtrl, the value of the 
* RcvHdrTail for this context will be DMA transferred to host memory using a 4B 
* write to this address. The format of the data in this 4B write is as 
* follows:
*/
#define WFR_RCV_HDR_TAIL_ADDR									(WFR_RXE + 0x000000100048)
#define WFR_RCV_HDR_TAIL_ADDR_RESETCSR								0x0000000000000000ull
#define WFR_RCV_HDR_TAIL_ADDR_ADDRESS_SHIFT							2
#define WFR_RCV_HDR_TAIL_ADDR_ADDRESS_MASK							0x3FFFFFFFFFFFull
#define WFR_RCV_HDR_TAIL_ADDR_ADDRESS_SMASK							0xFFFFFFFFFFFCull
/*
* Table #38 of 250_RXE_Registers.xml - RcvAvailTimeOut
* This CSR controls the receive available time-out mechanism which is part of 
* the interrupt mitigation mechanism for the receiver header queue.
*/
#define WFR_RCV_AVAIL_TIME_OUT									(WFR_RXE + 0x000000100050)
#define WFR_RCV_AVAIL_TIME_OUT_RESETCSR								0x0000000000000000ull
#define WFR_RCV_AVAIL_TIME_OUT_TIME_OUT_COUNT_SHIFT						16
#define WFR_RCV_AVAIL_TIME_OUT_TIME_OUT_COUNT_MASK						0xFFFFull
#define WFR_RCV_AVAIL_TIME_OUT_TIME_OUT_COUNT_SMASK						0xFFFF0000ull
#define WFR_RCV_AVAIL_TIME_OUT_TIME_OUT_RELOAD_SHIFT						0
#define WFR_RCV_AVAIL_TIME_OUT_TIME_OUT_RELOAD_MASK						0xFFFFull
#define WFR_RCV_AVAIL_TIME_OUT_TIME_OUT_RELOAD_SMASK						0xFFFFull
/*
* Table #39 of 250_RXE_Registers.xml - RcvHdrOvflCnt
* This CSR is a counter of the number of received packets that have been dropped 
* on a receive context due to overflow of the receive header queue.
*/
#define WFR_RCV_HDR_OVFL_CNT									(WFR_RXE + 0x000000100058)
#define WFR_RCV_HDR_OVFL_CNT_RESETCSR								0x0000000000000000ull
#define WFR_RCV_HDR_OVFL_CNT_CNT_SHIFT								0
#define WFR_RCV_HDR_OVFL_CNT_CNT_MASK								0xFFFFFFFFull
#define WFR_RCV_HDR_OVFL_CNT_CNT_SMASK								0xFFFFFFFFull
/*
* Table #41 of 250_RXE_Registers.xml - RcvArray
* The receive array CSRs are used for registering host physical memory mappings 
* for eager buffer and TID entries. A fast update mechanism is provided for 
* these CSRs as defined in #%%#Section 8.5.9, #%%#'Fast Update of Receive Array 
* Entries'#%%#. Reads of these CSRs use the regular CSR read path, and is 
* provided for system debug.
*/
#define WFR_RCV_ARRAY										(WFR_RXE + 0x000000200000)
#define WFR_RCV_ARRAY_RESETCSR									0x0000000000000000ull
#define WFR_RCV_ARRAY_RT_WRITE_ENABLE_SHIFT							63
#define WFR_RCV_ARRAY_RT_WRITE_ENABLE_MASK							0x1ull
#define WFR_RCV_ARRAY_RT_WRITE_ENABLE_SMASK							0x8000000000000000ull
#define WFR_RCV_ARRAY_RT_BUF_SIZE_SHIFT								36
#define WFR_RCV_ARRAY_RT_BUF_SIZE_MASK								0xFull
#define WFR_RCV_ARRAY_RT_BUF_SIZE_SMASK								0xF000000000ull
#define WFR_RCV_ARRAY_RT_ADDR_SHIFT								0
#define WFR_RCV_ARRAY_RT_ADDR_MASK								0xFFFFFFFFFull
#define WFR_RCV_ARRAY_RT_ADDR_SMASK								0xFFFFFFFFFull
/*
* Table #43 of 250_RXE_Registers.xml - RcvHdrTail
* This CSR is used to read the receive header tail for a receive context. The 
* Tail value is an offset relative to RcvHdrAddr in units of DWs. The value 
* increments by RcvHdrEntSize from one header to the next in the header queue, 
* and wraps to 0 after RcvHdrCnt entries. The sizing of the Tail field is 25 
* bits, and is sufficient for the maximum 64K entries at the maximum 512B entry 
* size.
*/
#define WFR_RCV_HDR_TAIL									(WFR_RXE + 0x000000300000)
#define WFR_RCV_HDR_TAIL_RESETCSR								0x0000000000000000ull
#define WFR_RCV_HDR_TAIL_TAIL_SHIFT								0
#define WFR_RCV_HDR_TAIL_TAIL_MASK								0x1FFFFFFull
#define WFR_RCV_HDR_TAIL_TAIL_SMASK								0x1FFFFFFull
/*
* Table #44 of 250_RXE_Registers.xml - RcvHdrHead
* This CSR is used to read and write the receive header head and its interrupt 
* mitigation counter for a receive context.
*/
#define WFR_RCV_HDR_HEAD									(WFR_RXE + 0x000000300008)
#define WFR_RCV_HDR_HEAD_RESETCSR								0x0000000000000000ull
#define WFR_RCV_HDR_HEAD_COUNTER_SHIFT								32
#define WFR_RCV_HDR_HEAD_COUNTER_MASK								0xFFFFull
#define WFR_RCV_HDR_HEAD_COUNTER_SMASK								0xFFFF00000000ull
#define WFR_RCV_HDR_HEAD_HEAD_SHIFT								0
#define WFR_RCV_HDR_HEAD_HEAD_MASK								0x1FFFFFFull
#define WFR_RCV_HDR_HEAD_HEAD_SMASK								0x1FFFFFFull
/*
* Table #45 of 250_RXE_Registers.xml - RcvEgrIndexTail
* This CSR is used to read the receive eager index tail for a receive 
* context.
*/
#define WFR_RCV_EGR_INDEX_TAIL									(WFR_RXE + 0x000000300010)
#define WFR_RCV_EGR_INDEX_TAIL_RESETCSR								0x0000000000000000ull
#define WFR_RCV_EGR_INDEX_TAIL_TAIL_SHIFT							0
#define WFR_RCV_EGR_INDEX_TAIL_TAIL_MASK							0x7FFull
#define WFR_RCV_EGR_INDEX_TAIL_TAIL_SMASK							0x7FFull
/*
* Table #46 of 250_RXE_Registers.xml - RcvEgrIndexHead
* This CSR is used to read and write the receive header head for a receive 
* context.
*/
#define WFR_RCV_EGR_INDEX_HEAD									(WFR_RXE + 0x000000300018)
#define WFR_RCV_EGR_INDEX_HEAD_RESETCSR								0x0000000000000000ull
#define WFR_RCV_EGR_INDEX_HEAD_HEAD_SHIFT							0
#define WFR_RCV_EGR_INDEX_HEAD_HEAD_MASK							0x7FFull
#define WFR_RCV_EGR_INDEX_HEAD_HEAD_SMASK							0x7FFull
/*
* Table #47 of 250_RXE_Registers.xml - RcvEgrOffsetTail
* This CSR is used to read the receive eager offset tail for a receive context. 
* This indicates the location within the eager buffer indicated by 
* RcvEgrIndexTail that is available for the next eager payload. 
* 
*/
#define WFR_RCV_EGR_OFFSET_TAIL									(WFR_RXE + 0x000000300020)
#define WFR_RCV_EGR_OFFSET_TAIL_RESETCSR							0x0000000000000000ull
#define WFR_RCV_EGR_OFFSET_TAIL_TAIL_SHIFT							6
#define WFR_RCV_EGR_OFFSET_TAIL_TAIL_MASK							0xFFFull
#define WFR_RCV_EGR_OFFSET_TAIL_TAIL_SMASK							0x3FFC0ull
/*
* Table #48 of 250_RXE_Registers.xml - RcvTidFlowTable
* This CSR is for one entry in the flow table for a receive context. Note that 
* this is a two dimensional array with RXE_NUM_TID_FLOWS CSRs for each of 
* RXE_NUM_CONTEXTS receive contexts. A stride of 0x8 is used within a receive 
* context so that these CSRs are consecutive in the per-context memory map, but 
* a stride of 0x1000 is used across receive contexts so that they can be mapped 
* into independent 4KB host pages.
*/
#define WFR_RCV_TID_FLOW_TABLE									(WFR_RXE + 0x000000300800)
#define WFR_RCV_TID_FLOW_TABLE_RESETCSR								0x0000000000000000ull
#define WFR_RCV_TID_FLOW_TABLE_GEN_MISMATCH_SHIFT						38
#define WFR_RCV_TID_FLOW_TABLE_GEN_MISMATCH_MASK						0x1ull
#define WFR_RCV_TID_FLOW_TABLE_GEN_MISMATCH_SMASK						0x4000000000ull
#define WFR_RCV_TID_FLOW_TABLE_SEQ_MISMATCH_SHIFT						37
#define WFR_RCV_TID_FLOW_TABLE_SEQ_MISMATCH_MASK						0x1ull
#define WFR_RCV_TID_FLOW_TABLE_SEQ_MISMATCH_SMASK						0x2000000000ull
#define WFR_RCV_TID_FLOW_TABLE_KEEP_PAYLOAD_ON_GEN_ERR_SHIFT					36
#define WFR_RCV_TID_FLOW_TABLE_KEEP_PAYLOAD_ON_GEN_ERR_MASK					0x1ull
#define WFR_RCV_TID_FLOW_TABLE_KEEP_PAYLOAD_ON_GEN_ERR_SMASK					0x1000000000ull
#define WFR_RCV_TID_FLOW_TABLE_KEEP_ON_GEN_ERR_SHIFT						35
#define WFR_RCV_TID_FLOW_TABLE_KEEP_ON_GEN_ERR_MASK						0x1ull
#define WFR_RCV_TID_FLOW_TABLE_KEEP_ON_GEN_ERR_SMASK						0x800000000ull
#define WFR_RCV_TID_FLOW_TABLE_KEEP_AFTER_SEQ_ERR_SHIFT						34
#define WFR_RCV_TID_FLOW_TABLE_KEEP_AFTER_SEQ_ERR_MASK						0x1ull
#define WFR_RCV_TID_FLOW_TABLE_KEEP_AFTER_SEQ_ERR_SMASK						0x400000000ull
#define WFR_RCV_TID_FLOW_TABLE_HDR_SUPP_ENABLED_SHIFT						33
#define WFR_RCV_TID_FLOW_TABLE_HDR_SUPP_ENABLED_MASK						0x1ull
#define WFR_RCV_TID_FLOW_TABLE_HDR_SUPP_ENABLED_SMASK						0x200000000ull
#define WFR_RCV_TID_FLOW_TABLE_FLOW_VALID_SHIFT							32
#define WFR_RCV_TID_FLOW_TABLE_FLOW_VALID_MASK							0x1ull
#define WFR_RCV_TID_FLOW_TABLE_FLOW_VALID_SMASK							0x100000000ull
#define WFR_RCV_TID_FLOW_TABLE_GEN_VAL_SHIFT							11
#define WFR_RCV_TID_FLOW_TABLE_GEN_VAL_MASK							0xFFFFFull
#define WFR_RCV_TID_FLOW_TABLE_GEN_VAL_SMASK							0x7FFFF800ull
#define WFR_RCV_TID_FLOW_TABLE_SEQ_NUM_SHIFT							0
#define WFR_RCV_TID_FLOW_TABLE_SEQ_NUM_MASK							0x7FFull
#define WFR_RCV_TID_FLOW_TABLE_SEQ_NUM_SMASK							0x7FFull
/*
* Table #51 of 750_RXE_Header_Parser_Debug_Registers.xml - RXE_RECEIVE_DBG_FIRST_BAD_QPMAPTABLE
* Debug access to get the address captured when the data read from the CSRs 
* RcvQPMapTable which is implemented in a memory has an ECC error.
*/
#define WFR_RXE_RECEIVE_DBG_FIRST_BAD_QPMAPTABLE						(WFR_RXE + 0x000000780000)
#define WFR_RXE_RECEIVE_DBG_FIRST_BAD_QPMAPTABLE_RESETCSR					0x0000000000000000ull
#define WFR_RXE_RECEIVE_DBG_FIRST_BAD_QPMAPTABLE_RCV_QP_MAP_TABLE_ADDR_SHIFT			0
#define WFR_RXE_RECEIVE_DBG_FIRST_BAD_QPMAPTABLE_RCV_QP_MAP_TABLE_ADDR_MASK			0x1Full
#define WFR_RXE_RECEIVE_DBG_FIRST_BAD_QPMAPTABLE_RCV_QP_MAP_TABLE_ADDR_SMASK			0x1Full
/*
* Table #52 of 750_RXE_Header_Parser_Debug_Registers.xml - RXE_RECEIVE_DBG_FSM_ENCODING_ERR
* Debug access to get FSM encoding error on state machine that are implemented 
* in RCV block.
*/
#define WFR_RXE_RECEIVE_DBG_FSM_ENCODING_ERR							(WFR_RXE + 0x000000780008)
#define WFR_RXE_RECEIVE_DBG_FSM_ENCODING_ERR_RESETCSR						0x0000000000000000ull
#define WFR_RXE_RECEIVE_DBG_FSM_ENCODING_ERR_RCV_FSM_ENCODING_ERR_SHIFT				0
#define WFR_RXE_RECEIVE_DBG_FSM_ENCODING_ERR_RCV_FSM_ENCODING_ERR_MASK				0x7ull
#define WFR_RXE_RECEIVE_DBG_FSM_ENCODING_ERR_RCV_FSM_ENCODING_ERR_SMASK				0x7ull
/*
* Table #55 of 760_RXE_Lookup_Debug_Registers.xml - RXE_LOOKUP_DBG_CAPTURE_EN
* This CSR bit initiates a capture on the CSRs #%%#RXE_LOOKUP_RECENT_GDLKUP#%%#, 
* #%%#This CSR captures the most recent Lookup request which was completed 
* successfully.#%%#, #%%#RXE_LOOKUP_RCVARRAY_ERROR_LOC#%%#. for test 
* purpose
*/
#define WFR_RXE_LOOKUP_DBG_CAPTURE_EN								(WFR_RXE + 0x0000007A0000)
#define WFR_RXE_LOOKUP_DBG_CAPTURE_EN_RESETCSR							0x0000000000000000ull
#define WFR_RXE_LOOKUP_DBG_CAPTURE_EN_CAPTURE_SHIFT						0
#define WFR_RXE_LOOKUP_DBG_CAPTURE_EN_CAPTURE_MASK						0x1ull
#define WFR_RXE_LOOKUP_DBG_CAPTURE_EN_CAPTURE_SMASK						0x1ull
/*
* Table #56 of 760_RXE_Lookup_Debug_Registers.xml - RXE_LOOKUP_RECENT_GDLKUP
* This CSR captures the most recent Lookup request which was completed 
* successfully. 
*/
#define WFR_RXE_LOOKUP_RECENT_GDLKUP								(WFR_RXE + 0x0000007A0008)
#define WFR_RXE_LOOKUP_RECENT_GDLKUP_RESETCSR							0x0000000000000000ull
#define WFR_RXE_LOOKUP_RECENT_GDLKUP_PKT_TYPE_SHIFT						29
#define WFR_RXE_LOOKUP_RECENT_GDLKUP_PKT_TYPE_MASK						0x7ull
#define WFR_RXE_LOOKUP_RECENT_GDLKUP_PKT_TYPE_SMASK						0xE0000000ull
#define WFR_RXE_LOOKUP_RECENT_GDLKUP_TID_SHIFT							19
#define WFR_RXE_LOOKUP_RECENT_GDLKUP_TID_MASK							0x3FFull
#define WFR_RXE_LOOKUP_RECENT_GDLKUP_TID_SMASK							0x1FF80000ull
#define WFR_RXE_LOOKUP_RECENT_GDLKUP_EGRTAILINDX_SHIFT						8
#define WFR_RXE_LOOKUP_RECENT_GDLKUP_EGRTAILINDX_MASK						0x7FFull
#define WFR_RXE_LOOKUP_RECENT_GDLKUP_EGRTAILINDX_SMASK						0x7FF00ull
#define WFR_RXE_LOOKUP_RECENT_GDLKUP_CTXTID_SHIFT						0
#define WFR_RXE_LOOKUP_RECENT_GDLKUP_CTXTID_MASK						0xFFull
#define WFR_RXE_LOOKUP_RECENT_GDLKUP_CTXTID_SMASK						0xFFull
/*
* Table #57 of 760_RXE_Lookup_Debug_Registers.xml - RXE_LOOKUP_RCVARRAY_ERROR_LOC
* This CSR holds the information which can be used to isolate the location in 
* RCV Array which has an un-correctable ECC error.
*/
#define WFR_RXE_LOOKUP_RCVARRAY_ERROR_LOC							(WFR_RXE + 0x0000007A0010)
#define WFR_RXE_LOOKUP_RCVARRAY_ERROR_LOC_RESETCSR						0x0000000000000000ull
#define WFR_RXE_LOOKUP_RCVARRAY_ERROR_LOC_FAILING_RCV_ADDRESS_SHIFT				0
#define WFR_RXE_LOOKUP_RCVARRAY_ERROR_LOC_FAILING_RCV_ADDRESS_MASK				0xFFFFFFFFFFFFull
#define WFR_RXE_LOOKUP_RCVARRAY_ERROR_LOC_FAILING_RCV_ADDRESS_SMASK				0xFFFFFFFFFFFFull
/*
* Table #58 of 760_RXE_Lookup_Debug_Registers.xml - RXE_LOOKUP_CSR_PARITY_LOC
* This CSR holds the address of the either the RcvEgrCtrl or the RcvTIDCtrl 
* configuration CSR's in which the continuous parity check of the contents 
* failed. The CSR always captures the address for the most recently failed CSR. 
* In the case where both the RcvEgrCtrl and the RcvTIDCtrl have failures at the 
* same time, only the RcvEgrCtrl Address is captured.
*/
#define WFR_RXE_LOOKUP_CSR_PARITY_LOC								(WFR_RXE + 0x0000007A0018)
#define WFR_RXE_LOOKUP_CSR_PARITY_LOC_RESETCSR							0x0000000000000000ull
#define WFR_RXE_LOOKUP_CSR_PARITY_LOC_FAILING_CSR_ADDRESS_SHIFT					0
#define WFR_RXE_LOOKUP_CSR_PARITY_LOC_FAILING_CSR_ADDRESS_MASK					0xFFFFFFFFFFFFull
#define WFR_RXE_LOOKUP_CSR_PARITY_LOC_FAILING_CSR_ADDRESS_SMASK					0xFFFFFFFFFFFFull
/*
* Table #61 of 770_RXE_Buffer_Debug_Registers.xml - RXE_BUFFER_DBG_RBUF_MEM
* Debug access to RBUF memory.
*/
#define WFR_RXE_BUFFER_DBG_RBUF_MEM								(WFR_RXE + 0x000000700000)
#define WFR_RXE_BUFFER_DBG_RBUF_MEM_RESETCSR							0x0000000000000000ull
#define WFR_RXE_BUFFER_DBG_RBUF_MEM_RBUF_QWORD_SHIFT						0
#define WFR_RXE_BUFFER_DBG_RBUF_MEM_RBUF_QWORD_MASK						0xFFFFFFFFFFFFFFFFull
#define WFR_RXE_BUFFER_DBG_RBUF_MEM_RBUF_QWORD_SMASK						0xFFFFFFFFFFFFFFFFull
/*
* Table #62 of 770_RXE_Buffer_Debug_Registers.xml - RXE_BUFFER_DBG_BL_MEM
* Debug access to Block list memory.
*/
#define WFR_RXE_BUFFER_DBG_BL_MEM								(WFR_RXE + 0x000000730000)
#define WFR_RXE_BUFFER_DBG_BL_MEM_RESETCSR							0x0000000000000000ull
#define WFR_RXE_BUFFER_DBG_BL_MEM_EOP_FLAG_SHIFT						16
#define WFR_RXE_BUFFER_DBG_BL_MEM_EOP_FLAG_MASK							0x1ull
#define WFR_RXE_BUFFER_DBG_BL_MEM_EOP_FLAG_SMASK						0x10000ull
#define WFR_RXE_BUFFER_DBG_BL_MEM_DWORD_ENABLES_SHIFT						12
#define WFR_RXE_BUFFER_DBG_BL_MEM_DWORD_ENABLES_MASK						0xFull
#define WFR_RXE_BUFFER_DBG_BL_MEM_DWORD_ENABLES_SMASK						0xF000ull
#define WFR_RXE_BUFFER_DBG_BL_MEM_BUFFER_NUMBER_SHIFT						0
#define WFR_RXE_BUFFER_DBG_BL_MEM_BUFFER_NUMBER_MASK						0xFFFull
#define WFR_RXE_BUFFER_DBG_BL_MEM_BUFFER_NUMBER_SMASK						0xFFFull
/*
* Table #63 of 770_RXE_Buffer_Debug_Registers.xml - RXE_BUFFER_DBG_FL_MEM
* Debug access to Free list memory.
*/
#define WFR_RXE_BUFFER_DBG_FL_MEM								(WFR_RXE + 0x000000735000)
#define WFR_RXE_BUFFER_DBG_FL_MEM_RESETCSR							0x0000000000000000ull
#define WFR_RXE_BUFFER_DBG_FL_MEM_BUFFER_NUMBER_SHIFT						0
#define WFR_RXE_BUFFER_DBG_FL_MEM_BUFFER_NUMBER_MASK						0xFFFull
#define WFR_RXE_BUFFER_DBG_FL_MEM_BUFFER_NUMBER_SMASK						0xFFFull
/*
* Table #64 of 770_RXE_Buffer_Debug_Registers.xml - RXE_BUFFER_DBG_LKUPDESC_P1_MEM
* Debug access to Lookup descriptor P1 memory.
*/
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P1_MEM							(WFR_RXE + 0x00000073A000)
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P1_MEM_RESETCSR						0x0000000000000000ull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P1_MEM_TID_VALUE_EGR_PKT_LEN_64B_SHIFT			20
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P1_MEM_TID_VALUE_EGR_PKT_LEN_64B_MASK			0x3FFull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P1_MEM_TID_VALUE_EGR_PKT_LEN_64B_SMASK			0x3FF00000ull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P1_MEM_PKT_TYPE_SHIFT					17
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P1_MEM_PKT_TYPE_MASK					0x7ull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P1_MEM_PKT_TYPE_SMASK					0xE0000ull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P1_MEM_KPF_INTR_SHIFT					16
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P1_MEM_KPF_INTR_MASK					0x1ull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P1_MEM_KPF_INTR_SMASK					0x10000ull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P1_MEM_IBRCVHDR_SIZE_SHIFT					8
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P1_MEM_IBRCVHDR_SIZE_MASK					0xFFull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P1_MEM_IBRCVHDR_SIZE_SMASK					0xFF00ull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P1_MEM_PKT_VL_SHIFT						4
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P1_MEM_PKT_VL_MASK						0xFull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P1_MEM_PKT_VL_SMASK						0xF0ull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P1_MEM_TIDFLOW_VALID_SHIFT					3
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P1_MEM_TIDFLOW_VALID_MASK					0x1ull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P1_MEM_TIDFLOW_VALID_SMASK					0x8ull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P1_MEM_GENVAL_MATCH_SHIFT					2
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P1_MEM_GENVAL_MATCH_MASK					0x1ull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P1_MEM_GENVAL_MATCH_SMASK					0x4ull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P1_MEM_KPF_SUPPRESSHDR_SHIFT				1
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P1_MEM_KPF_SUPPRESSHDR_MASK					0x1ull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P1_MEM_KPF_SUPPRESSHDR_SMASK				0x2ull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P1_MEM_LKUP_VALID_SHIFT					0
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P1_MEM_LKUP_VALID_MASK					0x1ull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P1_MEM_LKUP_VALID_SMASK					0x1ull
/*
* Table #65 of 770_RXE_Buffer_Debug_Registers.xml - RXE_BUFFER_DBG_LKUPDESC_P2_0_MEM
* Debug access to Lookup Descriptor P2 memory.
*/
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_0_MEM							(WFR_RXE + 0x000000740000)
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_0_MEM_RESETCSR						0x0000000000000000ull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_0_MEM_EGR_INDEX_SHIFT					2
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_0_MEM_EGR_INDEX_MASK					0x7FFull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_0_MEM_EGR_INDEX_SMASK					0x1FFCull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_0_MEM_TID_CTRL_SHIFT					1
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_0_MEM_TID_CTRL_MASK					0x1ull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_0_MEM_TID_CTRL_SMASK					0x2ull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_0_MEM_UNCORERR_SHIFT					0
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_0_MEM_UNCORERR_MASK					0x1ull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_0_MEM_UNCORERR_SMASK					0x1ull
/*
* Table #66 of 770_RXE_Buffer_Debug_Registers.xml - RXE_BUFFER_DBG_LKUPDESC_P2_1_MEM
* Debug access to Lookup Descriptor P2 memory.
*/
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_1_MEM							(WFR_RXE + 0x000000745000)
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_1_MEM_RESETCSR						0x0000000000000000ull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_1_MEM_BUF_ADDR_1_SHIFT					15
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_1_MEM_BUF_ADDR_1_MASK					0x3FFFFFFFFFFFull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_1_MEM_BUF_ADDR_1_SMASK					0x1FFFFFFFFFFF8000ull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_1_MEM_BUF_SIZE_1_SHIFT					1
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_1_MEM_BUF_SIZE_1_MASK					0x3FFFull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_1_MEM_BUF_SIZE_1_SMASK					0x7FFEull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_1_MEM_RT_VALID_1_SHIFT					0
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_1_MEM_RT_VALID_1_MASK					0x1ull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_1_MEM_RT_VALID_1_SMASK					0x1ull
/*
* Table #67 of 770_RXE_Buffer_Debug_Registers.xml - RXE_BUFFER_DBG_LKUPDESC_P2_2_MEM
* Debug access to Lookup Descriptor P2 memory.
*/
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_2_MEM							(WFR_RXE + 0x00000074A000)
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_2_MEM_RESETCSR						0x0000000000000000ull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_2_MEM_BUF_ADDR_2_SHIFT					15
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_2_MEM_BUF_ADDR_2_MASK					0x3FFFFFFFFFFFull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_2_MEM_BUF_ADDR_2_SMASK					0x1FFFFFFFFFFF8000ull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_2_MEM_BUF_SIZE_2_SHIFT					1
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_2_MEM_BUF_SIZE_2_MASK					0x3FFFull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_2_MEM_BUF_SIZE_2_SMASK					0x7FFEull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_2_MEM_RT_VALID_2_SHIFT					0
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_2_MEM_RT_VALID_2_MASK					0x1ull
#define WFR_RXE_BUFFER_DBG_LKUPDESC_P2_2_MEM_RT_VALID_2_SMASK					0x1ull
/*
* Table #68 of 770_RXE_Buffer_Debug_Registers.xml - RXE_BUFFER_DBG_FLAGS_DATA_MEM
* Debug access to Lookup Descriptor P2 memory.
*/
#define WFR_RXE_BUFFER_DBG_FLAGS_DATA_MEM							(WFR_RXE + 0x000000750000)
#define WFR_RXE_BUFFER_DBG_FLAGS_DATA_MEM_RESETCSR						0x0000000000000000ull
#define WFR_RXE_BUFFER_DBG_FLAGS_DATA_MEM_FLAG_DATA_SHIFT					0
#define WFR_RXE_BUFFER_DBG_FLAGS_DATA_MEM_FLAG_DATA_MASK					0xFFFFFFFFFFFFFFFFull
#define WFR_RXE_BUFFER_DBG_FLAGS_DATA_MEM_FLAG_DATA_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #69 of 770_RXE_Buffer_Debug_Registers.xml - RXE_BUFFER_DBG_CSRQ_STATE_0
* Debug access to CSRQ state registers.
*/
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0								(WFR_RXE + 0x000000755000)
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_RESETCSR						0x0000410008004002ull
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_EOP_DWORD_EN_PAR_SHIFT					46
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_EOP_DWORD_EN_PAR_MASK					0x1ull
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_EOP_DWORD_EN_PAR_SMASK					0x400000000000ull
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_EOP_DWORD_EN_SHIFT					41
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_EOP_DWORD_EN_MASK					0x1Full
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_EOP_DWORD_EN_SMASK					0x3E0000000000ull
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_NUM_OF_PKT_PAR_SHIFT					40
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_NUM_OF_PKT_PAR_MASK					0x1ull
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_NUM_OF_PKT_PAR_SMASK					0x10000000000ull
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_NUM_OF_PKT_SHIFT					28
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_NUM_OF_PKT_MASK						0xFFFull
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_NUM_OF_PKT_SMASK					0xFFF0000000ull
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_TAIL_PTR_PAR_SHIFT					27
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_TAIL_PTR_PAR_MASK					0x1ull
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_TAIL_PTR_PAR_SMASK					0x8000000ull
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_TAIL_PTR_SHIFT						15
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_TAIL_PTR_MASK						0xFFFull
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_TAIL_PTR_SMASK						0x7FF8000ull
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_HEAD_PTR_PAR_SHIFT					14
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_HEAD_PTR_PAR_MASK					0x1ull
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_HEAD_PTR_PAR_SMASK					0x4000ull
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_HEAD_PTR_SHIFT						2
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_HEAD_PTR_MASK						0xFFFull
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_HEAD_PTR_SMASK						0x3FFCull
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_ENTRY_VALID_PAR_SHIFT					1
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_ENTRY_VALID_PAR_MASK					0x1ull
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_ENTRY_VALID_PAR_SMASK					0x2ull
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_ENTRY_VALID_SHIFT					0
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_ENTRY_VALID_MASK					0x1ull
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_0_ENTRY_VALID_SMASK					0x1ull
/*
* Table #70 of 770_RXE_Buffer_Debug_Registers.xml - RXE_BUFFER_DBG_CSRQ_STATE_1
* Debug access to CSRQ state registers.
*/
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_1								(WFR_RXE + 0x000000755008)
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_1_RESETCSR						0x0000000000000000ull
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_1_CSRQ_DESC_P1_SHIFT					0
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_1_CSRQ_DESC_P1_MASK					0x3FFFFFFFull
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_1_CSRQ_DESC_P1_SMASK					0x3FFFFFFFull
/*
* Table #71 of 770_RXE_Buffer_Debug_Registers.xml - RXE_BUFFER_DBG_RDCTL_STATE
* Debug access to state registers.
*/
#define WFR_RXE_BUFFER_DBG_RDCTL_STATE								(WFR_RXE + 0x000000756000)
#define WFR_RXE_BUFFER_DBG_RDCTL_STATE_RESETCSR							0x0800100020004000ull
#define WFR_RXE_BUFFER_DBG_RDCTL_STATE_RXDMA_ENTRY_CNT_PAR_D_SHIFT				59
#define WFR_RXE_BUFFER_DBG_RDCTL_STATE_RXDMA_ENTRY_CNT_PAR_D_MASK				0x1ull
#define WFR_RXE_BUFFER_DBG_RDCTL_STATE_RXDMA_ENTRY_CNT_PAR_D_SMASK				0x800000000000000ull
#define WFR_RXE_BUFFER_DBG_RDCTL_STATE_RXDMA_ENTRY_CNT_D_SHIFT					45
#define WFR_RXE_BUFFER_DBG_RDCTL_STATE_RXDMA_ENTRY_CNT_D_MASK					0x3FFFull
#define WFR_RXE_BUFFER_DBG_RDCTL_STATE_RXDMA_ENTRY_CNT_D_SMASK					0x7FFE00000000000ull
#define WFR_RXE_BUFFER_DBG_RDCTL_STATE_RXDMA_ENTRY_CNT_PAR_C_SHIFT				44
#define WFR_RXE_BUFFER_DBG_RDCTL_STATE_RXDMA_ENTRY_CNT_PAR_C_MASK				0x1ull
#define WFR_RXE_BUFFER_DBG_RDCTL_STATE_RXDMA_ENTRY_CNT_PAR_C_SMASK				0x100000000000ull
#define WFR_RXE_BUFFER_DBG_RDCTL_STATE_RXDMA_ENTRY_CNT_C_SHIFT					30
#define WFR_RXE_BUFFER_DBG_RDCTL_STATE_RXDMA_ENTRY_CNT_C_MASK					0x3FFFull
#define WFR_RXE_BUFFER_DBG_RDCTL_STATE_RXDMA_ENTRY_CNT_C_SMASK					0xFFFC0000000ull
#define WFR_RXE_BUFFER_DBG_RDCTL_STATE_RXDMA_ENTRY_CNT_PAR_B_SHIFT				29
#define WFR_RXE_BUFFER_DBG_RDCTL_STATE_RXDMA_ENTRY_CNT_PAR_B_MASK				0x1ull
#define WFR_RXE_BUFFER_DBG_RDCTL_STATE_RXDMA_ENTRY_CNT_PAR_B_SMASK				0x20000000ull
#define WFR_RXE_BUFFER_DBG_RDCTL_STATE_RXDMA_ENTRY_CNT_B_SHIFT					15
#define WFR_RXE_BUFFER_DBG_RDCTL_STATE_RXDMA_ENTRY_CNT_B_MASK					0x3FFFull
#define WFR_RXE_BUFFER_DBG_RDCTL_STATE_RXDMA_ENTRY_CNT_B_SMASK					0x1FFF8000ull
#define WFR_RXE_BUFFER_DBG_RDCTL_STATE_RXDMA_ENTRY_CNT_PAR_A_SHIFT				14
#define WFR_RXE_BUFFER_DBG_RDCTL_STATE_RXDMA_ENTRY_CNT_PAR_A_MASK				0x1ull
#define WFR_RXE_BUFFER_DBG_RDCTL_STATE_RXDMA_ENTRY_CNT_PAR_A_SMASK				0x4000ull
#define WFR_RXE_BUFFER_DBG_RDCTL_STATE_RXDMA_ENTRY_CNT_A_SHIFT					0
#define WFR_RXE_BUFFER_DBG_RDCTL_STATE_RXDMA_ENTRY_CNT_A_MASK					0x3FFFull
#define WFR_RXE_BUFFER_DBG_RDCTL_STATE_RXDMA_ENTRY_CNT_A_SMASK					0x3FFFull
/*
* Table #72 of 770_RXE_Buffer_Debug_Registers.xml - RXE_BUFFER_DBG_CSRQ_STATE_2
* Debug access to CSRQ state registers.
*/
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_2								(WFR_RXE + 0x000000756200)
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_2_RESETCSR						0x0000000000000000ull
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_2_RBUF_EGRFULL_63_0_SHIFT					0
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_2_RBUF_EGRFULL_63_0_MASK					0xFFFFFFFFFFFFFFFFull
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_2_RBUF_EGRFULL_63_0_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #73 of 770_RXE_Buffer_Debug_Registers.xml - RXE_BUFFER_DBG_CSRQ_STATE_3
* Debug access to CSRQ state registers.
*/
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_3								(WFR_RXE + 0x000000756208)
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_3_RESETCSR						0x0000000000000000ull
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_3_RBUF_EGRFULL_127_64_SHIFT				0
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_3_RBUF_EGRFULL_127_64_MASK				0xFFFFFFFFFFFFFFFFull
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_3_RBUF_EGRFULL_127_64_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #74 of 770_RXE_Buffer_Debug_Registers.xml - RXE_BUFFER_DBG_CSRQ_STATE_4
* Debug access to CSRQ state registers.
*/
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_4								(WFR_RXE + 0x000000756210)
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_4_RESETCSR						0x0000000000000000ull
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_4_RBUF_EGRFULL_159_128_SHIFT				0
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_4_RBUF_EGRFULL_159_128_MASK				0xFFFFFFFFull
#define WFR_RXE_BUFFER_DBG_CSRQ_STATE_4_RBUF_EGRFULL_159_128_SMASK				0xFFFFFFFFull
/*
* Table #75 of 770_RXE_Buffer_Debug_Registers.xml - RXE_BUFFER_DBG_MEM_RD_ECC_ERR
* Debug access to latched memory address incase of debug read ECC 
* errors.
*/
#define WFR_RXE_BUFFER_DBG_MEM_RD_ECC_ERR							(WFR_RXE + 0x000000756300)
#define WFR_RXE_BUFFER_DBG_MEM_RD_ECC_ERR_RESETCSR						0x0000000000000000ull
#define WFR_RXE_BUFFER_DBG_MEM_RD_ECC_ERR_LKUP_DESC_P1_MEM_RD_ECC_ERR_SHIFT			44
#define WFR_RXE_BUFFER_DBG_MEM_RD_ECC_ERR_LKUP_DESC_P1_MEM_RD_ECC_ERR_MASK			0x1ull
#define WFR_RXE_BUFFER_DBG_MEM_RD_ECC_ERR_LKUP_DESC_P1_MEM_RD_ECC_ERR_SMASK			0x100000000000ull
#define WFR_RXE_BUFFER_DBG_MEM_RD_ECC_ERR_LKUP_DESC_P1_MEM_RD_ADDR_SHIFT			32
#define WFR_RXE_BUFFER_DBG_MEM_RD_ECC_ERR_LKUP_DESC_P1_MEM_RD_ADDR_MASK				0xFFFull
#define WFR_RXE_BUFFER_DBG_MEM_RD_ECC_ERR_LKUP_DESC_P1_MEM_RD_ADDR_SMASK			0xFFF00000000ull
#define WFR_RXE_BUFFER_DBG_MEM_RD_ECC_ERR_FL_MEM_RD_ECC_ERR_SHIFT				28
#define WFR_RXE_BUFFER_DBG_MEM_RD_ECC_ERR_FL_MEM_RD_ECC_ERR_MASK				0x1ull
#define WFR_RXE_BUFFER_DBG_MEM_RD_ECC_ERR_FL_MEM_RD_ECC_ERR_SMASK				0x10000000ull
#define WFR_RXE_BUFFER_DBG_MEM_RD_ECC_ERR_FL_MEM_RD_ADDR_SHIFT					16
#define WFR_RXE_BUFFER_DBG_MEM_RD_ECC_ERR_FL_MEM_RD_ADDR_MASK					0xFFFull
#define WFR_RXE_BUFFER_DBG_MEM_RD_ECC_ERR_FL_MEM_RD_ADDR_SMASK					0xFFF0000ull
#define WFR_RXE_BUFFER_DBG_MEM_RD_ECC_ERR_BL_MEM_RD_ECC_ERR_SHIFT				12
#define WFR_RXE_BUFFER_DBG_MEM_RD_ECC_ERR_BL_MEM_RD_ECC_ERR_MASK				0x1ull
#define WFR_RXE_BUFFER_DBG_MEM_RD_ECC_ERR_BL_MEM_RD_ECC_ERR_SMASK				0x1000ull
#define WFR_RXE_BUFFER_DBG_MEM_RD_ECC_ERR_BL_MEM_RD_ADDR_SHIFT					0
#define WFR_RXE_BUFFER_DBG_MEM_RD_ECC_ERR_BL_MEM_RD_ADDR_MASK					0xFFFull
#define WFR_RXE_BUFFER_DBG_MEM_RD_ECC_ERR_BL_MEM_RD_ADDR_SMASK					0xFFFull
/*
* Table #78 of 780_RXE_DMA_Debug_Registers.xml - RXE_DMA_DBG_LAST_GOOD_DMA_ADDR
* Debug access to get address of last packet sent by RxDMA to CCE without any 
* error.
*/
#define WFR_RXE_DMA_DBG_LAST_GOOD_DMA_ADDR							(WFR_RXE + 0x0000007C0000)
#define WFR_RXE_DMA_DBG_LAST_GOOD_DMA_ADDR_RESETCSR						0x0000000000000000ull
#define WFR_RXE_DMA_DBG_LAST_GOOD_DMA_ADDR_LAST_GOOD_DMA_ADDR_SHIFT				0
#define WFR_RXE_DMA_DBG_LAST_GOOD_DMA_ADDR_LAST_GOOD_DMA_ADDR_MASK				0x3FFFFFFFFFFFull
#define WFR_RXE_DMA_DBG_LAST_GOOD_DMA_ADDR_LAST_GOOD_DMA_ADDR_SMASK				0x3FFFFFFFFFFFull
/*
* Table #79 of 780_RXE_DMA_Debug_Registers.xml - RXE_DMA_DBG_LAST_GOOD_DMASIZE
* Debug access to get dmasize and receive headertail value of last packet sent 
* by RxDMA to CCE without any error.
*/
#define WFR_RXE_DMA_DBG_LAST_GOOD_DMASIZE							(WFR_RXE + 0x0000007C0008)
#define WFR_RXE_DMA_DBG_LAST_GOOD_DMASIZE_RESETCSR						0x0000000000000000ull
#define WFR_RXE_DMA_DBG_LAST_GOOD_DMASIZE_LAST_GOOD_DMA_RCVHDRTAIL_SHIFT			39
#define WFR_RXE_DMA_DBG_LAST_GOOD_DMASIZE_LAST_GOOD_DMA_RCVHDRTAIL_MASK				0x1FFFFFFull
#define WFR_RXE_DMA_DBG_LAST_GOOD_DMASIZE_LAST_GOOD_DMA_RCVHDRTAIL_SMASK			0xFFFFFF8000000000ull
#define WFR_RXE_DMA_DBG_LAST_GOOD_DMASIZE_LAST_GOOD_DMA_SIZE_SHIFT				0
#define WFR_RXE_DMA_DBG_LAST_GOOD_DMASIZE_LAST_GOOD_DMA_SIZE_MASK				0xFFull
#define WFR_RXE_DMA_DBG_LAST_GOOD_DMASIZE_LAST_GOOD_DMA_SIZE_SMASK				0xFFull
/*
* Table #80 of 780_RXE_DMA_Debug_Registers.xml - RXE_DMA_DBG_LAST_GOOD_RHF
* Debug access to get receive header flag (RHF) of last packet sent by RxDMA to 
* CCE without any error.
*/
#define WFR_RXE_DMA_DBG_LAST_GOOD_RHF								(WFR_RXE + 0x0000007C0010)
#define WFR_RXE_DMA_DBG_LAST_GOOD_RHF_RESETCSR							0x0000000000000000ull
#define WFR_RXE_DMA_DBG_LAST_GOOD_RHF_LAST_GOOD_DMA_RHF_SHIFT					0
#define WFR_RXE_DMA_DBG_LAST_GOOD_RHF_LAST_GOOD_DMA_RHF_MASK					0xFFFFFFFFFFFFFFFFull
#define WFR_RXE_DMA_DBG_LAST_GOOD_RHF_LAST_GOOD_DMA_RHF_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #81 of 780_RXE_DMA_Debug_Registers.xml - RXE_DMA_DBG_FIRST_BAD_DMA_ADDR
* Debug access to get address of first packet sent by RxDMA to CCE with atleast 
* one error.
*/
#define WFR_RXE_DMA_DBG_FIRST_BAD_DMA_ADDR							(WFR_RXE + 0x0000007C0018)
#define WFR_RXE_DMA_DBG_FIRST_BAD_DMA_ADDR_RESETCSR						0x0000000000000000ull
#define WFR_RXE_DMA_DBG_FIRST_BAD_DMA_ADDR_FIRST_BAD_DMA_ADDR_SHIFT				0
#define WFR_RXE_DMA_DBG_FIRST_BAD_DMA_ADDR_FIRST_BAD_DMA_ADDR_MASK				0x3FFFFFFFFFFFull
#define WFR_RXE_DMA_DBG_FIRST_BAD_DMA_ADDR_FIRST_BAD_DMA_ADDR_SMASK				0x3FFFFFFFFFFFull
/*
* Table #82 of 780_RXE_DMA_Debug_Registers.xml - RXE_DMA_DBG_FIRST_BAD_DMASIZE
* Debug access to get dmasize and receive headertail of first packet sent by 
* RxDMA to CCE with atleast one error.
*/
#define WFR_RXE_DMA_DBG_FIRST_BAD_DMASIZE							(WFR_RXE + 0x0000007C0020)
#define WFR_RXE_DMA_DBG_FIRST_BAD_DMASIZE_RESETCSR						0x0000000000000000ull
#define WFR_RXE_DMA_DBG_FIRST_BAD_DMASIZE_FIRST_BAD_DMA_RCVHDRTAIL_SHIFT			39
#define WFR_RXE_DMA_DBG_FIRST_BAD_DMASIZE_FIRST_BAD_DMA_RCVHDRTAIL_MASK				0x1FFFFFFull
#define WFR_RXE_DMA_DBG_FIRST_BAD_DMASIZE_FIRST_BAD_DMA_RCVHDRTAIL_SMASK			0xFFFFFF8000000000ull
#define WFR_RXE_DMA_DBG_FIRST_BAD_DMASIZE_FIRST_BAD_DMA_SIZE_SHIFT				0
#define WFR_RXE_DMA_DBG_FIRST_BAD_DMASIZE_FIRST_BAD_DMA_SIZE_MASK				0xFFull
#define WFR_RXE_DMA_DBG_FIRST_BAD_DMASIZE_FIRST_BAD_DMA_SIZE_SMASK				0xFFull
/*
* Table #83 of 780_RXE_DMA_Debug_Registers.xml - RXE_DMA_DBG_FIRST_BAD_RHF
* Debug access to get receive header flag (RHF) of first packet sent by RxDMA to 
* CCE with atleast one error.
*/
#define WFR_RXE_DMA_DBG_FIRST_BAD_RHF								(WFR_RXE + 0x0000007C0028)
#define WFR_RXE_DMA_DBG_FIRST_BAD_RHF_RESETCSR							0x0000000000000000ull
#define WFR_RXE_DMA_DBG_FIRST_BAD_RHF_FIRST_BAD_DMA_RHF_SHIFT					0
#define WFR_RXE_DMA_DBG_FIRST_BAD_RHF_FIRST_BAD_DMA_RHF_MASK					0xFFFFFFFFFFFFFFFFull
#define WFR_RXE_DMA_DBG_FIRST_BAD_RHF_FIRST_BAD_DMA_RHF_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #84 of 780_RXE_DMA_Debug_Registers.xml - RXE_DMA_DBG_FSM_HDR_DATA_FIFO
* Debug access to get current fsm states of dmaeq and dmadq module, data 
* available in dwords in the header fifo and data fifo, the occupancy of the 
* fifo inside the CCE in dwords when the rxdma flags atleast one error in RHF or 
* receive error status register.
*/
#define WFR_RXE_DMA_DBG_FSM_HDR_DATA_FIFO							(WFR_RXE + 0x0000007C0030)
#define WFR_RXE_DMA_DBG_FSM_HDR_DATA_FIFO_RESETCSR						0x0000000000080000ull
#define WFR_RXE_DMA_DBG_FSM_HDR_DATA_FIFO_DMADQ_FSM_CS_SHIFT					61
#define WFR_RXE_DMA_DBG_FSM_HDR_DATA_FIFO_DMADQ_FSM_CS_MASK					0x7ull
#define WFR_RXE_DMA_DBG_FSM_HDR_DATA_FIFO_DMADQ_FSM_CS_SMASK					0xE000000000000000ull
#define WFR_RXE_DMA_DBG_FSM_HDR_DATA_FIFO_DP_DQ_DFIFODWCNT_SHIFT				42
#define WFR_RXE_DMA_DBG_FSM_HDR_DATA_FIFO_DP_DQ_DFIFODWCNT_MASK					0x3FFull
#define WFR_RXE_DMA_DBG_FSM_HDR_DATA_FIFO_DP_DQ_DFIFODWCNT_SMASK				0xFFC0000000000ull
#define WFR_RXE_DMA_DBG_FSM_HDR_DATA_FIFO_DP_DQ_HFIFODWCNT_SHIFT				27
#define WFR_RXE_DMA_DBG_FSM_HDR_DATA_FIFO_DP_DQ_HFIFODWCNT_MASK					0x3FFull
#define WFR_RXE_DMA_DBG_FSM_HDR_DATA_FIFO_DP_DQ_HFIFODWCNT_SMASK				0x1FF8000000ull
#define WFR_RXE_DMA_DBG_FSM_HDR_DATA_FIFO_FIFOINCCE_FREE_ENTCNT_SHIFT				15
#define WFR_RXE_DMA_DBG_FSM_HDR_DATA_FIFO_FIFOINCCE_FREE_ENTCNT_MASK				0x3Full
#define WFR_RXE_DMA_DBG_FSM_HDR_DATA_FIFO_FIFOINCCE_FREE_ENTCNT_SMASK				0x1F8000ull
#define WFR_RXE_DMA_DBG_FSM_HDR_DATA_FIFO_DMAEQ_FSM_CS_SHIFT					0
#define WFR_RXE_DMA_DBG_FSM_HDR_DATA_FIFO_DMAEQ_FSM_CS_MASK					0xFull
#define WFR_RXE_DMA_DBG_FSM_HDR_DATA_FIFO_DMAEQ_FSM_CS_SMASK					0xFull
/*
* Table #85 of 780_RXE_DMA_Debug_Registers.xml - RXE_DMA_DBG_TIDFLOWTBL_RCVHDRADDR_RCVHDRTAIL_ECC_ERR_ADDR
* Debug access to get the address captured when the data read from the CSRs 
* rcvhdraddr and rcvhdrtailaddr which are implemented in a memory has an ECC 
* error.
*/
#define WFR_RXE_DMA_DBG_TIDFLOWTBL_RCVHDRADDR_RCVHDRTAIL_ECC_ERR_ADDR				(WFR_RXE + 0x0000007C0038)
#define WFR_RXE_DMA_DBG_TIDFLOWTBL_RCVHDRADDR_RCVHDRTAIL_ECC_ERR_ADDR_RESETCSR			0x0000000000000000ull
#define WFR_RXE_DMA_DBG_TIDFLOWTBL_RCVHDRADDR_RCVHDRTAIL_ECC_ERR_ADDR_TID_FLOW_TBL_ADDR_SHIFT	50
#define WFR_RXE_DMA_DBG_TIDFLOWTBL_RCVHDRADDR_RCVHDRTAIL_ECC_ERR_ADDR_TID_FLOW_TBL_ADDR_MASK	0x3FFFull
#define WFR_RXE_DMA_DBG_TIDFLOWTBL_RCVHDRADDR_RCVHDRTAIL_ECC_ERR_ADDR_TID_FLOW_TBL_ADDR_SMASK	0xFFFC000000000000ull
#define WFR_RXE_DMA_DBG_TIDFLOWTBL_RCVHDRADDR_RCVHDRTAIL_ECC_ERR_ADDR_RCV_HDR_TAIL_ADDR_SHIFT	32
#define WFR_RXE_DMA_DBG_TIDFLOWTBL_RCVHDRADDR_RCVHDRTAIL_ECC_ERR_ADDR_RCV_HDR_TAIL_ADDR_MASK	0x1FFull
#define WFR_RXE_DMA_DBG_TIDFLOWTBL_RCVHDRADDR_RCVHDRTAIL_ECC_ERR_ADDR_RCV_HDR_TAIL_ADDR_SMASK	0x1FF00000000ull
#define WFR_RXE_DMA_DBG_TIDFLOWTBL_RCVHDRADDR_RCVHDRTAIL_ECC_ERR_ADDR_RCV_HDR_ADDR_SHIFT	0
#define WFR_RXE_DMA_DBG_TIDFLOWTBL_RCVHDRADDR_RCVHDRTAIL_ECC_ERR_ADDR_RCV_HDR_ADDR_MASK		0x1FFull
#define WFR_RXE_DMA_DBG_TIDFLOWTBL_RCVHDRADDR_RCVHDRTAIL_ECC_ERR_ADDR_RCV_HDR_ADDR_SMASK	0x1FFull
/*
* Table #88 of 785_RXE_Debug_Registers.xml - RcvDbgCsrInfo
* This CSR is used to log error information in the event of a CSR parity error. 
* This information is only captured when the corresponding error status bit 
* transitions from a 0 to a 1, if the error status bit was already set the 
* information in this CSR is not updated. A write to this register would set the 
* BadWriteAddressErr bit of RcvErrStatus register.
*/
#define WFR_RCV_DBG_CSR_INFO									(WFR_RXE + 0x000000788000)
#define WFR_RCV_DBG_CSR_INFO_RESETCSR								0x0000000000000000ull
#define WFR_RCV_DBG_CSR_INFO_DATA_PARITY_SHIFT							32
#define WFR_RCV_DBG_CSR_INFO_DATA_PARITY_MASK							0x3ull
#define WFR_RCV_DBG_CSR_INFO_DATA_PARITY_SMASK							0x300000000ull
#define WFR_RCV_DBG_CSR_INFO_ADDRESS_PARITY_SHIFT						30
#define WFR_RCV_DBG_CSR_INFO_ADDRESS_PARITY_MASK						0x1ull
#define WFR_RCV_DBG_CSR_INFO_ADDRESS_PARITY_SMASK						0x40000000ull
#define WFR_RCV_DBG_CSR_INFO_ADDRESS_SHIFT							4
#define WFR_RCV_DBG_CSR_INFO_ADDRESS_MASK							0x3FFFFFFull
#define WFR_RCV_DBG_CSR_INFO_ADDRESS_SMASK							0x3FFFFFF0ull
#define WFR_RCV_DBG_CSR_INFO_DATA_ERR_SHIFT							3
#define WFR_RCV_DBG_CSR_INFO_DATA_ERR_MASK							0x1ull
#define WFR_RCV_DBG_CSR_INFO_DATA_ERR_SMASK							0x8ull
#define WFR_RCV_DBG_CSR_INFO_WRITE_BUS_DATA_ERR_SHIFT						2
#define WFR_RCV_DBG_CSR_INFO_WRITE_BUS_DATA_ERR_MASK						0x1ull
#define WFR_RCV_DBG_CSR_INFO_WRITE_BUS_DATA_ERR_SMASK						0x4ull
#define WFR_RCV_DBG_CSR_INFO_WRITE_BUS_ADD_ERR_SHIFT						1
#define WFR_RCV_DBG_CSR_INFO_WRITE_BUS_ADD_ERR_MASK						0x1ull
#define WFR_RCV_DBG_CSR_INFO_WRITE_BUS_ADD_ERR_SMASK						0x2ull
#define WFR_RCV_DBG_CSR_INFO_READ_BUS_ADD_ERR_SHIFT						0
#define WFR_RCV_DBG_CSR_INFO_READ_BUS_ADD_ERR_MASK						0x1ull
#define WFR_RCV_DBG_CSR_INFO_READ_BUS_ADD_ERR_SMASK						0x1ull
/*
* Table #89 of 785_RXE_Debug_Registers.xml - RcvDbgCsrData
* This CSR is used to log error information in the event of a CSR parity error. 
* This information is only captured when the corresponding error status bit 
* transitions from a 0 to a 1, if the error status bit was already set the 
* information in this CSR is not updated. A write to this register would set the 
* BadWriteAddressErr bit of RcvErrStatus register.
*/
#define WFR_RCV_DBG_CSR_DATA									(WFR_RXE + 0x000000788008)
#define WFR_RCV_DBG_CSR_DATA_RESETCSR								0x0000000000000000ull
#define WFR_RCV_DBG_CSR_DATA_DATA_SHIFT								0
#define WFR_RCV_DBG_CSR_DATA_DATA_MASK								0xFFFFFFFFFFFFFFFFull
#define WFR_RCV_DBG_CSR_DATA_DATA_SMASK								0xFFFFFFFFFFFFFFFFull
/*
* Table #90 of 785_RXE_Debug_Registers.xml - RxeDbgReadMiss
* This CSR is used to log error information in the event of a TXE configuration 
* bus read miss error. This information is only captured when the corresponding 
* error status bit transitions from a 0 to a 1, if the error status bit was 
* already set the information in this CSR is not updated. A write to this 
* register would set the BadWriteAddressErr bit of RcvErrStatus 
* register.
*/
#define WFR_RXE_DBG_READ_MISS									(WFR_RXE + 0x000000788010)
#define WFR_RXE_DBG_READ_MISS_RESETCSR								0x0000000000000000ull
#define WFR_RXE_DBG_READ_MISS_ADDRESS_SHIFT							0
#define WFR_RXE_DBG_READ_MISS_ADDRESS_MASK							0x3FFFFFFull
#define WFR_RXE_DBG_READ_MISS_ADDRESS_SMASK							0x3FFFFFFull
/*
* Table #91 of 785_RXE_Debug_Registers.xml - RxeDbgWriteMiss
* This CSR is used to log error information in the event of a RXE configuration 
* bus write miss error. This information is only captured when the corresponding 
* error status bit transitions from a 0 to a 1, if the error status bit was 
* already set the information in this CSR is not updated#%%#. A write to this 
* register would set the BadWriteAddressErr bit of RcvErrStatus 
* register.
*/
#define WFR_RXE_DBG_WRITE_MISS									(WFR_RXE + 0x000000788018)
#define WFR_RXE_DBG_WRITE_MISS_RESETCSR								0x0000000000000000ull
#define WFR_RXE_DBG_WRITE_MISS_ADDRESS_SHIFT							0
#define WFR_RXE_DBG_WRITE_MISS_ADDRESS_MASK							0x3FFFFFFull
#define WFR_RXE_DBG_WRITE_MISS_ADDRESS_SMASK							0x3FFFFFFull
/*
* Table #92 of 785_RXE_Debug_Registers.xml - RxeDbgCtrlReg
* This CSR is used for some control bits if we so requires for test 
* purposes.
*/
#define WFR_RXE_DBG_CTRL_REG									(WFR_RXE + 0x000000788020)
#define WFR_RXE_DBG_CTRL_REG_RESETCSR								0x0000000000000000ull
#define WFR_RXE_DBG_CTRL_REG_DEBUG_CTRL_SHIFT							0
#define WFR_RXE_DBG_CTRL_REG_DEBUG_CTRL_MASK							0xFFFFFFFFFFFFFFFFull
#define WFR_RXE_DBG_CTRL_REG_DEBUG_CTRL_SMASK							0xFFFFFFFFFFFFFFFFull

#endif 		/* DEF_WFR_RXE_SW_DEF */

/*
* -------------------------------------------------------------------
* --                      Intel Proprietary
* --              Copyright (C) 2014 Intel Corporation
* --                    All Rights Reserved
* -------------------------------------------------------------------
* --           Auto-generated by /p/slx/pvesv/wfr_autogen/utils/scripts/i_csrs/i_csrs.pl 
* --  i_csrs.pl Version 1.5 last modified on Wednesday 8/20/14 13:22:12
* --   /p/slx/pvesv/wfr_autogen/utils/scripts/i_csrs/i_csrs.pl -C -S fxr_rx_e2e -o /p/slx/pvesv/fxr_autogen/fxr /p/slx/pvesv/fxr_autogen/Fox_River/xml/300_Memory_Map.xml /p/slx/pvesv/fxr_autogen/Fox_River/xml/332_Memory_Map_RX_E2E.xml  
* --------------------------------------------------------------------
*/

#ifndef DEF_FXR_RX_E2E_SW_DEF
#define DEF_FXR_RX_E2E_SW_DEF

#define FXR_TOP_MAP							0x000000000000
#define FXR_TX_CI_FAST							(FXR_TOP_MAP + 0x000000000000)
#define FXR_RX_CI_FAST							(FXR_TOP_MAP + 0x000000400000)
#define FXR_TX_CI							(FXR_TOP_MAP + 0x000001000000)
#define FXR_TX_OTR							(FXR_TOP_MAP + 0x000001400000)
#define FXR_TX_DMA							(FXR_TOP_MAP + 0x000001800000)
#define FXR_RX_CI							(FXR_TOP_MAP + 0x000002000000)
#define FXR_RX_HP							(FXR_TOP_MAP + 0x000002200000)
#define FXR_RX_E2E							(FXR_TOP_MAP + 0x000002400000)
#define FXR_RX_DMA							(FXR_TOP_MAP + 0x000002600000)
#define FXR_RX_HIARB						(FXR_TOP_MAP + 0x000002800000)
#define FXR_HIFIS							(FXR_TOP_MAP + 0x000003000000)
#define FXR_LOCA							(FXR_TOP_MAP + 0x000003200000)
#define FXR_PCIM							(FXR_TOP_MAP + 0x000003400000)
#define FXR_PMON							(FXR_TOP_MAP + 0x000003500000)
#define FXR_SMA							(FXR_TOP_MAP + 0x000003600000)
#define FXR_LM							(FXR_TOP_MAP + 0x000003700000)
#define FXR_FC							(FXR_TOP_MAP + 0x000003800000)
#define FXR_MNH							(FXR_TOP_MAP + 0x000003880000)
#define FXR_AT							(FXR_TOP_MAP + 0x000004000000)
#define FXR_VNIC_WRAP						(FXR_TOP_MAP + 0x000005000000)
#define FXR_NUM_CONTEXTS						256
#define FXR_NUM_PIDS							4096
#define FXR_MAX_CONTEXT							255
#define FXR_TX_CONTEXT_ENTRIES						128
#define FXR_TX_CONTEXT_MAX						127
#define FXR_RX_CONTEXT_ENTRIES						16
#define FXR_RX_CONTEXT_MAX						15
#define FXR_NUM_SL							32
#define FXR_MAX_SL							31
#define RX_E2E_BASE							0
#define MC0_FLIT_MASK_ADDR						0x1E8
#define MC0_FLIT_MATCH_ADDR						0x2B0
#define MC1_FLIT_MASK_ADDR						0x3C0
#define MC1_FLIT_MATCH_ADDR						0x438
/*
* Table #3 of 332_Memory_Map_RX_E2E.xml - rxe2e_psn_base_addr_tc0_p0
* Host memory base address of psn state for TC0, port 0.
*/
#define FXR_RXE2E_PSN_BASE_ADDR_TC0_P0					(FXR_RX_E2E + 0x000000000000)
#define FXR_RXE2E_PSN_BASE_ADDR_TC0_P0_RESETCSR				0x0000000000000000ull
#define FXR_RXE2E_PSN_BASE_ADDR_TC0_P0_ADDRESS_SHIFT			3
#define FXR_RXE2E_PSN_BASE_ADDR_TC0_P0_ADDRESS_MASK			0x7FFFFFFFFFFFFull
#define FXR_RXE2E_PSN_BASE_ADDR_TC0_P0_ADDRESS_SMASK			0x3FFFFFFFFFFFF8ull
/*
* Table #4 of 332_Memory_Map_RX_E2E.xml - rxe2e_psn_base_addr_tc0_p1
* Host memory base address of psn state for TC0, port 1.
*/
#define FXR_RXE2E_PSN_BASE_ADDR_TC0_P1					(FXR_RX_E2E + 0x000000000008)
#define FXR_RXE2E_PSN_BASE_ADDR_TC0_P1_RESETCSR				0x0000000000000000ull
#define FXR_RXE2E_PSN_BASE_ADDR_TC0_P1_ADDRESS_SHIFT			3
#define FXR_RXE2E_PSN_BASE_ADDR_TC0_P1_ADDRESS_MASK			0x7FFFFFFFFFFFFull
#define FXR_RXE2E_PSN_BASE_ADDR_TC0_P1_ADDRESS_SMASK			0x3FFFFFFFFFFFF8ull
/*
* Table #5 of 332_Memory_Map_RX_E2E.xml - rxe2e_psn_base_addr_tc1_p0
* Host memory base address of psn state for TC1, port 0.
*/
#define FXR_RXE2E_PSN_BASE_ADDR_TC1_P0					(FXR_RX_E2E + 0x000000000010)
#define FXR_RXE2E_PSN_BASE_ADDR_TC1_P0_RESETCSR				0x0000000000000000ull
#define FXR_RXE2E_PSN_BASE_ADDR_TC1_P0_ADDRESS_SHIFT			3
#define FXR_RXE2E_PSN_BASE_ADDR_TC1_P0_ADDRESS_MASK			0x7FFFFFFFFFFFFull
#define FXR_RXE2E_PSN_BASE_ADDR_TC1_P0_ADDRESS_SMASK			0x3FFFFFFFFFFFF8ull
/*
* Table #6 of 332_Memory_Map_RX_E2E.xml - rxe2e_psn_base_addr_tc1_p1
* Host memory base address of psn state for TC1, port 1.
*/
#define FXR_RXE2E_PSN_BASE_ADDR_TC1_P1					(FXR_RX_E2E + 0x000000000018)
#define FXR_RXE2E_PSN_BASE_ADDR_TC1_P1_RESETCSR				0x0000000000000000ull
#define FXR_RXE2E_PSN_BASE_ADDR_TC1_P1_ADDRESS_SHIFT			3
#define FXR_RXE2E_PSN_BASE_ADDR_TC1_P1_ADDRESS_MASK			0x7FFFFFFFFFFFFull
#define FXR_RXE2E_PSN_BASE_ADDR_TC1_P1_ADDRESS_SMASK			0x3FFFFFFFFFFFF8ull
/*
* Table #7 of 332_Memory_Map_RX_E2E.xml - rxe2e_psn_base_addr_tc2_p0
* Host memory base address of psn state for TC2, port 0.
*/
#define FXR_RXE2E_PSN_BASE_ADDR_TC2_P0					(FXR_RX_E2E + 0x000000000020)
#define FXR_RXE2E_PSN_BASE_ADDR_TC2_P0_RESETCSR				0x0000000000000000ull
#define FXR_RXE2E_PSN_BASE_ADDR_TC2_P0_ADDRESS_SHIFT			3
#define FXR_RXE2E_PSN_BASE_ADDR_TC2_P0_ADDRESS_MASK			0x7FFFFFFFFFFFFull
#define FXR_RXE2E_PSN_BASE_ADDR_TC2_P0_ADDRESS_SMASK			0x3FFFFFFFFFFFF8ull
/*
* Table #8 of 332_Memory_Map_RX_E2E.xml - rxe2e_psn_base_addr_tc2_p1
* Host memory base address of psn state for TC2, port 1.
*/
#define FXR_RXE2E_PSN_BASE_ADDR_TC2_P1					(FXR_RX_E2E + 0x000000000028)
#define FXR_RXE2E_PSN_BASE_ADDR_TC2_P1_RESETCSR				0x0000000000000000ull
#define FXR_RXE2E_PSN_BASE_ADDR_TC2_P1_ADDRESS_SHIFT			3
#define FXR_RXE2E_PSN_BASE_ADDR_TC2_P1_ADDRESS_MASK			0x7FFFFFFFFFFFFull
#define FXR_RXE2E_PSN_BASE_ADDR_TC2_P1_ADDRESS_SMASK			0x3FFFFFFFFFFFF8ull
/*
* Table #9 of 332_Memory_Map_RX_E2E.xml - rxe2e_psn_base_addr_tc3_p0
* Host memory base address of psn state for TC3, port 0.
*/
#define FXR_RXE2E_PSN_BASE_ADDR_TC3_P0					(FXR_RX_E2E + 0x000000000030)
#define FXR_RXE2E_PSN_BASE_ADDR_TC3_P0_RESETCSR				0x0000000000000000ull
#define FXR_RXE2E_PSN_BASE_ADDR_TC3_P0_ADDRESS_SHIFT			3
#define FXR_RXE2E_PSN_BASE_ADDR_TC3_P0_ADDRESS_MASK			0x7FFFFFFFFFFFFull
#define FXR_RXE2E_PSN_BASE_ADDR_TC3_P0_ADDRESS_SMASK			0x3FFFFFFFFFFFF8ull
/*
* Table #10 of 332_Memory_Map_RX_E2E.xml - rxe2e_psn_base_addr_tc3_p1
* Host memory base address of psn state for TC3, port 1.
*/
#define FXR_RXE2E_PSN_BASE_ADDR_TC3_P1					(FXR_RX_E2E + 0x000000000038)
#define FXR_RXE2E_PSN_BASE_ADDR_TC3_P1_RESETCSR				0x0000000000000000ull
#define FXR_RXE2E_PSN_BASE_ADDR_TC3_P1_ADDRESS_SHIFT			3
#define FXR_RXE2E_PSN_BASE_ADDR_TC3_P1_ADDRESS_MASK			0x7FFFFFFFFFFFFull
#define FXR_RXE2E_PSN_BASE_ADDR_TC3_P1_ADDRESS_SMASK			0x3FFFFFFFFFFFF8ull
/*
* Table #11 of 332_Memory_Map_RX_E2E.xml - rxe2e_valid_tc_slid_port
* Describes max slid per port, vallid TC's per port and whether to use port in 
* PSN state lookup..
*/
#define FXR_RXE2E_VALID_TC_SLID_PORT					(FXR_RX_E2E + 0x000000000040)
#define FXR_RXE2E_VALID_TC_SLID_PORT_RESETCSR				0x0000000000000000ull
#define FXR_RXE2E_VALID_TC_SLID_PORT_USE_PORT_IN_PSN_STATE_SHIFT	56
#define FXR_RXE2E_VALID_TC_SLID_PORT_USE_PORT_IN_PSN_STATE_MASK		0x1ull
#define FXR_RXE2E_VALID_TC_SLID_PORT_USE_PORT_IN_PSN_STATE_SMASK	0x100000000000000ull
#define FXR_RXE2E_VALID_TC_SLID_PORT_TC_VALID_P1_SHIFT			52
#define FXR_RXE2E_VALID_TC_SLID_PORT_TC_VALID_P1_MASK			0xFull
#define FXR_RXE2E_VALID_TC_SLID_PORT_TC_VALID_P1_SMASK			0xF0000000000000ull
#define FXR_RXE2E_VALID_TC_SLID_PORT_MAX_SLID_P1_SHIFT			28
#define FXR_RXE2E_VALID_TC_SLID_PORT_MAX_SLID_P1_MASK			0xFFFFFFull
#define FXR_RXE2E_VALID_TC_SLID_PORT_MAX_SLID_P1_SMASK			0xFFFFFF0000000ull
#define FXR_RXE2E_VALID_TC_SLID_PORT_TC_VALID_P0_SHIFT			24
#define FXR_RXE2E_VALID_TC_SLID_PORT_TC_VALID_P0_MASK			0xFull
#define FXR_RXE2E_VALID_TC_SLID_PORT_TC_VALID_P0_SMASK			0xF000000ull
#define FXR_RXE2E_VALID_TC_SLID_PORT_MAX_SLID_P0_SHIFT			0
#define FXR_RXE2E_VALID_TC_SLID_PORT_MAX_SLID_P0_MASK			0xFFFFFFull
#define FXR_RXE2E_VALID_TC_SLID_PORT_MAX_SLID_P0_SMASK			0xFFFFFFull
/*
* Table #12 of 332_Memory_Map_RX_E2E.xml - rxe2e_mc0_special_ack_ctl
* MC0 Special Ack Control. Periodically, a special ack is sent carrying the 
* oldest expected unordered psn for source OTR to use in flow control. The 
* special_ack_rate_code controls the frequency of these special acks. Note that 
* a special nack is also sent if a packet was unscorable due to no big 
* scoreboards available or psn offset from expected unordered psn is > big 
* scoreboard size.
*/
#define FXR_RXE2E_MC0_SPECIAL_ACK_CTL					(FXR_RX_E2E + 0x000000000048)
#define FXR_RXE2E_MC0_SPECIAL_ACK_CTL_RESETCSR				0x0000000007FDC0EFull
#define FXR_RXE2E_MC0_SPECIAL_ACK_CTL_BIG_MAX_PSN_DIST_SHIFT		17
#define FXR_RXE2E_MC0_SPECIAL_ACK_CTL_BIG_MAX_PSN_DIST_MASK		0x7FFull
#define FXR_RXE2E_MC0_SPECIAL_ACK_CTL_BIG_MAX_PSN_DIST_SMASK		0xFFE0000ull
#define FXR_RXE2E_MC0_SPECIAL_ACK_CTL_BIG_SPECIAL_ACK_RATE_CODE_SHIFT	14
#define FXR_RXE2E_MC0_SPECIAL_ACK_CTL_BIG_SPECIAL_ACK_RATE_CODE_MASK	0x7ull
#define FXR_RXE2E_MC0_SPECIAL_ACK_CTL_BIG_SPECIAL_ACK_RATE_CODE_SMASK	0x1C000ull
#define FXR_RXE2E_MC0_SPECIAL_ACK_CTL_SMALL_MAX_PSN_DIST_SHIFT		3
#define FXR_RXE2E_MC0_SPECIAL_ACK_CTL_SMALL_MAX_PSN_DIST_MASK		0x7FFull
#define FXR_RXE2E_MC0_SPECIAL_ACK_CTL_SMALL_MAX_PSN_DIST_SMASK		0x3FF8ull
#define FXR_RXE2E_MC0_SPECIAL_ACK_CTL_SMALL_SPECIAL_ACK_RATE_CODE_SHIFT	0
#define FXR_RXE2E_MC0_SPECIAL_ACK_CTL_SMALL_SPECIAL_ACK_RATE_CODE_MASK	0x7ull
#define FXR_RXE2E_MC0_SPECIAL_ACK_CTL_SMALL_SPECIAL_ACK_RATE_CODE_SMASK	0x7ull
/*
* Table #14 of 332_Memory_Map_RX_E2E.xml - rxe2e_mc0_flit_cnt_cam
* This table is used to determine how many MC0 32B header flits to send to RXHP. 
* If the following holds true for a packet:
*/
#define FXR_RXE2E_MC0_FLIT_CNT_CAM					(FXR_RX_E2E + 0x000000000050)
#define FXR_RXE2E_MC0_FLIT_CNT_CAM_RESETCSR				0x0000000000000001ull
#define FXR_RXE2E_MC0_FLIT_CNT_CAM_L2_SHIFT				23
#define FXR_RXE2E_MC0_FLIT_CNT_CAM_L2_MASK				0x3ull
#define FXR_RXE2E_MC0_FLIT_CNT_CAM_L2_SMASK				0x1800000ull
#define FXR_RXE2E_MC0_FLIT_CNT_CAM_L4_SHIFT				15
#define FXR_RXE2E_MC0_FLIT_CNT_CAM_L4_MASK				0xFFull
#define FXR_RXE2E_MC0_FLIT_CNT_CAM_L4_SMASK				0x7F8000ull
#define FXR_RXE2E_MC0_FLIT_CNT_CAM_HD_SHIFT				14
#define FXR_RXE2E_MC0_FLIT_CNT_CAM_HD_MASK				0x1ull
#define FXR_RXE2E_MC0_FLIT_CNT_CAM_HD_SMASK				0x4000ull
#define FXR_RXE2E_MC0_FLIT_CNT_CAM_L2_MASK_SHIFT			12
#define FXR_RXE2E_MC0_FLIT_CNT_CAM_L2_MASK_MASK				0x3ull
#define FXR_RXE2E_MC0_FLIT_CNT_CAM_L2_MASK_SMASK			0x3000ull
#define FXR_RXE2E_MC0_FLIT_CNT_CAM_L4_MASK_SHIFT			4
#define FXR_RXE2E_MC0_FLIT_CNT_CAM_L4_MASK_MASK				0xFFull
#define FXR_RXE2E_MC0_FLIT_CNT_CAM_L4_MASK_SMASK			0xFF0ull
#define FXR_RXE2E_MC0_FLIT_CNT_CAM_HD_MASK_SHIFT			3
#define FXR_RXE2E_MC0_FLIT_CNT_CAM_HD_MASK_MASK				0x1ull
#define FXR_RXE2E_MC0_FLIT_CNT_CAM_HD_MASK_SMASK			0x8ull
#define FXR_RXE2E_MC0_FLIT_CNT_CAM_CNT_M1_SHIFT				0
#define FXR_RXE2E_MC0_FLIT_CNT_CAM_CNT_M1_MASK				0x7ull
#define FXR_RXE2E_MC0_FLIT_CNT_CAM_CNT_M1_SMASK				0x7ull
/*
* Table #15 of 332_Memory_Map_RX_E2E.xml - rxe2e_error_input_mbe
* 
*/
#define FXR_RXE2E_ERROR_INPUT_MBE					(FXR_RX_E2E + 0x000000000150)
#define FXR_RXE2E_ERROR_INPUT_MBE_RESETCSR				0x0000000000000000ull
#define FXR_RXE2E_ERROR_INPUT_MBE_CNT_SHIFT				16
#define FXR_RXE2E_ERROR_INPUT_MBE_CNT_MASK				0xFFull
#define FXR_RXE2E_ERROR_INPUT_MBE_CNT_SMASK				0xFF0000ull
#define FXR_RXE2E_ERROR_INPUT_MBE_MC_SHIFT				15
#define FXR_RXE2E_ERROR_INPUT_MBE_MC_MASK				0x1ull
#define FXR_RXE2E_ERROR_INPUT_MBE_MC_SMASK				0x8000ull
#define FXR_RXE2E_ERROR_INPUT_MBE_TC_SHIFT				13
#define FXR_RXE2E_ERROR_INPUT_MBE_TC_MASK				0x3ull
#define FXR_RXE2E_ERROR_INPUT_MBE_TC_SMASK				0x6000ull
#define FXR_RXE2E_ERROR_INPUT_MBE_QWORD_SHIFT				11
#define FXR_RXE2E_ERROR_INPUT_MBE_QWORD_MASK				0x3ull
#define FXR_RXE2E_ERROR_INPUT_MBE_QWORD_SMASK				0x1800ull
#define FXR_RXE2E_ERROR_INPUT_MBE_ADDRESS_SHIFT				8
#define FXR_RXE2E_ERROR_INPUT_MBE_ADDRESS_MASK				0x7ull
#define FXR_RXE2E_ERROR_INPUT_MBE_ADDRESS_SMASK				0x700ull
#define FXR_RXE2E_ERROR_INPUT_MBE_SYNDROME_SHIFT			0
#define FXR_RXE2E_ERROR_INPUT_MBE_SYNDROME_MASK				0xFFull
#define FXR_RXE2E_ERROR_INPUT_MBE_SYNDROME_SMASK			0xFFull
/*
* Table #16 of 332_Memory_Map_RX_E2E.xml - rxe2e_error_psn_cache_data_mbe
* PSN Cache Data MBE Error register.
*/
#define FXR_RXE2E_ERROR_PSN_CACHE_DATA_MBE				(FXR_RX_E2E + 0x000000000158)
#define FXR_RXE2E_ERROR_PSN_CACHE_DATA_MBE_RESETCSR			0x0000000000000000ull
#define FXR_RXE2E_ERROR_PSN_CACHE_DATA_MBE_CNT_SHIFT			11
#define FXR_RXE2E_ERROR_PSN_CACHE_DATA_MBE_CNT_MASK			0xFFull
#define FXR_RXE2E_ERROR_PSN_CACHE_DATA_MBE_CNT_SMASK			0x7F800ull
#define FXR_RXE2E_ERROR_PSN_CACHE_DATA_MBE_ADDRESS_SHIFT		8
#define FXR_RXE2E_ERROR_PSN_CACHE_DATA_MBE_ADDRESS_MASK			0x7ull
#define FXR_RXE2E_ERROR_PSN_CACHE_DATA_MBE_ADDRESS_SMASK		0x700ull
#define FXR_RXE2E_ERROR_PSN_CACHE_DATA_MBE_SYNDROME_SHIFT		0
#define FXR_RXE2E_ERROR_PSN_CACHE_DATA_MBE_SYNDROME_MASK		0xFFull
#define FXR_RXE2E_ERROR_PSN_CACHE_DATA_MBE_SYNDROME_SMASK		0xFFull
/*
* Table #17 of 332_Memory_Map_RX_E2E.xml - rxe2e_error_psn_cache_tag_mbe
* PSN Cache Tag MBE Error register.
*/
#define FXR_RXE2E_ERROR_PSN_CACHE_TAG_MBE				(FXR_RX_E2E + 0x000000000160)
#define FXR_RXE2E_ERROR_PSN_CACHE_TAG_MBE_RESETCSR			0x0000000000000000ull
#define FXR_RXE2E_ERROR_PSN_CACHE_TAG_MBE_CNT_SHIFT			23
#define FXR_RXE2E_ERROR_PSN_CACHE_TAG_MBE_CNT_MASK			0xFFull
#define FXR_RXE2E_ERROR_PSN_CACHE_TAG_MBE_CNT_SMASK			0x7F800000ull
#define FXR_RXE2E_ERROR_PSN_CACHE_TAG_MBE_ADDRESS_SHIFT			12
#define FXR_RXE2E_ERROR_PSN_CACHE_TAG_MBE_ADDRESS_MASK			0x7FFull
#define FXR_RXE2E_ERROR_PSN_CACHE_TAG_MBE_ADDRESS_SMASK			0x7FF000ull
#define FXR_RXE2E_ERROR_PSN_CACHE_TAG_MBE_WAY_SHIFT			8
#define FXR_RXE2E_ERROR_PSN_CACHE_TAG_MBE_WAY_MASK			0xFull
#define FXR_RXE2E_ERROR_PSN_CACHE_TAG_MBE_WAY_SMASK			0xF00ull
#define FXR_RXE2E_ERROR_PSN_CACHE_TAG_MBE_SYNDROME_SHIFT		0
#define FXR_RXE2E_ERROR_PSN_CACHE_TAG_MBE_SYNDROME_MASK			0xFFull
#define FXR_RXE2E_ERROR_PSN_CACHE_TAG_MBE_SYNDROME_SMASK		0xFFull
/*
* Table #18 of 332_Memory_Map_RX_E2E.xml - rxe2e_error_big_scoreboard_mbe
* Big Scoreboard MBE Error register.
*/
#define FXR_RXE2E_ERROR_BIG_SCOREBOARD_MBE				(FXR_RX_E2E + 0x000000000168)
#define FXR_RXE2E_ERROR_BIG_SCOREBOARD_MBE_RESETCSR			0x0000000000000000ull
#define FXR_RXE2E_ERROR_BIG_SCOREBOARD_MBE_CNT_SHIFT			34
#define FXR_RXE2E_ERROR_BIG_SCOREBOARD_MBE_CNT_MASK			0xFFull
#define FXR_RXE2E_ERROR_BIG_SCOREBOARD_MBE_CNT_SMASK			0x3FC00000000ull
#define FXR_RXE2E_ERROR_BIG_SCOREBOARD_MBE_QWORD_SHIFT			18
#define FXR_RXE2E_ERROR_BIG_SCOREBOARD_MBE_QWORD_MASK			0xFFFFull
#define FXR_RXE2E_ERROR_BIG_SCOREBOARD_MBE_QWORD_SMASK			0x3FFFC0000ull
#define FXR_RXE2E_ERROR_BIG_SCOREBOARD_MBE_ADDRESS_SHIFT		8
#define FXR_RXE2E_ERROR_BIG_SCOREBOARD_MBE_ADDRESS_MASK			0x3FFull
#define FXR_RXE2E_ERROR_BIG_SCOREBOARD_MBE_ADDRESS_SMASK		0x3FF00ull
#define FXR_RXE2E_ERROR_BIG_SCOREBOARD_MBE_SYNDROME_SHIFT		0
#define FXR_RXE2E_ERROR_BIG_SCOREBOARD_MBE_SYNDROME_MASK		0xFFull
#define FXR_RXE2E_ERROR_BIG_SCOREBOARD_MBE_SYNDROME_SMASK		0xFFull
/*
* Table #19 of 332_Memory_Map_RX_E2E.xml - rxe2e_unordered_psn_offset_bin_size
* Unordered PSN Offset bin size.
*/
#define FXR_RXE2E_UNORDERED_PSN_OFFSET_BIN_SIZE				(FXR_RX_E2E + 0x000000000170)
#define FXR_RXE2E_UNORDERED_PSN_OFFSET_BIN_SIZE_RESETCSR		0x0000000000000000ull
#define FXR_RXE2E_UNORDERED_PSN_OFFSET_BIN_SIZE_BIN_SIZE_SHIFT		0
#define FXR_RXE2E_UNORDERED_PSN_OFFSET_BIN_SIZE_BIN_SIZE_MASK		0xFull
#define FXR_RXE2E_UNORDERED_PSN_OFFSET_BIN_SIZE_BIN_SIZE_SMASK		0xFull
/*
* Table #20 of 332_Memory_Map_RX_E2E.xml - rxe2e_unordered_offset
* Unordered PSN Offset bin size.
*/
#define FXR_RXE2E_UNORDERED_OFFSET					(FXR_RX_E2E + 0x000000000178)
#define FXR_RXE2E_UNORDERED_OFFSET_RESETCSR				0x0000000000000000ull
#define FXR_RXE2E_UNORDERED_OFFSET_CNTR_INDEX_SHIFT			0
#define FXR_RXE2E_UNORDERED_OFFSET_CNTR_INDEX_MASK			0x3FFFFFFFFFFFFFull
#define FXR_RXE2E_UNORDERED_OFFSET_CNTR_INDEX_SMASK			0x3FFFFFFFFFFFFFull
/*
* Table #21 of 332_Memory_Map_RX_E2E.xml - rxe2e_perf_unavailable_big_scoreboard
* Count of the number of times the big scoreboard was unavailable.
*/
#define FXR_RXE2E_PERF_UNAVAILABLE_BIG_SCOREBOARD			(FXR_RX_E2E + 0x0000000001C0)
#define FXR_RXE2E_PERF_UNAVAILABLE_BIG_SCOREBOARD_RESETCSR		0x0000000000000000ull
#define FXR_RXE2E_PERF_UNAVAILABLE_BIG_SCOREBOARD_COUNT_SHIFT		0
#define FXR_RXE2E_PERF_UNAVAILABLE_BIG_SCOREBOARD_COUNT_MASK		0x3FFFFFFFFFFFFFull
#define FXR_RXE2E_PERF_UNAVAILABLE_BIG_SCOREBOARD_COUNT_SMASK		0x3FFFFFFFFFFFFFull
/*
* Table #22 of 332_Memory_Map_RX_E2E.xml - rxe2e_perf_beyond_big_scoreboard
* Count of the number of times the offset was beyond big scoreboard 
* size.
*/
#define FXR_RXE2E_PERF_BEYOND_BIG_SCOREBOARD				(FXR_RX_E2E + 0x0000000001C8)
#define FXR_RXE2E_PERF_BEYOND_BIG_SCOREBOARD_RESETCSR			0x0000000000000000ull
#define FXR_RXE2E_PERF_BEYOND_BIG_SCOREBOARD_COUNT_SHIFT		0
#define FXR_RXE2E_PERF_BEYOND_BIG_SCOREBOARD_COUNT_MASK			0x3FFFFFFFFFFFFFull
#define FXR_RXE2E_PERF_BEYOND_BIG_SCOREBOARD_COUNT_SMASK		0x3FFFFFFFFFFFFFull
/*
* Table #23 of 332_Memory_Map_RX_E2E.xml - rxe2e_perf_repeat_packet
* Count of times where packet was already scored. this includes ordered and 
* unordered.
*/
#define FXR_RXE2E_PERF_REPEAT_PACKET					(FXR_RX_E2E + 0x0000000001D0)
#define FXR_RXE2E_PERF_REPEAT_PACKET_RESETCSR				0x0000000000000000ull
#define FXR_RXE2E_PERF_REPEAT_PACKET_COUNT_SHIFT			0
#define FXR_RXE2E_PERF_REPEAT_PACKET_COUNT_MASK				0x3FFFFFFFFFFFFFull
#define FXR_RXE2E_PERF_REPEAT_PACKET_COUNT_SMASK			0x3FFFFFFFFFFFFFull
/*
* Table #24 of 332_Memory_Map_RX_E2E.xml - rxe2e_perf_psn_cache_fill
* Count of times where psn cache needed a fill.
*/
#define FXR_RXE2E_PERF_PSN_CACHE_FILL					(FXR_RX_E2E + 0x0000000001D8)
#define FXR_RXE2E_PERF_PSN_CACHE_FILL_RESETCSR				0x0000000000000000ull
#define FXR_RXE2E_PERF_PSN_CACHE_FILL_COUNT_SHIFT			0
#define FXR_RXE2E_PERF_PSN_CACHE_FILL_COUNT_MASK			0x3FFFFFFFFFFFFFull
#define FXR_RXE2E_PERF_PSN_CACHE_FILL_COUNT_SMASK			0x3FFFFFFFFFFFFFull
/*
* Table #25 of 332_Memory_Map_RX_E2E.xml - rxe2e_perf_crc_fail
* Count of times where packet CRC was bad, includes both MC0 and 
* MC1
*/
#define FXR_RXE2E_PERF_CRC_FAIL						(FXR_RX_E2E + 0x0000000001E0)
#define FXR_RXE2E_PERF_CRC_FAIL_RESETCSR				0x0000000000000000ull
#define FXR_RXE2E_PERF_CRC_FAIL_COUNT_SHIFT				0
#define FXR_RXE2E_PERF_CRC_FAIL_COUNT_MASK				0x3FFFFFFFFFFFFFull
#define FXR_RXE2E_PERF_CRC_FAIL_COUNT_SMASK				0x3FFFFFFFFFFFFFull
/*
* Table #27 of 332_Memory_Map_RX_E2E.xml - rxe2e_mc0_flit_mask_ctrl
* Flit number, tail and valid for the MC0 Flit Mask. There are five of these 
* registers spaced by 40 bytes.
*/
#define FXR_RXE2E_MC0_FLIT_MASK_CTRL					(FXR_RX_E2E + 0x0000000001E8)
#define FXR_RXE2E_MC0_FLIT_MASK_CTRL_RESETCSR				0x0000000000000000ull
#define FXR_RXE2E_MC0_FLIT_MASK_CTRL_FLIT_NUMBER_SHIFT			2
#define FXR_RXE2E_MC0_FLIT_MASK_CTRL_FLIT_NUMBER_MASK			0x7ull
#define FXR_RXE2E_MC0_FLIT_MASK_CTRL_FLIT_NUMBER_SMASK			0x1Cull
#define FXR_RXE2E_MC0_FLIT_MASK_CTRL_VALID_SHIFT			1
#define FXR_RXE2E_MC0_FLIT_MASK_CTRL_VALID_MASK				0x1ull
#define FXR_RXE2E_MC0_FLIT_MASK_CTRL_VALID_SMASK			0x2ull
#define FXR_RXE2E_MC0_FLIT_MASK_CTRL_TAIL_SHIFT				0
#define FXR_RXE2E_MC0_FLIT_MASK_CTRL_TAIL_MASK				0x1ull
#define FXR_RXE2E_MC0_FLIT_MASK_CTRL_TAIL_SMASK				0x1ull
/*
* Table #28 of 332_Memory_Map_RX_E2E.xml - rxe2e_mc0_flit_mask_data
* Data for the masks for mask/match counting of input packets. There are five 
* sets of 4 registers. Each set has the above control register in front of 
* it.
*/
#define FXR_RXE2E_MC0_FLIT_MASK_DATA					(FXR_RX_E2E + 0x0000000001F0)
#define FXR_RXE2E_MC0_FLIT_MASK_DATA_RESETCSR				0x0000000000000000ull
#define FXR_RXE2E_MC0_FLIT_MASK_DATA_DATA_SHIFT				0
#define FXR_RXE2E_MC0_FLIT_MASK_DATA_DATA_MASK				0xFFFFFFFFFFFFFFFFull
#define FXR_RXE2E_MC0_FLIT_MASK_DATA_DATA_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #30 of 332_Memory_Map_RX_E2E.xml - rxe2e_mc0_flit_match_ctrl
* Flit number, tail and valid for the MC0 Flit Match. There are five of these 
* registers spaced by 40 bytes.
*/
#define FXR_RXE2E_MC0_FLIT_MATCH_CTRL					(FXR_RX_E2E + 0x0000000002B0)
#define FXR_RXE2E_MC0_FLIT_MATCH_CTRL_RESETCSR				0x0000000000000000ull
#define FXR_RXE2E_MC0_FLIT_MATCH_CTRL_FLIT_NUMBER_SHIFT			2
#define FXR_RXE2E_MC0_FLIT_MATCH_CTRL_FLIT_NUMBER_MASK			0x7ull
#define FXR_RXE2E_MC0_FLIT_MATCH_CTRL_FLIT_NUMBER_SMASK			0x1Cull
#define FXR_RXE2E_MC0_FLIT_MATCH_CTRL_VALID_SHIFT			1
#define FXR_RXE2E_MC0_FLIT_MATCH_CTRL_VALID_MASK			0x1ull
#define FXR_RXE2E_MC0_FLIT_MATCH_CTRL_VALID_SMASK			0x2ull
#define FXR_RXE2E_MC0_FLIT_MATCH_CTRL_TAIL_SHIFT			0
#define FXR_RXE2E_MC0_FLIT_MATCH_CTRL_TAIL_MASK				0x1ull
#define FXR_RXE2E_MC0_FLIT_MATCH_CTRL_TAIL_SMASK			0x1ull
/*
* Table #31 of 332_Memory_Map_RX_E2E.xml - rxe2e_mc0_flit_match_data
* Data for the match for mask/match counting of input packets. There are five 
* sets of 4 registers. Each set has the above control register in front of 
* it.
*/
#define FXR_RXE2E_MC0_FLIT_MATCH_DATA					(FXR_RX_E2E + 0x0000000002B8)
#define FXR_RXE2E_MC0_FLIT_MATCH_DATA_RESETCSR				0x0000000000000000ull
#define FXR_RXE2E_MC0_FLIT_MATCH_DATA_DATA_SHIFT			0
#define FXR_RXE2E_MC0_FLIT_MATCH_DATA_DATA_MASK				0xFFFFFFFFFFFFFFFFull
#define FXR_RXE2E_MC0_FLIT_MATCH_DATA_DATA_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #32 of 332_Memory_Map_RX_E2E.xml - rxe2e_perf_mc0_trigger_ctrl
* Sub triggers for the performance counters.
*/
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL					(FXR_RX_E2E + 0x000000000378)
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_RESETCSR			0x0000000000000000ull
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_STRT_POLARITY_SHIFT		36
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_STRT_POLARITY_MASK		0x1Full
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_STRT_POLARITY_SMASK		0x1F000000000ull
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_STRT_OR_SHIFT			31
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_STRT_OR_MASK			0x1Full
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_STRT_OR_SMASK			0xF80000000ull
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_STRT_AND_SHIFT			26
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_STRT_AND_MASK			0x1Full
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_STRT_AND_SMASK			0x7C000000ull
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_END_POLARITY_SHIFT		21
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_END_POLARITY_MASK		0x1Full
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_END_POLARITY_SMASK		0x3E00000ull
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_END_OR_SHIFT			16
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_END_OR_MASK			0x1Full
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_END_OR_SMASK			0x1F0000ull
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_END_AND_SHIFT			11
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_END_AND_MASK			0x1Full
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_END_AND_SMASK			0xF800ull
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_END_FORCE_SHIFT			10
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_END_FORCE_MASK			0x1ull
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_END_FORCE_SMASK			0x400ull
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_TRIG_POLARITY_SHIFT		7
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_TRIG_POLARITY_MASK		0x7ull
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_TRIG_POLARITY_SMASK		0x380ull
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_TRIG_OR_SHIFT			4
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_TRIG_OR_MASK			0x7ull
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_TRIG_OR_SMASK			0x70ull
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_TRIG_AND_SHIFT			0
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_TRIG_AND_MASK			0xFull
#define FXR_RXE2E_PERF_MC0_TRIGGER_CTRL_TRIG_AND_SMASK			0xFull
/*
* Table #33 of 332_Memory_Map_RX_E2E.xml - rxe2e_perf_mc0_prog_pkt_cntr
* Allows 4 completely programmable counters of mc0 packets/flits..
*/
#define FXR_RXE2E_PERF_MC0_PROG_PKT_CNTR				(FXR_RX_E2E + 0x0000000003A0)
#define FXR_RXE2E_PERF_MC0_PROG_PKT_CNTR_RESETCSR			0x0000000000000000ull
#define FXR_RXE2E_PERF_MC0_PROG_PKT_CNTR_COUNTER_SHIFT			0
#define FXR_RXE2E_PERF_MC0_PROG_PKT_CNTR_COUNTER_MASK			0x3FFFFFFFFFFFFFull
#define FXR_RXE2E_PERF_MC0_PROG_PKT_CNTR_COUNTER_SMASK			0x3FFFFFFFFFFFFFull
/*
* Table #35 of 332_Memory_Map_RX_E2E.xml - rxe2e_mc1_flit_mask_ctrl
* Flit number, tail and valid for the MC1 Flit Mask. There are three of these 
* registers spaced by 40 bytes.
*/
#define FXR_RXE2E_MC1_FLIT_MASK_CTRL					(FXR_RX_E2E + 0x0000000003C0)
#define FXR_RXE2E_MC1_FLIT_MASK_CTRL_RESETCSR				0x0000000000000000ull
#define FXR_RXE2E_MC1_FLIT_MASK_CTRL_FLIT_NUMBER_SHIFT			2
#define FXR_RXE2E_MC1_FLIT_MASK_CTRL_FLIT_NUMBER_MASK			0x7ull
#define FXR_RXE2E_MC1_FLIT_MASK_CTRL_FLIT_NUMBER_SMASK			0x1Cull
#define FXR_RXE2E_MC1_FLIT_MASK_CTRL_VALID_SHIFT			1
#define FXR_RXE2E_MC1_FLIT_MASK_CTRL_VALID_MASK				0x1ull
#define FXR_RXE2E_MC1_FLIT_MASK_CTRL_VALID_SMASK			0x2ull
#define FXR_RXE2E_MC1_FLIT_MASK_CTRL_TAIL_SHIFT				0
#define FXR_RXE2E_MC1_FLIT_MASK_CTRL_TAIL_MASK				0x1ull
#define FXR_RXE2E_MC1_FLIT_MASK_CTRL_TAIL_SMASK				0x1ull
/*
* Table #36 of 332_Memory_Map_RX_E2E.xml - rxe2e_mc1_flit_mask_data
* Data for the masks for mask/match counting of input packets. There are three 
* sets of 4 registers. Each set has the above the control register in front of 
* it.
*/
#define FXR_RXE2E_MC1_FLIT_MASK_DATA					(FXR_RX_E2E + 0x0000000003C8)
#define FXR_RXE2E_MC1_FLIT_MASK_DATA_RESETCSR				0x0000000000000000ull
#define FXR_RXE2E_MC1_FLIT_MASK_DATA_DATA_SHIFT				0
#define FXR_RXE2E_MC1_FLIT_MASK_DATA_DATA_MASK				0xFFFFFFFFFFFFFFFFull
#define FXR_RXE2E_MC1_FLIT_MASK_DATA_DATA_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #38 of 332_Memory_Map_RX_E2E.xml - rxe2e_mc1_flit_match_ctrl
* Flit number, tail and valid for the MC1 Flit Match. There are three of these 
* registers spaced by 40 bytes.
*/
#define FXR_RXE2E_MC1_FLIT_MATCH_CTRL					(FXR_RX_E2E + 0x000000000438)
#define FXR_RXE2E_MC1_FLIT_MATCH_CTRL_RESETCSR				0x0000000000000000ull
#define FXR_RXE2E_MC1_FLIT_MATCH_CTRL_FLIT_NUMBER_SHIFT			2
#define FXR_RXE2E_MC1_FLIT_MATCH_CTRL_FLIT_NUMBER_MASK			0x7ull
#define FXR_RXE2E_MC1_FLIT_MATCH_CTRL_FLIT_NUMBER_SMASK			0x1Cull
#define FXR_RXE2E_MC1_FLIT_MATCH_CTRL_VALID_SHIFT			1
#define FXR_RXE2E_MC1_FLIT_MATCH_CTRL_VALID_MASK			0x1ull
#define FXR_RXE2E_MC1_FLIT_MATCH_CTRL_VALID_SMASK			0x2ull
#define FXR_RXE2E_MC1_FLIT_MATCH_CTRL_TAIL_SHIFT			0
#define FXR_RXE2E_MC1_FLIT_MATCH_CTRL_TAIL_MASK				0x1ull
#define FXR_RXE2E_MC1_FLIT_MATCH_CTRL_TAIL_SMASK			0x1ull
/*
* Table #39 of 332_Memory_Map_RX_E2E.xml - rxe2e_mc1_flit_match_data
* Data for the match for mask/match counting of input packets. There are three 
* sets of 4 registers. Each set has the above the control register in front of 
* it.
*/
#define FXR_RXE2E_MC1_FLIT_MATCH_DATA					(FXR_RX_E2E + 0x000000000440)
#define FXR_RXE2E_MC1_FLIT_MATCH_DATA_RESETCSR				0x0000000000000000ull
#define FXR_RXE2E_MC1_FLIT_MATCH_DATA_DATA_SHIFT			0
#define FXR_RXE2E_MC1_FLIT_MATCH_DATA_DATA_MASK				0xFFFFFFFFFFFFFFFFull
#define FXR_RXE2E_MC1_FLIT_MATCH_DATA_DATA_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #40 of 332_Memory_Map_RX_E2E.xml - rxe2e_perf_mc1_trigger_ctrl
* Sub triggers for the performance counters.
*/
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL					(FXR_RX_E2E + 0x0000000004B0)
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_RESETCSR			0x0000000000000000ull
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_STRT_POLARITY_SHIFT		25
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_STRT_POLARITY_MASK		0x7ull
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_STRT_POLARITY_SMASK		0xE000000ull
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_STRT_OR_SHIFT			22
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_STRT_OR_MASK			0x7ull
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_STRT_OR_SMASK			0x1C00000ull
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_STRT_AND_SHIFT			19
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_STRT_AND_MASK			0x7ull
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_STRT_AND_SMASK			0x380000ull
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_END_POLARITY_SHIFT		16
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_END_POLARITY_MASK		0x7ull
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_END_POLARITY_SMASK		0x70000ull
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_END_OR_SHIFT			13
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_END_OR_MASK			0x7ull
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_END_OR_SMASK			0xE000ull
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_END_AND_SHIFT			10
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_END_AND_MASK			0x7ull
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_END_AND_SMASK			0x1C00ull
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_END_FORCE_SHIFT			9
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_END_FORCE_MASK			0x1ull
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_END_FORCE_SMASK			0x200ull
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_TRIG_POLARITY_SHIFT		6
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_TRIG_POLARITY_MASK		0x7ull
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_TRIG_POLARITY_SMASK		0x1C0ull
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_TRIG_OR_SHIFT			3
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_TRIG_OR_MASK			0x7ull
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_TRIG_OR_SMASK			0x38ull
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_TRIG_AND_SHIFT			0
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_TRIG_AND_MASK			0x7ull
#define FXR_RXE2E_PERF_MC1_TRIGGER_CTRL_TRIG_AND_SMASK			0x7ull
/*
* Table #41 of 332_Memory_Map_RX_E2E.xml - rxe2e_perf_mc1_prog_pkt_cntr
* Allows 4 completely programmable counters of mc1 packets/flits..
*/
#define FXR_RXE2E_PERF_MC1_PROG_PKT_CNTR				(FXR_RX_E2E + 0x0000000004C8)
#define FXR_RXE2E_PERF_MC1_PROG_PKT_CNTR_RESETCSR			0x0000000000000000ull
#define FXR_RXE2E_PERF_MC1_PROG_PKT_CNTR_COUNTER_SHIFT			0
#define FXR_RXE2E_PERF_MC1_PROG_PKT_CNTR_COUNTER_MASK			0x3FFFFFFFFFFFFFull
#define FXR_RXE2E_PERF_MC1_PROG_PKT_CNTR_COUNTER_SMASK			0x3FFFFFFFFFFFFFull

#endif 		/* DEF_FXR_RX_E2E_SW_DEF */

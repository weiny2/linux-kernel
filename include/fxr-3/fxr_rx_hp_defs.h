/*
* -------------------------------------------------------------------
* --                      Intel Proprietary
* --              Copyright (C) 2014 Intel Corporation
* --                    All Rights Reserved
* -------------------------------------------------------------------
* --           Auto-generated by /p/slx/pvesv/wfr_autogen/utils/scripts/i_csrs/i_csrs.pl 
* --  i_csrs.pl Version 1.5 last modified on Wednesday 8/20/14 13:22:12
* --   /p/slx/pvesv/wfr_autogen/utils/scripts/i_csrs/i_csrs.pl -C -S fxr_rx_hp -o /p/slx/pvesv/fxr_autogen/fxr /p/slx/pvesv/fxr_autogen/Fox_River/xml/300_Memory_Map.xml /p/slx/pvesv/fxr_autogen/Fox_River/xml/331_Memory_Map_RX_HP.xml  
* --------------------------------------------------------------------
*/

#ifndef DEF_FXR_RX_HP_SW_DEF
#define DEF_FXR_RX_HP_SW_DEF

#define FXR_TOP_MAP						0x000000000000
#define FXR_TX_CI_FAST						(FXR_TOP_MAP + 0x000000000000)
#define FXR_RX_CI_FAST						(FXR_TOP_MAP + 0x000000400000)
#define FXR_TX_CI						(FXR_TOP_MAP + 0x000001000000)
#define FXR_TX_OTR						(FXR_TOP_MAP + 0x000001400000)
#define FXR_TX_DMA						(FXR_TOP_MAP + 0x000001800000)
#define FXR_RX_CI						(FXR_TOP_MAP + 0x000002000000)
#define FXR_RX_HP						(FXR_TOP_MAP + 0x000002200000)
#define FXR_RX_E2E						(FXR_TOP_MAP + 0x000002400000)
#define FXR_RX_DMA						(FXR_TOP_MAP + 0x000002600000)
#define FXR_RX_HIARB					(FXR_TOP_MAP + 0x000002800000)
#define FXR_HIFIS						(FXR_TOP_MAP + 0x000003000000)
#define FXR_LOCA						(FXR_TOP_MAP + 0x000003200000)
#define FXR_PCIM						(FXR_TOP_MAP + 0x000003400000)
#define FXR_PMON						(FXR_TOP_MAP + 0x000003500000)
#define FXR_SMA						(FXR_TOP_MAP + 0x000003600000)
#define FXR_LM						(FXR_TOP_MAP + 0x000003700000)
#define FXR_FC						(FXR_TOP_MAP + 0x000003800000)
#define FXR_MNH						(FXR_TOP_MAP + 0x000003880000)
#define FXR_AT						(FXR_TOP_MAP + 0x000004000000)
#define FXR_VNIC_WRAP					(FXR_TOP_MAP + 0x000005000000)
#ifndef FXR_RX_HP
#define FXR_RX_HP						0x000000000000
#endif
#define FXR_NUM_CONTEXTS					256
#define FXR_NUM_PIDS						4096
#define FXR_MAX_CONTEXT						255
#define FXR_TX_CONTEXT_ENTRIES					128
#define FXR_TX_CONTEXT_MAX					127
#define FXR_RX_CONTEXT_ENTRIES					16
#define FXR_RX_CONTEXT_MAX					15
#define FXR_NUM_SL						32
#define FXR_MAX_SL						31
#define RX_HP_BASE						0
#define RX_HP_ENTRY_POINT_CNT					128
#define RX_HP_EP_MSB						127
#define RX_HP_OPCODE_MAP_DEPTH					16
#define RX_HP_MAP_MSB						15
#define RX_HP_CODE_ARRAY_DEPTH					32768
#define RX_HP_CODE_MSB						32767
#define RX_HP_VTPID_CAM_DEPTH					16
#define RX_HP_VTPID_CAM_MSB					15
/*
* Table #3 of 331_Memory_Map_RX_HP.xml - RX_HP_CFG_ENTRY_POINTS
* This is the entry point array. There are 4 entry points in each 64 bit access 
* to this array. The entry point address is determined by the opcode for the 
* header being processed.
*/
#define FXR_RX_HP_CFG_ENTRY_POINTS				(FXR_RX_HP + 0x000000000000)
#define FXR_RX_HP_CFG_ENTRY_POINTS_RESETCSR			0x0000000000000000ull
#define FXR_RX_HP_CFG_ENTRY_POINTS_ENTRY_POINT3_SHIFT		48
#define FXR_RX_HP_CFG_ENTRY_POINTS_ENTRY_POINT3_MASK		0x7FFFull
#define FXR_RX_HP_CFG_ENTRY_POINTS_ENTRY_POINT3_SMASK		0x7FFF000000000000ull
#define FXR_RX_HP_CFG_ENTRY_POINTS_ENTRY_POINT2_SHIFT		32
#define FXR_RX_HP_CFG_ENTRY_POINTS_ENTRY_POINT2_MASK		0x7FFFull
#define FXR_RX_HP_CFG_ENTRY_POINTS_ENTRY_POINT2_SMASK		0x7FFF00000000ull
#define FXR_RX_HP_CFG_ENTRY_POINTS_ENTRY_POINT1_SHIFT		16
#define FXR_RX_HP_CFG_ENTRY_POINTS_ENTRY_POINT1_MASK		0x7FFFull
#define FXR_RX_HP_CFG_ENTRY_POINTS_ENTRY_POINT1_SMASK		0x7FFF0000ull
#define FXR_RX_HP_CFG_ENTRY_POINTS_ENTRY_POINT0_SHIFT		0
#define FXR_RX_HP_CFG_ENTRY_POINTS_ENTRY_POINT0_MASK		0x7FFFull
#define FXR_RX_HP_CFG_ENTRY_POINTS_ENTRY_POINT0_SMASK		0x7FFFull
/*
* Table #4 of 331_Memory_Map_RX_HP.xml - RX_HP_CFG_ENTRY_POINT_MAP
* This is the entry point map array. Each entry contains an opcode and an entry 
* point into the PD Code RAM. If valid, and an opcode match, this entry point 
* overrides the normal Entry Point for that opcode.
*/
#define FXR_RX_HP_CFG_ENTRY_POINT_MAP				(FXR_RX_HP + 0x000000000100)
#define FXR_RX_HP_CFG_ENTRY_POINT_MAP_RESETCSR			0x0000000000000000ull
#define FXR_RX_HP_CFG_ENTRY_POINT_MAP_OPCODE_SHIFT		16
#define FXR_RX_HP_CFG_ENTRY_POINT_MAP_OPCODE_MASK		0x7Full
#define FXR_RX_HP_CFG_ENTRY_POINT_MAP_OPCODE_SMASK		0x7F0000ull
#define FXR_RX_HP_CFG_ENTRY_POINT_MAP_ENTRY_POINT0_SHIFT	1
#define FXR_RX_HP_CFG_ENTRY_POINT_MAP_ENTRY_POINT0_MASK		0x7FFFull
#define FXR_RX_HP_CFG_ENTRY_POINT_MAP_ENTRY_POINT0_SMASK	0xFFFEull
#define FXR_RX_HP_CFG_ENTRY_POINT_MAP_VALID_SHIFT		0
#define FXR_RX_HP_CFG_ENTRY_POINT_MAP_VALID_MASK		0x1ull
#define FXR_RX_HP_CFG_ENTRY_POINT_MAP_VALID_SMASK		0x1ull
/*
* Table #5 of 331_Memory_Map_RX_HP.xml - RX_HP_CFG_VTPID_CAM
* This is the vTPID to TPID remapping CAM. UID is used to find a match in the 
* CAM. If an entry exists with that UID, The TPID in the packet (now considered 
* a vTPID) is added to the TPID_BASE provided in the CAM entry to yield a 
* remapped TPID. If the UID does not match in the CAM, the TPID in the packet is 
* used without any remapping.
*/
#define FXR_RX_HP_CFG_VTPID_CAM					(FXR_RX_HP + 0x000000000180)
#define FXR_RX_HP_CFG_VTPID_CAM_RESETCSR			0x0000000000000000ull
#define FXR_RX_HP_CFG_VTPID_CAM_TPID_BASE_SHIFT			33
#define FXR_RX_HP_CFG_VTPID_CAM_TPID_BASE_MASK			0xFFFull
#define FXR_RX_HP_CFG_VTPID_CAM_TPID_BASE_SMASK			0x1FFE00000000ull
#define FXR_RX_HP_CFG_VTPID_CAM_VALID_SHIFT			32
#define FXR_RX_HP_CFG_VTPID_CAM_VALID_MASK			0x1ull
#define FXR_RX_HP_CFG_VTPID_CAM_VALID_SMASK			0x100000000ull
#define FXR_RX_HP_CFG_VTPID_CAM_UID_SHIFT			0
#define FXR_RX_HP_CFG_VTPID_CAM_UID_MASK			0xFFFFFFFFull
#define FXR_RX_HP_CFG_VTPID_CAM_UID_SMASK			0xFFFFFFFFull
/*
* Table #6 of 331_Memory_Map_RX_HP.xml - RX_HP_DBG_PD_CODE_RAM
* This is the Processor Designer Code RAM. .
*/
#define FXR_RX_HP_DBG_PD_CODE_RAM				(FXR_RX_HP + 0x000000040000)
#define FXR_RX_HP_DBG_PD_CODE_RAM_RESETCSR			0x0000000000000000ull
#define FXR_RX_HP_DBG_PD_CODE_RAM_ECC_SHIFT			32
#define FXR_RX_HP_DBG_PD_CODE_RAM_ECC_MASK			0xFFull
#define FXR_RX_HP_DBG_PD_CODE_RAM_ECC_SMASK			0xFF00000000ull
#define FXR_RX_HP_DBG_PD_CODE_RAM_DATA_SHIFT			0
#define FXR_RX_HP_DBG_PD_CODE_RAM_DATA_MASK			0xFFFFFFFFull
#define FXR_RX_HP_DBG_PD_CODE_RAM_DATA_SMASK			0xFFFFFFFFull
/*
* Table #7 of 331_Memory_Map_RX_HP.xml - RX_HP_DBG_PORTALS_TBL_ADDR
* This is an RX HP debug CSR. It allows indirect access to the Portals Table 
* State. This array can not be written to during normal operation. This register 
* is for debug use only. Note that this register is 288 bits wide. The data for 
* the read or write to this register is contained in the next five 
* CSR's
*/
#define FXR_RX_HP_DBG_PORTALS_TBL_ADDR				(FXR_RX_HP + 0x000000080000)
#define FXR_RX_HP_DBG_PORTALS_TBL_ADDR_RESETCSR			0x0000000000000000ull
#define FXR_RX_HP_DBG_PORTALS_TBL_ADDR_NEW_CMD_SHIFT		17
#define FXR_RX_HP_DBG_PORTALS_TBL_ADDR_NEW_CMD_MASK		0x1ull
#define FXR_RX_HP_DBG_PORTALS_TBL_ADDR_NEW_CMD_SMASK		0x20000ull
#define FXR_RX_HP_DBG_PORTALS_TBL_ADDR_CMD_COMPLETE_SHIFT	16
#define FXR_RX_HP_DBG_PORTALS_TBL_ADDR_CMD_COMPLETE_MASK	0x1ull
#define FXR_RX_HP_DBG_PORTALS_TBL_ADDR_CMD_COMPLETE_SMASK	0x10000ull
#define FXR_RX_HP_DBG_PORTALS_TBL_ADDR_WRITE_CMD_SHIFT		12
#define FXR_RX_HP_DBG_PORTALS_TBL_ADDR_WRITE_CMD_MASK		0x1ull
#define FXR_RX_HP_DBG_PORTALS_TBL_ADDR_WRITE_CMD_SMASK		0x1000ull
#define FXR_RX_HP_DBG_PORTALS_TBL_ADDR_ADDRESS_SHIFT		0
#define FXR_RX_HP_DBG_PORTALS_TBL_ADDR_ADDRESS_MASK		0xFFFull
#define FXR_RX_HP_DBG_PORTALS_TBL_ADDR_ADDRESS_SMASK		0xFFFull
/*
* Table #8 of 331_Memory_Map_RX_HP.xml - RX_HP_DBG_PORTALS_TBL_DATA0
* This is an RX HP debug CSR. This is the data for bits [63:0] of the Portals 
* Table being accessed with the RX_HP_DBG_PORTALS_TBL_ADDR register. The data 
* from this CSR is written to the Table if the write bit is active in that CSR, 
* or this data will contain the read data if the write bit is not 
* active.
*/
#define FXR_RX_HP_DBG_PORTALS_TBL_DATA0				(FXR_RX_HP + 0x000000080008)
#define FXR_RX_HP_DBG_PORTALS_TBL_DATA0_RESETCSR		0x0000000000000000ull
#define FXR_RX_HP_DBG_PORTALS_TBL_DATA0_DATA_SHIFT		0
#define FXR_RX_HP_DBG_PORTALS_TBL_DATA0_DATA_MASK		0xFFFFFFFFFFFFFFFFull
#define FXR_RX_HP_DBG_PORTALS_TBL_DATA0_DATA_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #9 of 331_Memory_Map_RX_HP.xml - RX_HP_DBG_PORTALS_TBL_DATA1
* This is an RX HP debug CSR. This is the data for bits [127:64] of the Portals 
* Table being accessed with the RX_HP_DBG_PORTALS_TBL_ADDR register. The data 
* from this CSR is written to the Table if the write bit is active in that CSR, 
* or this data will contain the read data if the write bit is not 
* active.
*/
#define FXR_RX_HP_DBG_PORTALS_TBL_DATA1				(FXR_RX_HP + 0x000000080010)
#define FXR_RX_HP_DBG_PORTALS_TBL_DATA1_RESETCSR		0x0000000000000000ull
#define FXR_RX_HP_DBG_PORTALS_TBL_DATA1_DATA_SHIFT		0
#define FXR_RX_HP_DBG_PORTALS_TBL_DATA1_DATA_MASK		0xFFFFFFFFFFFFFFFFull
#define FXR_RX_HP_DBG_PORTALS_TBL_DATA1_DATA_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #10 of 331_Memory_Map_RX_HP.xml - RX_HP_DBG_PORTALS_TBL_DATA2
* This is an RX HP debug CSR. This is the data for bits [191:128] of the Portals 
* Table being accessed with the RX_HP_DBG_PORTALS_TBL_ADDR register. The data 
* from this CSR is written to the Table if the write bit is active in that CSR, 
* or this data will contain the read data if the write bit is not 
* active.
*/
#define FXR_RX_HP_DBG_PORTALS_TBL_DATA2				(FXR_RX_HP + 0x000000080018)
#define FXR_RX_HP_DBG_PORTALS_TBL_DATA2_RESETCSR		0x0000000000000000ull
#define FXR_RX_HP_DBG_PORTALS_TBL_DATA2_DATA_SHIFT		0
#define FXR_RX_HP_DBG_PORTALS_TBL_DATA2_DATA_MASK		0xFFFFFFFFFFFFFFFFull
#define FXR_RX_HP_DBG_PORTALS_TBL_DATA2_DATA_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #11 of 331_Memory_Map_RX_HP.xml - RX_HP_DBG_PORTALS_TBL_DATA3
* This is an RX HP debug CSR. This is the data for bits [255:192] of the Portals 
* Table being accessed with the RX_HP_DBG_PORTALS_TBL_ADDR register. The data 
* from this CSR is written to the Table if the write bit is active in that CSR, 
* or this data will contain the read data if the write bit is not 
* active.
*/
#define FXR_RX_HP_DBG_PORTALS_TBL_DATA3				(FXR_RX_HP + 0x000000080020)
#define FXR_RX_HP_DBG_PORTALS_TBL_DATA3_RESETCSR		0x0000000000000000ull
#define FXR_RX_HP_DBG_PORTALS_TBL_DATA3_DATA_SHIFT		0
#define FXR_RX_HP_DBG_PORTALS_TBL_DATA3_DATA_MASK		0xFFFFFFFFFFFFFFFFull
#define FXR_RX_HP_DBG_PORTALS_TBL_DATA3_DATA_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #12 of 331_Memory_Map_RX_HP.xml - RX_HP_DBG_PORTALS_TBL_DATA4
* This is an RX HP debug CSR. This is the data for bits [287:256] of the Portals 
* Table being accessed with the RX_HP_DBG_PORTALS_TBL_ADDR register. This is the 
* ECC data for the 32 bytes being accessed. The data from this CSR is written to 
* the Table if the write bit is active in that CSR, or this data will contain 
* the read data if the write bit is not active.
*/
#define FXR_RX_HP_DBG_PORTALS_TBL_DATA4				(FXR_RX_HP + 0x000000080028)
#define FXR_RX_HP_DBG_PORTALS_TBL_DATA4_RESETCSR		0x0000000000000000ull
#define FXR_RX_HP_DBG_PORTALS_TBL_DATA4_ECC_SHIFT		0
#define FXR_RX_HP_DBG_PORTALS_TBL_DATA4_ECC_MASK		0xFFFFFFFFull
#define FXR_RX_HP_DBG_PORTALS_TBL_DATA4_ECC_SMASK		0xFFFFFFFFull
/*
* Table #13 of 331_Memory_Map_RX_HP.xml - RX_HP_DBG_PORTALS_LIST_ADDR
* This is an RX HP debug CSR. It allows indirect access to the Portals LIST 
* State. This array can not be written to during normal operation. This register 
* is for debug use only. Note that this register is 632 bits wide. The data for 
* the read or write to this register is contained in the next ten 
* CSR's
*/
#define FXR_RX_HP_DBG_PORTALS_LIST_ADDR				(FXR_RX_HP + 0x000000080030)
#define FXR_RX_HP_DBG_PORTALS_LIST_ADDR_RESETCSR		0x0000000000000000ull
#define FXR_RX_HP_DBG_PORTALS_LIST_ADDR_NEW_CMD_SHIFT		17
#define FXR_RX_HP_DBG_PORTALS_LIST_ADDR_NEW_CMD_MASK		0x1ull
#define FXR_RX_HP_DBG_PORTALS_LIST_ADDR_NEW_CMD_SMASK		0x20000ull
#define FXR_RX_HP_DBG_PORTALS_LIST_ADDR_CMD_COMPLETE_SHIFT	16
#define FXR_RX_HP_DBG_PORTALS_LIST_ADDR_CMD_COMPLETE_MASK	0x1ull
#define FXR_RX_HP_DBG_PORTALS_LIST_ADDR_CMD_COMPLETE_SMASK	0x10000ull
#define FXR_RX_HP_DBG_PORTALS_LIST_ADDR_WRITE_CMD_SHIFT		15
#define FXR_RX_HP_DBG_PORTALS_LIST_ADDR_WRITE_CMD_MASK		0x1ull
#define FXR_RX_HP_DBG_PORTALS_LIST_ADDR_WRITE_CMD_SMASK		0x8000ull
#define FXR_RX_HP_DBG_PORTALS_LIST_ADDR_ADDRESS_SHIFT		0
#define FXR_RX_HP_DBG_PORTALS_LIST_ADDR_ADDRESS_MASK		0x7FFFull
#define FXR_RX_HP_DBG_PORTALS_LIST_ADDR_ADDRESS_SMASK		0x7FFFull
/*
* Table #14 of 331_Memory_Map_RX_HP.xml - RX_HP_DBG_PORTALS_LIST_DATA0
* This is an RX HP debug CSR. This is the data for bits [63:0] of the Portals 
* List State being accessed with the RX_HP_DBG_PORTALS_LIST_ADDR register. The 
* data from this CSR is written to the Table if the write bit is active in that 
* CSR, or this data will contain the read data if the write bit is not 
* active.
*/
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA0			(FXR_RX_HP + 0x000000080038)
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA0_RESETCSR		0x0000000000000000ull
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA0_DATA_SHIFT		0
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA0_DATA_MASK		0xFFFFFFFFFFFFFFFFull
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA0_DATA_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #15 of 331_Memory_Map_RX_HP.xml - RX_HP_DBG_PORTALS_LIST_DATA1
* This is an RX HP debug CSR. This is the data for bits [127:64] of the Portals 
* List State being accessed with the RX_HP_DBG_PORTALS_LIST_ADDR register. The 
* data from this CSR is written to the Table if the write bit is active in that 
* CSR, or this data will contain the read data if the write bit is not 
* active.
*/
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA1			(FXR_RX_HP + 0x000000080040)
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA1_RESETCSR		0x0000000000000000ull
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA1_DATA_SHIFT		0
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA1_DATA_MASK		0xFFFFFFFFFFFFFFFFull
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA1_DATA_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #16 of 331_Memory_Map_RX_HP.xml - RX_HP_DBG_PORTALS_LIST_DATA2
* This is an RX HP debug CSR. This is the data for bits [191:128] of the Portals 
* List State being accessed with the RX_HP_DBG_PORTALS_LIST_ADDR register. The 
* data from this CSR is written to the Table if the write bit is active in that 
* CSR, or this data will contain the read data if the write bit is not 
* active.
*/
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA2			(FXR_RX_HP + 0x000000080048)
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA2_RESETCSR		0x0000000000000000ull
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA2_DATA_SHIFT		0
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA2_DATA_MASK		0xFFFFFFFFFFFFFFFFull
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA2_DATA_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #17 of 331_Memory_Map_RX_HP.xml - RX_HP_DBG_PORTALS_LIST_DATA3
* This is an RX HP debug CSR. This is the data for bits [255:192] of the Portals 
* List State being accessed with the RX_HP_DBG_PORTALS_LIST_ADDR register. The 
* data from this CSR is written to the Table if the write bit is active in that 
* CSR, or this data will contain the read data if the write bit is not 
* active.
*/
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA3			(FXR_RX_HP + 0x000000080050)
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA3_RESETCSR		0x0000000000000000ull
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA3_DATA_SHIFT		0
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA3_DATA_MASK		0xFFFFFFFFFFFFFFFFull
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA3_DATA_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #18 of 331_Memory_Map_RX_HP.xml - RX_HP_DBG_PORTALS_LIST_DATA4
* This is an RX HP debug CSR. This is the data for bits [319:256] of the Portals 
* List State being accessed with the RX_HP_DBG_PORTALS_LIST_ADDR register. The 
* data from this CSR is written to the Table if the write bit is active in that 
* CSR, or this data will contain the read data if the write bit is not 
* active.
*/
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA4			(FXR_RX_HP + 0x000000080058)
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA4_RESETCSR		0x0000000000000000ull
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA4_DATA_SHIFT		0
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA4_DATA_MASK		0xFFFFFFFFFFFFFFFFull
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA4_DATA_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #19 of 331_Memory_Map_RX_HP.xml - RX_HP_DBG_PORTALS_LIST_DATA5
* This is an RX HP debug CSR. This is the data for bits [383:320] of the Portals 
* List State being accessed with the RX_HP_DBG_PORTALS_LIST_ADDR register. The 
* data from this CSR is written to the Table if the write bit is active in that 
* CSR, or this data will contain the read data if the write bit is not 
* active.
*/
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA5			(FXR_RX_HP + 0x000000080060)
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA5_RESETCSR		0x0000000000000000ull
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA5_DATA_SHIFT		0
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA5_DATA_MASK		0xFFFFFFFFFFFFFFFFull
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA5_DATA_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #20 of 331_Memory_Map_RX_HP.xml - RX_HP_DBG_PORTALS_LIST_DATA6
* This is an RX HP debug CSR. This is the data for bits [447:384] of the Portals 
* List State being accessed with the RX_HP_DBG_PORTALS_LIST_ADDR register. The 
* data from this CSR is written to the Table if the write bit is active in that 
* CSR, or this data will contain the read data if the write bit is not 
* active.
*/
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA6			(FXR_RX_HP + 0x000000080068)
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA6_RESETCSR		0x0000000000000000ull
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA6_DATA_SHIFT		0
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA6_DATA_MASK		0xFFFFFFFFFFFFFFFFull
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA6_DATA_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #21 of 331_Memory_Map_RX_HP.xml - RX_HP_DBG_PORTALS_LIST_DATA7
* This is an RX HP debug CSR. This is the data for bits [511:448] of the Portals 
* List State being accessed with the RX_HP_DBG_PORTALS_LIST_ADDR register. The 
* data from this CSR is written to the Table if the write bit is active in that 
* CSR, or this data will contain the read data if the write bit is not 
* active.
*/
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA7			(FXR_RX_HP + 0x000000080070)
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA7_RESETCSR		0x0000000000000000ull
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA7_DATA_SHIFT		0
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA7_DATA_MASK		0xFFFFFFFFFFFFFFFFull
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA7_DATA_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #22 of 331_Memory_Map_RX_HP.xml - RX_HP_DBG_PORTALS_LIST_DATA8
* This is an RX HP debug CSR. This is the data for bits [559:512] of the Portals 
* List State and the first 16 bits of ECC being accessed with the 
* RX_HP_DBG_PORTALS_LIST_ADDR register. The data from this CSR is written to the 
* Table if the write bit is active in that CSR, or this data will contain the 
* read data if the write bit is not active.
*/
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA8			(FXR_RX_HP + 0x000000080078)
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA8_RESETCSR		0x0000000000000000ull
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA8_ECC_SHIFT		48
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA8_ECC_MASK		0xFFFFull
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA8_ECC_SMASK		0xFFFF000000000000ull
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA8_DATA_SHIFT		0
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA8_DATA_MASK		0xFFFFFFFFFFFFull
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA8_DATA_SMASK		0xFFFFFFFFFFFFull
/*
* Table #23 of 331_Memory_Map_RX_HP.xml - RX_HP_DBG_PORTALS_LIST_DATA9
* This is an RX HP debug CSR. This is the data for bits [632:576] which are all 
* ECC bits of the Portals List State being accessed with the RX_HP_DBG_PORTALS_LIST_ADDR 
* register. The data from this CSR is written to the Table if the write bit is 
* active in that CSR, or this data will contain the read data if the write bit 
* is not active.
*/
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA9			(FXR_RX_HP + 0x000000080080)
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA9_RESETCSR		0x0000000000000000ull
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA9_DATA_SHIFT		0
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA9_DATA_MASK		0xFFFFFFFFFFFFFFull
#define FXR_RX_HP_DBG_PORTALS_LIST_DATA9_DATA_SMASK		0xFFFFFFFFFFFFFFull
/*
* Table #24 of 331_Memory_Map_RX_HP.xml - RX_HP_ERR_CODE_MBE
* MBE error counts from the PD Code Array. 
*/
#define FXR_RX_HP_ERR_CODE_MBE					(FXR_RX_HP + 0x000000080088)
#define FXR_RX_HP_ERR_CODE_MBE_RESETCSR				0x0000000000000000ull
#define FXR_RX_HP_ERR_CODE_MBE_MBE_CNT_SHIFT			26
#define FXR_RX_HP_ERR_CODE_MBE_MBE_CNT_MASK			0xFFull
#define FXR_RX_HP_ERR_CODE_MBE_MBE_CNT_SMASK			0x3FC000000ull
#define FXR_RX_HP_ERR_CODE_MBE_PD_NUM_SHIFT			23
#define FXR_RX_HP_ERR_CODE_MBE_PD_NUM_MASK			0x7ull
#define FXR_RX_HP_ERR_CODE_MBE_PD_NUM_SMASK			0x3800000ull
#define FXR_RX_HP_ERR_CODE_MBE_ADDRESS_SHIFT			8
#define FXR_RX_HP_ERR_CODE_MBE_ADDRESS_MASK			0x7FFFull
#define FXR_RX_HP_ERR_CODE_MBE_ADDRESS_SMASK			0x7FFF00ull
#define FXR_RX_HP_ERR_CODE_MBE_SYNDROME_SHIFT			0
#define FXR_RX_HP_ERR_CODE_MBE_SYNDROME_MASK			0xFFull
#define FXR_RX_HP_ERR_CODE_MBE_SYNDROME_SMASK			0xFFull

#endif 		/* DEF_FXR_RX_HP_SW_DEF */

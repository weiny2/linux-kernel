/*
* -------------------------------------------------------------------
* --                      Intel Proprietary
* --              Copyright (C) 2014 Intel Corporation
* --                    All Rights Reserved
* -------------------------------------------------------------------
* --           Auto-generated by /p/slx/pvesv/wfr_autogen/utils/scripts/i_csrs/i_csrs.pl 
* --  i_csrs.pl Version 1.5 last modified on Tuesday 7/29/14 09:09:34
* --   /p/slx/pvesv/wfr_autogen/utils/scripts/i_csrs/i_csrs.pl -C -S fxr_pcim -o /p/slx/pvesv/fxr_autogen/fxr /p/slx/pvesv/fxr_autogen/Fox_River/xml/300_Memory_Map.xml /p/slx/pvesv/fxr_autogen/Fox_River/xml/344_Memory_Map_PCIM.xml  
* --------------------------------------------------------------------
*/

#ifndef DEF_FXR_PCIM_SW_DEF
#define DEF_FXR_PCIM_SW_DEF

#define FXR_NUM_CONTEXTS					256
#define FXR_NUM_PIDS						4096
#define FXR_MAX_CONTEXT						255
#define FXR_TX_CONTEXT_ENTRIES					128
#define FXR_TX_CONTEXT_MAX					127
#define FXR_RX_CONTEXT_ENTRIES					16
#define FXR_RX_CONTEXT_MAX					15
#define FXR_NUM_SL						32
#define FXR_MAX_SL						31
#define PCIM_MAX_MSIX_VECTOR					255
#define PCIM_MAX_MSIX_PBA_CSR					3
#define PCIM_KERNEL_OFFSET					0x0
#define PCIM_MSIX_TABLE_OFFSET					0x400
#define PCIM_MSIX_PBA_OFFSET					0x1000
#define PCIM_MSIX_ITR_OFFSET					0x2000
#define PCIM_MSIX_TIMEOUT_OFFSET				0x2800
/*
* Table #3 of 344_Memory_Map_PCIM.xml - PCIM_IntStatus
* Reports interrupt status. Bit i of interrupt register j corresponds to 
* interrupt number 64j + i.
*/
#define FXR_PCIM_INT_STATUS					(FXR_HI_PCIM + 0x000000000000)
#define FXR_PCIM_INT_STATUS_RESETCSR				0x0000000000000000ull
#define FXR_PCIM_INT_STATUS_INT_SHIFT				0
#define FXR_PCIM_INT_STATUS_INT_MASK				0xFFFFFFFFFFFFFFFFull
#define FXR_PCIM_INT_STATUS_INT_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #4 of 344_Memory_Map_PCIM.xml - PCIM_IntMask
* Interrupt mask. Bit i of interrupt register j corresponds to interrupt number 
* 64j + i.
*/
#define FXR_PCIM_INT_MASK					(FXR_HI_PCIM + 0x000000000020)
#define FXR_PCIM_INT_MASK_RESETCSR				0x0000000000000000ull
#define FXR_PCIM_INT_MASK_INT_SHIFT				0
#define FXR_PCIM_INT_MASK_INT_MASK				0xFFFFFFFFFFFFFFFFull
#define FXR_PCIM_INT_MASK_INT_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #5 of 344_Memory_Map_PCIM.xml - PCIM_IntClear
* Interrupt clear. Used to clear interrupts. Each bit that is written as 1 will 
* clear the interrupt source. It will also clear corresponding bit of 
* PCIM_IntBlocked CSR. 
*/
#define FXR_PCIM_INT_CLEAR					(FXR_HI_PCIM + 0x000000000040)
#define FXR_PCIM_INT_CLEAR_RESETCSR				0x0000000000000000ull
#define FXR_PCIM_INT_CLEAR_INT_SHIFT				0
#define FXR_PCIM_INT_CLEAR_INT_MASK				0xFFFFFFFFFFFFFFFFull
#define FXR_PCIM_INT_CLEAR_INT_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #6 of 344_Memory_Map_PCIM.xml - PCIM_IntForce
* Interrupt Force. Used to set interrupts. Each bit that is written as 1 will 
* set the interrupt source. 
*/
#define FXR_PCIM_INT_FORCE					(FXR_HI_PCIM + 0x000000000060)
#define FXR_PCIM_INT_FORCE_RESETCSR				0x0000000000000000ull
#define FXR_PCIM_INT_FORCE_INT_SHIFT				0
#define FXR_PCIM_INT_FORCE_INT_MASK				0xFFFFFFFFFFFFFFFFull
#define FXR_PCIM_INT_FORCE_INT_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #7 of 344_Memory_Map_PCIM.xml - PCIM_IntBlocked
* Interrupt blocked. Reports interrupt blocked status. Bit i of interrupt 
* register j corresponds to interrupt number 64j + i.
*/
#define FXR_PCIM_INT_BLOCKED					(FXR_HI_PCIM + 0x000000000080)
#define FXR_PCIM_INT_BLOCKED_RESETCSR				0x0000000000000000ull
#define FXR_PCIM_INT_BLOCKED_INT_SHIFT				0
#define FXR_PCIM_INT_BLOCKED_INT_MASK				0xFFFFFFFFFFFFFFFFull
#define FXR_PCIM_INT_BLOCKED_INT_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #8 of 344_Memory_Map_PCIM.xml - PCIM_IntMap
* Defined mapping of hardware interrupts to MSI-X interrupt vectors. Vector I of 
* interrupt map register j corresponds to interrupt number 8j+i.
*/
#define FXR_PCIM_INT_MAP					(FXR_HI_PCIM + 0x000000000100)
#define FXR_PCIM_INT_MAP_RESETCSR				0x0000000000000000ull
#define FXR_PCIM_INT_MAP_VECTOR7_SHIFT				56
#define FXR_PCIM_INT_MAP_VECTOR7_MASK				0xFFull
#define FXR_PCIM_INT_MAP_VECTOR7_SMASK				0xFF00000000000000ull
#define FXR_PCIM_INT_MAP_VECTOR6_SHIFT				48
#define FXR_PCIM_INT_MAP_VECTOR6_MASK				0xFFull
#define FXR_PCIM_INT_MAP_VECTOR6_SMASK				0xFF000000000000ull
#define FXR_PCIM_INT_MAP_VECTOR5_SHIFT				40
#define FXR_PCIM_INT_MAP_VECTOR5_MASK				0xFFull
#define FXR_PCIM_INT_MAP_VECTOR5_SMASK				0xFF0000000000ull
#define FXR_PCIM_INT_MAP_VECTOR4_SHIFT				32
#define FXR_PCIM_INT_MAP_VECTOR4_MASK				0xFFull
#define FXR_PCIM_INT_MAP_VECTOR4_SMASK				0xFF00000000ull
#define FXR_PCIM_INT_MAP_VECTOR3_SHIFT				24
#define FXR_PCIM_INT_MAP_VECTOR3_MASK				0xFFull
#define FXR_PCIM_INT_MAP_VECTOR3_SMASK				0xFF000000ull
#define FXR_PCIM_INT_MAP_VECTOR2_SHIFT				16
#define FXR_PCIM_INT_MAP_VECTOR2_MASK				0xFFull
#define FXR_PCIM_INT_MAP_VECTOR2_SMASK				0xFF0000ull
#define FXR_PCIM_INT_MAP_VECTOR1_SHIFT				8
#define FXR_PCIM_INT_MAP_VECTOR1_MASK				0xFFull
#define FXR_PCIM_INT_MAP_VECTOR1_SMASK				0xFF00ull
#define FXR_PCIM_INT_MAP_VECTOR0_SHIFT				0
#define FXR_PCIM_INT_MAP_VECTOR0_MASK				0xFFull
#define FXR_PCIM_INT_MAP_VECTOR0_SMASK				0xFFull
/*
* Table #9 of 344_Memory_Map_PCIM.xml - PCIM_IntCtl
* Interrupt Control. Control bits the affect behavior of interrupt
*/
#define FXR_PCIM_INT_CTL					(FXR_HI_PCIM + 0x000000000200)
#define FXR_PCIM_INT_CTL_RESETCSR				0x0000000000000000ull
#define FXR_PCIM_INT_CTL_AUTO_CLEAR_SHIFT			0
#define FXR_PCIM_INT_CTL_AUTO_CLEAR_MASK			0x1ull
#define FXR_PCIM_INT_CTL_AUTO_CLEAR_SMASK			0x1ull
/*
* Table #10 of 344_Memory_Map_PCIM.xml - PCIM_MsixTable_Addr
* The MSI-X table contains two CSRs per MSI-X vector. Host software programs 
* these CSRs to define the 64-bit host memory address and up to 32 bits of data 
* value used for interrupt delivery for interrupts mapped to that MSI-X vector. 
* The layout of the two CSRs is:
*/
#define FXR_PCIM_MSIX_TABLE_ADDR				(FXR_HI_PCIM + 0x000000000400)
#define FXR_PCIM_MSIX_TABLE_ADDR_RESETCSR			0x0000000000000000ull
#define FXR_PCIM_MSIX_TABLE_ADDR_MSG_UPPER_ADDR_SHIFT		32
#define FXR_PCIM_MSIX_TABLE_ADDR_MSG_UPPER_ADDR_MASK		0xFFFFFFFFull
#define FXR_PCIM_MSIX_TABLE_ADDR_MSG_UPPER_ADDR_SMASK		0xFFFFFFFF00000000ull
#define FXR_PCIM_MSIX_TABLE_ADDR_MSG_LOWER_ADDR_SHIFT		2
#define FXR_PCIM_MSIX_TABLE_ADDR_MSG_LOWER_ADDR_MASK		0x3FFFFFFFull
#define FXR_PCIM_MSIX_TABLE_ADDR_MSG_LOWER_ADDR_SMASK		0xFFFFFFFCull
#define FXR_PCIM_MSIX_TABLE_ADDR_MSG_LOWER_ADDR_DW_SHIFT	0
#define FXR_PCIM_MSIX_TABLE_ADDR_MSG_LOWER_ADDR_DW_MASK		0x3ull
#define FXR_PCIM_MSIX_TABLE_ADDR_MSG_LOWER_ADDR_DW_SMASK	0x3ull
/*
* Table #11 of 344_Memory_Map_PCIM.xml - PCIM_MsixTable_DataCtl
* This register contains Data and Vector Control configured by host software. 
* 
*/
#define FXR_PCIM_MSIX_TABLE_DATA_CTL				(FXR_HI_PCIM + 0x000000000C00)
#define FXR_PCIM_MSIX_TABLE_DATA_CTL_RESETCSR			0x0000000000000001ull
#define FXR_PCIM_MSIX_TABLE_DATA_CTL_MSG_DATA_SHIFT		32
#define FXR_PCIM_MSIX_TABLE_DATA_CTL_MSG_DATA_MASK		0xFFFFFFFFull
#define FXR_PCIM_MSIX_TABLE_DATA_CTL_MSG_DATA_SMASK		0xFFFFFFFF00000000ull
#define FXR_PCIM_MSIX_TABLE_DATA_CTL_MASK_SHIFT			0
#define FXR_PCIM_MSIX_TABLE_DATA_CTL_MASK_MASK			0x1ull
#define FXR_PCIM_MSIX_TABLE_DATA_CTL_MASK_SMASK			0x1ull
/*
* Table #12 of 344_Memory_Map_PCIM.xml - PCIM_MsixPba
* The Pending Bit Array (PBA) contains 1 bit for each MSI-X vector. This is a 
* total of 256 bits which
*/
#define FXR_PCIM_MSIX_PBA					(FXR_HI_PCIM + 0x000000001400)
#define FXR_PCIM_MSIX_PBA_RESETCSR				0x0000000000000000ull
#define FXR_PCIM_MSIX_PBA_INT_SHIFT				0
#define FXR_PCIM_MSIX_PBA_INT_MASK				0xFFFFFFFFFFFFFFFFull
#define FXR_PCIM_MSIX_PBA_INT_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #13 of 344_Memory_Map_PCIM.xml - PCIM_Msix_ITR
* Interrupt throttling (ITR) is a mechanism that guarantees a minimum gap 
* between two consecutive interrupts. One ITR counter is implemented per MSI-X 
* entry.
*/
#define FXR_PCIM_MSIX_ITR					(FXR_HI_PCIM + 0x000000002000)
#define FXR_PCIM_MSIX_ITR_RESETCSR				0x0000000000000000ull
#define FXR_PCIM_MSIX_ITR_EXPIRED_SHIFT				13
#define FXR_PCIM_MSIX_ITR_EXPIRED_MASK				0x1ull
#define FXR_PCIM_MSIX_ITR_EXPIRED_SMASK				0x2000ull
#define FXR_PCIM_MSIX_ITR_EVENT_FLAG_SHIFT			12
#define FXR_PCIM_MSIX_ITR_EVENT_FLAG_MASK			0x1ull
#define FXR_PCIM_MSIX_ITR_EVENT_FLAG_SMASK			0x1000ull
#define FXR_PCIM_MSIX_ITR_TIME_SHIFT				1
#define FXR_PCIM_MSIX_ITR_TIME_MASK				0x7FFull
#define FXR_PCIM_MSIX_ITR_TIME_SMASK				0xFFEull
#define FXR_PCIM_MSIX_ITR_ENABLE_SHIFT				0
#define FXR_PCIM_MSIX_ITR_ENABLE_MASK				0x1ull
#define FXR_PCIM_MSIX_ITR_ENABLE_SMASK				0x1ull
/*
* Table #14 of 344_Memory_Map_PCIM.xml - PCIM_Msix_Timeout
* Tracks whether interrupt has been processed by the host in the maximum 
* allocated time. One timeout counter is implemented per MSI-X 
* entry.
*/
#define FXR_PCIM_MSIX_TIMEOUT					(FXR_HI_PCIM + 0x000000002800)
#define FXR_PCIM_MSIX_TIMEOUT_RESETCSR				0x0000000000000000ull
#define FXR_PCIM_MSIX_TIMEOUT_EXPIRED_SHIFT			13
#define FXR_PCIM_MSIX_TIMEOUT_EXPIRED_MASK			0x1ull
#define FXR_PCIM_MSIX_TIMEOUT_EXPIRED_SMASK			0x2000ull
#define FXR_PCIM_MSIX_TIMEOUT_EVENT_FLAG_SHIFT			12
#define FXR_PCIM_MSIX_TIMEOUT_EVENT_FLAG_MASK			0x1ull
#define FXR_PCIM_MSIX_TIMEOUT_EVENT_FLAG_SMASK			0x1000ull
#define FXR_PCIM_MSIX_TIMEOUT_TIME_SHIFT			1
#define FXR_PCIM_MSIX_TIMEOUT_TIME_MASK				0x7FFull
#define FXR_PCIM_MSIX_TIMEOUT_TIME_SMASK			0xFFEull
#define FXR_PCIM_MSIX_TIMEOUT_ENABLE_SHIFT			0
#define FXR_PCIM_MSIX_TIMEOUT_ENABLE_MASK			0x1ull
#define FXR_PCIM_MSIX_TIMEOUT_ENABLE_SMASK			0x1ull

#endif 		/* DEF_FXR_PCIM_SW_DEF */

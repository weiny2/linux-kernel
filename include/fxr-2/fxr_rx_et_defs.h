/*
* -------------------------------------------------------------------
* --                      Intel Proprietary
* --              Copyright (C) 2014 Intel Corporation
* --                    All Rights Reserved
* -------------------------------------------------------------------
* --           Auto-generated by /p/slx/pvesv/wfr_autogen/utils/scripts/i_csrs/i_csrs.pl 
* --  i_csrs.pl Version 1.5 last modified on Tuesday 7/29/14 09:09:34
* --   /p/slx/pvesv/wfr_autogen/utils/scripts/i_csrs/i_csrs.pl -C -S fxr_rx_et -o /p/slx/pvesv/fxr_autogen/fxr /p/slx/pvesv/fxr_autogen/Fox_River/xml/300_Memory_Map.xml /p/slx/pvesv/fxr_autogen/Fox_River/xml/335_Memory_Map_RX_ET.xml  
* --------------------------------------------------------------------
*/

#ifndef DEF_FXR_RX_ET_SW_DEF
#define DEF_FXR_RX_ET_SW_DEF

#define FXR_NUM_CONTEXTS				256
#define FXR_NUM_PIDS					4096
#define FXR_MAX_CONTEXT					255
#define FXR_TX_CONTEXT_ENTRIES				128
#define FXR_TX_CONTEXT_MAX				127
#define FXR_RX_CONTEXT_ENTRIES				16
#define FXR_RX_CONTEXT_MAX				15
#define FXR_NUM_SL					32
#define FXR_MAX_SL					31
#define RX_EQ_BASE					0
#define RX_EQ_DESC_CACHE_DEPTH				4096
#define RX_EQ_D_CACHE_MBE				4095
#define RX_EQ_TRIG_STATE_DEPTH				1024
#define RX_EQ_TR_CACHE_MBE				1023
/*
* Table #3 of 335_Memory_Map_RX_ET.xml - RX_EQ_CSR1
* This is an OTR CSR.
*/
#define FXR_RX_EQ_CSR1					(FXR_RX_EQ_CSRS + 0x000000000000)
#define FXR_RX_EQ_CSR1_RESETCSR				0x0000000000000000ull
#define FXR_RX_EQ_CSR1_TEST_SHIFT			0
#define FXR_RX_EQ_CSR1_TEST_MASK			0xFFFFFFFFFFFFFFFFull
#define FXR_RX_EQ_CSR1_TEST_SMASK			0xFFFFFFFFFFFFFFFFull
/*
* Table #4 of 335_Memory_Map_RX_ET.xml - RX_EQ_DESC_CACHE_ADDR
* This is an RX EQ debug CSR. It allows indirect access to the EQ Descriptor 
* Cache. This array can not be written to during normal operation. This register 
* is for debug use only. Note that this register is 144 bits wide. The data for 
* the read or write to this register is contained in the next three 
* CSR's
*/
#define FXR_RX_EQ_DESC_CACHE_ADDR			(FXR_RX_EQ_CSRS + 0x000000000008)
#define FXR_RX_EQ_DESC_CACHE_ADDR_RESETCSR		0x0000000000000000ull
#define FXR_RX_EQ_DESC_CACHE_ADDR_NEW_CMD_SHIFT		17
#define FXR_RX_EQ_DESC_CACHE_ADDR_NEW_CMD_MASK		0x1ull
#define FXR_RX_EQ_DESC_CACHE_ADDR_NEW_CMD_SMASK		0x20000ull
#define FXR_RX_EQ_DESC_CACHE_ADDR_CMD_COMPLETE_SHIFT	16
#define FXR_RX_EQ_DESC_CACHE_ADDR_CMD_COMPLETE_MASK	0x1ull
#define FXR_RX_EQ_DESC_CACHE_ADDR_CMD_COMPLETE_SMASK	0x10000ull
#define FXR_RX_EQ_DESC_CACHE_ADDR_WRITE_CMD_SHIFT	12
#define FXR_RX_EQ_DESC_CACHE_ADDR_WRITE_CMD_MASK	0x1ull
#define FXR_RX_EQ_DESC_CACHE_ADDR_WRITE_CMD_SMASK	0x1000ull
#define FXR_RX_EQ_DESC_CACHE_ADDR_ADDRESS_SHIFT		0
#define FXR_RX_EQ_DESC_CACHE_ADDR_ADDRESS_MASK		0xFFFull
#define FXR_RX_EQ_DESC_CACHE_ADDR_ADDRESS_SMASK		0xFFFull
/*
* Table #5 of 335_Memory_Map_RX_ET.xml - RX_EQ_DBG_DESC_DATA0
* This is an RX EQ debug CSR. This is the data for bits [63:0] of the RX EQ 
* Descriptor Cache being accessed with the RX_EQ_DESC_CACHE_ADDR register. The 
* data from this CSR is written to the cache if the write bit is active in that 
* CSR, or this CSR will contain the read data if the write bit is not 
* active.
*/
#define FXR_RX_EQ_DBG_DESC_DATA0			(FXR_RX_EQ_CSRS + 0x000000000010)
#define FXR_RX_EQ_DBG_DESC_DATA0_RESETCSR		0x0000000000000000ull
#define FXR_RX_EQ_DBG_DESC_DATA0_DATA_SHIFT		0
#define FXR_RX_EQ_DBG_DESC_DATA0_DATA_MASK		0xFFFFFFFFFFFFFFFFull
#define FXR_RX_EQ_DBG_DESC_DATA0_DATA_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #6 of 335_Memory_Map_RX_ET.xml - RX_EQ_DBG_DESC_DATA1
* This is an RX EQ debug CSR. This is the data for bits [127:64] of the RX EQ 
* Descriptor Cache being accessed with the RX_EQ_DESC_CACHE_ADDR register. The 
* data from this CSR is written to the cache if the write bit is active in that 
* CSR, or this CSR will contain the read data if the write bit is not 
* active.
*/
#define FXR_RX_EQ_DBG_DESC_DATA1			(FXR_RX_EQ_CSRS + 0x000000000018)
#define FXR_RX_EQ_DBG_DESC_DATA1_RESETCSR		0x0000000000000000ull
#define FXR_RX_EQ_DBG_DESC_DATA1_DATA_SHIFT		0
#define FXR_RX_EQ_DBG_DESC_DATA1_DATA_MASK		0xFFFFFFFFFFFFFFFFull
#define FXR_RX_EQ_DBG_DESC_DATA1_DATA_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #7 of 335_Memory_Map_RX_ET.xml - RX_EQ_DBG_DESC_DATA2
* This is an RX EQ debug CSR. This is the data for bits [143:128] of the RX EQ 
* Descriptor Cache being accessed with the RX_EQ_DESC_CACHE_ADDR register. This 
* is the ECC for the data being accessed. The data from this CSR is written to 
* the cache if the write bit is active in that CSR, or this CSR will contain the 
* read data if the write bit is not active.
*/
#define FXR_RX_EQ_DBG_DESC_DATA2			(FXR_RX_EQ_CSRS + 0x000000000020)
#define FXR_RX_EQ_DBG_DESC_DATA2_RESETCSR		0x0000000000000000ull
#define FXR_RX_EQ_DBG_DESC_DATA2_ECC_SHIFT		0
#define FXR_RX_EQ_DBG_DESC_DATA2_ECC_MASK		0xFFFFull
#define FXR_RX_EQ_DBG_DESC_DATA2_ECC_SMASK		0xFFFFull
/*
* Table #8 of 335_Memory_Map_RX_ET.xml - RX_EQ_TRIG_STATE_ADDR
* This is an RX EQ debug CSR. It allows indirect access to the Triggered State 
* Cache. This array can not be written to during normal operation. This register 
* is for debug use only. Note that this register is 288 bits wide. The data for 
* the read or write to this register is contained in the next five 
* CSR's
*/
#define FXR_RX_EQ_TRIG_STATE_ADDR			(FXR_RX_EQ_CSRS + 0x000000000028)
#define FXR_RX_EQ_TRIG_STATE_ADDR_RESETCSR		0x0000000000000000ull
#define FXR_RX_EQ_TRIG_STATE_ADDR_NEW_CMD_SHIFT		17
#define FXR_RX_EQ_TRIG_STATE_ADDR_NEW_CMD_MASK		0x1ull
#define FXR_RX_EQ_TRIG_STATE_ADDR_NEW_CMD_SMASK		0x20000ull
#define FXR_RX_EQ_TRIG_STATE_ADDR_CMD_COMPLETE_SHIFT	16
#define FXR_RX_EQ_TRIG_STATE_ADDR_CMD_COMPLETE_MASK	0x1ull
#define FXR_RX_EQ_TRIG_STATE_ADDR_CMD_COMPLETE_SMASK	0x10000ull
#define FXR_RX_EQ_TRIG_STATE_ADDR_WRITE_CMD_SHIFT	10
#define FXR_RX_EQ_TRIG_STATE_ADDR_WRITE_CMD_MASK	0x1ull
#define FXR_RX_EQ_TRIG_STATE_ADDR_WRITE_CMD_SMASK	0x400ull
#define FXR_RX_EQ_TRIG_STATE_ADDR_ADDRESS_SHIFT		0
#define FXR_RX_EQ_TRIG_STATE_ADDR_ADDRESS_MASK		0x3FFull
#define FXR_RX_EQ_TRIG_STATE_ADDR_ADDRESS_SMASK		0x3FFull
/*
* Table #9 of 335_Memory_Map_RX_ET.xml - RX_EQ_DBG_TRIG_DATA0
* This is an RX EQ debug CSR. This is the data for bits [63:0] of the RX 
* Triggered State Cache being accessed with the RX_EQ_TRIG_STATE_ADDR register. 
* The data from this CSR is written to the cache if the write bit is active in 
* that CSR, or this CSR will contain the read data if the write bit is not 
* active.
*/
#define FXR_RX_EQ_DBG_TRIG_DATA0			(FXR_RX_EQ_CSRS + 0x000000000030)
#define FXR_RX_EQ_DBG_TRIG_DATA0_RESETCSR		0x0000000000000000ull
#define FXR_RX_EQ_DBG_TRIG_DATA0_DATA_SHIFT		0
#define FXR_RX_EQ_DBG_TRIG_DATA0_DATA_MASK		0xFFFFFFFFFFFFFFFFull
#define FXR_RX_EQ_DBG_TRIG_DATA0_DATA_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #10 of 335_Memory_Map_RX_ET.xml - RX_EQ_DBG_TRIG_DATA1
* This is an RX EQ debug CSR. This is the data for bits [127:64] of the RX 
* Triggered State Cache being accessed with the RX_EQ_TRIG_STATE_ADDR register. 
* The data from this CSR is written to the cache if the write bit is active in 
* that CSR, or this CSR will contain the read data if the write bit is not 
* active.
*/
#define FXR_RX_EQ_DBG_TRIG_DATA1			(FXR_RX_EQ_CSRS + 0x000000000038)
#define FXR_RX_EQ_DBG_TRIG_DATA1_RESETCSR		0x0000000000000000ull
#define FXR_RX_EQ_DBG_TRIG_DATA1_DATA_SHIFT		0
#define FXR_RX_EQ_DBG_TRIG_DATA1_DATA_MASK		0xFFFFFFFFFFFFFFFFull
#define FXR_RX_EQ_DBG_TRIG_DATA1_DATA_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #11 of 335_Memory_Map_RX_ET.xml - RX_EQ_DBG_TRIG_DATA2
* This is an RX EQ debug CSR. This is the data for bits [191:128] of the RX 
* Triggered State Cache being accessed with the RX_EQ_TRIG_STATE_ADDR register. 
* The data from this CSR is written to the cache if the write bit is active in 
* that CSR, or this CSR will contain the read data if the write bit is not 
* active.
*/
#define FXR_RX_EQ_DBG_TRIG_DATA2			(FXR_RX_EQ_CSRS + 0x000000000040)
#define FXR_RX_EQ_DBG_TRIG_DATA2_RESETCSR		0x0000000000000000ull
#define FXR_RX_EQ_DBG_TRIG_DATA2_DATA_SHIFT		0
#define FXR_RX_EQ_DBG_TRIG_DATA2_DATA_MASK		0xFFFFFFFFFFFFFFFFull
#define FXR_RX_EQ_DBG_TRIG_DATA2_DATA_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #12 of 335_Memory_Map_RX_ET.xml - RX_EQ_DBG_TRIG_DATA3
* This is an RX EQ debug CSR. This is the data for bits [255:192] of the RX 
* Triggered State Cache being accessed with the RX_EQ_TRIG_STATE_ADDR register. 
* The data from this CSR is written to the cache if the write bit is active in 
* that CSR, or this CSR will contain the read data if the write bit is not 
* active.
*/
#define FXR_RX_EQ_DBG_TRIG_DATA3			(FXR_RX_EQ_CSRS + 0x000000000048)
#define FXR_RX_EQ_DBG_TRIG_DATA3_RESETCSR		0x0000000000000000ull
#define FXR_RX_EQ_DBG_TRIG_DATA3_DATA_SHIFT		0
#define FXR_RX_EQ_DBG_TRIG_DATA3_DATA_MASK		0xFFFFFFFFFFFFFFFFull
#define FXR_RX_EQ_DBG_TRIG_DATA3_DATA_SMASK		0xFFFFFFFFFFFFFFFFull
/*
* Table #13 of 335_Memory_Map_RX_ET.xml - RX_EQ_DBG_TRIG_DATA4
* This is an RX EQ debug CSR. This is the data for bits [287:256] of the RX 
* Triggered State Cache being accessed with the RX_EQ_TRIG_STATE_ADDR register. 
* This is the ECC for the data being accessed. The data from this CSR is written 
* to the cache if the write bit is active in that CSR, or this CSR will contain 
* the read data if the write bit is not active.
*/
#define FXR_RX_EQ_DBG_TRIG_DATA4			(FXR_RX_EQ_CSRS + 0x000000000050)
#define FXR_RX_EQ_DBG_TRIG_DATA4_RESETCSR		0x0000000000000000ull
#define FXR_RX_EQ_DBG_TRIG_DATA4_ECC_SHIFT		0
#define FXR_RX_EQ_DBG_TRIG_DATA4_ECC_MASK		0xFFFFFFFFull
#define FXR_RX_EQ_DBG_TRIG_DATA4_ECC_SMASK		0xFFFFFFFFull
/*
* Table #14 of 335_Memory_Map_RX_ET.xml - RX_EQ_ERR_DESC_MBE
* MBE error counts from the EQ Descriptor Cache.
*/
#define FXR_RX_EQ_ERR_DESC_MBE				(FXR_RX_EQ_CSRS + 0x000000000058)
#define FXR_RX_EQ_ERR_DESC_MBE_RESETCSR			0x0000000000000000ull
#define FXR_RX_EQ_ERR_DESC_MBE_MBE_CNT_SHIFT		21
#define FXR_RX_EQ_ERR_DESC_MBE_MBE_CNT_MASK		0xFFull
#define FXR_RX_EQ_ERR_DESC_MBE_MBE_CNT_SMASK		0x1FE00000ull
#define FXR_RX_EQ_ERR_DESC_MBE_QWORD_SHIFT		20
#define FXR_RX_EQ_ERR_DESC_MBE_QWORD_MASK		0x1ull
#define FXR_RX_EQ_ERR_DESC_MBE_QWORD_SMASK		0x100000ull
#define FXR_RX_EQ_ERR_DESC_MBE_ADDRESS_SHIFT		8
#define FXR_RX_EQ_ERR_DESC_MBE_ADDRESS_MASK		0xFFFull
#define FXR_RX_EQ_ERR_DESC_MBE_ADDRESS_SMASK		0xFFF00ull
#define FXR_RX_EQ_ERR_DESC_MBE_SYNDROME_SHIFT		0
#define FXR_RX_EQ_ERR_DESC_MBE_SYNDROME_MASK		0xFFull
#define FXR_RX_EQ_ERR_DESC_MBE_SYNDROME_SMASK		0xFFull
/*
* Table #15 of 335_Memory_Map_RX_ET.xml - RX_EQ_ERR_TRIG_MBE
* MBE error counts from the Triggered State Cache.
*/
#define FXR_RX_EQ_ERR_TRIG_MBE				(FXR_RX_EQ_CSRS + 0x000000000060)
#define FXR_RX_EQ_ERR_TRIG_MBE_RESETCSR			0x0000000000000000ull
#define FXR_RX_EQ_ERR_TRIG_MBE_MBE_CNT_SHIFT		20
#define FXR_RX_EQ_ERR_TRIG_MBE_MBE_CNT_MASK		0xFFull
#define FXR_RX_EQ_ERR_TRIG_MBE_MBE_CNT_SMASK		0xFF00000ull
#define FXR_RX_EQ_ERR_TRIG_MBE_QWORD_SHIFT		18
#define FXR_RX_EQ_ERR_TRIG_MBE_QWORD_MASK		0x3ull
#define FXR_RX_EQ_ERR_TRIG_MBE_QWORD_SMASK		0xC0000ull
#define FXR_RX_EQ_ERR_TRIG_MBE_ADDRESS_SHIFT		8
#define FXR_RX_EQ_ERR_TRIG_MBE_ADDRESS_MASK		0x3FFull
#define FXR_RX_EQ_ERR_TRIG_MBE_ADDRESS_SMASK		0x3FF00ull
#define FXR_RX_EQ_ERR_TRIG_MBE_SYNDROME_SHIFT		0
#define FXR_RX_EQ_ERR_TRIG_MBE_SYNDROME_MASK		0xFFull
#define FXR_RX_EQ_ERR_TRIG_MBE_SYNDROME_SMASK		0xFFull

#endif 		/* DEF_FXR_RX_ET_SW_DEF */

//                                                                             
// File:       fxr_at_csrs.h                                                   
// Creator:    pvesvslx                                                        
// Time:       Friday Apr 25, 2014 [1:12:26 pm]                                
//                                                                             
// Path:       /tmp/pvesvslx/nebulon_run/12747                                 
// Arguments:  /p/com/eda/denali/blueprint/3.7.4/Linux/blueprint -chdr -I      
//             /p/slx/eda/intel/nebulon/2.05_fdo/include -I                    
//             /p/slx/pvesv/fxr_autogen/fxr -xml fxr_at.rdl                    
//                                                                             
// Sources:    /tmp/pvesvslx/nebulon_run/12747/fxr_at.rdlh                     
//             /tmp/pvesvslx/nebulon_run/12747/lib_udp.rdl                     
//             /tmp/pvesvslx/nebulon_run/12747/fxr_at.rdl                      
//             /p/com/eda/intel/nebulon/2.05p1/generators/generator_common.pm  
//             /p/com/eda/intel/nebulon/2.05p1/generators/xml.pm               
//             /p/com/eda/intel/nebulon/2.05p1/generators/walk_through.pm      
//             /p/com/eda/intel/nebulon/2.05p1/generators/chdr.pm              
//                                                                             
// Blueprint:   3.7.4 (Tue Jun 23 00:17:01 PDT 2009)                           
// Machine:    scci56220                                                       
// OS:         Linux 2.6.16.60-0.58.1.3835.0.PTF.638363-smp                    
// Description:                                                                
//                                                                             
//Address translationaddress map                                               
//                                                                             
// Copyright (C) 2014 Denali Software Inc.  All rights reserved                
// THIS FILE IS AUTOMATICALLY GENERATED BY DENALI BLUEPRINT, DO NOT EDIT       
//                                                                             



// AT_CACHE_CONFIG desc:  This CSR controls the number of ways allocated to 1G pages versus a
// combined 2MB and 4KB set of ways.
typedef volatile union {
    struct {
        uint64_t  NUM_1G_WAYS          :   4;    //  This is the number of ways
                                                 // that should be reserved for 1
                                                 // GB pages. It has a range of 0
                                                 // to 15, so that at least one
                                                 // way is always reserved for
                                                 // smaller pages.
        uint64_t  Reserved_63_4        :  60;    //  Reserved

    };
    uint64_t                         val;
} AT_CACHE_CONFIG_t;

// --------------------------------------------------------------------------------------------------------------------------------

// AT_CACHE desc:  This CSR is used to describe the address region that is mapped to the
// address translation cache and uses the CSR access path.
typedef volatile union {
    struct {
        uint64_t  AT_ENTRY             :  64;    //  Quad word in the address
                                                 // translation cache.

    };
    uint64_t                         val;
} AT_CACHE_t;

// --------------------------------------------------------------------------------------------------------------------------------

// starting the array instantiation section
typedef struct {
    AT_CACHE_CONFIG_t          AT_CACHE_CONFIG;  // offset 4'h0, width 64
    AT_CACHE_t                 AT_CACHE[65536];  // offset 24'h180000, width 64
} fxr_at_csrs_t;                                 // size:  24'h200000

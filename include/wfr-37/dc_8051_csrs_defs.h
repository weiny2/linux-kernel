/*
* -------------------------------------------------------------------
* --                      Intel Proprietary
* --              Copyright (C) 2013 Intel Corporation
* --                    All Rights Reserved
* -------------------------------------------------------------------
* --           Auto-generated by /p/slx/pvesv/wfr_autogen/utils/scripts/i_csrs/i_csrs.pl 
* --  i_csrs.pl Version 1.5 last modified on Wednesday 4/2/14 10:48:59
* --   /p/slx/pvesv/wfr_autogen/utils/scripts/i_csrs/i_csrs.pl -C -o /p/slx/pvesv/wfr_autogen/wfr /p/slx/pvesv/wfr_autogen/SL1_fixed_xml/DC/260_CSR_8051.xml  
* --------------------------------------------------------------------
*/

#ifndef DEF_DC_8051_CSRS_SW_DEF
#define DEF_DC_8051_CSRS_SW_DEF

/*
* Table #2 of 260_CSR_8051.xml - DC8051_CFG_RAM_ACCESS_SETUP
* These registers are used to load and read the DC8051 code and data memories 
* inside the Duncan Creek IP. To load the firmware into the DC8051 code memory 
* in auto addressing mode:
*/
#define DC_DC8051_CFG_RAM_ACCESS_SETUP						(DC_8051_CSRS + 0x000000000000)
#define DC_DC8051_CFG_RAM_ACCESS_SETUP_RESETCSR					0x0000000000000000ull
#define DC_DC8051_CFG_RAM_ACCESS_SETUP_UNUSED_63_9_SHIFT			9
#define DC_DC8051_CFG_RAM_ACCESS_SETUP_UNUSED_63_9_MASK				0x7FFFFFFFFFFFFFull
#define DC_DC8051_CFG_RAM_ACCESS_SETUP_UNUSED_63_9_SMASK			0xFFFFFFFFFFFFFE00ull
#define DC_DC8051_CFG_RAM_ACCESS_SETUP_AUTO_INCR_ADDR_SHIFT			8
#define DC_DC8051_CFG_RAM_ACCESS_SETUP_AUTO_INCR_ADDR_MASK			0x1ull
#define DC_DC8051_CFG_RAM_ACCESS_SETUP_AUTO_INCR_ADDR_SMASK			0x100ull
#define DC_DC8051_CFG_RAM_ACCESS_SETUP_UNUSED_7_1_SHIFT				1
#define DC_DC8051_CFG_RAM_ACCESS_SETUP_UNUSED_7_1_MASK				0x7Full
#define DC_DC8051_CFG_RAM_ACCESS_SETUP_UNUSED_7_1_SMASK				0xFEull
#define DC_DC8051_CFG_RAM_ACCESS_SETUP_RAM_SEL_SHIFT				0
#define DC_DC8051_CFG_RAM_ACCESS_SETUP_RAM_SEL_MASK				0x1ull
#define DC_DC8051_CFG_RAM_ACCESS_SETUP_RAM_SEL_SMASK				0x1ull
/*
* Table #3 of 260_CSR_8051.xml - DC8051_CFG_RAM_ACCESS_CTRL
* 
*/
#define DC_DC8051_CFG_RAM_ACCESS_CTRL						(DC_8051_CSRS + 0x000000000008)
#define DC_DC8051_CFG_RAM_ACCESS_CTRL_RESETCSR					0x0000000000000000ull
#define DC_DC8051_CFG_RAM_ACCESS_CTRL_UNUSED_63_25_SHIFT			25
#define DC_DC8051_CFG_RAM_ACCESS_CTRL_UNUSED_63_25_MASK				0x7FFFFFFFFFull
#define DC_DC8051_CFG_RAM_ACCESS_CTRL_UNUSED_63_25_SMASK			0xFFFFFFFFFE000000ull
#define DC_DC8051_CFG_RAM_ACCESS_CTRL_WRITE_ENA_SHIFT				24
#define DC_DC8051_CFG_RAM_ACCESS_CTRL_WRITE_ENA_MASK				0x1ull
#define DC_DC8051_CFG_RAM_ACCESS_CTRL_WRITE_ENA_SMASK				0x1000000ull
#define DC_DC8051_CFG_RAM_ACCESS_CTRL_UNUSED_23_17_SHIFT			17
#define DC_DC8051_CFG_RAM_ACCESS_CTRL_UNUSED_23_17_MASK				0x7Full
#define DC_DC8051_CFG_RAM_ACCESS_CTRL_UNUSED_23_17_SMASK			0xFE0000ull
#define DC_DC8051_CFG_RAM_ACCESS_CTRL_READ_ENA_SHIFT				16
#define DC_DC8051_CFG_RAM_ACCESS_CTRL_READ_ENA_MASK				0x1ull
#define DC_DC8051_CFG_RAM_ACCESS_CTRL_READ_ENA_SMASK				0x10000ull
#define DC_DC8051_CFG_RAM_ACCESS_CTRL_UNUSED_15_SHIFT				15
#define DC_DC8051_CFG_RAM_ACCESS_CTRL_UNUSED_15_MASK				0x1ull
#define DC_DC8051_CFG_RAM_ACCESS_CTRL_UNUSED_15_SMASK				0x8000ull
#define DC_DC8051_CFG_RAM_ACCESS_CTRL_ADDRESS_SHIFT				0
#define DC_DC8051_CFG_RAM_ACCESS_CTRL_ADDRESS_MASK				0x7FFFull
#define DC_DC8051_CFG_RAM_ACCESS_CTRL_ADDRESS_SMASK				0x7FFFull
/*
* Table #4 of 260_CSR_8051.xml - DC8051_CFG_RAM_ACCESS_WR_DATA
* 
*/
#define DC_DC8051_CFG_RAM_ACCESS_WR_DATA					(DC_8051_CSRS + 0x000000000010)
#define DC_DC8051_CFG_RAM_ACCESS_WR_DATA_RESETCSR				0x0000000000000000ull
#define DC_DC8051_CFG_RAM_ACCESS_WR_DATA_VAL_SHIFT				0
#define DC_DC8051_CFG_RAM_ACCESS_WR_DATA_VAL_MASK				0xFFFFFFFFFFFFFFFFull
#define DC_DC8051_CFG_RAM_ACCESS_WR_DATA_VAL_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #5 of 260_CSR_8051.xml - DC8051_CFG_RAM_ACCESS_STATUS
* 
*/
#define DC_DC8051_CFG_RAM_ACCESS_STATUS						(DC_8051_CSRS + 0x000000000018)
#define DC_DC8051_CFG_RAM_ACCESS_STATUS_RESETCSR				0x0000000000010000ull
#define DC_DC8051_CFG_RAM_ACCESS_STATUS_UNUSED_63_17_SHIFT			17
#define DC_DC8051_CFG_RAM_ACCESS_STATUS_UNUSED_63_17_MASK			0x7FFFFFFFFFFFull
#define DC_DC8051_CFG_RAM_ACCESS_STATUS_UNUSED_63_17_SMASK			0xFFFFFFFFFFFE0000ull
#define DC_DC8051_CFG_RAM_ACCESS_STATUS_ACCESS_COMPLETED_SHIFT			16
#define DC_DC8051_CFG_RAM_ACCESS_STATUS_ACCESS_COMPLETED_MASK			0x1ull
#define DC_DC8051_CFG_RAM_ACCESS_STATUS_ACCESS_COMPLETED_SMASK			0x10000ull
#define DC_DC8051_CFG_RAM_ACCESS_STATUS_UNUSED_15_SHIFT				15
#define DC_DC8051_CFG_RAM_ACCESS_STATUS_UNUSED_15_MASK				0x1ull
#define DC_DC8051_CFG_RAM_ACCESS_STATUS_UNUSED_15_SMASK				0x8000ull
#define DC_DC8051_CFG_RAM_ACCESS_STATUS_AUTO_ADDRESS_SHIFT			0
#define DC_DC8051_CFG_RAM_ACCESS_STATUS_AUTO_ADDRESS_MASK			0x7FFFull
#define DC_DC8051_CFG_RAM_ACCESS_STATUS_AUTO_ADDRESS_SMASK			0x7FFFull
/*
* Table #6 of 260_CSR_8051.xml - DC8051_CFG_RAM_ACCESS_RD_DATA
* 
*/
#define DC_DC8051_CFG_RAM_ACCESS_RD_DATA					(DC_8051_CSRS + 0x000000000020)
#define DC_DC8051_CFG_RAM_ACCESS_RD_DATA_RESETCSR				0x0000000000000000ull
#define DC_DC8051_CFG_RAM_ACCESS_RD_DATA_VAL_SHIFT				0
#define DC_DC8051_CFG_RAM_ACCESS_RD_DATA_VAL_MASK				0xFFFFFFFFFFFFFFFFull
#define DC_DC8051_CFG_RAM_ACCESS_RD_DATA_VAL_SMASK				0xFFFFFFFFFFFFFFFFull
/*
* Table #7 of 260_CSR_8051.xml - DC8051_CFG_HOST_CMD_0
* These registers are used by the host to issue request to the 8051 related to 
* the LNI process.
*/
#define DC_DC8051_CFG_HOST_CMD_0						(DC_8051_CSRS + 0x000000000028)
#define DC_DC8051_CFG_HOST_CMD_0_RESETCSR					0x0000000000000000ull
#define DC_DC8051_CFG_HOST_CMD_0_REQ_DATA_SHIFT					16
#define DC_DC8051_CFG_HOST_CMD_0_REQ_DATA_MASK					0xFFFFFFFFFFFFull
#define DC_DC8051_CFG_HOST_CMD_0_REQ_DATA_SMASK					0xFFFFFFFFFFFF0000ull
#define DC_DC8051_CFG_HOST_CMD_0_REQ_TYPE_SHIFT					8
#define DC_DC8051_CFG_HOST_CMD_0_REQ_TYPE_MASK					0xFFull
#define DC_DC8051_CFG_HOST_CMD_0_REQ_TYPE_SMASK					0xFF00ull
#define DC_DC8051_CFG_HOST_CMD_0_UNUSED_7_1_SHIFT				1
#define DC_DC8051_CFG_HOST_CMD_0_UNUSED_7_1_MASK				0x7Full
#define DC_DC8051_CFG_HOST_CMD_0_UNUSED_7_1_SMASK				0xFEull
#define DC_DC8051_CFG_HOST_CMD_0_REQ_NEW_SHIFT					0
#define DC_DC8051_CFG_HOST_CMD_0_REQ_NEW_MASK					0x1ull
#define DC_DC8051_CFG_HOST_CMD_0_REQ_NEW_SMASK					0x1ull
/*
* Table #8 of 260_CSR_8051.xml - DC8051_CFG_HOST_CMD_1
* 
*/
#define DC_DC8051_CFG_HOST_CMD_1						(DC_8051_CSRS + 0x000000000030)
#define DC_DC8051_CFG_HOST_CMD_1_RESETCSR					0x0000000000000001ull
#define DC_DC8051_CFG_HOST_CMD_1_RSP_DATA_SHIFT					16
#define DC_DC8051_CFG_HOST_CMD_1_RSP_DATA_MASK					0xFFFFFFFFFFFFull
#define DC_DC8051_CFG_HOST_CMD_1_RSP_DATA_SMASK					0xFFFFFFFFFFFF0000ull
#define DC_DC8051_CFG_HOST_CMD_1_RETURN_CODE_SHIFT				8
#define DC_DC8051_CFG_HOST_CMD_1_RETURN_CODE_MASK				0xFFull
#define DC_DC8051_CFG_HOST_CMD_1_RETURN_CODE_SMASK				0xFF00ull
#define DC_DC8051_CFG_HOST_CMD_1_UNUSED_7_1_SHIFT				1
#define DC_DC8051_CFG_HOST_CMD_1_UNUSED_7_1_MASK				0x7Full
#define DC_DC8051_CFG_HOST_CMD_1_UNUSED_7_1_SMASK				0xFEull
#define DC_DC8051_CFG_HOST_CMD_1_COMPLETED_SHIFT				0
#define DC_DC8051_CFG_HOST_CMD_1_COMPLETED_MASK					0x1ull
#define DC_DC8051_CFG_HOST_CMD_1_COMPLETED_SMASK				0x1ull
/*
* Table #9 of 260_CSR_8051.xml - DC8051_CFG_LOCAL_GUID
* This register is used to store the local GUID, The access to these register 
* are programmable, in one mode, only Hardware have write access. and in another 
* mode these register are both writable and readable.
*/
#define DC_DC8051_CFG_LOCAL_GUID						(DC_8051_CSRS + 0x000000000038)
#define DC_DC8051_CFG_LOCAL_GUID_RESETCSR					0x0000000000000000ull
#define DC_DC8051_CFG_LOCAL_GUID_VAL_SHIFT					0
#define DC_DC8051_CFG_LOCAL_GUID_VAL_MASK					0xFFFFFFFFFFFFFFFFull
#define DC_DC8051_CFG_LOCAL_GUID_VAL_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #10 of 260_CSR_8051.xml - DC8051_STS_REMOTE_GUID
* This register is used to store the remote GUID received.
*/
#define DC_DC8051_STS_REMOTE_GUID						(DC_8051_CSRS + 0x000000000040)
#define DC_DC8051_STS_REMOTE_GUID_RESETCSR					0x0000000000000000ull
#define DC_DC8051_STS_REMOTE_GUID_VAL_SHIFT					0
#define DC_DC8051_STS_REMOTE_GUID_VAL_MASK					0xFFFFFFFFFFFFFFFFull
#define DC_DC8051_STS_REMOTE_GUID_VAL_SMASK					0xFFFFFFFFFFFFFFFFull
/*
* Table #11 of 260_CSR_8051.xml - DC8051_STS_REMOTE_NODE_TYPE
* This register is used to store the remote Node Type received
*/
#define DC_DC8051_STS_REMOTE_NODE_TYPE						(DC_8051_CSRS + 0x000000000048)
#define DC_DC8051_STS_REMOTE_NODE_TYPE_RESETCSR					0x0000000000000003ull
#define DC_DC8051_STS_REMOTE_NODE_TYPE_UNUSED_63_2_SHIFT			2
#define DC_DC8051_STS_REMOTE_NODE_TYPE_UNUSED_63_2_MASK				0x3FFFFFFFFFFFFFFFull
#define DC_DC8051_STS_REMOTE_NODE_TYPE_UNUSED_63_2_SMASK			0xFFFFFFFFFFFFFFFCull
#define DC_DC8051_STS_REMOTE_NODE_TYPE_VAL_SHIFT				0
#define DC_DC8051_STS_REMOTE_NODE_TYPE_VAL_MASK					0x3ull
#define DC_DC8051_STS_REMOTE_NODE_TYPE_VAL_SMASK				0x3ull
/*
* Table #12 of 260_CSR_8051.xml - DC8051_STS_LOCAL_FM_SECURITY
* These registers to report the status on the firmware security for both local 
* and its remote peer.
*/
#define DC_DC8051_STS_LOCAL_FM_SECURITY						(DC_8051_CSRS + 0x000000000050)
#define DC_DC8051_STS_LOCAL_FM_SECURITY_RESETCSR				0x0000000000000001ull
#define DC_DC8051_STS_LOCAL_FM_SECURITY_UNUSED_63_1_SHIFT			1
#define DC_DC8051_STS_LOCAL_FM_SECURITY_UNUSED_63_1_MASK			0x7FFFFFFFFFFFFFFFull
#define DC_DC8051_STS_LOCAL_FM_SECURITY_UNUSED_63_1_SMASK			0xFFFFFFFFFFFFFFFEull
#define DC_DC8051_STS_LOCAL_FM_SECURITY_DISABLED_SHIFT				0
#define DC_DC8051_STS_LOCAL_FM_SECURITY_DISABLED_MASK				0x1ull
#define DC_DC8051_STS_LOCAL_FM_SECURITY_DISABLED_SMASK				0x1ull
/*
* Table #13 of 260_CSR_8051.xml - DC8051_STS_REMOTE_FM_SECURITY
* 
*/
#define DC_DC8051_STS_REMOTE_FM_SECURITY					(DC_8051_CSRS + 0x000000000058)
#define DC_DC8051_STS_REMOTE_FM_SECURITY_RESETCSR				0x0000000000000001ull
#define DC_DC8051_STS_REMOTE_FM_SECURITY_UNUSED_63_1_SHIFT			1
#define DC_DC8051_STS_REMOTE_FM_SECURITY_UNUSED_63_1_MASK			0x7FFFFFFFFFFFFFFFull
#define DC_DC8051_STS_REMOTE_FM_SECURITY_UNUSED_63_1_SMASK			0xFFFFFFFFFFFFFFFEull
#define DC_DC8051_STS_REMOTE_FM_SECURITY_DISABLED_SHIFT				0
#define DC_DC8051_STS_REMOTE_FM_SECURITY_DISABLED_MASK				0x1ull
#define DC_DC8051_STS_REMOTE_FM_SECURITY_DISABLED_SMASK				0x1ull
/*
* Table #14 of 260_CSR_8051.xml - DC8051_STS_CUR_STATE
* This register indicate the current state the Duncan Creek Port
*/
#define DC_DC8051_STS_CUR_STATE							(DC_8051_CSRS + 0x000000000060)
#define DC_DC8051_STS_CUR_STATE_RESETCSR					0x0000000000000090ull
#define DC_DC8051_STS_CUR_STATE_UNUSED_63_26_SHIFT				26
#define DC_DC8051_STS_CUR_STATE_UNUSED_63_26_MASK				0x3FFFFFFFFFull
#define DC_DC8051_STS_CUR_STATE_UNUSED_63_26_SMASK				0xFFFFFFFFFC000000ull
#define DC_DC8051_STS_CUR_STATE_INTERRUPT_B_ACK_SHIFT				25
#define DC_DC8051_STS_CUR_STATE_INTERRUPT_B_ACK_MASK				0x1ull
#define DC_DC8051_STS_CUR_STATE_INTERRUPT_B_ACK_SMASK				0x2000000ull
#define DC_DC8051_STS_CUR_STATE_INTERRUPT_A_ACK_SHIFT				24
#define DC_DC8051_STS_CUR_STATE_INTERRUPT_A_ACK_MASK				0x1ull
#define DC_DC8051_STS_CUR_STATE_INTERRUPT_A_ACK_SMASK				0x1000000ull
#define DC_DC8051_STS_CUR_STATE_FIRMWARE_SHIFT					16
#define DC_DC8051_STS_CUR_STATE_FIRMWARE_MASK					0xFFull
#define DC_DC8051_STS_CUR_STATE_FIRMWARE_SMASK					0xFF0000ull
#define DC_DC8051_STS_CUR_STATE_UNUSED_15_10_SHIFT				10
#define DC_DC8051_STS_CUR_STATE_UNUSED_15_10_MASK				0x3Full
#define DC_DC8051_STS_CUR_STATE_UNUSED_15_10_SMASK				0xFC00ull
#define DC_DC8051_STS_CUR_STATE_LINK_MODE_SHIFT					8
#define DC_DC8051_STS_CUR_STATE_LINK_MODE_MASK					0x3ull
#define DC_DC8051_STS_CUR_STATE_LINK_MODE_SMASK					0x300ull
#define DC_DC8051_STS_CUR_STATE_PORT_SHIFT					0
#define DC_DC8051_STS_CUR_STATE_PORT_MASK					0xFFull
#define DC_DC8051_STS_CUR_STATE_PORT_SMASK					0xFFull
/*
* Table #15 of 260_CSR_8051.xml - DC8051_CFG_RST
* This register is used to do the basic configuration on the DC8051 
* block
*/
#define DC_DC8051_CFG_RST							(DC_8051_CSRS + 0x000000000068)
#define DC_DC8051_CFG_RST_RESETCSR						0x000000000000001Full
#define DC_DC8051_CFG_RST_UNUSED_63_5_SHIFT					5
#define DC_DC8051_CFG_RST_UNUSED_63_5_MASK					0x7FFFFFFFFFFFFFFull
#define DC_DC8051_CFG_RST_UNUSED_63_5_SMASK					0xFFFFFFFFFFFFFFE0ull
#define DC_DC8051_CFG_RST_SFR_SHIFT						4
#define DC_DC8051_CFG_RST_SFR_MASK						0x1ull
#define DC_DC8051_CFG_RST_SFR_SMASK						0x10ull
#define DC_DC8051_CFG_RST_IRAM_SHIFT						3
#define DC_DC8051_CFG_RST_IRAM_MASK						0x1ull
#define DC_DC8051_CFG_RST_IRAM_SMASK						0x8ull
#define DC_DC8051_CFG_RST_DRAM_SHIFT						2
#define DC_DC8051_CFG_RST_DRAM_MASK						0x1ull
#define DC_DC8051_CFG_RST_DRAM_SMASK						0x4ull
#define DC_DC8051_CFG_RST_CRAM_SHIFT						1
#define DC_DC8051_CFG_RST_CRAM_MASK						0x1ull
#define DC_DC8051_CFG_RST_CRAM_SMASK						0x2ull
#define DC_DC8051_CFG_RST_M8051W_SHIFT						0
#define DC_DC8051_CFG_RST_M8051W_MASK						0x1ull
#define DC_DC8051_CFG_RST_M8051W_SMASK						0x1ull
/*
* Table #16 of 260_CSR_8051.xml - DC8051_CFG_MODE
* 
*/
#define DC_DC8051_CFG_MODE							(DC_8051_CSRS + 0x000000000070)
#define DC_DC8051_CFG_MODE_RESETCSR						0x0000000001000000ull
#define DC_DC8051_CFG_MODE_UNUSED_63_26_SHIFT					26
#define DC_DC8051_CFG_MODE_UNUSED_63_26_MASK					0x3FFFFFFFFFull
#define DC_DC8051_CFG_MODE_UNUSED_63_26_SMASK					0xFFFFFFFFFC000000ull
#define DC_DC8051_CFG_MODE_CLK_SELECT_SHIFT					24
#define DC_DC8051_CFG_MODE_CLK_SELECT_MASK					0x3ull
#define DC_DC8051_CFG_MODE_CLK_SELECT_SMASK					0x3000000ull
#define DC_DC8051_CFG_MODE_UNUSED_23_18_SHIFT					18
#define DC_DC8051_CFG_MODE_UNUSED_23_18_MASK					0x3Full
#define DC_DC8051_CFG_MODE_UNUSED_23_18_SMASK					0xFC0000ull
#define DC_DC8051_CFG_MODE_INTERRUPT_B_ENA_SHIFT				17
#define DC_DC8051_CFG_MODE_INTERRUPT_B_ENA_MASK					0x1ull
#define DC_DC8051_CFG_MODE_INTERRUPT_B_ENA_SMASK				0x20000ull
#define DC_DC8051_CFG_MODE_INTERRUPT_A_ENA_SHIFT				16
#define DC_DC8051_CFG_MODE_INTERRUPT_A_ENA_MASK					0x1ull
#define DC_DC8051_CFG_MODE_INTERRUPT_A_ENA_SMASK				0x10000ull
#define DC_DC8051_CFG_MODE_UNUSED_15_10_SHIFT					10
#define DC_DC8051_CFG_MODE_UNUSED_15_10_MASK					0x3Full
#define DC_DC8051_CFG_MODE_UNUSED_15_10_SMASK					0xFC00ull
#define DC_DC8051_CFG_MODE_POWER_SAVING_SHIFT					8
#define DC_DC8051_CFG_MODE_POWER_SAVING_MASK					0x3ull
#define DC_DC8051_CFG_MODE_POWER_SAVING_SMASK					0x300ull
#define DC_DC8051_CFG_MODE_GENERAL_SHIFT					0
#define DC_DC8051_CFG_MODE_GENERAL_MASK						0xFFull
#define DC_DC8051_CFG_MODE_GENERAL_SMASK					0xFFull
/*
* Table #17 of 260_CSR_8051.xml - DC8051_DBG_SFR_MAP_1
* This register provide easy CSR read access to the internal SFR 
* values
*/
#define DC_DC8051_DBG_SFR_MAP_1							(DC_8051_CSRS + 0x000000000078)
#define DC_DC8051_DBG_SFR_MAP_1_RESETCSR					0x0000000000000000ull
#define DC_DC8051_DBG_SFR_MAP_1_TMP08_SHIFT					56
#define DC_DC8051_DBG_SFR_MAP_1_TMP08_MASK					0xFFull
#define DC_DC8051_DBG_SFR_MAP_1_TMP08_SMASK					0xFF00000000000000ull
#define DC_DC8051_DBG_SFR_MAP_1_TMP07_SHIFT					48
#define DC_DC8051_DBG_SFR_MAP_1_TMP07_MASK					0xFFull
#define DC_DC8051_DBG_SFR_MAP_1_TMP07_SMASK					0xFF000000000000ull
#define DC_DC8051_DBG_SFR_MAP_1_TMP06_SHIFT					40
#define DC_DC8051_DBG_SFR_MAP_1_TMP06_MASK					0xFFull
#define DC_DC8051_DBG_SFR_MAP_1_TMP06_SMASK					0xFF0000000000ull
#define DC_DC8051_DBG_SFR_MAP_1_TMP05_SHIFT					32
#define DC_DC8051_DBG_SFR_MAP_1_TMP05_MASK					0xFFull
#define DC_DC8051_DBG_SFR_MAP_1_TMP05_SMASK					0xFF00000000ull
#define DC_DC8051_DBG_SFR_MAP_1_TMP04_SHIFT					24
#define DC_DC8051_DBG_SFR_MAP_1_TMP04_MASK					0xFFull
#define DC_DC8051_DBG_SFR_MAP_1_TMP04_SMASK					0xFF000000ull
#define DC_DC8051_DBG_SFR_MAP_1_TMP03_SHIFT					16
#define DC_DC8051_DBG_SFR_MAP_1_TMP03_MASK					0xFFull
#define DC_DC8051_DBG_SFR_MAP_1_TMP03_SMASK					0xFF0000ull
#define DC_DC8051_DBG_SFR_MAP_1_TMP02_SHIFT					8
#define DC_DC8051_DBG_SFR_MAP_1_TMP02_MASK					0xFFull
#define DC_DC8051_DBG_SFR_MAP_1_TMP02_SMASK					0xFF00ull
#define DC_DC8051_DBG_SFR_MAP_1_TMP01_SHIFT					0
#define DC_DC8051_DBG_SFR_MAP_1_TMP01_MASK					0xFFull
#define DC_DC8051_DBG_SFR_MAP_1_TMP01_SMASK					0xFFull
/*
* Table #18 of 260_CSR_8051.xml - DC8051_DBG_SFR_MAP_2
* 
*/
#define DC_DC8051_DBG_SFR_MAP_2							(DC_8051_CSRS + 0x000000000080)
#define DC_DC8051_DBG_SFR_MAP_2_RESETCSR					0x0000000000000000ull
#define DC_DC8051_DBG_SFR_MAP_2_TMP16_SHIFT					56
#define DC_DC8051_DBG_SFR_MAP_2_TMP16_MASK					0xFFull
#define DC_DC8051_DBG_SFR_MAP_2_TMP16_SMASK					0xFF00000000000000ull
#define DC_DC8051_DBG_SFR_MAP_2_TMP15_SHIFT					48
#define DC_DC8051_DBG_SFR_MAP_2_TMP15_MASK					0xFFull
#define DC_DC8051_DBG_SFR_MAP_2_TMP15_SMASK					0xFF000000000000ull
#define DC_DC8051_DBG_SFR_MAP_2_TMP14_SHIFT					40
#define DC_DC8051_DBG_SFR_MAP_2_TMP14_MASK					0xFFull
#define DC_DC8051_DBG_SFR_MAP_2_TMP14_SMASK					0xFF0000000000ull
#define DC_DC8051_DBG_SFR_MAP_2_TMP13_SHIFT					32
#define DC_DC8051_DBG_SFR_MAP_2_TMP13_MASK					0xFFull
#define DC_DC8051_DBG_SFR_MAP_2_TMP13_SMASK					0xFF00000000ull
#define DC_DC8051_DBG_SFR_MAP_2_TMP12_SHIFT					24
#define DC_DC8051_DBG_SFR_MAP_2_TMP12_MASK					0xFFull
#define DC_DC8051_DBG_SFR_MAP_2_TMP12_SMASK					0xFF000000ull
#define DC_DC8051_DBG_SFR_MAP_2_TMP11_SHIFT					16
#define DC_DC8051_DBG_SFR_MAP_2_TMP11_MASK					0xFFull
#define DC_DC8051_DBG_SFR_MAP_2_TMP11_SMASK					0xFF0000ull
#define DC_DC8051_DBG_SFR_MAP_2_TMP10_SHIFT					8
#define DC_DC8051_DBG_SFR_MAP_2_TMP10_MASK					0xFFull
#define DC_DC8051_DBG_SFR_MAP_2_TMP10_SMASK					0xFF00ull
#define DC_DC8051_DBG_SFR_MAP_2_TMP09_SHIFT					0
#define DC_DC8051_DBG_SFR_MAP_2_TMP09_MASK					0xFFull
#define DC_DC8051_DBG_SFR_MAP_2_TMP09_SMASK					0xFFull
/*
* Table #19 of 260_CSR_8051.xml - DC8051_DBG_HEART_BEAT
* 
*/
#define DC_DC8051_DBG_HEART_BEAT						(DC_8051_CSRS + 0x000000000088)
#define DC_DC8051_DBG_HEART_BEAT_RESETCSR					0x0000000000000000ull
#define DC_DC8051_DBG_HEART_BEAT_UNUSED_63_16_SHIFT				16
#define DC_DC8051_DBG_HEART_BEAT_UNUSED_63_16_MASK				0xFFFFFFFFFFFFull
#define DC_DC8051_DBG_HEART_BEAT_UNUSED_63_16_SMASK				0xFFFFFFFFFFFF0000ull
#define DC_DC8051_DBG_HEART_BEAT_VAL_SHIFT					0
#define DC_DC8051_DBG_HEART_BEAT_VAL_MASK					0xFFFFull
#define DC_DC8051_DBG_HEART_BEAT_VAL_SMASK					0xFFFFull
/*
* Table #20 of 260_CSR_8051.xml - DC8051_DBG_CODE_TRACING_SETUP
* 
*/
#define DC_DC8051_DBG_CODE_TRACING_SETUP					(DC_8051_CSRS + 0x000000000090)
#define DC_DC8051_DBG_CODE_TRACING_SETUP_RESETCSR				0x0000000000000000ull
#define DC_DC8051_DBG_CODE_TRACING_SETUP_UNUSED_63_31_SHIFT			31
#define DC_DC8051_DBG_CODE_TRACING_SETUP_UNUSED_63_31_MASK			0x1FFFFFFFFull
#define DC_DC8051_DBG_CODE_TRACING_SETUP_UNUSED_63_31_SMASK			0xFFFFFFFF80000000ull
#define DC_DC8051_DBG_CODE_TRACING_SETUP_HALT_ON_ADDR_SHIFT			16
#define DC_DC8051_DBG_CODE_TRACING_SETUP_HALT_ON_ADDR_MASK			0x7FFFull
#define DC_DC8051_DBG_CODE_TRACING_SETUP_HALT_ON_ADDR_SMASK			0x7FFF0000ull
#define DC_DC8051_DBG_CODE_TRACING_SETUP_UNUSED_15_9_SHIFT			9
#define DC_DC8051_DBG_CODE_TRACING_SETUP_UNUSED_15_9_MASK			0x7Full
#define DC_DC8051_DBG_CODE_TRACING_SETUP_UNUSED_15_9_SMASK			0xFE00ull
#define DC_DC8051_DBG_CODE_TRACING_SETUP_HALT_ON_ADDR_ENA_SHIFT			8
#define DC_DC8051_DBG_CODE_TRACING_SETUP_HALT_ON_ADDR_ENA_MASK			0x1ull
#define DC_DC8051_DBG_CODE_TRACING_SETUP_HALT_ON_ADDR_ENA_SMASK			0x100ull
#define DC_DC8051_DBG_CODE_TRACING_SETUP_UNUSED_7_1_SHIFT			1
#define DC_DC8051_DBG_CODE_TRACING_SETUP_UNUSED_7_1_MASK			0x7Full
#define DC_DC8051_DBG_CODE_TRACING_SETUP_UNUSED_7_1_SMASK			0xFEull
#define DC_DC8051_DBG_CODE_TRACING_SETUP_LOAD_CODE_ADDR_SHIFT			0
#define DC_DC8051_DBG_CODE_TRACING_SETUP_LOAD_CODE_ADDR_MASK			0x1ull
#define DC_DC8051_DBG_CODE_TRACING_SETUP_LOAD_CODE_ADDR_SMASK			0x1ull
/*
* Table #21 of 260_CSR_8051.xml - DC8051_DBG_CODE_TRACING_ADDR
* 
*/
#define DC_DC8051_DBG_CODE_TRACING_ADDR						(DC_8051_CSRS + 0x000000000098)
#define DC_DC8051_DBG_CODE_TRACING_ADDR_RESETCSR				0x0000000000000000ull
#define DC_DC8051_DBG_CODE_TRACING_ADDR_UNUSED_63_15_SHIFT			15
#define DC_DC8051_DBG_CODE_TRACING_ADDR_UNUSED_63_15_MASK			0x1FFFFFFFFFFFFull
#define DC_DC8051_DBG_CODE_TRACING_ADDR_UNUSED_63_15_SMASK			0xFFFFFFFFFFFF8000ull
#define DC_DC8051_DBG_CODE_TRACING_ADDR_VAL_SHIFT				0
#define DC_DC8051_DBG_CODE_TRACING_ADDR_VAL_MASK				0x7FFFull
#define DC_DC8051_DBG_CODE_TRACING_ADDR_VAL_SMASK				0x7FFFull
/*
* Table #22 of 260_CSR_8051.xml - DC8051_DBG_ERRINJ_ECC
* This register is ued to inject error to the code and data memories inside the 
* DC8051
*/
#define DC_DC8051_DBG_ERRINJ_ECC						(DC_8051_CSRS + 0x0000000000A0)
#define DC_DC8051_DBG_ERRINJ_ECC_RESETCSR					0x0000000000000000ull
#define DC_DC8051_DBG_ERRINJ_ECC_UNUSED_63_33_SHIFT				33
#define DC_DC8051_DBG_ERRINJ_ECC_UNUSED_63_33_MASK				0x7FFFFFFFull
#define DC_DC8051_DBG_ERRINJ_ECC_UNUSED_63_33_SMASK				0xFFFFFFFE00000000ull
#define DC_DC8051_DBG_ERRINJ_ECC_CLEAR_ERROR_SHIFT				32
#define DC_DC8051_DBG_ERRINJ_ECC_CLEAR_ERROR_MASK				0x1ull
#define DC_DC8051_DBG_ERRINJ_ECC_CLEAR_ERROR_SMASK				0x100000000ull
#define DC_DC8051_DBG_ERRINJ_ECC_UNUSED_31_28_SHIFT				28
#define DC_DC8051_DBG_ERRINJ_ECC_UNUSED_31_28_MASK				0xFull
#define DC_DC8051_DBG_ERRINJ_ECC_UNUSED_31_28_SMASK				0xF0000000ull
#define DC_DC8051_DBG_ERRINJ_ECC_ADDRESS_SHIFT					16
#define DC_DC8051_DBG_ERRINJ_ECC_ADDRESS_MASK					0xFFFull
#define DC_DC8051_DBG_ERRINJ_ECC_ADDRESS_SMASK					0xFFF0000ull
#define DC_DC8051_DBG_ERRINJ_ECC_MASK_SHIFT					8
#define DC_DC8051_DBG_ERRINJ_ECC_MASK_MASK					0xFFull
#define DC_DC8051_DBG_ERRINJ_ECC_MASK_SMASK					0xFF00ull
#define DC_DC8051_DBG_ERRINJ_ECC_UNUSED_7_5_SHIFT				5
#define DC_DC8051_DBG_ERRINJ_ECC_UNUSED_7_5_MASK				0x7ull
#define DC_DC8051_DBG_ERRINJ_ECC_UNUSED_7_5_SMASK				0xE0ull
#define DC_DC8051_DBG_ERRINJ_ECC_RAM_SELECT_SHIFT				3
#define DC_DC8051_DBG_ERRINJ_ECC_RAM_SELECT_MASK				0x3ull
#define DC_DC8051_DBG_ERRINJ_ECC_RAM_SELECT_SMASK				0x18ull
#define DC_DC8051_DBG_ERRINJ_ECC_MODE_SHIFT					1
#define DC_DC8051_DBG_ERRINJ_ECC_MODE_MASK					0x3ull
#define DC_DC8051_DBG_ERRINJ_ECC_MODE_SMASK					0x6ull
#define DC_DC8051_DBG_ERRINJ_ECC_ENABLE_SHIFT					0
#define DC_DC8051_DBG_ERRINJ_ECC_ENABLE_MASK					0x1ull
#define DC_DC8051_DBG_ERRINJ_ECC_ENABLE_SMASK					0x1ull
/*
* Table #23 of 260_CSR_8051.xml - DC8051_DBG_ERR_INFO_CRAM
* This register is used to report the ECC errors in the DC8051 code 
* memory
*/
#define DC_DC8051_DBG_ERR_INFO_CRAM						(DC_8051_CSRS + 0x0000000000A8)
#define DC_DC8051_DBG_ERR_INFO_CRAM_RESETCSR					0x0000000000000000ull
#define DC_DC8051_DBG_ERR_INFO_CRAM_UNUSED_63_24_SHIFT				24
#define DC_DC8051_DBG_ERR_INFO_CRAM_UNUSED_63_24_MASK				0xFFFFFFFFFFull
#define DC_DC8051_DBG_ERR_INFO_CRAM_UNUSED_63_24_SMASK				0xFFFFFFFFFF000000ull
#define DC_DC8051_DBG_ERR_INFO_CRAM_MBE_SYND_SHIFT				16
#define DC_DC8051_DBG_ERR_INFO_CRAM_MBE_SYND_MASK				0xFFull
#define DC_DC8051_DBG_ERR_INFO_CRAM_MBE_SYND_SMASK				0xFF0000ull
#define DC_DC8051_DBG_ERR_INFO_CRAM_SBE_SYND_SHIFT				8
#define DC_DC8051_DBG_ERR_INFO_CRAM_SBE_SYND_MASK				0xFFull
#define DC_DC8051_DBG_ERR_INFO_CRAM_SBE_SYND_SMASK				0xFF00ull
#define DC_DC8051_DBG_ERR_INFO_CRAM_UNUSED_7_4_SHIFT				4
#define DC_DC8051_DBG_ERR_INFO_CRAM_UNUSED_7_4_MASK				0xFull
#define DC_DC8051_DBG_ERR_INFO_CRAM_UNUSED_7_4_SMASK				0xF0ull
#define DC_DC8051_DBG_ERR_INFO_CRAM_INJECTED_MBE_SHIFT				3
#define DC_DC8051_DBG_ERR_INFO_CRAM_INJECTED_MBE_MASK				0x1ull
#define DC_DC8051_DBG_ERR_INFO_CRAM_INJECTED_MBE_SMASK				0x8ull
#define DC_DC8051_DBG_ERR_INFO_CRAM_INJECTED_SBE_SHIFT				2
#define DC_DC8051_DBG_ERR_INFO_CRAM_INJECTED_SBE_MASK				0x1ull
#define DC_DC8051_DBG_ERR_INFO_CRAM_INJECTED_SBE_SMASK				0x4ull
#define DC_DC8051_DBG_ERR_INFO_CRAM_MBE_SHIFT					1
#define DC_DC8051_DBG_ERR_INFO_CRAM_MBE_MASK					0x1ull
#define DC_DC8051_DBG_ERR_INFO_CRAM_MBE_SMASK					0x2ull
#define DC_DC8051_DBG_ERR_INFO_CRAM_SBE_SHIFT					0
#define DC_DC8051_DBG_ERR_INFO_CRAM_SBE_MASK					0x1ull
#define DC_DC8051_DBG_ERR_INFO_CRAM_SBE_SMASK					0x1ull
/*
* Table #24 of 260_CSR_8051.xml - DC8051_DBG_ERR_INFO_DRAM
* This register is used to report the ECC errors in the DC8051 data 
* memory
*/
#define DC_DC8051_DBG_ERR_INFO_DRAM						(DC_8051_CSRS + 0x0000000000B0)
#define DC_DC8051_DBG_ERR_INFO_DRAM_RESETCSR					0x0000000000000000ull
#define DC_DC8051_DBG_ERR_INFO_DRAM_UNUSED_63_21_SHIFT				21
#define DC_DC8051_DBG_ERR_INFO_DRAM_UNUSED_63_21_MASK				0x7FFFFFFFFFFull
#define DC_DC8051_DBG_ERR_INFO_DRAM_UNUSED_63_21_SMASK				0xFFFFFFFFFFE00000ull
#define DC_DC8051_DBG_ERR_INFO_DRAM_MBE_SYND_SHIFT				16
#define DC_DC8051_DBG_ERR_INFO_DRAM_MBE_SYND_MASK				0x1Full
#define DC_DC8051_DBG_ERR_INFO_DRAM_MBE_SYND_SMASK				0x1F0000ull
#define DC_DC8051_DBG_ERR_INFO_DRAM_UNUSED_15_13_SHIFT				13
#define DC_DC8051_DBG_ERR_INFO_DRAM_UNUSED_15_13_MASK				0x7ull
#define DC_DC8051_DBG_ERR_INFO_DRAM_UNUSED_15_13_SMASK				0xE000ull
#define DC_DC8051_DBG_ERR_INFO_DRAM_SBE_SYND_SHIFT				8
#define DC_DC8051_DBG_ERR_INFO_DRAM_SBE_SYND_MASK				0x1Full
#define DC_DC8051_DBG_ERR_INFO_DRAM_SBE_SYND_SMASK				0x1F00ull
#define DC_DC8051_DBG_ERR_INFO_DRAM_UNUSED_7_4_SHIFT				4
#define DC_DC8051_DBG_ERR_INFO_DRAM_UNUSED_7_4_MASK				0xFull
#define DC_DC8051_DBG_ERR_INFO_DRAM_UNUSED_7_4_SMASK				0xF0ull
#define DC_DC8051_DBG_ERR_INFO_DRAM_INJECTED_MBE_SHIFT				3
#define DC_DC8051_DBG_ERR_INFO_DRAM_INJECTED_MBE_MASK				0x1ull
#define DC_DC8051_DBG_ERR_INFO_DRAM_INJECTED_MBE_SMASK				0x8ull
#define DC_DC8051_DBG_ERR_INFO_DRAM_INJECTED_SBE_SHIFT				2
#define DC_DC8051_DBG_ERR_INFO_DRAM_INJECTED_SBE_MASK				0x1ull
#define DC_DC8051_DBG_ERR_INFO_DRAM_INJECTED_SBE_SMASK				0x4ull
#define DC_DC8051_DBG_ERR_INFO_DRAM_MBE_SHIFT					1
#define DC_DC8051_DBG_ERR_INFO_DRAM_MBE_MASK					0x1ull
#define DC_DC8051_DBG_ERR_INFO_DRAM_MBE_SMASK					0x2ull
#define DC_DC8051_DBG_ERR_INFO_DRAM_SBE_SHIFT					0
#define DC_DC8051_DBG_ERR_INFO_DRAM_SBE_MASK					0x1ull
#define DC_DC8051_DBG_ERR_INFO_DRAM_SBE_SMASK					0x1ull
/*
* Table #25 of 260_CSR_8051.xml - DC8051_DBG_ERR_INFO_IRAM
* This register is used to report the ECC errors in the DC8051 internal data 
* memory
*/
#define DC_DC8051_DBG_ERR_INFO_IRAM						(DC_8051_CSRS + 0x0000000000B8)
#define DC_DC8051_DBG_ERR_INFO_IRAM_RESETCSR					0x0000000000000000ull
#define DC_DC8051_DBG_ERR_INFO_IRAM_UNUSED_63_21_SHIFT				21
#define DC_DC8051_DBG_ERR_INFO_IRAM_UNUSED_63_21_MASK				0x7FFFFFFFFFFull
#define DC_DC8051_DBG_ERR_INFO_IRAM_UNUSED_63_21_SMASK				0xFFFFFFFFFFE00000ull
#define DC_DC8051_DBG_ERR_INFO_IRAM_MBE_SYND_SHIFT				16
#define DC_DC8051_DBG_ERR_INFO_IRAM_MBE_SYND_MASK				0x1Full
#define DC_DC8051_DBG_ERR_INFO_IRAM_MBE_SYND_SMASK				0x1F0000ull
#define DC_DC8051_DBG_ERR_INFO_IRAM_UNUSED_15_13_SHIFT				13
#define DC_DC8051_DBG_ERR_INFO_IRAM_UNUSED_15_13_MASK				0x7ull
#define DC_DC8051_DBG_ERR_INFO_IRAM_UNUSED_15_13_SMASK				0xE000ull
#define DC_DC8051_DBG_ERR_INFO_IRAM_SBE_SYND_SHIFT				8
#define DC_DC8051_DBG_ERR_INFO_IRAM_SBE_SYND_MASK				0x1Full
#define DC_DC8051_DBG_ERR_INFO_IRAM_SBE_SYND_SMASK				0x1F00ull
#define DC_DC8051_DBG_ERR_INFO_IRAM_UNUSED_7_4_SHIFT				4
#define DC_DC8051_DBG_ERR_INFO_IRAM_UNUSED_7_4_MASK				0xFull
#define DC_DC8051_DBG_ERR_INFO_IRAM_UNUSED_7_4_SMASK				0xF0ull
#define DC_DC8051_DBG_ERR_INFO_IRAM_INJECTED_MBE_SHIFT				3
#define DC_DC8051_DBG_ERR_INFO_IRAM_INJECTED_MBE_MASK				0x1ull
#define DC_DC8051_DBG_ERR_INFO_IRAM_INJECTED_MBE_SMASK				0x8ull
#define DC_DC8051_DBG_ERR_INFO_IRAM_INJECTED_SBE_SHIFT				2
#define DC_DC8051_DBG_ERR_INFO_IRAM_INJECTED_SBE_MASK				0x1ull
#define DC_DC8051_DBG_ERR_INFO_IRAM_INJECTED_SBE_SMASK				0x4ull
#define DC_DC8051_DBG_ERR_INFO_IRAM_MBE_SHIFT					1
#define DC_DC8051_DBG_ERR_INFO_IRAM_MBE_MASK					0x1ull
#define DC_DC8051_DBG_ERR_INFO_IRAM_MBE_SMASK					0x2ull
#define DC_DC8051_DBG_ERR_INFO_IRAM_SBE_SHIFT					0
#define DC_DC8051_DBG_ERR_INFO_IRAM_SBE_MASK					0x1ull
#define DC_DC8051_DBG_ERR_INFO_IRAM_SBE_SMASK					0x1ull
/*
* Table #26 of 260_CSR_8051.xml - DC8051_DBG_ERR_INFO_CNT_CRAM
* This register is used to report number of ECC errors in the DC8051 code 
* memory
*/
#define DC_DC8051_DBG_ERR_INFO_CNT_CRAM						(DC_8051_CSRS + 0x0000000000C0)
#define DC_DC8051_DBG_ERR_INFO_CNT_CRAM_RESETCSR				0x0000000000000000ull
#define DC_DC8051_DBG_ERR_INFO_CNT_CRAM_MBE_COUNT_SHIFT				32
#define DC_DC8051_DBG_ERR_INFO_CNT_CRAM_MBE_COUNT_MASK				0xFFFFFFFFull
#define DC_DC8051_DBG_ERR_INFO_CNT_CRAM_MBE_COUNT_SMASK				0xFFFFFFFF00000000ull
#define DC_DC8051_DBG_ERR_INFO_CNT_CRAM_SBE_COUNT_SHIFT				0
#define DC_DC8051_DBG_ERR_INFO_CNT_CRAM_SBE_COUNT_MASK				0xFFFFFFFFull
#define DC_DC8051_DBG_ERR_INFO_CNT_CRAM_SBE_COUNT_SMASK				0xFFFFFFFFull
/*
* Table #27 of 260_CSR_8051.xml - DC8051_DBG_ERR_INFO_CNT_DRAM
* This register is used to report the number of ECC errors in the DC8051 data 
* memory
*/
#define DC_DC8051_DBG_ERR_INFO_CNT_DRAM						(DC_8051_CSRS + 0x0000000000C8)
#define DC_DC8051_DBG_ERR_INFO_CNT_DRAM_RESETCSR				0x0000000000000000ull
#define DC_DC8051_DBG_ERR_INFO_CNT_DRAM_MBE_COUNT_SHIFT				32
#define DC_DC8051_DBG_ERR_INFO_CNT_DRAM_MBE_COUNT_MASK				0xFFFFFFFFull
#define DC_DC8051_DBG_ERR_INFO_CNT_DRAM_MBE_COUNT_SMASK				0xFFFFFFFF00000000ull
#define DC_DC8051_DBG_ERR_INFO_CNT_DRAM_SBE_COUNT_SHIFT				0
#define DC_DC8051_DBG_ERR_INFO_CNT_DRAM_SBE_COUNT_MASK				0xFFFFFFFFull
#define DC_DC8051_DBG_ERR_INFO_CNT_DRAM_SBE_COUNT_SMASK				0xFFFFFFFFull
/*
* Table #28 of 260_CSR_8051.xml - DC8051_DBG_ERR_INFO_CNT_IRAM
* This register is used to report the number of ECC errors in the DC8051 data 
* memory
*/
#define DC_DC8051_DBG_ERR_INFO_CNT_IRAM						(DC_8051_CSRS + 0x0000000000D0)
#define DC_DC8051_DBG_ERR_INFO_CNT_IRAM_RESETCSR				0x0000000000000000ull
#define DC_DC8051_DBG_ERR_INFO_CNT_IRAM_MBE_COUNT_SHIFT				32
#define DC_DC8051_DBG_ERR_INFO_CNT_IRAM_MBE_COUNT_MASK				0xFFFFFFFFull
#define DC_DC8051_DBG_ERR_INFO_CNT_IRAM_MBE_COUNT_SMASK				0xFFFFFFFF00000000ull
#define DC_DC8051_DBG_ERR_INFO_CNT_IRAM_SBE_COUNT_SHIFT				0
#define DC_DC8051_DBG_ERR_INFO_CNT_IRAM_SBE_COUNT_MASK				0xFFFFFFFFull
#define DC_DC8051_DBG_ERR_INFO_CNT_IRAM_SBE_COUNT_SMASK				0xFFFFFFFFull
/*
* Table #29 of 260_CSR_8051.xml - DC8051_DBG_ERR_INFO_SET_BY_8051
* This register is used to report the number of ECC errors in the DC8051 data 
* memory
*/
#define DC_DC8051_DBG_ERR_INFO_SET_BY_8051					(DC_8051_CSRS + 0x0000000000D8)
#define DC_DC8051_DBG_ERR_INFO_SET_BY_8051_RESETCSR				0x0000000000000000ull
#define DC_DC8051_DBG_ERR_INFO_SET_BY_8051_UNUSED_63_48_SHIFT			48
#define DC_DC8051_DBG_ERR_INFO_SET_BY_8051_UNUSED_63_48_MASK			0xFFFFull
#define DC_DC8051_DBG_ERR_INFO_SET_BY_8051_UNUSED_63_48_SMASK			0xFFFF000000000000ull
#define DC_DC8051_DBG_ERR_INFO_SET_BY_8051_ERROR_SHIFT				16
#define DC_DC8051_DBG_ERR_INFO_SET_BY_8051_ERROR_MASK				0xFFFFFFFFull
#define DC_DC8051_DBG_ERR_INFO_SET_BY_8051_ERROR_SMASK				0xFFFFFFFF0000ull
#define DC_DC8051_DBG_ERR_INFO_SET_BY_8051_HOST_MSG_SHIFT			0
#define DC_DC8051_DBG_ERR_INFO_SET_BY_8051_HOST_MSG_MASK			0xFFFFull
#define DC_DC8051_DBG_ERR_INFO_SET_BY_8051_HOST_MSG_SMASK			0xFFFFull
/*
* Table #30 of 260_CSR_8051.xml - DC8051_ERR_FLG
* These registers are used to report errors
*/
#define DC_DC8051_ERR_FLG							(DC_8051_CSRS + 0x0000000000E0)
#define DC_DC8051_ERR_FLG_RESETCSR						0x0000000000000000ull
#define DC_DC8051_ERR_FLG_UNUSED_63_11_SHIFT					11
#define DC_DC8051_ERR_FLG_UNUSED_63_11_MASK					0x1FFFFFFFFFFFFFull
#define DC_DC8051_ERR_FLG_UNUSED_63_11_SMASK					0xFFFFFFFFFFFFF800ull
#define DC_DC8051_ERR_FLG_INVALID_CSR_ADDR_SHIFT				10
#define DC_DC8051_ERR_FLG_INVALID_CSR_ADDR_MASK					0x1ull
#define DC_DC8051_ERR_FLG_INVALID_CSR_ADDR_SMASK				0x400ull
#define DC_DC8051_ERR_FLG_CSR_PARITY_ERR_SHIFT					9
#define DC_DC8051_ERR_FLG_CSR_PARITY_ERR_MASK					0x1ull
#define DC_DC8051_ERR_FLG_CSR_PARITY_ERR_SMASK					0x200ull
#define DC_DC8051_ERR_FLG_UNMATCHED_SECURE_MSG_ACROSS_BCC_LANES_SHIFT		8
#define DC_DC8051_ERR_FLG_UNMATCHED_SECURE_MSG_ACROSS_BCC_LANES_MASK		0x1ull
#define DC_DC8051_ERR_FLG_UNMATCHED_SECURE_MSG_ACROSS_BCC_LANES_SMASK		0x100ull
#define DC_DC8051_ERR_FLG_IRAM_SBE_SHIFT					7
#define DC_DC8051_ERR_FLG_IRAM_SBE_MASK						0x1ull
#define DC_DC8051_ERR_FLG_IRAM_SBE_SMASK					0x80ull
#define DC_DC8051_ERR_FLG_IRAM_MBE_SHIFT					6
#define DC_DC8051_ERR_FLG_IRAM_MBE_MASK						0x1ull
#define DC_DC8051_ERR_FLG_IRAM_MBE_SMASK					0x40ull
#define DC_DC8051_ERR_FLG_DRAM_SBE_SHIFT					5
#define DC_DC8051_ERR_FLG_DRAM_SBE_MASK						0x1ull
#define DC_DC8051_ERR_FLG_DRAM_SBE_SMASK					0x20ull
#define DC_DC8051_ERR_FLG_DRAM_MBE_SHIFT					4
#define DC_DC8051_ERR_FLG_DRAM_MBE_MASK						0x1ull
#define DC_DC8051_ERR_FLG_DRAM_MBE_SMASK					0x10ull
#define DC_DC8051_ERR_FLG_CRAM_SBE_SHIFT					3
#define DC_DC8051_ERR_FLG_CRAM_SBE_MASK						0x1ull
#define DC_DC8051_ERR_FLG_CRAM_SBE_SMASK					0x8ull
#define DC_DC8051_ERR_FLG_CRAM_MBE_SHIFT					2
#define DC_DC8051_ERR_FLG_CRAM_MBE_MASK						0x1ull
#define DC_DC8051_ERR_FLG_CRAM_MBE_SMASK					0x4ull
#define DC_DC8051_ERR_FLG_LOST_8051_HEART_BEAT_SHIFT				1
#define DC_DC8051_ERR_FLG_LOST_8051_HEART_BEAT_MASK				0x1ull
#define DC_DC8051_ERR_FLG_LOST_8051_HEART_BEAT_SMASK				0x2ull
#define DC_DC8051_ERR_FLG_SET_BY_8051_SHIFT					0
#define DC_DC8051_ERR_FLG_SET_BY_8051_MASK					0x1ull
#define DC_DC8051_ERR_FLG_SET_BY_8051_SMASK					0x1ull
/*
* Table #31 of 260_CSR_8051.xml - DC8051_ERR_CLR
* 
*/
#define DC_DC8051_ERR_CLR							(DC_8051_CSRS + 0x0000000000E8)
#define DC_DC8051_ERR_CLR_RESETCSR						0x0000000000000000ull
#define DC_DC8051_ERR_CLR_UNUSED_63_11_SHIFT					11
#define DC_DC8051_ERR_CLR_UNUSED_63_11_MASK					0x1FFFFFFFFFFFFFull
#define DC_DC8051_ERR_CLR_UNUSED_63_11_SMASK					0xFFFFFFFFFFFFF800ull
#define DC_DC8051_ERR_CLR_INVALID_CSR_ADDR_SHIFT				10
#define DC_DC8051_ERR_CLR_INVALID_CSR_ADDR_MASK					0x1ull
#define DC_DC8051_ERR_CLR_INVALID_CSR_ADDR_SMASK				0x400ull
#define DC_DC8051_ERR_CLR_CSR_PARITY_ERR_SHIFT					9
#define DC_DC8051_ERR_CLR_CSR_PARITY_ERR_MASK					0x1ull
#define DC_DC8051_ERR_CLR_CSR_PARITY_ERR_SMASK					0x200ull
#define DC_DC8051_ERR_CLR_UNMATCHED_SECURE_MSG_ACROSS_BCC_LANES_SHIFT		8
#define DC_DC8051_ERR_CLR_UNMATCHED_SECURE_MSG_ACROSS_BCC_LANES_MASK		0x1ull
#define DC_DC8051_ERR_CLR_UNMATCHED_SECURE_MSG_ACROSS_BCC_LANES_SMASK		0x100ull
#define DC_DC8051_ERR_CLR_IRAM_SBE_SHIFT					7
#define DC_DC8051_ERR_CLR_IRAM_SBE_MASK						0x1ull
#define DC_DC8051_ERR_CLR_IRAM_SBE_SMASK					0x80ull
#define DC_DC8051_ERR_CLR_IRAM_MBE_SHIFT					6
#define DC_DC8051_ERR_CLR_IRAM_MBE_MASK						0x1ull
#define DC_DC8051_ERR_CLR_IRAM_MBE_SMASK					0x40ull
#define DC_DC8051_ERR_CLR_DRAM_SBE_SHIFT					5
#define DC_DC8051_ERR_CLR_DRAM_SBE_MASK						0x1ull
#define DC_DC8051_ERR_CLR_DRAM_SBE_SMASK					0x20ull
#define DC_DC8051_ERR_CLR_DRAM_MBE_SHIFT					4
#define DC_DC8051_ERR_CLR_DRAM_MBE_MASK						0x1ull
#define DC_DC8051_ERR_CLR_DRAM_MBE_SMASK					0x10ull
#define DC_DC8051_ERR_CLR_CRAM_SBE_SHIFT					3
#define DC_DC8051_ERR_CLR_CRAM_SBE_MASK						0x1ull
#define DC_DC8051_ERR_CLR_CRAM_SBE_SMASK					0x8ull
#define DC_DC8051_ERR_CLR_CRAM_MBE_SHIFT					2
#define DC_DC8051_ERR_CLR_CRAM_MBE_MASK						0x1ull
#define DC_DC8051_ERR_CLR_CRAM_MBE_SMASK					0x4ull
#define DC_DC8051_ERR_CLR_LOST_8051_HEART_BEAT_SHIFT				1
#define DC_DC8051_ERR_CLR_LOST_8051_HEART_BEAT_MASK				0x1ull
#define DC_DC8051_ERR_CLR_LOST_8051_HEART_BEAT_SMASK				0x2ull
#define DC_DC8051_ERR_CLR_SET_BY_8051_SHIFT					0
#define DC_DC8051_ERR_CLR_SET_BY_8051_MASK					0x1ull
#define DC_DC8051_ERR_CLR_SET_BY_8051_SMASK					0x1ull
/*
* Table #32 of 260_CSR_8051.xml - DC8051_ERR_EN
* 
*/
#define DC_DC8051_ERR_EN							(DC_8051_CSRS + 0x0000000000F0)
#define DC_DC8051_ERR_EN_RESETCSR						0x0000000000000000ull
#define DC_DC8051_ERR_EN_UNUSED_63_11_SHIFT					11
#define DC_DC8051_ERR_EN_UNUSED_63_11_MASK					0x1FFFFFFFFFFFFFull
#define DC_DC8051_ERR_EN_UNUSED_63_11_SMASK					0xFFFFFFFFFFFFF800ull
#define DC_DC8051_ERR_EN_INVALID_CSR_ADDR_SHIFT					10
#define DC_DC8051_ERR_EN_INVALID_CSR_ADDR_MASK					0x1ull
#define DC_DC8051_ERR_EN_INVALID_CSR_ADDR_SMASK					0x400ull
#define DC_DC8051_ERR_EN_CSR_PARITY_ERR_SHIFT					9
#define DC_DC8051_ERR_EN_CSR_PARITY_ERR_MASK					0x1ull
#define DC_DC8051_ERR_EN_CSR_PARITY_ERR_SMASK					0x200ull
#define DC_DC8051_ERR_EN_UNMATCHED_SECURE_MSG_ACROSS_BCC_LANES_SHIFT		8
#define DC_DC8051_ERR_EN_UNMATCHED_SECURE_MSG_ACROSS_BCC_LANES_MASK		0x1ull
#define DC_DC8051_ERR_EN_UNMATCHED_SECURE_MSG_ACROSS_BCC_LANES_SMASK		0x100ull
#define DC_DC8051_ERR_EN_IRAM_SBE_SHIFT						7
#define DC_DC8051_ERR_EN_IRAM_SBE_MASK						0x1ull
#define DC_DC8051_ERR_EN_IRAM_SBE_SMASK						0x80ull
#define DC_DC8051_ERR_EN_IRAM_MBE_SHIFT						6
#define DC_DC8051_ERR_EN_IRAM_MBE_MASK						0x1ull
#define DC_DC8051_ERR_EN_IRAM_MBE_SMASK						0x40ull
#define DC_DC8051_ERR_EN_DRAM_SBE_SHIFT						5
#define DC_DC8051_ERR_EN_DRAM_SBE_MASK						0x1ull
#define DC_DC8051_ERR_EN_DRAM_SBE_SMASK						0x20ull
#define DC_DC8051_ERR_EN_DRAM_MBE_SHIFT						4
#define DC_DC8051_ERR_EN_DRAM_MBE_MASK						0x1ull
#define DC_DC8051_ERR_EN_DRAM_MBE_SMASK						0x10ull
#define DC_DC8051_ERR_EN_CRAM_SBE_SHIFT						3
#define DC_DC8051_ERR_EN_CRAM_SBE_MASK						0x1ull
#define DC_DC8051_ERR_EN_CRAM_SBE_SMASK						0x8ull
#define DC_DC8051_ERR_EN_CRAM_MBE_SHIFT						2
#define DC_DC8051_ERR_EN_CRAM_MBE_MASK						0x1ull
#define DC_DC8051_ERR_EN_CRAM_MBE_SMASK						0x4ull
#define DC_DC8051_ERR_EN_LOST_8051_HEART_BEAT_SHIFT				1
#define DC_DC8051_ERR_EN_LOST_8051_HEART_BEAT_MASK				0x1ull
#define DC_DC8051_ERR_EN_LOST_8051_HEART_BEAT_SMASK				0x2ull
#define DC_DC8051_ERR_EN_SET_BY_8051_SHIFT					0
#define DC_DC8051_ERR_EN_SET_BY_8051_MASK					0x1ull
#define DC_DC8051_ERR_EN_SET_BY_8051_SMASK					0x1ull
/*
* Table #33 of 260_CSR_8051.xml - DC8051_ERR_FIRST_FLG
* 
*/
#define DC_DC8051_ERR_FIRST_FLG							(DC_8051_CSRS + 0x0000000000F8)
#define DC_DC8051_ERR_FIRST_FLG_RESETCSR					0x0000000000000000ull
#define DC_DC8051_ERR_FIRST_FLG_UNUSED_63_11_SHIFT				11
#define DC_DC8051_ERR_FIRST_FLG_UNUSED_63_11_MASK				0x1FFFFFFFFFFFFFull
#define DC_DC8051_ERR_FIRST_FLG_UNUSED_63_11_SMASK				0xFFFFFFFFFFFFF800ull
#define DC_DC8051_ERR_FIRST_FLG_INVALID_CSR_ADDR_SHIFT				10
#define DC_DC8051_ERR_FIRST_FLG_INVALID_CSR_ADDR_MASK				0x1ull
#define DC_DC8051_ERR_FIRST_FLG_INVALID_CSR_ADDR_SMASK				0x400ull
#define DC_DC8051_ERR_FIRST_FLG_CSR_PARITY_ERR_SHIFT				9
#define DC_DC8051_ERR_FIRST_FLG_CSR_PARITY_ERR_MASK				0x1ull
#define DC_DC8051_ERR_FIRST_FLG_CSR_PARITY_ERR_SMASK				0x200ull
#define DC_DC8051_ERR_FIRST_FLG_UNMATCHED_SECURE_MSG_ACROSS_BCC_LANES_SHIFT	8
#define DC_DC8051_ERR_FIRST_FLG_UNMATCHED_SECURE_MSG_ACROSS_BCC_LANES_MASK	0x1ull
#define DC_DC8051_ERR_FIRST_FLG_UNMATCHED_SECURE_MSG_ACROSS_BCC_LANES_SMASK	0x100ull
#define DC_DC8051_ERR_FIRST_FLG_IRAM_SBE_SHIFT					7
#define DC_DC8051_ERR_FIRST_FLG_IRAM_SBE_MASK					0x1ull
#define DC_DC8051_ERR_FIRST_FLG_IRAM_SBE_SMASK					0x80ull
#define DC_DC8051_ERR_FIRST_FLG_IRAM_MBE_SHIFT					6
#define DC_DC8051_ERR_FIRST_FLG_IRAM_MBE_MASK					0x1ull
#define DC_DC8051_ERR_FIRST_FLG_IRAM_MBE_SMASK					0x40ull
#define DC_DC8051_ERR_FIRST_FLG_DRAM_SBE_SHIFT					5
#define DC_DC8051_ERR_FIRST_FLG_DRAM_SBE_MASK					0x1ull
#define DC_DC8051_ERR_FIRST_FLG_DRAM_SBE_SMASK					0x20ull
#define DC_DC8051_ERR_FIRST_FLG_DRAM_MBE_SHIFT					4
#define DC_DC8051_ERR_FIRST_FLG_DRAM_MBE_MASK					0x1ull
#define DC_DC8051_ERR_FIRST_FLG_DRAM_MBE_SMASK					0x10ull
#define DC_DC8051_ERR_FIRST_FLG_CRAM_SBE_SHIFT					3
#define DC_DC8051_ERR_FIRST_FLG_CRAM_SBE_MASK					0x1ull
#define DC_DC8051_ERR_FIRST_FLG_CRAM_SBE_SMASK					0x8ull
#define DC_DC8051_ERR_FIRST_FLG_CRAM_MBE_SHIFT					2
#define DC_DC8051_ERR_FIRST_FLG_CRAM_MBE_MASK					0x1ull
#define DC_DC8051_ERR_FIRST_FLG_CRAM_MBE_SMASK					0x4ull
#define DC_DC8051_ERR_FIRST_FLG_LOST_8051_HEART_BEAT_SHIFT			1
#define DC_DC8051_ERR_FIRST_FLG_LOST_8051_HEART_BEAT_MASK			0x1ull
#define DC_DC8051_ERR_FIRST_FLG_LOST_8051_HEART_BEAT_SMASK			0x2ull
#define DC_DC8051_ERR_FIRST_FLG_SET_BY_8051_SHIFT				0
#define DC_DC8051_ERR_FIRST_FLG_SET_BY_8051_MASK				0x1ull
#define DC_DC8051_ERR_FIRST_FLG_SET_BY_8051_SMASK				0x1ull
/*
* Table #34 of 260_CSR_8051.xml - DC8051_CFG_MISC_FUSE
* This register are used to for store miscellaneous configuration. when in 
* security lock modes (i_top_dc8051_security_lock ==1 ) this register is set by 
* hardware and come from fuse value, and is locked out from CSR write access. 
* When in security unlock mode (i_top_dc8051_security_lock==0) This register is 
* read and writable via the LocalBus.
*/
#define DC_DC8051_CFG_MISC_FUSE							(DC_8051_CSRS + 0x000000000100)
#define DC_DC8051_CFG_MISC_FUSE_RESETCSR					0x0000000000000000ull
#define DC_DC8051_CFG_MISC_FUSE_UNUSED_63_8_SHIFT				8
#define DC_DC8051_CFG_MISC_FUSE_UNUSED_63_8_MASK				0xFFFFFFFFFFFFFFull
#define DC_DC8051_CFG_MISC_FUSE_UNUSED_63_8_SMASK				0xFFFFFFFFFFFFFF00ull
#define DC_DC8051_CFG_MISC_FUSE_VAL_SHIFT					0
#define DC_DC8051_CFG_MISC_FUSE_VAL_MASK					0xFFull
#define DC_DC8051_CFG_MISC_FUSE_VAL_SMASK					0xFFull
/*
* Table #35 of 260_CSR_8051.xml - DC8051_CFG_SERDES
* This register is used to do the basic configuration on the DC_SERDES block. 
* Note that this CSR is included here since there's no CSRs in the dc_serdes 
* block.
*/
#define DC_DC8051_CFG_SERDES							(DC_8051_CSRS + 0x000000000108)
#define DC_DC8051_CFG_SERDES_RESETCSR						0x0000000000000000ull
#define DC_DC8051_CFG_SERDES_UNUSED_63_10_SHIFT					10
#define DC_DC8051_CFG_SERDES_UNUSED_63_10_MASK					0x3FFFFFFFFFFFFFull
#define DC_DC8051_CFG_SERDES_UNUSED_63_10_SMASK					0xFFFFFFFFFFFFFC00ull
#define DC_DC8051_CFG_SERDES_SER_TX_FIFO_CLK_SEL_SHIFT				8
#define DC_DC8051_CFG_SERDES_SER_TX_FIFO_CLK_SEL_MASK				0x3ull
#define DC_DC8051_CFG_SERDES_SER_TX_FIFO_CLK_SEL_SMASK				0x300ull
#define DC_DC8051_CFG_SERDES_UNUSED_7_1_SHIFT					1
#define DC_DC8051_CFG_SERDES_UNUSED_7_1_MASK					0x7Full
#define DC_DC8051_CFG_SERDES_UNUSED_7_1_SMASK					0xFEull
#define DC_DC8051_CFG_SERDES_SER_BYPASS_INPUT_FLOP_SHIFT			0
#define DC_DC8051_CFG_SERDES_SER_BYPASS_INPUT_FLOP_MASK				0x1ull
#define DC_DC8051_CFG_SERDES_SER_BYPASS_INPUT_FLOP_SMASK			0x1ull
/*
* Table #36 of 260_CSR_8051.xml - DC8051_CFG_CSR_ACCESS_SEL
* This register is used by HOST to control the LCB and DCC CSR 
* access.
*/
#define DC_DC8051_CFG_CSR_ACCESS_SEL						(DC_8051_CSRS + 0x000000000110)
#define DC_DC8051_CFG_CSR_ACCESS_SEL_RESETCSR					0x0000000000000003ull
#define DC_DC8051_CFG_CSR_ACCESS_SEL_UNUSED_63_2_SHIFT				2
#define DC_DC8051_CFG_CSR_ACCESS_SEL_UNUSED_63_2_MASK				0x3FFFFFFFFFFFFFFFull
#define DC_DC8051_CFG_CSR_ACCESS_SEL_UNUSED_63_2_SMASK				0xFFFFFFFFFFFFFFFCull
#define DC_DC8051_CFG_CSR_ACCESS_SEL_DCC_SHIFT					1
#define DC_DC8051_CFG_CSR_ACCESS_SEL_DCC_MASK					0x1ull
#define DC_DC8051_CFG_CSR_ACCESS_SEL_DCC_SMASK					0x2ull
#define DC_DC8051_CFG_CSR_ACCESS_SEL_LCB_SHIFT					0
#define DC_DC8051_CFG_CSR_ACCESS_SEL_LCB_MASK					0x1ull
#define DC_DC8051_CFG_CSR_ACCESS_SEL_LCB_SMASK					0x1ull
/*
* Table #37 of 260_CSR_8051.xml - DC8051_CFG_EXT_DEV_0
* These registers are used by the 8051 to issue request that the HOST need to 
* execute related to the configuration of the external device(i.e repeater in 
* the channel) during LNI process.
*/
#define DC_DC8051_CFG_EXT_DEV_0							(DC_8051_CSRS + 0x000000000118)
#define DC_DC8051_CFG_EXT_DEV_0_RESETCSR					0x0000000000000001ull
#define DC_DC8051_CFG_EXT_DEV_0_UNUSED_63_32_SHIFT				32
#define DC_DC8051_CFG_EXT_DEV_0_UNUSED_63_32_MASK				0xFFFFFFFFull
#define DC_DC8051_CFG_EXT_DEV_0_UNUSED_63_32_SMASK				0xFFFFFFFF00000000ull
#define DC_DC8051_CFG_EXT_DEV_0_RSP_DATA_SHIFT					16
#define DC_DC8051_CFG_EXT_DEV_0_RSP_DATA_MASK					0xFFFFull
#define DC_DC8051_CFG_EXT_DEV_0_RSP_DATA_SMASK					0xFFFF0000ull
#define DC_DC8051_CFG_EXT_DEV_0_RETURN_CODE_SHIFT				8
#define DC_DC8051_CFG_EXT_DEV_0_RETURN_CODE_MASK				0xFFull
#define DC_DC8051_CFG_EXT_DEV_0_RETURN_CODE_SMASK				0xFF00ull
#define DC_DC8051_CFG_EXT_DEV_0_UNUSED_7_1_SHIFT				1
#define DC_DC8051_CFG_EXT_DEV_0_UNUSED_7_1_MASK					0x7Full
#define DC_DC8051_CFG_EXT_DEV_0_UNUSED_7_1_SMASK				0xFEull
#define DC_DC8051_CFG_EXT_DEV_0_COMPLETED_SHIFT					0
#define DC_DC8051_CFG_EXT_DEV_0_COMPLETED_MASK					0x1ull
#define DC_DC8051_CFG_EXT_DEV_0_COMPLETED_SMASK					0x1ull
/*
* Table #38 of 260_CSR_8051.xml - DC8051_CFG_EXT_DEV_1
* 
*/
#define DC_DC8051_CFG_EXT_DEV_1							(DC_8051_CSRS + 0x000000000120)
#define DC_DC8051_CFG_EXT_DEV_1_RESETCSR					0x0000000000000000ull
#define DC_DC8051_CFG_EXT_DEV_1_UNUSED_63_32_SHIFT				32
#define DC_DC8051_CFG_EXT_DEV_1_UNUSED_63_32_MASK				0xFFFFFFFFull
#define DC_DC8051_CFG_EXT_DEV_1_UNUSED_63_32_SMASK				0xFFFFFFFF00000000ull
#define DC_DC8051_CFG_EXT_DEV_1_REQ_DATA_SHIFT					16
#define DC_DC8051_CFG_EXT_DEV_1_REQ_DATA_MASK					0xFFFFull
#define DC_DC8051_CFG_EXT_DEV_1_REQ_DATA_SMASK					0xFFFF0000ull
#define DC_DC8051_CFG_EXT_DEV_1_REQ_TYPE_SHIFT					8
#define DC_DC8051_CFG_EXT_DEV_1_REQ_TYPE_MASK					0xFFull
#define DC_DC8051_CFG_EXT_DEV_1_REQ_TYPE_SMASK					0xFF00ull
#define DC_DC8051_CFG_EXT_DEV_1_UNUSED_7_1_SHIFT				1
#define DC_DC8051_CFG_EXT_DEV_1_UNUSED_7_1_MASK					0x7Full
#define DC_DC8051_CFG_EXT_DEV_1_UNUSED_7_1_SMASK				0xFEull
#define DC_DC8051_CFG_EXT_DEV_1_REQ_NEW_SHIFT					0
#define DC_DC8051_CFG_EXT_DEV_1_REQ_NEW_MASK					0x1ull
#define DC_DC8051_CFG_EXT_DEV_1_REQ_NEW_SMASK					0x1ull
/*
* Table #39 of 260_CSR_8051.xml - DC8051_CFG_LOCAL_PORT_NO
* These registers is used to transport the port number securely.
*/
#define DC_DC8051_CFG_LOCAL_PORT_NO						(DC_8051_CSRS + 0x000000000128)
#define DC_DC8051_CFG_LOCAL_PORT_NO_RESETCSR					0x0000000000000001ull
#define DC_DC8051_CFG_LOCAL_PORT_NO_UNUSED_63_8_SHIFT				8
#define DC_DC8051_CFG_LOCAL_PORT_NO_UNUSED_63_8_MASK				0xFFFFFFFFFFFFFFull
#define DC_DC8051_CFG_LOCAL_PORT_NO_UNUSED_63_8_SMASK				0xFFFFFFFFFFFFFF00ull
#define DC_DC8051_CFG_LOCAL_PORT_NO_VAL_SHIFT					0
#define DC_DC8051_CFG_LOCAL_PORT_NO_VAL_MASK					0xFFull
#define DC_DC8051_CFG_LOCAL_PORT_NO_VAL_SMASK					0xFFull
/*
* Table #40 of 260_CSR_8051.xml - DC8051_STS_REMOTE_PORT_NO
* 
*/
#define DC_DC8051_STS_REMOTE_PORT_NO						(DC_8051_CSRS + 0x000000000130)
#define DC_DC8051_STS_REMOTE_PORT_NO_RESETCSR					0x0000000000000001ull
#define DC_DC8051_STS_REMOTE_PORT_NO_UNUSED_63_8_SHIFT				8
#define DC_DC8051_STS_REMOTE_PORT_NO_UNUSED_63_8_MASK				0xFFFFFFFFFFFFFFull
#define DC_DC8051_STS_REMOTE_PORT_NO_UNUSED_63_8_SMASK				0xFFFFFFFFFFFFFF00ull
#define DC_DC8051_STS_REMOTE_PORT_NO_VAL_SHIFT					0
#define DC_DC8051_STS_REMOTE_PORT_NO_VAL_MASK					0xFFull
#define DC_DC8051_STS_REMOTE_PORT_NO_VAL_SMASK					0xFFull

#endif 		/* DEF_DC_8051_CSRS_SW_DEF */
